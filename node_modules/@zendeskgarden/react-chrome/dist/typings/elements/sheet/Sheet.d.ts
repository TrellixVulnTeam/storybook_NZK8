/**
 * Copyright Zendesk, Inc.
 *
 * Use of this source code is governed under the Apache License, Version 2.0
 * found at http://www.apache.org/licenses/LICENSE-2.0.
 */
import { HTMLAttributes, PropsWithoutRef, RefAttributes, ForwardRefExoticComponent } from 'react';
import { SheetTitle } from './components/Title';
import { SheetDescription } from './components/Description';
import { SheetHeader } from './components/Header';
import { SheetBody } from './components/Body';
import { SheetFooter } from './components/Footer';
import { SheetFooterItem } from './components/FooterItem';
import { SheetClose } from './components/Close';
interface IStaticSheetExport<T, P> extends ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>> {
    Title: typeof SheetTitle;
    Description: typeof SheetDescription;
    Header: typeof SheetHeader;
    Body: typeof SheetBody;
    Footer: typeof SheetFooter;
    FooterItem: typeof SheetFooterItem;
    Close: typeof SheetClose;
}
export interface ISheetProps extends HTMLAttributes<HTMLElement> {
    /** Opens the Sheet **/
    isOpen?: boolean;
    /** Determines whether animation for opening and closing the Sheet is used **/
    isAnimated?: boolean;
    /** Focuses on the Sheet when `isOpen` is true and mounted **/
    focusOnMount?: boolean;
    /** Directs keyboard focus to the Sheet on mount **/
    restoreFocus?: boolean;
    /** Returns keyboard focus to the element that triggered the Sheet **/
    placement?: 'start' | 'end';
    /** Sets the width in pixels, based on the placement of the Sheet */
    size?: string;
}
/**
 * @extends HTMLAttributes<HTMLElement>
 */
export declare const Sheet: IStaticSheetExport<HTMLElement, ISheetProps>;
export {};
