/**
 * Copyright Zendesk, Inc.
 *
 * Use of this source code is governed under the Apache License, Version 2.0
 * found at http://www.apache.org/licenses/LICENSE-2.0.
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var PropTypes = require('prop-types');
var styled = require('styled-components');
var polished = require('polished');
var reactTheming = require('@zendeskgarden/react-theming');
var containerAccordion = require('@zendeskgarden/container-accordion');
var containerUtilities = require('@zendeskgarden/container-utilities');
var reactUid = require('react-uid');
var mergeRefs = require('react-merge-refs');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () {
            return e[k];
          }
        });
      }
    });
  }
  n['default'] = e;
  return Object.freeze(n);
}

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var React__namespace = /*#__PURE__*/_interopNamespace(React);
var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);
var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);
var mergeRefs__default = /*#__PURE__*/_interopDefaultLegacy(mergeRefs);

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);

    if (enumerableOnly) {
      symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }

    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _extends$3() {
  _extends$3 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$3.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];

  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;

  var _s, _e;

  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

  return arr2;
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

var ChromeContext = React__default['default'].createContext({
  hue: 'chromeHue'
});
var useChromeContext = function useChromeContext() {
  return React.useContext(ChromeContext);
};

var COMPONENT_ID$A = 'chrome.chrome';
var StyledChrome = styled__default['default'].div.attrs({
  'data-garden-id': COMPONENT_ID$A,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledChrome",
  componentId: "sc-1uqm6u6-0"
})(["display:flex;position:relative;margin:0;height:100vh;overflow-y:hidden;font-family:", ";direction:", ";", ";"], function (props) {
  return props.theme.fonts.system;
}, function (props) {
  return props.theme.rtl && 'rtl';
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$A, props);
});
StyledChrome.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$z = 'chrome.header_item_icon';
var StyledHeaderItemIcon = styled__default['default'].div.attrs({
  'data-garden-id': COMPONENT_ID$z,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledHeaderItemIcon",
  componentId: "sc-1jhhp6z-0"
})(["transition:transform 0.25s ease-in-out;margin:0 3px;width:", ";min-width:", ";height:", ";", ";"], function (props) {
  return props.theme.iconSizes.md;
}, function (props) {
  return props.theme.iconSizes.md;
}, function (props) {
  return props.theme.iconSizes.md;
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$z, props);
});
StyledHeaderItemIcon.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$y = 'chrome.base_header_item';
var getHeaderItemSize = function getHeaderItemSize(props) {
  return "".concat(props.theme.space.base * 7.5, "px");
};
var sizeStyles$4 = function sizeStyles(props) {
  var size = props.theme.space.base * 7.5;
  return styled.css(["padding:0 3px;min-width:", "px;height:", ";line-height:", ";"], size, props.maxY ? '100%' : "".concat(size, "px"), reactTheming.getLineHeight(size, props.theme.fontSizes.md));
};
var StyledBaseHeaderItem = styled__default['default'].button.attrs({
  'data-garden-id': COMPONENT_ID$y,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledBaseHeaderItem",
  componentId: "sc-1qua7h6-0"
})(["display:inline-flex;position:relative;flex:", ";align-items:center;justify-content:", ";order:1;transition:box-shadow 0.1s ease-in-out,color 0.1s ease-in-out;z-index:0;margin:", ";border:none;border-radius:", ";background:transparent;text-decoration:none;white-space:nowrap;color:inherit;font-size:inherit;", " ", ";"], function (props) {
  return props.maxX && '1';
}, function (props) {
  return props.maxX ? 'start' : 'center';
}, function (props) {
  return "0 ".concat(props.theme.space.base * 3, "px");
}, function (props) {
  if (props.isRound) {
    return '100%';
  }
  if (props.maxY) {
    return '0';
  }
  return props.theme.borderRadii.md;
}, sizeStyles$4, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$y, props);
});
StyledBaseHeaderItem.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$x = 'chrome.header_item_text';
var clippedStyling = styled.css(["position:absolute;margin:0;clip:rect(1px,1px,1px,1px);width:1px;height:1px;overflow:hidden;white-space:nowrap;"]);
var StyledHeaderItemText = styled__default['default'].span.attrs({
  'data-garden-id': COMPONENT_ID$x,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledHeaderItemText",
  componentId: "sc-goz7la-0"
})(["margin:0 3px;", " ", ";"], function (props) {
  return props.isClipped && clippedStyling;
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$x, props);
});
StyledHeaderItemText.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$w = 'chrome.nav';
var colorStyles$6 = function colorStyles(props) {
  var shade = props.isDark || props.isLight ? 600 : 700;
  var backgroundColor = reactTheming.getColor(props.hue, shade, props.theme);
  var foregroundColor = props.isLight ? props.theme.palette.grey[800] : props.theme.palette.white;
  return styled.css(["background-color:", ";color:", ";"], backgroundColor, foregroundColor);
};
var getNavWidth = function getNavWidth(props) {
  return "".concat(props.theme.space.base * 15, "px");
};
var getExpandedNavWidth = function getExpandedNavWidth() {
  return "200px";
};
var StyledNav = styled__default['default'].nav.attrs({
  'data-garden-id': COMPONENT_ID$w,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledNav",
  componentId: "sc-6j462r-0"
})(["display:flex;position:relative;flex-direction:column;flex-shrink:0;order:-1;width:", ";font-size:", ";", ";", ";"], function (props) {
  return props.isExpanded ? getExpandedNavWidth : getNavWidth;
}, function (props) {
  return props.theme.fontSizes.md;
}, function (props) {
  return colorStyles$6(props);
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$w, props);
});
StyledNav.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$v = 'chrome.header_item';
var retrieveProductColor$1 = function retrieveProductColor(props) {
  switch (props.product) {
    case 'chat':
      return reactTheming.PALETTE.product.chat;
    case 'connect':
      return reactTheming.PALETTE.product.connect;
    case 'explore':
      return reactTheming.PALETTE.product.explore;
    case 'guide':
      return reactTheming.PALETTE.product.guide;
    case 'message':
      return reactTheming.PALETTE.product.message;
    case 'support':
      return reactTheming.PALETTE.product.support;
    case 'talk':
      return reactTheming.PALETTE.product.talk;
    default:
      return 'inherit';
  }
};
var StyledLogoHeaderItem = styled__default['default'](StyledBaseHeaderItem).attrs({
  'data-garden-id': COMPONENT_ID$v,
  'data-garden-version': '8.47.1',
  as: 'div'
}).withConfig({
  displayName: "StyledLogoHeaderItem",
  componentId: "sc-1n1d1yv-0"
})(["display:none;order:0;margin-right:", ";margin-left:", ";border-", ":", ";border-radius:0;padding:0;width:", ";height:100%;overflow:hidden;fill:", ";text-decoration:none;color:", ";", "{", "}", "{margin:0;width:", ";height:", ";}", ";"], function (props) {
  return props.theme.rtl ? "-".concat(props.theme.space.base, "px") : 'auto';
}, function (props) {
  return props.theme.rtl ? 'auto' : "-".concat(props.theme.space.base, "px");
}, function (props) {
  return props.theme.rtl ? 'left' : 'right';
}, function (props) {
  return "".concat(props.theme.borders.sm, " ").concat(reactTheming.getColor('neutralHue', 300, props.theme));
}, function (props) {
  return getNavWidth(props);
}, function (props) {
  return reactTheming.getColor('chromeHue', 700, props.theme);
}, function (props) {
  return retrieveProductColor$1(props);
}, StyledHeaderItemText, clippedStyling, StyledHeaderItemIcon, function (props) {
  return props.theme.iconSizes.lg;
}, function (props) {
  return props.theme.iconSizes.lg;
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$v, props);
});
StyledLogoHeaderItem.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$u = 'chrome.base_nav_item';
var getNavItemHeight = function getNavItemHeight(props) {
  return "".concat(props.theme.space.base * 13, "px");
};
var sizeStyles$3 = function sizeStyles(props) {
  var verticalPadding = polished.math("(".concat(getNavItemHeight(props), " - ").concat(props.theme.iconSizes.lg, ") / 2"));
  var horizontalPadding = polished.math("(".concat(getNavWidth(props), " - ").concat(props.theme.iconSizes.lg, ") / 4"));
  return styled.css(["padding:", " ", ";min-height:", ";"], verticalPadding, horizontalPadding, getNavItemHeight);
};
var StyledBaseNavItem = styled__default['default'].button.attrs({
  'data-garden-id': COMPONENT_ID$u,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledBaseNavItem",
  componentId: "sc-zvo43f-0"
})(["display:flex;flex-shrink:0;align-items:center;justify-content:center;transition:box-shadow 0.1s ease-in-out,background-color 0.1s ease-in-out,opacity 0.1s ease-in-out;border:none;box-sizing:border-box;background:transparent;text-decoration:none;color:inherit;font-size:inherit;", ""], function (props) {
  return sizeStyles$3(props);
});
StyledBaseNavItem.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$t = 'chrome.header';
var getHeaderHeight = function getHeaderHeight(props) {
  return getNavItemHeight(props);
};
var StyledHeader = styled__default['default'].header.attrs({
  'data-garden-id': COMPONENT_ID$t,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledHeader",
  componentId: "sc-1cexpz-0"
})(["display:flex;position:", ";align-items:center;justify-content:flex-end;box-sizing:border-box;border-bottom:", ";box-shadow:", ";background-color:", ";padding:0 ", "px;height:", ";color:", ";font-size:", ";", " ", ";"], function (props) {
  return props.isStandalone && 'relative';
}, function (props) {
  return "".concat(props.theme.borders.sm, " ").concat(reactTheming.getColor('neutralHue', 300, props.theme));
}, function (props) {
  return props.isStandalone && props.theme.shadows.lg('0', '10px', reactTheming.getColor('chromeHue', 600, props.theme, 0.15));
}, function (props) {
  return props.theme.colors.background;
}, function (props) {
  return props.theme.space.base;
}, getHeaderHeight, function (props) {
  return reactTheming.getColor('neutralHue', 600, props.theme);
}, function (props) {
  return props.theme.fontSizes.md;
}, function (props) {
  return props.isStandalone && "\n    ".concat(StyledLogoHeaderItem, " {\n      display: inline-flex;\n    }\n  ");
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$t, props);
});
StyledHeader.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$s = 'chrome.skipnav';
var animationStyles = function animationStyles() {
  var animationName = styled.keyframes(["0%{transform:translate(-50%,-50%);}"]);
  return styled.css(["transition:opacity 0.2s ease-out,clip 0s linear 0.2s;opacity:0;clip:rect(0,0,0,0);&:focus{transition:opacity 0.2s ease-in-out;animation:0.2s cubic-bezier(0.15,0.85,0.35,1.2) ", ";opacity:1;clip:rect(0,150vw,100vh,-50vw);}"], animationName);
};
var colorStyles$5 = function colorStyles(theme) {
  var color = reactTheming.getColor('primaryHue', 600, theme);
  var borderColor = reactTheming.getColor('neutralHue', 300, theme);
  var boxShadow = theme.shadows.lg("".concat(theme.space.base * 5, "px"), "".concat(theme.space.base * 7, "px"), reactTheming.getColor('chromeHue', 600, theme, 0.15));
  return styled.css(["border-color:", ";box-shadow:", ";background-color:", ";color:", ";&:hover,&:focus{color:", ";}"], borderColor, boxShadow, theme.colors.background, color, color);
};
var sizeStyles$2 = function sizeStyles(props) {
  var top = polished.math("".concat(getHeaderHeight(props), " / 2"));
  var padding = "".concat(props.theme.space.base * 5, "px");
  var paddingStart = "".concat(props.theme.space.base * 4, "px");
  var fontSize = props.theme.fontSizes.md;
  var lineHeight = reactTheming.getLineHeight(padding, fontSize);
  return styled.css(["top:", ";padding:", ";padding-", ":", ";line-height:", ";font-size:", ";"], top, padding, props.theme.rtl ? 'right' : 'left', paddingStart, lineHeight, fontSize);
};
var StyledSkipNav = styled__default['default'].a.attrs({
  'data-garden-id': COMPONENT_ID$s,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledSkipNav",
  componentId: "sc-1tsro34-0"
})(["", ";display:inline-flex;position:absolute;left:50%;align-items:center;justify-content:center;transform:translateX(-50%);direction:", ";z-index:", ";border:", ";border-radius:", ";text-decoration:underline;white-space:nowrap;", ";&:focus{outline:none;}", ";", ";"], animationStyles(), function (props) {
  return props.theme.rtl && 'rtl';
}, function (props) {
  return props.zIndex;
}, function (props) {
  return props.theme.borders.sm;
}, function (props) {
  return props.theme.borderRadii.md;
}, function (props) {
  return sizeStyles$2(props);
}, function (props) {
  return colorStyles$5(props.theme);
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$s, props);
});
StyledSkipNav.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

function _extends$2() { _extends$2 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2.apply(this, arguments); }

var _ref$2 = /*#__PURE__*/React__namespace.createElement("path", {
  fill: "currentColor",
  d: "M4.441 7.38l.095.083.939.939-.708.707-.939-.939-2 2-.132.142a2.829 2.829 0 003.99 3.99l.142-.132 2-2-.939-.939.707-.708.94.94a1 1 0 01.083 1.32l-.083.094-2 2A3.828 3.828 0 01.972 9.621l.15-.158 2-2A1 1 0 014.34 7.31l.101.07zm7.413-3.234a.5.5 0 01.057.638l-.057.07-7 7a.5.5 0 01-.765-.638l.057-.07 7-7a.5.5 0 01.708 0zm3.023-3.025a3.829 3.829 0 01.15 5.257l-.15.158-2 2a1 1 0 01-1.32.083l-.094-.083-.94-.94.708-.707.939.94 2-2 .132-.142a2.829 2.829 0 00-3.99-3.99l-.142.131-2 2 .939.939-.707.708-.94-.94a1 1 0 01-.082-1.32l.083-.094 2-2a3.828 3.828 0 015.414 0z"
});

function SvgLinkStroke(props) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$2({
    xmlns: "http://www.w3.org/2000/svg",
    width: 16,
    height: 16,
    viewBox: "0 0 16 16",
    focusable: "false",
    role: "presentation"
  }, props), _ref$2);
}

var COMPONENT_ID$r = 'chrome.skipnav_icon';
var sizeStyles$1 = function sizeStyles(theme) {
  var margin = "".concat(theme.space.base * 2, "px");
  var size = theme.iconSizes.md;
  return styled.css(["margin-", ":", ";width:", ";height:", ";"], theme.rtl ? 'left' : 'right', margin, size, size);
};
var StyledSkipNavIcon = styled__default['default'](SvgLinkStroke).attrs({
  'data-garden-id': COMPONENT_ID$r,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledSkipNavIcon",
  componentId: "sc-1ika5z4-0"
})(["transform:", ";color:", ";", ";", ";"], function (props) {
  return props.theme.rtl && 'scaleX(-1)';
}, function (props) {
  return reactTheming.getColor('neutralHue', 600, props.theme);
}, function (props) {
  return sizeStyles$1(props.theme);
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$r, props);
});
StyledSkipNavIcon.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$q = 'chrome.body';
var StyledBody = styled__default['default'].div.attrs({
  'data-garden-id': COMPONENT_ID$q,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledBody",
  componentId: "sc-c7h9kv-0"
})(["flex:1;order:1;background-color:", ";min-width:0;", ";"], function (props) {
  return reactTheming.getColor('neutralHue', 100, props.theme);
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$q, props);
});
StyledBody.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$p = 'chrome.footer';
var getFooterHeight = function getFooterHeight(props) {
  return "".concat(props.theme.space.base * 20, "px");
};
var StyledFooter = styled__default['default'].footer.attrs({
  'data-garden-id': COMPONENT_ID$p,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledFooter",
  componentId: "sc-v7lib2-0"
})(["display:flex;align-items:center;justify-content:flex-end;box-sizing:border-box;border-top:", ";background-color:", ";padding:0 ", "px;height:", ";", ";"], function (props) {
  return "".concat(props.theme.borders.sm, " ").concat(reactTheming.getColor('neutralHue', 300, props.theme));
}, function (props) {
  return props.theme.colors.background;
}, function (props) {
  return props.theme.space.base * 9;
}, getFooterHeight, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$p, props);
});
StyledFooter.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$o = 'chrome.content';
var StyledContent = styled__default['default'].div.attrs({
  'data-garden-id': COMPONENT_ID$o,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledContent",
  componentId: "sc-qcuzxn-0"
})(["display:flex;height:", ";line-height:", ";color:", ";font-size:", ";&:focus{outline:none;}", ";"], function (props) {
  return props.hasFooter ? "calc(100% - ".concat(polished.math("".concat(getHeaderHeight(props), " + ").concat(getFooterHeight(props))), ")") : "calc(100% - ".concat(getHeaderHeight(props), ")");
}, function (props) {
  return reactTheming.getLineHeight(props.theme.lineHeights.md, props.theme.fontSizes.md);
}, function (props) {
  return props.theme.colors.foreground;
}, function (props) {
  return props.theme.fontSizes.md;
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$o, props);
});
StyledContent.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$n = 'chrome.main';
var StyledMain = styled__default['default'].main.attrs({
  'data-garden-id': COMPONENT_ID$n,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledMain",
  componentId: "sc-t61cre-0"
})(["flex:1;order:1;background-color:", ";overflow:auto;:focus{outline:none;}", ";"], function (props) {
  return props.theme.colors.background;
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$n, props);
});
StyledMain.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$m = 'chrome.sidebar';
var StyledSidebar = styled__default['default'].aside.attrs({
  'data-garden-id': COMPONENT_ID$m,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledSidebar",
  componentId: "sc-1q77fuw-0"
})(["flex-shrink:0;order:0;box-sizing:border-box;border-", ":", ";width:330px;overflow:auto;&:focus{outline:none;}", ";"], function (props) {
  return props.theme.rtl ? 'left' : 'right';
}, function (props) {
  return "".concat(props.theme.borders.sm, " ").concat(reactTheming.getColor('neutralHue', 300, props.theme));
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$m, props);
});
StyledSidebar.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$l = 'chrome.footer_item';
var StyledFooterItem = styled__default['default'].div.attrs({
  'data-garden-id': COMPONENT_ID$l,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledFooterItem",
  componentId: "sc-1cktm85-0"
})(["margin:", ";", ";"], function (props) {
  return "0 ".concat(props.theme.space.base, "px");
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$l, props);
});
StyledFooterItem.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$k = 'chrome.header_item';
var imgStyles = function imgStyles(props) {
  var size = polished.math("".concat(getHeaderItemSize(props), " - ").concat(props.theme.space.base * 2));
  return styled.css(["img{margin:0;border-radius:", ";width:", ";height:", ";}"], polished.math("".concat(props.theme.borderRadii.md, " - 1")), size, size);
};
var StyledHeaderItem = styled__default['default'](StyledBaseHeaderItem).attrs({
  'data-garden-id': COMPONENT_ID$k,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledHeaderItem",
  componentId: "sc-14sft6n-0"
})(["&:hover,&:focus{text-decoration:none;color:inherit;}&:focus{outline:none;}&[data-garden-focus-visible]{box-shadow:", ";}&[data-garden-focus-visible]:active{box-shadow:none;}&:hover ", ",&:hover ", ",&:active ", ",&:active ", "{color:", ";}", " ", " ", " ", ";"], function (props) {
  return props.theme.shadows.md(reactTheming.getColor('chromeHue', 400, props.theme, 0.35));
},
StyledHeaderItemIcon,
StyledHeaderItemText,
StyledHeaderItemIcon,
StyledHeaderItemText, function (props) {
  return reactTheming.getColor('chromeHue', 700, props.theme);
}, function (props) {
  return props.maxY && "\n      &[data-garden-focus-visible] {\n        box-shadow: inset ".concat(props.theme.shadows.lg(props.theme.shadowWidths.md, '0', reactTheming.getColor('chromeHue', 400, props.theme, 0.35)), ",\n        ").concat(props.theme.shadowWidths.md, " 0 0 0 ").concat(reactTheming.getColor('chromeHue', 400, props.theme, 0.35), ",\n        inset ").concat(props.theme.shadows.lg("-".concat(props.theme.shadowWidths.md), '0', reactTheming.getColor('chromeHue', 400, props.theme, 0.35)), ",\n        -").concat(props.theme.shadowWidths.md, " 0 0 0 ").concat(reactTheming.getColor('chromeHue', 400, props.theme, 0.35), ";\n      }\n  ");
}, imgStyles, function (props) {
  return props.isRound && "\n    ".concat(StyledHeaderItemIcon, " {\n      border-radius: 100px;\n    }\n  ");
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$k, props);
});
StyledHeaderItem.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$j = 'chrome.header_item_wrapper';
var StyledHeaderItemWrapper = styled__default['default'](StyledBaseHeaderItem).attrs({
  'data-garden-id': COMPONENT_ID$j,
  'data-garden-version': '8.47.1',
  as: 'div'
}).withConfig({
  displayName: "StyledHeaderItemWrapper",
  componentId: "sc-1uieu55-0"
})(["", ";"], function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$j, props);
});
StyledHeaderItemWrapper.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$i = 'chrome.logo_nav_item';
var retrieveProductColor = function retrieveProductColor(product) {
  switch (product) {
    case 'chat':
      return reactTheming.PALETTE.product.chat;
    case 'connect':
      return reactTheming.PALETTE.product.connect;
    case 'explore':
      return reactTheming.PALETTE.product.explore;
    case 'guide':
      return reactTheming.PALETTE.product.guide;
    case 'message':
      return reactTheming.PALETTE.product.message;
    case 'support':
      return reactTheming.PALETTE.product.support;
    case 'talk':
      return reactTheming.PALETTE.product.talk;
    default:
      return 'inherit';
  }
};
var colorStyles$4 = function colorStyles(props) {
  var fillColor = props.isLight ? props.theme.palette.grey[800] : props.theme.palette.white;
  var color = props.isLight || props.isDark ? fillColor : retrieveProductColor(props.product);
  return styled.css(["color:", ";fill:", ";"], color, fillColor);
};
var StyledLogoNavItem = styled__default['default'](StyledBaseNavItem).attrs({
  'data-garden-id': COMPONENT_ID$i,
  'data-garden-version': '8.47.1',
  as: 'div'
}).withConfig({
  displayName: "StyledLogoNavItem",
  componentId: "sc-saaydx-0"
})(["order:0;opacity:1;cursor:default;", ";"], function (props) {
  return colorStyles$4(props);
});
StyledLogoNavItem.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$h = 'chrome.brandmark_nav_item';
var StyledBrandmarkNavItem = styled__default['default'](StyledBaseNavItem).attrs({
  'data-garden-id': COMPONENT_ID$h,
  'data-garden-version': '8.47.1',
  as: 'div'
}).withConfig({
  displayName: "StyledBrandmarkNavItem",
  componentId: "sc-8kynd4-0"
})(["order:1;opacity:0.3;margin-top:auto;"]);
StyledBrandmarkNavItem.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$g = 'chrome.nav_item_icon';
var StyledNavItemIcon = styled__default['default'].div.attrs({
  'data-garden-id': COMPONENT_ID$g,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledNavItemIcon",
  componentId: "sc-7w9rpt-0"
})(["align-self:flex-start;order:0;border-radius:", ";width:", ";height:", ";", ";"], function (props) {
  return props.theme.borderRadii.md;
}, function (props) {
  return props.theme.iconSizes.lg;
}, function (props) {
  return props.theme.iconSizes.lg;
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$g, props);
});
StyledNavItemIcon.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$f = 'chrome.nav_item';
var colorStyles$3 = function colorStyles(props) {
  var BLACK = props.theme.palette.black;
  var WHITE = props.theme.palette.white;
  var currentColor;
  var hoverColor;
  if (props.isCurrent) {
    if (props.isLight) {
      currentColor = polished.rgba(BLACK, 0.3);
    } else if (props.isDark) {
      currentColor = polished.rgba(WHITE, 0.3);
    } else {
      currentColor = reactTheming.getColor(props.hue, 500, props.theme);
    }
  } else {
    hoverColor = polished.rgba(props.isLight ? WHITE : BLACK, 0.1);
  }
  var activeColor = polished.rgba(props.isLight ? BLACK : WHITE, 0.1);
  var focusColor = polished.rgba(props.isLight ? BLACK : WHITE, 0.2);
  return styled.css(["opacity:", ";background-color:", ";&:hover{opacity:1;background-color:", ";}&[data-garden-focus-visible]{opacity:1;box-shadow:inset ", ";}&:active{background-color:", ";}"], props.isCurrent ? 1 : 0.6, currentColor, hoverColor, props.theme.shadows.md(focusColor), activeColor);
};
var StyledNavItem = styled__default['default'](StyledBaseNavItem).attrs({
  'data-garden-id': COMPONENT_ID$f,
  'data-garden-version': '8.47.1',
  as: 'button'
}).withConfig({
  displayName: "StyledNavItem",
  componentId: "sc-gs8mjz-0"
})(["justify-content:", ";order:1;margin:0;cursor:", ";text-align:", ";&:hover,&:focus{text-decoration:none;color:inherit;}&:focus{outline:none;}", ";", " ", ";"], function (props) {
  return props.isExpanded && 'start';
}, function (props) {
  return props.isCurrent ? 'default' : 'pointer';
}, function (props) {
  return props.isExpanded && 'inherit';
}, function (props) {
  return colorStyles$3(props);
}, function (props) {
  return props.isExpanded && "\n    ".concat(StyledNavItemIcon, " {\n      margin: 0 ").concat(polished.math("(".concat(getNavWidth(props), " - ").concat(props.theme.iconSizes.lg, ") / 4")), ";\n    }\n  ");
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$f, props);
});
StyledNavItem.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$e = 'chrome.nav_item_text';
var StyledNavItemText = styled__default['default'].span.attrs({
  'data-garden-id': COMPONENT_ID$e,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledNavItemText",
  componentId: "sc-13m84xl-0"
})(["position:absolute;order:1;clip:rect(1px,1px,1px,1px);margin:", ";width:1px;height:1px;overflow:hidden;line-height:", ";white-space:", ";", " ", ";"], function (props) {
  return props.isExpanded && "0 ".concat(polished.math("(".concat(getNavWidth(props), " - ").concat(props.theme.iconSizes.lg, ") / 4")));
}, function (props) {
  return reactTheming.getLineHeight(props.theme.space.base * 5, props.theme.fontSizes.md);
}, function (props) {
  return props.isWrapped ? 'normal' : 'nowrap';
}, function (props) {
  return props.isExpanded && "\n    ".concat(StyledNavItem, " > && {\n      position: static;\n      flex: 1;\n      clip: auto;\n      width: auto;\n      height: auto;\n      text-overflow: ellipsis;\n    }\n  ");
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$e, props);
});
StyledNavItemText.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$d = 'chrome.subnav_item';
var colorStyles$2 = function colorStyles(props) {
  var BLACK = props.theme.palette.black;
  var WHITE = props.theme.palette.white;
  var currentColor;
  var hoverColor;
  if (props.isCurrent) {
    if (props.isLight) {
      currentColor = polished.rgba(BLACK, 0.1);
    } else {
      currentColor = polished.rgba(WHITE, 0.1);
    }
  } else {
    hoverColor = polished.rgba(props.isLight ? WHITE : BLACK, 0.1);
  }
  var activeColor = polished.rgba(props.isLight ? BLACK : WHITE, 0.03);
  var focusColor = polished.rgba(props.isLight ? BLACK : WHITE, 0.2);
  return styled.css(["opacity:", ";background-color:", ";&:hover{opacity:1;background-color:", ";}&[data-garden-focus-visible]{opacity:1;box-shadow:", ";}&:not([data-garden-header='true']):active{background-color:", ";}"], props.isCurrent ? '1' : '0.6', currentColor, hoverColor, props.theme.shadows.md(focusColor), activeColor);
};
var getSubNavItemHeight = function getSubNavItemHeight(props) {
  return "".concat(props.theme.space.base * 7.5, "px");
};
var StyledSubNavItem = styled__default['default'].button.attrs({
  'data-garden-id': COMPONENT_ID$d,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledSubNavItem",
  componentId: "sc-1yg9dpx-0"
})(["display:flex;align-items:center;transition:box-shadow 0.1s ease-in-out,background-color 0.1s ease-in-out,opacity 0.1s ease-in-out;margin:", "px 0 0;border:none;border-radius:", ";box-sizing:border-box;background:transparent;cursor:", ";padding:", ";width:100%;min-height:", ";text-align:inherit;font-size:inherit;&,&:hover,&:focus{text-decoration:none;color:inherit;}&:focus{outline:none;}", ";", ";"], function (props) {
  return props.theme.space.base * 2;
}, function (props) {
  return props.theme.borderRadii.md;
}, function (props) {
  return props.isCurrent ? 'default' : 'pointer';
}, function (props) {
  return "0 ".concat(props.theme.space.base * 2, "px");
}, getSubNavItemHeight, function (props) {
  return colorStyles$2(props);
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$d, props);
});
StyledSubNavItem.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$c = 'chrome.subnav';
var colorStyles$1 = function colorStyles(props) {
  var shade;
  if (props.isLight) {
    shade = 500;
  } else {
    shade = props.isDark ? 700 : 800;
  }
  var backgroundColor = reactTheming.getColor(props.hue, shade, props.theme);
  var foregroundColor = props.isLight ? props.theme.palette.grey[800] : props.theme.palette.white;
  return styled.css(["background-color:", ";color:", ";"], backgroundColor, foregroundColor);
};
var StyledSubNav = styled__default['default'].nav.attrs({
  'data-garden-id': COMPONENT_ID$c,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledSubNav",
  componentId: "sc-19hjou6-0"
})(["flex-direction:column;order:0;padding:", ";min-width:220px;font-size:", ";", ";& > ", ":first-child{margin-top:0;}", ";"], function (props) {
  return "".concat(props.theme.space.base * 6, "px ").concat(props.theme.space.base * 5, "px");
}, function (props) {
  return props.theme.fontSizes.md;
}, function (props) {
  return colorStyles$1(props);
}, StyledSubNavItem, function (props) {
  return reactTheming.retrieveComponentStyles('chrome.subnav', props);
});
StyledSubNav.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$b = 'chrome.subnav_item_text';
var sizeStyles = function sizeStyles(props) {
  var baseLineHeight = props.theme.space.base * 5;
  var verticalMargin = polished.math("(".concat(getSubNavItemHeight(props), " - ").concat(baseLineHeight, ") / 2"));
  var lineHeight = reactTheming.getLineHeight(baseLineHeight, props.theme.fontSizes.md);
  return styled.css(["margin:", " 0;line-height:", ";"], verticalMargin, lineHeight);
};
var StyledSubNavItemText = styled__default['default'].span.attrs({
  'data-garden-id': COMPONENT_ID$b,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledSubNavItemText",
  componentId: "sc-1hy0pn7-0"
})(["overflow:hidden;text-overflow:ellipsis;white-space:", ";", " ", ";"], function (props) {
  return props.isWrapped ? 'normal' : 'nowrap';
}, function (props) {
  return sizeStyles(props);
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$b, props);
});
StyledSubNavItemText.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$a = 'chrome.collapsible_sub_nav_item';
var StyledSubNavItemHeader = styled__default['default'](StyledSubNavItem).attrs({
  'data-garden-id': COMPONENT_ID$a,
  'data-garden-version': '8.47.1',
  'data-garden-header': 'true'
}).withConfig({
  displayName: "StyledSubNavItemHeader",
  componentId: "sc-1vniter-0"
})(["position:relative;padding-", ":", "px;", ";"], function (props) {
  return props.theme.rtl ? 'left' : 'right';
}, function (props) {
  return props.theme.space.base * 7;
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$a, props);
});
StyledSubNavItemHeader.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

function _extends$1() { _extends$1 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1.apply(this, arguments); }

var _ref$1 = /*#__PURE__*/React__namespace.createElement("path", {
  fill: "currentColor",
  d: "M1.646 3.646a.5.5 0 01.638-.057l.07.057L6 7.293l3.646-3.647a.5.5 0 01.638-.057l.07.057a.5.5 0 01.057.638l-.057.07-4 4a.5.5 0 01-.638.057l-.07-.057-4-4a.5.5 0 010-.708z"
});

function SvgChevronDownStroke(props) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$1({
    xmlns: "http://www.w3.org/2000/svg",
    width: 12,
    height: 12,
    viewBox: "0 0 12 12",
    focusable: "false",
    role: "presentation"
  }, props), _ref$1);
}

var _excluded$b = ["theme", "isExpanded"];
var COMPONENT_ID$9 = 'chrome.collapsible_sub_nav_item_icon';
var FilteredChevronDownStrokeIcon = React__default['default'].forwardRef(function (_ref, ref) {
  _ref.theme;
      _ref.isExpanded;
      var validProps = _objectWithoutProperties(_ref, _excluded$b);
  return React__default['default'].createElement(SvgChevronDownStroke, _extends$3({
    ref: ref
  }, validProps));
});
FilteredChevronDownStrokeIcon.displayName = 'FilteredChevronDownStrokeIcon';
var StyledSubNavItemIcon = styled__default['default'](FilteredChevronDownStrokeIcon).withConfig({
  displayName: "StyledSubNavItemIcon",
  componentId: "sc-1d02hho-0"
})(["width:", ";height:", ";"], function (props) {
  return props.theme.iconSizes.sm;
}, function (props) {
  return props.theme.iconSizes.sm;
});
StyledSubNavItemIcon.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};
var StyledSubNavItemIconWrapper = styled__default['default'].div.attrs({
  'data-garden-id': COMPONENT_ID$9,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledSubNavItemIcon__StyledSubNavItemIconWrapper",
  componentId: "sc-1d02hho-1"
})(["display:flex;position:absolute;top:0;right:", ";left:", ";align-items:center;justify-content:center;width:", "px;height:", ";", "{transform:", ";transition:transform 0.25s ease-in-out;}", ";"], function (props) {
  return props.theme.rtl ? 'auto' : 0;
}, function (props) {
  return props.theme.rtl && 0;
}, function (props) {
  return props.theme.space.base * 7;
}, getSubNavItemHeight, StyledSubNavItemIcon, function (props) {
  if (props.isExpanded) {
    return styled.css(["rotate(", "180deg)"], props.theme.rtl && '-');
  }
  return undefined;
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$9, props);
});
StyledSubNavItemIconWrapper.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var PANEL_COMPONENT_ID = 'chrome.collapsible_sub_nav_item_panel';
var hiddenStyling = styled.css(["visibility:hidden;max-height:0 !important;overflow:hidden;"]);
var StyledSubNavPanel = styled__default['default'].div.attrs({
  'data-garden-id': PANEL_COMPONENT_ID,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledSubNavPanel",
  componentId: "sc-1jv3rpv-0"
})(["transition:max-height 0.25s cubic-bezier(0.15,0.85,0.35,1.2),0.25s visibility 0s linear;height:auto;max-height:100%;", " ", "{padding-", ":", ";}", ";"], function (props) {
  return props.isHidden && hiddenStyling;
}, StyledSubNavItem, function (props) {
  return props.theme.rtl ? 'right' : 'left';
}, function (props) {
  return "".concat(props.theme.space.base * 5, "px");
}, function (props) {
  return reactTheming.retrieveComponentStyles(PANEL_COMPONENT_ID, props);
});
StyledSubNavPanel.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$8 = 'chrome.sheet';
var borderStyle = function borderStyle(_ref) {
  var theme = _ref.theme,
      placement = _ref.placement,
      isOpen = _ref.isOpen;
  var borderColor = isOpen ? reactTheming.getColor('neutralHue', 300, theme) : 'transparent';
  var borderSides = ['-left', '-right'];
  var borderSide = '';
  if (theme.rtl) {
    borderSides.reverse();
  }
  if (placement === 'end') {
    borderSide = borderSides[0];
  } else if (placement === 'start') {
    borderSide = borderSides[1];
  }
  return "border".concat(borderSide, ": ").concat(theme.borders.sm, " ").concat(borderColor, ";");
};
var StyledSheet = styled__default['default'].aside.attrs({
  'data-garden-id': COMPONENT_ID$8,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledSheet",
  componentId: "sc-dx8ijk-0"
})(["display:flex;order:1;transition:", ";background-color:", ";width:", ";height:100%;overflow:hidden;font-size:", ";&:focus{outline:none;}", ";", ";"], function (props) {
  return props.isAnimated && 'width 250ms ease-in-out';
}, function (props) {
  return props.theme.colors.background;
}, function (props) {
  return props.isOpen ? props.size : '0px';
}, function (props) {
  return props.theme.fontSizes.md;
}, function (props) {
  return borderStyle(props);
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$8, props);
});
StyledSheet.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$7 = 'chrome.sheet_wrapper';
var StyledSheetWrapper = styled__default['default'].div.attrs({
  'data-garden-id': COMPONENT_ID$7,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledSheetWrapper",
  componentId: "sc-f6x9zb-0"
})(["display:flex;position:relative;flex-direction:column;transform:", ";transition:", ";min-width:", ";", ";"], function (props) {
  var translateValues = [-100, 100];
  var translation = 'translateX(0%)';
  if (props.isOpen) {
    return translation;
  }
  if (props.theme.rtl) {
    translateValues.reverse();
  }
  if (props.placement === 'end') {
    translation = "translateX(".concat(translateValues[1], "%)");
  } else if (props.placement === 'start') {
    translation = "translateX(".concat(translateValues[0], "%)");
  }
  return translation;
}, function (props) {
  return props.isAnimated && 'transform 250ms ease-in-out';
}, function (props) {
  return props.size;
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$7, props);
});
StyledSheetWrapper.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$6 = 'chrome.sheet_title';
var StyledSheetTitle = styled__default['default'].div.attrs({
  'data-garden-id': COMPONENT_ID$6,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledSheetTitle",
  componentId: "sc-1gogk75-0"
})(["line-height:", ";color:", ";font-weight:", ";", ";"], function (props) {
  return reactTheming.getLineHeight(props.theme.space.base * 5, props.theme.fontSizes.md);
}, function (props) {
  return props.theme.colors.foreground;
}, function (props) {
  return props.theme.fontWeights.semibold;
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$6, props);
});
StyledSheetTitle.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$5 = 'chrome.sheet_description';
var StyledSheetDescription = styled__default['default'].div.attrs({
  'data-garden-id': COMPONENT_ID$5,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledSheetDescription",
  componentId: "sc-1puglb6-0"
})(["line-height:", ";color:", ";", ";"], function (props) {
  return reactTheming.getLineHeight(props.theme.space.base * 4, props.theme.fontSizes.md);
}, function (props) {
  return reactTheming.getColor('neutralHue', 600, props.theme);
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$5, props);
});
StyledSheetDescription.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$4 = 'chrome.sheet_body';
var StyledSheetBody = styled__default['default'].div.attrs({
  'data-garden-id': COMPONENT_ID$4,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledSheetBody",
  componentId: "sc-bt4eoj-0"
})(["flex:1;overflow-y:auto;padding:", "px;", ";"], function (props) {
  return props.theme.space.base * 5;
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$4, props);
});
StyledSheetBody.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$3 = 'chrome.sheet_close';
var colorStyles = function colorStyles(props) {
  var backgroundColor = 'primaryHue';
  var foregroundColor = 'neutralHue';
  return styled.css(["background-color:transparent;color:", ";&:hover{background-color:", ";color:", ";}&[data-garden-focus-visible]{box-shadow:", ";}&:active{transition:background-color 0.1s ease-in-out,color 0.1s ease-in-out;background-color:", ";color:", ";}"], reactTheming.getColor(foregroundColor, 600, props.theme), reactTheming.getColor(backgroundColor, 600, props.theme, 0.08), reactTheming.getColor(foregroundColor, 700, props.theme), props.theme.shadows.md(reactTheming.getColor(backgroundColor, 600, props.theme, 0.35)), reactTheming.getColor(backgroundColor, 600, props.theme, 0.2), reactTheming.getColor(foregroundColor, 800, props.theme));
};
var StyledSheetClose = styled__default['default'].button.attrs({
  'data-garden-id': COMPONENT_ID$3,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledSheetClose",
  componentId: "sc-1ab02oq-0"
})(["display:flex;position:absolute;top:", "px;", ":", ";align-items:center;justify-content:center;transition:box-shadow 0.1s ease-in-out,background-color 0.25s ease-in-out,color 0.25s ease-in-out;border:none;border-radius:50%;cursor:pointer;padding:0;width:", "px;height:", "px;overflow:hidden;text-decoration:none;font-size:0;user-select:none;&::-moz-focus-inner{border:0;}&:focus{outline:none;}", ";& > svg{vertical-align:middle;}", ";"], function (props) {
  return props.theme.space.base * 2.5;
}, function (props) {
  return props.theme.rtl ? 'left' : 'right';
}, function (props) {
  return "".concat(props.theme.space.base * 2, "px");
}, function (props) {
  return props.theme.space.base * 10;
}, function (props) {
  return props.theme.space.base * 10;
}, function (props) {
  return colorStyles(props);
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$3, props);
});
StyledSheetClose.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$2 = 'chrome.sheet_footer';
var StyledSheetFooter = styled__default['default'].footer.attrs({
  'data-garden-id': COMPONENT_ID$2,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledSheetFooter",
  componentId: "sc-2cktos-0"
})(["display:flex;flex-flow:row wrap;align-items:center;justify-content:", ";border-top:", ";padding:", "px;", ";"], function (props) {
  return props.isCompact ? 'center' : 'flex-end';
}, function (props) {
  return "".concat(props.theme.borders.sm, " ").concat(reactTheming.getColor('neutralHue', 300, props.theme), "}");
}, function (props) {
  return props.theme.space.base * (props.isCompact ? 2.5 : 5);
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$2, props);
});
StyledSheetFooter.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$1 = 'chrome.sheet_footer_item';
var StyledSheetFooterItem = styled__default['default'].div.attrs({
  'data-garden-id': COMPONENT_ID$1,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledSheetFooterItem",
  componentId: "sc-r9ixh-0"
})(["", " ", ";"], function (props) {
  return "margin-".concat(props.theme.rtl ? 'right' : 'left', ": ").concat(props.theme.space.base * 5, "px;");
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$1, props);
});
StyledSheetFooterItem.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID = 'chrome.sheet_header';
var StyledSheetHeader = styled__default['default'].header.attrs({
  'data-garden-id': COMPONENT_ID,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledSheetHeader",
  componentId: "sc-o2ry8i-0"
})(["border-bottom:", ";padding:", "px;", ";"], function (props) {
  return "".concat(props.theme.borders.sm, " ").concat(reactTheming.getColor('neutralHue', 300, props.theme), "}");
}, function (props) {
  return props.theme.space.base * 5;
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID, props);
});
StyledSheetHeader.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var _excluded$a = ["hue", "isFluid"];
var Chrome = React__default['default'].forwardRef(function (_ref, ref) {
  var hue = _ref.hue,
      isFluid = _ref.isFluid,
      props = _objectWithoutProperties(_ref, _excluded$a);
  var theme = React.useContext(styled.ThemeContext);
  var isLightMemoized = React.useMemo(function () {
    if (hue) {
      var backgroundColor = reactTheming.getColor(hue, 600, theme);
      var LIGHT_COLOR = 'white';
      return polished.readableColor(backgroundColor, LIGHT_COLOR, undefined, false
      ) === LIGHT_COLOR;
    }
    return false;
  }, [hue, theme]);
  var isLight = hue ? isLightMemoized : false;
  var isDark = hue ? !isLightMemoized : false;
  var chromeContextValue = React.useMemo(function () {
    return {
      hue: hue || 'chromeHue',
      isLight: isLight,
      isDark: isDark
    };
  }, [hue, isLight, isDark]);
  var environment = reactTheming.useDocument(theme);
  React.useEffect(function () {
    if (environment && !isFluid) {
      var htmlElement = environment.querySelector('html');
      if (htmlElement) {
        var defaultHtmlPosition = htmlElement.style.position;
        htmlElement.style.position = 'fixed';
        return function () {
          htmlElement.style.position = defaultHtmlPosition;
        };
      }
    }
    return undefined;
  }, [environment, isFluid]);
  return React__default['default'].createElement(ChromeContext.Provider, {
    value: chromeContextValue
  }, React__default['default'].createElement(StyledChrome, _extends$3({
    ref: ref
  }, props)));
});
Chrome.displayName = 'Chrome';
Chrome.propTypes = {
  hue: PropTypes__default['default'].string
};

var _excluded$9 = ["targetId", "zIndex", "children"];
var SkipNav = React__default['default'].forwardRef(function (_ref, ref) {
  var targetId = _ref.targetId,
      zIndex = _ref.zIndex,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, _excluded$9);
  return React__default['default'].createElement(StyledSkipNav, _extends$3({
    href: "#".concat(targetId),
    zIndex: zIndex,
    ref: ref
  }, props), React__default['default'].createElement(StyledSkipNavIcon, null), children);
});
SkipNav.displayName = 'SkipNav';
SkipNav.propTypes = {
  targetId: PropTypes__default['default'].string.isRequired,
  zIndex: PropTypes__default['default'].number
};
SkipNav.defaultProps = {
  zIndex: 1
};

var BodyContext = React__default['default'].createContext({
  hasFooter: true
});
var useBodyContext = function useBodyContext() {
  return React.useContext(BodyContext);
};

var _excluded$8 = ["hasFooter"];
var Body = React__default['default'].forwardRef(function (_ref, ref) {
  var hasFooter = _ref.hasFooter,
      props = _objectWithoutProperties(_ref, _excluded$8);
  var bodyContextValue = React.useMemo(function () {
    return {
      hasFooter: !!hasFooter
    };
  }, [hasFooter]);
  return React__default['default'].createElement(BodyContext.Provider, {
    value: bodyContextValue
  }, React__default['default'].createElement(StyledBody, _extends$3({
    ref: ref
  }, props)));
});
Body.displayName = 'Body';
Body.propTypes = {
  hasFooter: PropTypes__default['default'].bool
};

var Content = React__default['default'].forwardRef(function (props, ref) {
  var _useBodyContext = useBodyContext(),
      hasFooter = _useBodyContext.hasFooter;
  return React__default['default'].createElement(StyledContent, _extends$3({
    ref: ref,
    hasFooter: hasFooter
  }, props));
});
Content.displayName = 'Content';

var Main = React__default['default'].forwardRef(function (props, ref) {
  return React__default['default'].createElement(StyledMain, _extends$3({
    ref: ref
  }, props));
});
Main.displayName = 'Main';

var Sidebar = React__default['default'].forwardRef(function (props, ref) {
  return React__default['default'].createElement(StyledSidebar, _extends$3({
    ref: ref
  }, props));
});
Sidebar.displayName = 'Sidebar';

var Header = React__default['default'].forwardRef(function (props, ref) {
  return React__default['default'].createElement(StyledHeader, _extends$3({
    ref: ref
  }, props));
});
Header.displayName = 'Header';
Header.propTypes = {
  isStandalone: PropTypes__default['default'].bool
};

var PRODUCTS = ['chat', 'connect', 'explore', 'guide', 'message', 'support', 'talk'];

var _excluded$7 = ["hasLogo", "product"];
var HeaderItem = React__default['default'].forwardRef(function (_ref, ref) {
  var hasLogo = _ref.hasLogo,
      product = _ref.product,
      other = _objectWithoutProperties(_ref, _excluded$7);
  if (hasLogo) {
    return React__default['default'].createElement(StyledLogoHeaderItem, _extends$3({
      ref: ref,
      product: product
    }, other));
  }
  return React__default['default'].createElement(StyledHeaderItem, _extends$3({
    ref: ref
  }, other));
});
HeaderItem.displayName = 'HeaderItem';
HeaderItem.propTypes = {
  maxX: PropTypes__default['default'].bool,
  maxY: PropTypes__default['default'].bool,
  isRound: PropTypes__default['default'].bool,
  product: PropTypes__default['default'].oneOf(PRODUCTS),
  hasLogo: PropTypes__default['default'].bool
};

var _excluded$6 = ["children"];
var HeaderItemIcon = function HeaderItemIcon(_ref) {
  var children = _ref.children,
      props = _objectWithoutProperties(_ref, _excluded$6);
  var Element = function Element(elementProps) {
    return React__default['default'].cloneElement(React.Children.only(children), _objectSpread2(_objectSpread2({}, elementProps), props));
  };
  return React__default['default'].createElement(StyledHeaderItemIcon, _extends$3({
    as: Element
  }, props));
};

var HeaderItemText = React__default['default'].forwardRef(function (props, ref) {
  return React__default['default'].createElement(StyledHeaderItemText, _extends$3({
    ref: ref
  }, props));
});
HeaderItemText.displayName = 'HeaderItemText';
HeaderItemText.propTypes = {
  isClipped: PropTypes__default['default'].bool
};

var HeaderItemWrapper = React__default['default'].forwardRef(function (props, ref) {
  return React__default['default'].createElement(StyledHeaderItemWrapper, _extends$3({
    ref: ref
  }, props));
});
HeaderItemWrapper.displayName = 'HeaderItemWrapper';

var Footer = React__default['default'].forwardRef(function (props, ref) {
  return React__default['default'].createElement(StyledFooter, _extends$3({
    ref: ref
  }, props));
});
Footer.displayName = 'Footer';

var FooterItem = React__default['default'].forwardRef(function (props, ref) {
  return React__default['default'].createElement(StyledFooterItem, _extends$3({
    ref: ref
  }, props));
});
FooterItem.displayName = 'FooterItem';

var NavContext = React__default['default'].createContext({
  isExpanded: false
});
var useNavContext = function useNavContext() {
  return React.useContext(NavContext);
};

var Nav = React__default['default'].forwardRef(function (props, ref) {
  var _useChromeContext = useChromeContext(),
      hue = _useChromeContext.hue,
      isLight = _useChromeContext.isLight,
      isDark = _useChromeContext.isDark;
  var navContextValue = React.useMemo(function () {
    return {
      isExpanded: !!props.isExpanded
    };
  }, [props.isExpanded]);
  return React__default['default'].createElement(NavContext.Provider, {
    value: navContextValue
  }, React__default['default'].createElement(StyledNav, _extends$3({
    ref: ref
  }, props, {
    hue: hue,
    isLight: isLight,
    isDark: isDark
  })));
});
Nav.displayName = 'Nav';
Nav.propTypes = {
  isExpanded: PropTypes__default['default'].bool
};

var _excluded$5 = ["hasLogo", "hasBrandmark", "product"];
var NavItem = React__default['default'].forwardRef(function (_ref, ref) {
  var hasLogo = _ref.hasLogo,
      hasBrandmark = _ref.hasBrandmark,
      product = _ref.product,
      other = _objectWithoutProperties(_ref, _excluded$5);
  var _useChromeContext = useChromeContext(),
      hue = _useChromeContext.hue,
      isLight = _useChromeContext.isLight,
      isDark = _useChromeContext.isDark;
  var _useNavContext = useNavContext(),
      isExpanded = _useNavContext.isExpanded;
  if (hasLogo) {
    return React__default['default'].createElement(StyledLogoNavItem, _extends$3({
      ref: ref,
      isDark: isDark,
      isLight: isLight,
      product: product
    }, other));
  }
  if (hasBrandmark) {
    return React__default['default'].createElement(StyledBrandmarkNavItem, _extends$3({
      ref: ref
    }, other));
  }
  return React__default['default'].createElement(StyledNavItem, _extends$3({
    tabIndex: 0,
    ref: ref,
    isExpanded: isExpanded,
    hue: hue,
    isDark: isDark,
    isLight: isLight
  }, other));
});
NavItem.displayName = 'NavItem';
NavItem.propTypes = {
  product: PropTypes__default['default'].oneOf(PRODUCTS),
  hasLogo: PropTypes__default['default'].bool,
  hasBrandmark: PropTypes__default['default'].bool,
  isCurrent: PropTypes__default['default'].bool
};

var _excluded$4 = ["children"];
var NavItemIcon = function NavItemIcon(_ref) {
  var children = _ref.children,
      props = _objectWithoutProperties(_ref, _excluded$4);
  var Element = function Element(elementProps) {
    return React__default['default'].cloneElement(React.Children.only(children), _objectSpread2(_objectSpread2({}, elementProps), props));
  };
  return React__default['default'].createElement(StyledNavItemIcon, _extends$3({
    as: Element
  }, props));
};

var NavItemText = React__default['default'].forwardRef(function (props, ref) {
  var _useNavContext = useNavContext(),
      isExpanded = _useNavContext.isExpanded;
  return React__default['default'].createElement(StyledNavItemText, _extends$3({
    ref: ref,
    isExpanded: isExpanded
  }, props));
});
NavItemText.displayName = 'NavItemText';
NavItemText.propTypes = {
  isWrapped: PropTypes__default['default'].bool
};

var SubNav = React__default['default'].forwardRef(function (props, ref) {
  var _useChromeContext = useChromeContext(),
      hue = _useChromeContext.hue,
      isLight = _useChromeContext.isLight,
      isDark = _useChromeContext.isDark;
  return React__default['default'].createElement(StyledSubNav, _extends$3({
    ref: ref,
    hue: hue,
    isLight: isLight,
    isDark: isDark
  }, props));
});
SubNav.displayName = 'SubNav';

var SubNavItem = React__default['default'].forwardRef(function (props, ref) {
  var _useChromeContext = useChromeContext(),
      isDark = _useChromeContext.isDark,
      isLight = _useChromeContext.isLight;
  return React__default['default'].createElement(StyledSubNavItem, _extends$3({
    ref: ref,
    isDark: isDark,
    isLight: isLight
  }, props));
});
SubNavItem.displayName = 'SubNavItem';
SubNavItem.propTypes = {
  isCurrent: PropTypes__default['default'].bool
};

var SubNavItemText = React__default['default'].forwardRef(function (props, ref) {
  return React__default['default'].createElement(StyledSubNavItemText, _extends$3({
    ref: ref
  }, props));
});
SubNavItemText.displayName = 'SubNavItemText';
SubNavItemText.propTypes = {
  isWrapped: PropTypes__default['default'].bool
};

var _excluded$3 = ["header", "children", "isExpanded", "onChange"];
var CollapsibleSubNavItem = React__default['default'].forwardRef(function (_ref, ref) {
  var header = _ref.header,
      children = _ref.children,
      controlledExpanded = _ref.isExpanded,
      _onChange = _ref.onChange,
      other = _objectWithoutProperties(_ref, _excluded$3);
  var panelRef = React.useRef();
  var _useState = React.useState(controlledExpanded),
      _useState2 = _slicedToArray(_useState, 2),
      internalExpanded = _useState2[0],
      setInternalExpanded = _useState2[1];
  var expanded = containerUtilities.getControlledValue(controlledExpanded, internalExpanded);
  var expandedSections = expanded ? [0] : [];
  var _useAccordion = containerAccordion.useAccordion({
    expandedSections: expandedSections,
    onChange: function onChange() {
      var isExpanded = expandedSections.length === 0;
      if (_onChange) {
        _onChange(isExpanded);
      } else {
        setInternalExpanded(isExpanded);
      }
    }
  }),
      getHeaderProps = _useAccordion.getHeaderProps,
      getTriggerProps = _useAccordion.getTriggerProps,
      getPanelProps = _useAccordion.getPanelProps;
  React.useEffect(function () {
    if (expanded && panelRef.current) {
      panelRef.current.style.maxHeight = "".concat(panelRef.current.scrollHeight, "px");
    }
  }, [expanded, children]);
  return React__default['default'].createElement("div", {
    ref: ref
  }, React__default['default'].createElement("div", getHeaderProps({
    ariaLevel: 2
  }), React__default['default'].createElement(StyledSubNavItemHeader, getTriggerProps(_objectSpread2({
    isExpanded: expanded,
    index: 0,
    role: null,
    tabIndex: null
  }, other)), React__default['default'].createElement(React__default['default'].Fragment, null, header, React__default['default'].createElement(StyledSubNavItemIconWrapper, {
    isExpanded: expanded
  }, React__default['default'].createElement(StyledSubNavItemIcon, null))))), React__default['default'].createElement(StyledSubNavPanel, getPanelProps({
    index: 0,
    isHidden: !expanded,
    ref: panelRef
  }), children));
});
CollapsibleSubNavItem.propTypes = {
  header: PropTypes__default['default'].any,
  isExpanded: PropTypes__default['default'].bool,
  onChange: PropTypes__default['default'].func,
  children: PropTypes__default['default'].node
};

var SheetContext = React.createContext({});
var useSheetContext = function useSheetContext() {
  return React.useContext(SheetContext);
};

function ownerDocument(node) {
  return node && node.ownerDocument || document;
}

function activeElement(doc) {
  if (doc === void 0) {
    doc = ownerDocument();
  }
  try {
    var active = doc.activeElement;
    if (!active || !active.nodeName) return null;
    return active;
  } catch (e) {
    return doc.body;
  }
}

function useFocusableMount(_ref) {
  var isMounted = _ref.isMounted,
      focusOnMount = _ref.focusOnMount,
      restoreFocus = _ref.restoreFocus,
      targetRef = _ref.targetRef;
  var triggerRef = React.useRef();
  React.useEffect(function () {
    if (isMounted && focusOnMount && targetRef.current) {
      triggerRef.current = activeElement();
      targetRef.current.focus();
    }
  }, [isMounted, focusOnMount, targetRef]);
  React.useEffect(function () {
    if (!isMounted && restoreFocus && triggerRef.current) {
      triggerRef.current.focus();
    }
  }, [isMounted, restoreFocus, triggerRef]);
}

var _excluded$2 = ["id"];
var SheetTitle = React.forwardRef(function (_ref, ref) {
  var id = _ref.id,
      props = _objectWithoutProperties(_ref, _excluded$2);
  var _useSheetContext = useSheetContext(),
      titleId = _useSheetContext.titleId;
  return React__default['default'].createElement(StyledSheetTitle, _extends$3({
    id: id || titleId,
    ref: ref
  }, props));
});
SheetTitle.displayName = 'Sheet.Title';

var _excluded$1 = ["id"];
var SheetDescription = React.forwardRef(function (_ref, ref) {
  var id = _ref.id,
      props = _objectWithoutProperties(_ref, _excluded$1);
  var _useSheetContext = useSheetContext(),
      descriptionId = _useSheetContext.descriptionId;
  return React__default['default'].createElement(StyledSheetDescription, _extends$3({
    id: id || descriptionId,
    ref: ref
  }, props));
});
SheetDescription.displayName = 'Sheet.Description';

var SheetHeader = React.forwardRef(function (props, ref) {
  return React__default['default'].createElement(StyledSheetHeader, _extends$3({
    ref: ref
  }, props));
});
SheetHeader.displayName = 'Sheet.Header';

var SheetBody = React.forwardRef(function (props, ref) {
  return React__default['default'].createElement(StyledSheetBody, _extends$3({
    ref: ref
  }, props));
});
SheetBody.displayName = 'Sheet.Body';

var SheetFooter = React.forwardRef(function (props, ref) {
  return React__default['default'].createElement(StyledSheetFooter, _extends$3({
    ref: ref
  }, props));
});
SheetFooter.displayName = 'Sheet.Footer';

var SheetFooterItem = React.forwardRef(function (props, ref) {
  return React__default['default'].createElement(StyledSheetFooterItem, _extends$3({
    ref: ref
  }, props));
});
SheetFooterItem.displayName = 'Sheet.FooterItem';

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var _ref = /*#__PURE__*/React__namespace.createElement("path", {
  stroke: "currentColor",
  strokeLinecap: "round",
  d: "M3 13L13 3m0 10L3 3"
});

function SvgXStroke(props) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends({
    xmlns: "http://www.w3.org/2000/svg",
    width: 16,
    height: 16,
    viewBox: "0 0 16 16",
    focusable: "false",
    role: "presentation"
  }, props), _ref);
}

var SheetClose = React.forwardRef(function (props, ref) {
  return React__default['default'].createElement(StyledSheetClose, _extends$3({
    "aria-label": "Close Sheet",
    ref: ref
  }, props), React__default['default'].createElement(SvgXStroke, null));
});
SheetClose.displayName = 'Sheet.Close';

var _excluded = ["id", "isOpen", "isAnimated", "focusOnMount", "restoreFocus", "placement", "size", "children"];
var Sheet = React__default['default'].forwardRef(function (_ref, ref) {
  var id = _ref.id,
      isOpen = _ref.isOpen,
      isAnimated = _ref.isAnimated,
      focusOnMount = _ref.focusOnMount,
      restoreFocus = _ref.restoreFocus,
      placement = _ref.placement,
      size = _ref.size,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, _excluded);
  var sheetRef = React.useRef(null);
  var seed = reactUid.useUIDSeed();
  var _useState = React.useState(id || seed("sheet_".concat('8.47.1'))),
      _useState2 = _slicedToArray(_useState, 1),
      idPrefix = _useState2[0];
  var titleId = "".concat(idPrefix, "--title");
  var descriptionId = "".concat(idPrefix, "--description");
  var sheetContext = React.useMemo(function () {
    return {
      titleId: titleId,
      descriptionId: descriptionId
    };
  }, [titleId, descriptionId]);
  useFocusableMount({
    targetRef: sheetRef,
    isMounted: isOpen,
    focusOnMount: focusOnMount,
    restoreFocus: restoreFocus
  });
  return React__default['default'].createElement(SheetContext.Provider, {
    value: sheetContext
  }, React__default['default'].createElement(StyledSheet, _extends$3({
    isOpen: isOpen,
    isAnimated: isAnimated,
    placement: placement,
    size: size,
    tabIndex: -1,
    id: idPrefix,
    "aria-labelledby": titleId,
    "aria-describedby": descriptionId,
    ref: mergeRefs__default['default']([sheetRef, ref])
  }, props), React__default['default'].createElement(StyledSheetWrapper, {
    isOpen: isOpen,
    isAnimated: isAnimated,
    placement: placement,
    size: size
  }, children)));
});
Sheet.Title = SheetTitle;
Sheet.Description = SheetDescription;
Sheet.Header = SheetHeader;
Sheet.Body = SheetBody;
Sheet.Footer = SheetFooter;
Sheet.FooterItem = SheetFooterItem;
Sheet.Close = SheetClose;
Sheet.displayName = 'Sheet';
Sheet.propTypes = {
  id: PropTypes__default['default'].string,
  isOpen: PropTypes__default['default'].bool,
  isAnimated: PropTypes__default['default'].bool,
  focusOnMount: PropTypes__default['default'].bool,
  restoreFocus: PropTypes__default['default'].bool,
  placement: PropTypes__default['default'].oneOf(['start', 'end']),
  size: PropTypes__default['default'].string
};
Sheet.defaultProps = {
  isOpen: false,
  isAnimated: true,
  focusOnMount: false,
  restoreFocus: false,
  placement: 'end',
  size: '380px'
};

exports.Body = Body;
exports.Chrome = Chrome;
exports.CollapsibleSubNavItem = CollapsibleSubNavItem;
exports.Content = Content;
exports.Footer = Footer;
exports.FooterItem = FooterItem;
exports.Header = Header;
exports.HeaderItem = HeaderItem;
exports.HeaderItemIcon = HeaderItemIcon;
exports.HeaderItemText = HeaderItemText;
exports.HeaderItemWrapper = HeaderItemWrapper;
exports.Main = Main;
exports.Nav = Nav;
exports.NavItem = NavItem;
exports.NavItemIcon = NavItemIcon;
exports.NavItemText = NavItemText;
exports.Sheet = Sheet;
exports.Sidebar = Sidebar;
exports.SkipNav = SkipNav;
exports.SubNav = SubNav;
exports.SubNavItem = SubNavItem;
exports.SubNavItemText = SubNavItemText;
