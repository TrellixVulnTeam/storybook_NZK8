/**
 * Copyright Zendesk, Inc.
 *
 * Use of this source code is governed under the Apache License, Version 2.0
 * found at http://www.apache.org/licenses/LICENSE-2.0.
 */

import React from 'react';
import PropTypes from 'prop-types';

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}

var _excluded = ["role"];
function useBreadcrumb() {
  var getContainerProps = function getContainerProps(_temp) {
    var _ref = _temp === void 0 ? {} : _temp,
        _ref$role = _ref.role,
        role = _ref$role === void 0 ? 'navigation' : _ref$role,
        other = _objectWithoutPropertiesLoose(_ref, _excluded);
    return _extends({
      role: role,
      'aria-label': 'Breadcrumb navigation',
      'data-garden-container-id': 'containers.breadcrumb',
      'data-garden-container-version': '0.4.9'
    }, other);
  };
  var getCurrentPageProps = function getCurrentPageProps(props) {
    if (props === void 0) {
      props = {};
    }
    return _extends({
      'aria-current': 'page'
    }, props);
  };
  return {
    getContainerProps: getContainerProps,
    getCurrentPageProps: getCurrentPageProps
  };
}

var BreadcrumbContainer = function BreadcrumbContainer(_ref) {
  var children = _ref.children,
      _ref$render = _ref.render,
      render = _ref$render === void 0 ? children : _ref$render;
  return React.createElement(React.Fragment, null, render(useBreadcrumb()));
};
BreadcrumbContainer.propTypes = {
  render: PropTypes.func,
  children: PropTypes.func
};

export { BreadcrumbContainer, useBreadcrumb };
