"use strict";
/**
 * Copyright Zendesk, Inc.
 *
 * Use of this source code is governed under the Apache License, Version 2.0
 * found at http://www.apache.org/licenses/LICENSE-2.0.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.handleWarningMessage = exports.handleSuccessMessage = exports.handleErrorMessage = void 0;
const chalk_1 = require("chalk");
const is_interactive_1 = __importDefault(require("is-interactive"));
/**
 * Handle error message output.
 *
 * @param error The error to output.
 * @param {string} command The current command.
 * @param {Ora} [spinner] Terminal spinner.
 */
const handleErrorMessage = (error, command, spinner) => {
    let message = (0, chalk_1.red)(error);
    if (command) {
        const prefix = (0, is_interactive_1.default)() ? (0, chalk_1.bgRed)(command) : `[${command}]`;
        message = `${prefix} ${message}`;
    }
    if (spinner) {
        spinner.fail(message);
    }
    else {
        console.error(message);
    }
};
exports.handleErrorMessage = handleErrorMessage;
/**
 * Handle success message output.
 *
 * @param message The message to output.
 * @param {Ora} [spinner] Terminal spinner.
 */
const handleSuccessMessage = (message, spinner) => {
    if (spinner && (0, is_interactive_1.default)()) {
        spinner.succeed(message);
    }
    else {
        console.log(message);
    }
};
exports.handleSuccessMessage = handleSuccessMessage;
/**
 * Handle warning message output.
 *
 * @param message The message to output.
 * @param {Ora} [spinner] Terminal spinner.
 */
const handleWarningMessage = (message, spinner) => {
    if (spinner && (0, is_interactive_1.default)()) {
        spinner.warn(message);
    }
    else {
        console.log(message);
    }
};
exports.handleWarningMessage = handleWarningMessage;
