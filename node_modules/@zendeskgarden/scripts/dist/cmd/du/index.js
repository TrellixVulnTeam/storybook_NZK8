"use strict";
/**
 * Copyright Zendesk, Inc.
 *
 * Use of this source code is governed under the Apache License, Version 2.0
 * found at http://www.apache.org/licenses/LICENSE-2.0.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.execute = void 0;
const commander_1 = require("commander");
const utils_1 = require("../../utils");
const path_1 = require("path");
const klaw_1 = __importDefault(require("klaw"));
/**
 * Execute the `cmd-du` command.
 *
 * @param {string} [dir] Directory to calculate size for.
 * @param {Ora} [spinner] Terminal spinner.
 *
 * @returns {Promise<number>} The disk usage, in bytes, for the given directory.
 */
const execute = async (dir, spinner) => {
    let retVal = 0;
    try {
        const root = (0, path_1.resolve)(dir || __dirname);
        for await (const file of (0, klaw_1.default)(root)) {
            if (file.path !== root) {
                retVal += file.stats.size;
            }
        }
    }
    catch (error) {
        (0, utils_1.handleErrorMessage)(error, 'cmd-du', spinner);
        throw error;
    }
    return retVal;
};
exports.execute = execute;
exports.default = (spinner) => {
    const command = new commander_1.Command('cmd-du');
    return command
        .description('output disk usage')
        .argument('[dir]', 'directory to get usage for; defaults to the current directory')
        .action(async (dir) => {
        try {
            spinner.start();
            const usage = await (0, exports.execute)(dir, spinner);
            if (usage > 0) {
                (0, utils_1.handleSuccessMessage)(usage.toString(), spinner);
            }
            else {
                throw new Error();
            }
        }
        catch {
            spinner.fail('Invalid directory');
            process.exitCode = 1;
        }
        finally {
            spinner.stop();
        }
    });
};
