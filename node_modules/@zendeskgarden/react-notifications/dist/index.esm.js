/**
 * Copyright Zendesk, Inc.
 *
 * Use of this source code is governed under the Apache License, Version 2.0
 * found at http://www.apache.org/licenses/LICENSE-2.0.
 */

import * as React from 'react';
import React__default, { Children, createContext, useContext, useCallback, useState, useRef, useEffect, useReducer, useMemo } from 'react';
import PropTypes from 'prop-types';
import styled, { css, ThemeContext } from 'styled-components';
import { getColor, retrieveComponentStyles, DEFAULT_THEME, getLineHeight, useDocument } from '@zendeskgarden/react-theming';
import { TransitionGroup, CSSTransition } from 'react-transition-group';
import { uid } from 'react-uid';
import { hideVisually } from 'polished';

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);

    if (enumerableOnly) {
      symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }

    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _extends$5() {
  _extends$5 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$5.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}

function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];

  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;

  var _s, _e;

  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

  return arr2;
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

var COMPONENT_ID$5 = 'notifications.close';
var StyledClose = styled.button.attrs({
  'data-garden-id': COMPONENT_ID$5,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledClose",
  componentId: "sc-1mr9nx1-0"
})(["display:block;position:absolute;top:", "px;", ":", ";transition:background-color 0.1s ease-in-out,color 0.25s ease-in-out;border:none;border-radius:50%;background-color:transparent;cursor:pointer;padding:0;width:", "px;height:", "px;overflow:hidden;color:", ";font-size:0;user-select:none;&:hover{color:", ";}&:focus{outline:none;}&[data-garden-focus-visible]{background-color:", ";color:", ";&::-moz-focus-inner{border:0;}}", ";"], function (props) {
  return props.theme.space.base;
}, function (props) {
  return props.theme.rtl ? 'left' : 'right';
}, function (props) {
  return "".concat(props.theme.space.base, "px");
}, function (props) {
  return props.theme.space.base * 7;
}, function (props) {
  return props.theme.space.base * 7;
}, function (props) {
  return props.hue ? getColor(props.hue, props.hue === 'warningHue' ? 700 : 600, props.theme) : getColor('neutralHue', 600, props.theme);
}, function (props) {
  return props.hue ? getColor(props.hue, 800, props.theme) : getColor('neutralHue', 800, props.theme);
}, function (props) {
  return props.hue ? getColor(props.hue, props.hue === 'warningHue' ? 700 : 600, props.theme, 0.15) : getColor('neutralHue', 600, props.theme, 0.15);
}, function (props) {
  return props.hue ? getColor(props.hue, 800, props.theme) : getColor('neutralHue', 800, props.theme);
}, function (props) {
  return retrieveComponentStyles(COMPONENT_ID$5, props);
});
StyledClose.defaultProps = {
  theme: DEFAULT_THEME
};

var COMPONENT_ID$4 = 'notifications.paragraph';
var StyledParagraph = styled.p.attrs({
  'data-garden-id': COMPONENT_ID$4,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledParagraph",
  componentId: "sc-12tmd6p-0"
})(["margin:", "px 0 0;", ";"], function (props) {
  return props.theme.space.base * 2;
}, function (props) {
  return retrieveComponentStyles(COMPONENT_ID$4, props);
});
StyledParagraph.defaultProps = {
  theme: DEFAULT_THEME
};

var COMPONENT_ID$3 = 'notifications.title';
var StyledTitle = styled.div.attrs({
  'data-garden-id': COMPONENT_ID$3,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledTitle",
  componentId: "sc-xx4jsv-0"
})(["margin:0;color:", ";font-weight:", ";", ";"], function (props) {
  return props.theme.colors.foreground;
}, function (props) {
  return props.isRegular ? props.theme.fontWeights.regular : props.theme.fontWeights.semibold;
}, function (props) {
  return retrieveComponentStyles(COMPONENT_ID$3, props);
});
StyledTitle.defaultProps = {
  theme: DEFAULT_THEME
};

var boxShadow = function boxShadow(props) {
  var theme = props.theme;
  var space = theme.space,
      shadows = theme.shadows;
  var offsetY = "".concat(space.base * 5, "px");
  var blurRadius = "".concat(space.base * 7, "px");
  var color = getColor('chromeHue', 600, theme, 0.15);
  return shadows.lg(offsetY, blurRadius, color);
};
var colorStyles$2 = function colorStyles(props) {
  var backgroundColor;
  var borderColor;
  var foregroundColor;
  if (props.hue) {
    backgroundColor = getColor(props.hue, 100, props.theme);
    borderColor = getColor(props.hue, 300, props.theme);
    foregroundColor = getColor(props.hue, props.type === 'info' ? 600 : 700, props.theme);
  } else {
    backgroundColor = props.theme.colors.background;
    borderColor = getColor('neutralHue', 300, props.theme);
    foregroundColor = getColor('neutralHue', 800, props.theme);
  }
  return css(["border-color:", ";background-color:", ";color:", ";"], borderColor, backgroundColor, foregroundColor);
};
var padding = function padding(props) {
  var space = props.theme.space;
  var paddingVertical = "".concat(space.base * 5, "px");
  var paddingHorizontal = "".concat(space.base * 10, "px");
  return "".concat(paddingVertical, " ").concat(paddingHorizontal);
};
var StyledBase = styled.div.withConfig({
  displayName: "StyledBase",
  componentId: "sc-14syaqw-0"
})(["position:relative;border:", ";border-radius:", ";box-shadow:", ";padding:", ";line-height:", ";font-size:", ";direction:", ";", ";"], function (props) {
  return props.theme.borders.sm;
}, function (props) {
  return props.theme.borderRadii.md;
}, function (props) {
  return props.isFloating && boxShadow;
}, padding, function (props) {
  return getLineHeight(props.theme.space.base * 5, props.theme.fontSizes.md);
}, function (props) {
  return props.theme.fontSizes.md;
}, function (props) {
  return props.theme.rtl && 'rtl';
}, colorStyles$2);
StyledBase.defaultProps = {
  theme: DEFAULT_THEME
};

var COMPONENT_ID$2 = 'notifications.alert';
var colorStyles$1 = function colorStyles(props) {
  return css(["", "{color:", ";}"], StyledTitle, props.hue && getColor(props.hue, 800, props.theme));
};
var StyledAlert = styled(StyledBase).attrs(function (props) {
  return {
    'data-garden-id': COMPONENT_ID$2,
    'data-garden-version': '8.47.1',
    role: props.role === undefined ? 'alert' : props.role
  };
}).withConfig({
  displayName: "StyledAlert",
  componentId: "sc-fyn8jp-0"
})(["", " ", ";"], colorStyles$1, function (props) {
  return retrieveComponentStyles(COMPONENT_ID$2, props);
});
StyledAlert.defaultProps = {
  theme: DEFAULT_THEME
};

var ARRAY_VALIDATION_TYPE = ['success', 'warning', 'error', 'info'];

var COMPONENT_ID$1 = 'notifications.notification';
var colorStyles = function colorStyles(props) {
  var type = props.type,
      theme = props.theme;
  var colors = theme.colors;
  var successHue = colors.successHue,
      dangerHue = colors.dangerHue,
      warningHue = colors.warningHue,
      foreground = colors.foreground;
  var color;
  switch (type) {
    case 'success':
      color = getColor(successHue, 600, theme);
      break;
    case 'error':
      color = getColor(dangerHue, 600, theme);
      break;
    case 'warning':
      color = getColor(warningHue, 700, theme);
      break;
    case 'info':
      color = foreground;
      break;
    default:
      color = 'inherit';
      break;
  }
  return css(["", "{color:", ";}"], StyledTitle, color);
};
var StyledNotification = styled(StyledBase).attrs(function (props) {
  return {
    'data-garden-id': COMPONENT_ID$1,
    'data-garden-version': '8.47.1',
    role: props.role === undefined ? 'status' : props.role
  };
}).withConfig({
  displayName: "StyledNotification",
  componentId: "sc-uf6jh-0"
})(["", " ", ";"], colorStyles, function (props) {
  return retrieveComponentStyles(COMPONENT_ID$1, props);
});
StyledNotification.propTypes = {
  type: PropTypes.oneOf(ARRAY_VALIDATION_TYPE)
};
StyledNotification.defaultProps = {
  theme: DEFAULT_THEME
};

var COMPONENT_ID = 'notifications.well';
var StyledWell = styled(StyledBase).attrs({
  'data-garden-id': COMPONENT_ID,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledWell",
  componentId: "sc-a5831c-0"
})(["background-color:", ";color:", " ", ";"], function (props) {
  return props.isRecessed && getColor('neutralHue', 100, props.theme);
}, function (props) {
  return getColor('neutralHue', 600, props.theme);
}, function (props) {
  return retrieveComponentStyles(COMPONENT_ID, props);
});
StyledWell.defaultProps = {
  theme: DEFAULT_THEME
};

var _excluded$2 = ["children"];
var StyledIcon = styled(function (_ref) {
  var children = _ref.children,
      props = _objectWithoutProperties(_ref, _excluded$2);
  return React__default.cloneElement(Children.only(children), props);
}).withConfig({
  displayName: "StyledIcon",
  componentId: "sc-msklws-0"
})(["position:absolute;right:", ";left:", ";margin-top:", "px;color:", ";"], function (props) {
  return props.theme.rtl && "".concat(props.theme.space.base * 4, "px");
}, function (props) {
  return !props.theme.rtl && "".concat(props.theme.space.base * 4, "px");
}, function (props) {
  return props.theme.space.base / 2;
}, function (props) {
  return props.hue && getColor(props.hue, props.hue === 'warningHue' ? 700 : 600, props.theme);
});
StyledIcon.defaultProps = {
  theme: DEFAULT_THEME
};

function _extends$4() { _extends$4 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4.apply(this, arguments); }

var _ref$4 = /*#__PURE__*/React.createElement("g", {
  fill: "none",
  stroke: "currentColor"
}, /*#__PURE__*/React.createElement("circle", {
  cx: 7.5,
  cy: 8.5,
  r: 7
}), /*#__PURE__*/React.createElement("path", {
  strokeLinecap: "round",
  d: "M7.5 4.5V9"
}));

var _ref2$2 = /*#__PURE__*/React.createElement("circle", {
  cx: 7.5,
  cy: 12,
  r: 1,
  fill: "currentColor"
});

function SvgAlertErrorStroke(props) {
  return /*#__PURE__*/React.createElement("svg", _extends$4({
    xmlns: "http://www.w3.org/2000/svg",
    width: 16,
    height: 16,
    viewBox: "0 0 16 16",
    focusable: "false",
    role: "presentation"
  }, props), _ref$4, _ref2$2);
}

function _extends$3() { _extends$3 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3.apply(this, arguments); }

var _ref$3 = /*#__PURE__*/React.createElement("g", {
  fill: "none",
  stroke: "currentColor"
}, /*#__PURE__*/React.createElement("path", {
  strokeLinecap: "round",
  strokeLinejoin: "round",
  d: "M4 9l2.5 2.5 5-5"
}), /*#__PURE__*/React.createElement("circle", {
  cx: 7.5,
  cy: 8.5,
  r: 7
}));

function SvgCheckCircleStroke(props) {
  return /*#__PURE__*/React.createElement("svg", _extends$3({
    xmlns: "http://www.w3.org/2000/svg",
    width: 16,
    height: 16,
    viewBox: "0 0 16 16",
    focusable: "false",
    role: "presentation"
  }, props), _ref$3);
}

function _extends$2() { _extends$2 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2.apply(this, arguments); }

var _ref$2 = /*#__PURE__*/React.createElement("path", {
  fill: "none",
  stroke: "currentColor",
  strokeLinecap: "round",
  d: "M.88 13.77L7.06 1.86c.19-.36.7-.36.89 0l6.18 11.91c.17.33-.07.73-.44.73H1.32c-.37 0-.61-.4-.44-.73zM7.5 6v3.5"
});

var _ref2$1 = /*#__PURE__*/React.createElement("circle", {
  cx: 7.5,
  cy: 12,
  r: 1,
  fill: "currentColor"
});

function SvgAlertWarningStroke(props) {
  return /*#__PURE__*/React.createElement("svg", _extends$2({
    xmlns: "http://www.w3.org/2000/svg",
    width: 16,
    height: 16,
    viewBox: "0 0 16 16",
    focusable: "false",
    role: "presentation"
  }, props), _ref$2, _ref2$1);
}

function _extends$1() { _extends$1 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1.apply(this, arguments); }

var _ref$1 = /*#__PURE__*/React.createElement("g", {
  stroke: "currentColor"
}, /*#__PURE__*/React.createElement("circle", {
  cx: 7.5,
  cy: 8.5,
  r: 7,
  fill: "none"
}), /*#__PURE__*/React.createElement("path", {
  strokeLinecap: "round",
  d: "M7.5 12.5V8"
}));

var _ref2 = /*#__PURE__*/React.createElement("circle", {
  cx: 7.5,
  cy: 5,
  r: 1,
  fill: "currentColor"
});

function SvgInfoStroke(props) {
  return /*#__PURE__*/React.createElement("svg", _extends$1({
    xmlns: "http://www.w3.org/2000/svg",
    width: 16,
    height: 16,
    viewBox: "0 0 16 16",
    focusable: "false",
    role: "presentation"
  }, props), _ref$1, _ref2);
}

var validationIcons = {
  success: SvgCheckCircleStroke,
  error: SvgAlertErrorStroke,
  warning: SvgAlertWarningStroke,
  info: SvgInfoStroke
};
var validationHues = {
  success: 'successHue',
  error: 'dangerHue',
  warning: 'warningHue',
  info: 'neutralHue'
};

var NotificationsContext = createContext(undefined);
var useNotificationsContext = function useNotificationsContext() {
  return useContext(NotificationsContext);
};

var Alert = React__default.forwardRef(function (props, ref) {
  var hue = validationHues[props.type];
  var Icon = validationIcons[props.type];
  return React__default.createElement(NotificationsContext.Provider, {
    value: hue
  }, React__default.createElement(StyledAlert, _extends$5({
    ref: ref,
    hue: hue
  }, props), React__default.createElement(StyledIcon, {
    hue: hue
  }, React__default.createElement(Icon, null)), props.children));
});
Alert.displayName = 'Alert';
Alert.propTypes = {
  type: PropTypes.oneOf(ARRAY_VALIDATION_TYPE).isRequired
};

var Notification = React__default.forwardRef(function (props, ref) {
  var Icon = props.type ? validationIcons[props.type] : SvgInfoStroke;
  var hue = props.type && validationHues[props.type];
  return React__default.createElement(StyledNotification, _extends$5({
    ref: ref,
    type: props.type,
    isFloating: true
  }, props), props.type && React__default.createElement(StyledIcon, {
    hue: hue
  }, React__default.createElement(Icon, null)), props.children);
});
Notification.displayName = 'Notification';
Notification.propTypes = {
  type: PropTypes.oneOf(ARRAY_VALIDATION_TYPE)
};

var Well = React__default.forwardRef(function (props, ref) {
  return React__default.createElement(StyledWell, _extends$5({
    ref: ref
  }, props));
});
Well.displayName = 'Well';
Well.propTypes = {
  isRecessed: PropTypes.bool,
  isFloating: PropTypes.bool
};

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var _ref = /*#__PURE__*/React.createElement("path", {
  stroke: "currentColor",
  strokeLinecap: "round",
  d: "M3 9l6-6m0 6L3 3"
});

function SvgXStroke(props) {
  return /*#__PURE__*/React.createElement("svg", _extends({
    xmlns: "http://www.w3.org/2000/svg",
    width: 12,
    height: 12,
    viewBox: "0 0 12 12",
    focusable: "false",
    role: "presentation"
  }, props), _ref);
}

var Close = React__default.forwardRef(function (props, ref) {
  var hue = useNotificationsContext();
  return React__default.createElement(StyledClose, _extends$5({
    ref: ref,
    hue: hue
  }, props), React__default.createElement(SvgXStroke, null));
});
Close.displayName = 'Close';

var Paragraph = React__default.forwardRef(function (props, ref) {
  return React__default.createElement(StyledParagraph, _extends$5({
    ref: ref
  }, props));
});
Paragraph.displayName = 'Paragraph';

var Title = React__default.forwardRef(function (props, ref) {
  return React__default.createElement(StyledTitle, _extends$5({
    ref: ref
  }, props));
});
Title.displayName = 'Title';

var _excluded$1 = ["content"];
var getInitialState = function getInitialState() {
  return {
    toasts: []
  };
};
var toasterReducer = function toasterReducer(state, action) {
  switch (action.type) {
    case 'ADD_TOAST':
      {
        return _objectSpread2(_objectSpread2({}, state), {}, {
          toasts: [].concat(_toConsumableArray(state.toasts), [action.payload])
        });
      }
    case 'REMOVE_TOAST':
      {
        var filteredToasts = state.toasts.filter(function (toast) {
          return toast.id !== action.payload;
        });
        return _objectSpread2(_objectSpread2({}, state), {}, {
          toasts: filteredToasts
        });
      }
    case 'UPDATE_TOAST':
      {
        var updatedToasts = state.toasts.map(function (toast) {
          if (toast.id !== action.payload.id) {
            return toast;
          }
          var updatedToast = toast;
          var _action$payload$optio = action.payload.options,
              content = _action$payload$optio.content,
              newOptions = _objectWithoutProperties(_action$payload$optio, _excluded$1);
          if (content) {
            updatedToast.content = content;
          }
          updatedToast.options = _objectSpread2(_objectSpread2({}, updatedToast.options), newOptions);
          return updatedToast;
        });
        return _objectSpread2(_objectSpread2({}, state), {}, {
          toasts: updatedToasts
        });
      }
    case 'REMOVE_ALL_TOASTS':
      {
        return _objectSpread2(_objectSpread2({}, state), {}, {
          toasts: []
        });
      }
    default:
      throw new Error('Invalid toaster reducer action');
  }
};

var DEFAULT_TOAST_OPTIONS = {
  autoDismiss: 5000,
  placement: 'top-end'
};
var useToast = function useToast() {
  var context = useContext(ToastContext);
  if (context === undefined) {
    throw new Error('useToast() must be used within a "ToastProvider"');
  }
  var dispatch = context.dispatch,
      state = context.state;
  var addToast = useCallback(function (content) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var mergedOptions = _objectSpread2(_objectSpread2({}, DEFAULT_TOAST_OPTIONS), options);
    var newToast = {
      id: mergedOptions.id || uid(content),
      content: content,
      options: mergedOptions
    };
    dispatch({
      type: 'ADD_TOAST',
      payload: newToast
    });
    return newToast.id;
  }, [dispatch]);
  var removeToast = useCallback(function (id) {
    dispatch({
      type: 'REMOVE_TOAST',
      payload: id
    });
  }, [dispatch]);
  var updateToast = useCallback(function (id, options) {
    dispatch({
      type: 'UPDATE_TOAST',
      payload: {
        id: id,
        options: options
      }
    });
  }, [dispatch]);
  var removeAllToasts = useCallback(function () {
    dispatch({
      type: 'REMOVE_ALL_TOASTS'
    });
  }, [dispatch]);
  return {
    addToast: addToast,
    removeToast: removeToast,
    updateToast: updateToast,
    removeAllToasts: removeAllToasts,
    toasts: state.toasts
  };
};

var Toast = function Toast(_ref) {
  var toast = _ref.toast,
      pauseTimers = _ref.pauseTimers;
  var _useToast = useToast(),
      removeToast = _useToast.removeToast;
  var id = toast.id;
  var autoDismiss = toast.options.autoDismiss;
  var _useState = useState(NaN),
      _useState2 = _slicedToArray(_useState, 2),
      remainingTime = _useState2[0],
      setRemainingTime = _useState2[1];
  var startTimeRef = useRef(Date.now());
  var previousRemainingTimeRef = useRef(remainingTime);
  useEffect(function () {
    if (typeof autoDismiss === 'number') {
      setRemainingTime(autoDismiss);
    } else {
      setRemainingTime(NaN);
    }
  }, [autoDismiss]);
  useEffect(function () {
    if (pauseTimers && !isNaN(remainingTime)) {
      previousRemainingTimeRef.current = remainingTime - (Date.now() - startTimeRef.current);
      setRemainingTime(NaN);
    } else if (!pauseTimers && isNaN(remainingTime) && !isNaN(previousRemainingTimeRef.current)) {
      setRemainingTime(previousRemainingTimeRef.current);
    }
  }, [pauseTimers, remainingTime]);
  useEffect(function () {
    var timeout;
    if (!isNaN(remainingTime)) {
      startTimeRef.current = Date.now();
      timeout = setTimeout(function () {
        removeToast(id);
      }, remainingTime);
    }
    return function () {
      clearTimeout(timeout);
    };
  }, [id, pauseTimers, remainingTime, removeToast]);
  var close = useCallback(function () {
    removeToast(toast.id);
  }, [removeToast, toast.id]);
  return toast.content({
    close: close
  });
};

var TRANSITION_CLASS = 'garden-toast-transition';
var DEFAULT_DURATION = '400ms';
var StyledFadeInTransition = styled.div.withConfig({
  displayName: "styled__StyledFadeInTransition",
  componentId: "sc-nq0usb-0"
})(["transition:opacity ", " ease-in 300ms;opacity:", ";margin-bottom:", "px;", " &.", "-enter{transform:translateY( ", " );opacity:0;max-height:0;}&.", "-enter-active{transform:translateY(0);transition:opacity ", " ease-in,transform ", " cubic-bezier(0.15,0.85,0.35,1.2),max-height ", ";opacity:1;max-height:500px;}&.", "-exit{opacity:1;max-height:500px;}&.", "-exit-active{transition:opacity 550ms ease-out,max-height ", " linear 150ms;opacity:0;max-height:0;}"], DEFAULT_DURATION, function (p) {
  return p.isHidden ? '0 !important' : 1;
}, function (p) {
  return p.theme.space.base * 2;
}, function (p) {
  return p.isHidden && hideVisually();
}, TRANSITION_CLASS, function (props) {
  if (props.placement === 'bottom-start' || props.placement === 'bottom' || props.placement === 'bottom-end') {
    return '100px';
  }
  return '-100px';
}, TRANSITION_CLASS, DEFAULT_DURATION, DEFAULT_DURATION, DEFAULT_DURATION, TRANSITION_CLASS, TRANSITION_CLASS, DEFAULT_DURATION);
StyledFadeInTransition.defaultProps = {
  theme: DEFAULT_THEME
};
var placementStyles = function placementStyles(props) {
  var verticalDistance = "".concat(props.theme.space.base * 16, "px");
  var horizontalDistance = "".concat(props.theme.space.base * 3, "px");
  var topLeftStyles = css(["top:", ";left:", ";"], verticalDistance, horizontalDistance);
  var topStyles = css(["top:", ";left:50%;transform:translate(-50%,0);"], verticalDistance);
  var topRightStyles = css(["top:", ";right:", ";"], verticalDistance, horizontalDistance);
  var bottomLeftStyles = css(["bottom:", ";left:", ";"], verticalDistance, horizontalDistance);
  var bottomStyles = css(["bottom:", ";left:50%;transform:translate(-50%,0);"], verticalDistance);
  var bottomRightStyles = css(["right:", ";bottom:", ";"], horizontalDistance, verticalDistance);
  switch (props.$placement) {
    case 'top-start':
      if (props.theme.rtl) {
        return topRightStyles;
      }
      return topLeftStyles;
    case 'top':
      return topStyles;
    case 'top-end':
      if (props.theme.rtl) {
        return topLeftStyles;
      }
      return topRightStyles;
    case 'bottom-start':
      if (props.theme.rtl) {
        return bottomRightStyles;
      }
      return bottomLeftStyles;
    case 'bottom':
      return bottomStyles;
    case 'bottom-end':
      if (props.theme.rtl) {
        return bottomLeftStyles;
      }
      return bottomRightStyles;
    default:
      return '';
  }
};
var StyledTransitionGroup = styled(TransitionGroup).withConfig({
  displayName: "styled__StyledTransitionGroup",
  componentId: "sc-nq0usb-1"
})(["position:fixed;z-index:", ";", ";"], function (props) {
  return props.$zIndex;
}, placementStyles);
StyledTransitionGroup.defaultProps = {
  theme: DEFAULT_THEME
};

var _excluded = ["toasts", "placement", "zIndex", "limit"];
var ToastSlot = function ToastSlot(_ref) {
  var toasts = _ref.toasts,
      placement = _ref.placement,
      zIndex = _ref.zIndex,
      limit = _ref.limit,
      props = _objectWithoutProperties(_ref, _excluded);
  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      pauseTimers = _useState2[0],
      setPauseTimers = _useState2[1];
  var theme = useContext(ThemeContext);
  var environment = useDocument(theme);
  var handleVisibilityChange = useCallback(function (e) {
    if (e.target.visibilityState === 'visible') {
      setPauseTimers(false);
    } else {
      setPauseTimers(true);
    }
  }, []);
  useEffect(function () {
    if (environment) {
      environment.addEventListener('visibilitychange', handleVisibilityChange);
    }
    return function () {
      if (environment) {
        environment.removeEventListener('visibilitychange', handleVisibilityChange);
      }
    };
  }, [environment, handleVisibilityChange]);
  var handleMouseEnter = useCallback(function () {
    setPauseTimers(true);
  }, []);
  var handleMouseLeave = useCallback(function () {
    setPauseTimers(false);
  }, []);
  var isHidden = useCallback(function (index) {
    if (placement === 'bottom' || placement === 'bottom-start' || placement === 'bottom-end') {
      return index < toasts.length - limit;
    }
    return index >= limit;
  }, [limit, placement, toasts.length]);
  return React__default.createElement(StyledTransitionGroup, _extends$5({
    key: placement,
    $placement: placement,
    $zIndex: zIndex,
    onMouseEnter: handleMouseEnter,
    onMouseLeave: handleMouseLeave
  }, props), toasts.map(function (toast, index) {
    var transitionRef = React__default.createRef();
    return React__default.createElement(CSSTransition, {
      key: toast.id,
      timeout: {
        enter: 400,
        exit: 550
      },
      unmountOnExit: true,
      classNames: TRANSITION_CLASS,
      nodeRef: transitionRef
    }, React__default.createElement(StyledFadeInTransition, {
      ref: transitionRef,
      placement: placement,
      isHidden: isHidden(index)
    }, React__default.createElement(Toast, {
      toast: toast,
      pauseTimers: pauseTimers || isHidden(index)
    })));
  }));
};

var ToastContext = createContext(undefined);
var ToastProvider = function ToastProvider(_ref) {
  var limit = _ref.limit,
      zIndex = _ref.zIndex,
      _ref$placementProps = _ref.placementProps,
      placementProps = _ref$placementProps === void 0 ? {} : _ref$placementProps,
      children = _ref.children;
  var _useReducer = useReducer(toasterReducer, getInitialState()),
      _useReducer2 = _slicedToArray(_useReducer, 2),
      state = _useReducer2[0],
      dispatch = _useReducer2[1];
  var contextValue = useMemo(function () {
    return {
      state: state,
      dispatch: dispatch
    };
  }, [state, dispatch]);
  var toastsByPlacement = useCallback(function (placement) {
    var matchingToasts = state.toasts.filter(function (toast) {
      return toast.options.placement === placement;
    });
    if (placement === 'bottom' || placement === 'bottom-start' || placement === 'bottom-end') {
      matchingToasts = matchingToasts.reverse();
    }
    return React__default.createElement(ToastSlot, _extends$5({
      placement: placement,
      toasts: matchingToasts,
      zIndex: zIndex,
      limit: limit
    }, placementProps[placement]));
  }, [limit, state.toasts, zIndex, placementProps]);
  return React__default.createElement(ToastContext.Provider, {
    value: contextValue
  }, toastsByPlacement('top-start'), toastsByPlacement('top'), toastsByPlacement('top-end'), children, toastsByPlacement('bottom-start'), toastsByPlacement('bottom'), toastsByPlacement('bottom-end'));
};
ToastProvider.displayName = 'ToastProvider';
ToastProvider.defaultProps = {
  limit: 4
};
ToastProvider.propTypes = {
  limit: PropTypes.number,
  zIndex: PropTypes.number
};

export { Alert, Close, Notification, Paragraph, Title, ToastProvider, Well, useToast };
