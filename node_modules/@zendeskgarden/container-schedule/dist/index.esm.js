/**
 * Copyright Zendesk, Inc.
 *
 * Use of this source code is governed under the Apache License, Version 2.0
 * found at http://www.apache.org/licenses/LICENSE-2.0.
 */

import React, { useState, useLayoutEffect } from 'react';
import PropTypes from 'prop-types';

var useSchedule = function useSchedule(_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 1250 : _ref$duration,
      _ref$delayMS = _ref.delayMS,
      delayMS = _ref$delayMS === void 0 ? 750 : _ref$delayMS,
      _ref$loop = _ref.loop,
      loop = _ref$loop === void 0 ? true : _ref$loop;
  var _useState = useState(0),
      elapsed = _useState[0],
      setTime = _useState[1];
  var _useState2 = useState(false),
      delayComplete = _useState2[0],
      setDelayComplete = _useState2[1];
  useLayoutEffect(function () {
    var raf;
    var start;
    var loopTimeout;
    var destroyed = false;
    var tick = function tick() {
      if (destroyed) {
        return;
      }
      raf = requestAnimationFrame(performAnimationFrame);
    };
    var performAnimationFrame = function performAnimationFrame() {
      setTime(Date.now() - start);
      tick();
    };
    var onStart = function onStart() {
      if (destroyed) {
        return;
      }
      loopTimeout = setTimeout(function () {
        cancelAnimationFrame(raf);
        setTime(Date.now() - start);
        if (loop) onStart();
      }, duration);
      start = Date.now();
      setDelayComplete(true);
      tick();
    };
    var renderingDelayTimeout = setTimeout(onStart, delayMS);
    return function () {
      destroyed = true;
      clearTimeout(renderingDelayTimeout);
      clearTimeout(loopTimeout);
      cancelAnimationFrame(raf);
    };
  }, [duration, delayMS, loop]);
  return {
    elapsed: Math.min(1, elapsed / duration),
    delayMS: delayMS,
    delayComplete: delayComplete
  };
};

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}

var _excluded = ["children", "render"];
var ScheduleContainer = function ScheduleContainer(_ref) {
  var children = _ref.children,
      _ref$render = _ref.render,
      render = _ref$render === void 0 ? children : _ref$render,
      props = _objectWithoutPropertiesLoose(_ref, _excluded);
  return React.createElement(React.Fragment, null, render(useSchedule(props)));
};
ScheduleContainer.defaultProps = {
  duration: 1250,
  delayMS: 750,
  loop: true
};
ScheduleContainer.propTypes = {
  children: PropTypes.func,
  render: PropTypes.func,
  duration: PropTypes.number,
  loop: PropTypes.bool,
  delayMS: PropTypes.number
};

export { ScheduleContainer, useSchedule };
