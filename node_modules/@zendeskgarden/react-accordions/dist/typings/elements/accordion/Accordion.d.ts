/**
 * Copyright Zendesk, Inc.
 *
 * Use of this source code is governed under the Apache License, Version 2.0
 * found at http://www.apache.org/licenses/LICENSE-2.0.
 */
import { RefAttributes, HTMLAttributes, PropsWithoutRef, ForwardRefExoticComponent } from 'react';
import { Section } from '../accordion/components/Section';
import { Header } from '../accordion/components/Header';
import { Label } from '../accordion/components/Label';
import { Panel } from '../accordion/components/Panel';
interface IStaticAccordionExport<T, P> extends ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>> {
    Section: typeof Section;
    Header: typeof Header;
    Label: typeof Label;
    Panel: typeof Panel;
}
interface IAccordionProps extends Omit<HTMLAttributes<HTMLDivElement>, 'onChange'> {
    /** Sets `aria-level` heading rank in the document structure */
    level: number;
    /** Sets the expanded sections in a controlled accordion */
    expandedSections?: number[];
    /** Sets the default expanded sections in an uncontrolled accordion */
    defaultExpandedSections?: number[];
    /** Hides section borders */
    isBare?: boolean;
    /** Allows uncontrolled accordion sections to collapse */
    isCollapsible?: boolean;
    /** Applies compact styling */
    isCompact?: boolean;
    /** Animates section expansion and collapse */
    isAnimated?: boolean;
    /** Enables simultaneous expansion of uncontrolled accordion sections */
    isExpandable?: boolean;
    /**
     * Handles accordion expansion changes
     *
     * @param {number} index A section index
     */
    onChange?: (index: number) => void;
}
/**
 * @extends HTMLAttributes<HTMLDivElement>
 */
export declare const Accordion: IStaticAccordionExport<HTMLDivElement, IAccordionProps>;
export {};
