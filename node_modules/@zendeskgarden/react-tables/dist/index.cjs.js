/**
 * Copyright Zendesk, Inc.
 *
 * Use of this source code is governed under the Apache License, Version 2.0
 * found at http://www.apache.org/licenses/LICENSE-2.0.
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var styled = require('styled-components');
var reactTheming = require('@zendeskgarden/react-theming');
var polished = require('polished');
var PropTypes = require('prop-types');
var containerUtilities = require('@zendeskgarden/container-utilities');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () {
            return e[k];
          }
        });
      }
    });
  }
  n['default'] = e;
  return Object.freeze(n);
}

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var React__namespace = /*#__PURE__*/_interopNamespace(React);
var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);
var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);

function _extends$3() {
  _extends$3 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$3.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];

  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;

  var _s, _e;

  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

  return arr2;
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

var COMPONENT_ID$a = 'tables.body';
var StyledBody = styled__default['default'].tbody.attrs({
  'data-garden-id': COMPONENT_ID$a,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledBody",
  componentId: "sc-14ud6y-0"
})(["", ";"], function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$a, props);
});
StyledBody.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$9 = 'tables.caption';
var StyledCaption = styled__default['default'].caption.attrs({
  'data-garden-id': COMPONENT_ID$9,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledCaption",
  componentId: "sc-113y327-0"
})(["display:table-caption;text-align:", ";", ";"], function (props) {
  return props.theme.rtl ? 'right' : 'left';
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$9, props);
});
StyledCaption.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$8 = 'tables.table';
var getLineHeight = function getLineHeight(props) {
  return "".concat(props.theme.space.base * 5, "px");
};
var StyledTable = styled__default['default'].table.attrs({
  'data-garden-id': COMPONENT_ID$8,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledTable",
  componentId: "sc-gje7na-0"
})(["display:table;border:none;width:100%;table-layout:fixed;border-collapse:collapse;border-spacing:0;line-height:", ";color:", ";font-size:", ";direction:", ";", ";"], function (props) {
  return getLineHeight(props);
}, function (props) {
  return props.theme.colors.foreground;
}, function (props) {
  return props.theme.fontSizes.md;
}, function (props) {
  return props.theme.rtl && 'rtl';
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$8, props);
});
StyledTable.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var getRowHeight = function getRowHeight(props) {
  if (props.size === 'large') {
    return "".concat(props.theme.space.base * 16, "px");
  } else if (props.size === 'small') {
    return "".concat(props.theme.space.base * 8, "px");
  }
  return "".concat(props.theme.space.base * 10, "px");
};

var COMPONENT_ID$7 = 'tables.cell';
var truncatedStyling$1 = styled.css(["overflow:hidden;text-overflow:ellipsis;white-space:nowrap;"]);
var sizeStyling = function sizeStyling(props) {
  var boxSizing = 'border-box';
  var padding;
  var width = props.width;
  var height;
  if (props.hasOverflow) {
    boxSizing = 'content-box';
    width = '2em';
    height = 'inherit';
    padding = props.theme.rtl ? "0 0 0 ".concat(props.theme.space.base, "px") : "0 ".concat(props.theme.space.base, "px 0 0");
  } else {
    var paddingVertical = polished.math("(".concat(getRowHeight(props), " - ").concat(getLineHeight(props), ") / 2"));
    var paddingHorizontal = "".concat(props.theme.space.base * 3, "px");
    padding = "".concat(paddingVertical, " ").concat(paddingHorizontal);
  }
  if (props.isMinimum) {
    boxSizing = 'content-box';
    width = '1em';
  }
  return styled.css(["box-sizing:", ";padding:", ";width:", ";height:", ";"], boxSizing, padding, width, height);
};
var StyledCell = styled__default['default'].td.attrs({
  'data-garden-id': COMPONENT_ID$7,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledCell",
  componentId: "sc-8hpncx-0"
})(["display:table-cell;transition:border-color 0.25s ease-in-out,box-shadow 0.1s ease-in-out;", ";", ";", ";"], function (props) {
  return sizeStyling(props);
}, function (props) {
  return props.isTruncated && truncatedStyling$1;
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$7, props);
});
StyledCell.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$6 = 'tables.overflow_button';
var OVERFLOW_BUTTON_SIZE = '2em';
var colorStyles$1 = function colorStyles(props) {
  var boxShadow = props.theme.shadows.md(reactTheming.getColor('primaryHue', 600, props.theme, 0.35));
  var hoverBackgroundColor = reactTheming.getColor('primaryHue', 600, props.theme, 0.08);
  var hoverForegroundColor = reactTheming.getColor('neutralHue', 700, props.theme);
  var activeBackgroundColor = reactTheming.getColor('primaryHue', 600, props.theme, 0.2);
  var activeForegroundColor = reactTheming.getColor('neutralHue', 800, props.theme);
  var foregroundColor;
  if (props.isHovered) {
    foregroundColor = hoverForegroundColor;
  } else if (props.isActive) {
    foregroundColor = activeForegroundColor;
  } else {
    foregroundColor = reactTheming.getColor('neutralHue', 600, props.theme);
  }
  return styled.css(["color:", ";&:hover{background-color:", ";color:", ";}&:active{background-color:", ";color:", ";}&:focus{outline:none;}&[data-garden-focus-visible]{box-shadow:inset ", ";}"], foregroundColor, hoverBackgroundColor, hoverForegroundColor, activeBackgroundColor, activeForegroundColor, boxShadow);
};
var StyledOverflowButton = styled__default['default'].button.attrs({
  'data-garden-id': COMPONENT_ID$6,
  'data-garden-version': '8.47.1',
  type: 'button'
}).withConfig({
  displayName: "StyledOverflowButton",
  componentId: "sc-1eba2ml-0"
})(["display:block;transition:opacity 0.25s ease-in-out,background-color 0.1s ease-in-out;opacity:", ";z-index:", ";margin-top:calc(", " - 1em);border:none;border-radius:50%;background-color:transparent;cursor:pointer;padding:0;width:100%;height:", ";text-decoration:none;font-size:inherit;", " &[aria-expanded='true']{opacity:1;}", ";"], function (props) {
  return props.isHovered || props.isFocused || props.isActive ? '1' : '0';
}, function (props) {
  return props.isActive ? '1' : '0';
}, function (props) {
  return polished.math("".concat(getRowHeight(props), " / 2"));
}, OVERFLOW_BUTTON_SIZE, function (props) {
  return colorStyles$1(props);
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$6, props);
});
StyledOverflowButton.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};
var StyledOverflowButtonIconWrapper = styled__default['default'].div.withConfig({
  displayName: "StyledOverflowButton__StyledOverflowButtonIconWrapper",
  componentId: "sc-1eba2ml-1"
})(["display:flex;align-items:center;justify-content:center;transform:rotate(90deg);transition:opacity 0.25s ease-in-out,background-color 0.1s ease-in-out;width:", ";height:", ";&:hover{opacity:1;}"], OVERFLOW_BUTTON_SIZE, OVERFLOW_BUTTON_SIZE);
StyledOverflowButtonIconWrapper.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$5 = 'tables.row';
var StyledBaseRow = styled__default['default'].tr.withConfig({
  displayName: "StyledRow__StyledBaseRow",
  componentId: "sc-ek66ow-0"
})(["display:table-row;transition:background-color 0.1s ease-in-out;border-bottom:", ";background-color:", ";vertical-align:top;box-sizing:border-box;"], function (props) {
  return "".concat(props.theme.borders.sm, " ").concat(reactTheming.getColor('neutralHue', 200, props.theme));
}, function (props) {
  return props.isStriped && reactTheming.getColor('neutralHue', 100, props.theme);
});
StyledBaseRow.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};
var colorStyles = function colorStyles(props) {
  var boxShadow = "inset ".concat(props.theme.rtl ? '-' : '').concat(props.theme.shadowWidths.md, " 0 0 0 ").concat(reactTheming.getColor('primaryHue', 600, props.theme));
  var hoveredBackgroundColor = reactTheming.getColor('primaryHue', 600, props.theme, 0.08);
  var hoveredBorderColor = reactTheming.getColor('primaryHue', 200, props.theme);
  var selectedBackgroundColor = reactTheming.getColor('primaryHue', 600, props.theme, 0.2);
  var selectedBorderColor = reactTheming.getColor('primaryHue', 300, props.theme);
  var hoveredSelectedBackgroundColor = reactTheming.getColor('primaryHue', 600, props.theme, 0.28);
  var backgroundColor = undefined;
  var borderColor = undefined;
  var hoverBorderBottomColor = undefined;
  var hoverBackgroundColor = undefined;
  if (props.isSelected) {
    if (props.isHovered) {
      backgroundColor = hoveredSelectedBackgroundColor;
    } else {
      backgroundColor = selectedBackgroundColor;
    }
    borderColor = selectedBorderColor;
    hoverBorderBottomColor = selectedBorderColor;
    hoverBackgroundColor = hoveredSelectedBackgroundColor;
  } else if (props.isHovered) {
    backgroundColor = hoveredBackgroundColor;
    borderColor = hoveredBorderColor;
  } else if (!props.isReadOnly) {
    hoverBorderBottomColor = hoveredBorderColor;
    hoverBackgroundColor = hoveredBackgroundColor;
  }
  return styled.css(["border-bottom-color:", ";background-color:", ";&:hover{border-bottom-color:", ";background-color:", ";", "{opacity:1;}}&:focus{outline:none;}", ":first-of-type{box-shadow:", ";&:focus{box-shadow:", ";}}"], borderColor, backgroundColor, hoverBorderBottomColor, hoverBackgroundColor, StyledOverflowButton, StyledCell, props.isFocused && boxShadow, boxShadow);
};
var StyledRow = styled__default['default'](StyledBaseRow).attrs(function (props) {
  return {
    'data-garden-id': COMPONENT_ID$5,
    'data-garden-version': '8.47.1',
    tabIndex: props.isReadOnly ? undefined : -1
  };
}).withConfig({
  displayName: "StyledRow",
  componentId: "sc-ek66ow-1"
})(["height:", ";", " ", ";"], getRowHeight, function (props) {
  return colorStyles(props);
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$5, props);
});
StyledRow.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$4 = 'tables.header_row';
var getHeaderRowHeight = function getHeaderRowHeight(props) {
  if (props.size === 'large') {
    return "".concat(props.theme.space.base * 18, "px");
  } else if (props.size === 'small') {
    return "".concat(props.theme.space.base * 10, "px");
  }
  return "".concat(props.theme.space.base * 12, "px");
};
var StyledHeaderRow = styled__default['default'](StyledBaseRow).attrs({
  'data-garden-id': COMPONENT_ID$4,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledHeaderRow",
  componentId: "sc-16ogvdx-0"
})(["border-bottom-color:", ";height:", ";vertical-align:bottom;font-weight:", ";", "{opacity:1;margin-top:0;margin-bottom:calc(", " - 1em);}", ";"], function (props) {
  return reactTheming.getColor('neutralHue', 300, props.theme);
}, getHeaderRowHeight, function (props) {
  return props.theme.fontWeights.semibold;
}, StyledOverflowButton, function (props) {
  return polished.math("".concat(getHeaderRowHeight(props), " / 2"));
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$4, props);
});
StyledHeaderRow.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$3 = 'tables.head';
var StyledHead = styled__default['default'].thead.attrs({
  'data-garden-id': COMPONENT_ID$3,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledHead",
  componentId: "sc-spf23a-0"
})(["", ";"], function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$3, props);
});
StyledHead.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$2 = 'tables.group_row';
var sizeStyles$1 = function sizeStyles(props) {
  var height = "".concat(props.theme.space.base * 8, "px");
  var lineHeight = getLineHeight(props);
  return styled.css(["height:", ";line-height:", ";font-size:", ";", "{padding:", " ", "px;}"], height, lineHeight, props.theme.fontSizes.sm, StyledCell, polished.math("(".concat(height, " - ").concat(lineHeight, ") / 2")), props.theme.space.base * 3);
};
var StyledGroupRow = styled__default['default'](StyledBaseRow).attrs({
  'data-garden-id': COMPONENT_ID$2,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledGroupRow",
  componentId: "sc-mpd0r8-0"
})(["background-color:", ";", " ", ";"], function (props) {
  return reactTheming.getColor('neutralHue', 100, props.theme);
}, function (props) {
  return sizeStyles$1(props);
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$2, props);
});
StyledGroupRow.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID$1 = 'tables.sortable';
var StyledBaseIconWrapper = styled__default['default'].div.withConfig({
  displayName: "StyledSortableButton__StyledBaseIconWrapper",
  componentId: "sc-2s1dli-0"
})(["display:flex;position:absolute;top:0;", ":0;align-items:center;justify-content:center;opacity:0;width:", ";height:100%;color:inherit;fill:inherit;"], function (props) {
  return props.theme.rtl ? 'left' : 'right';
}, function (props) {
  return props.theme.iconSizes.sm;
});
StyledBaseIconWrapper.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};
var StyledSortableStrokeIconWrapper = styled__default['default'](StyledBaseIconWrapper).withConfig({
  displayName: "StyledSortableButton__StyledSortableStrokeIconWrapper",
  componentId: "sc-2s1dli-1"
})([""]);
StyledSortableStrokeIconWrapper.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};
var StyledSortableFillIconWrapper = styled__default['default'](StyledBaseIconWrapper).withConfig({
  displayName: "StyledSortableButton__StyledSortableFillIconWrapper",
  componentId: "sc-2s1dli-2"
})([""]);
StyledSortableFillIconWrapper.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};
var StyledSortableButton = styled__default['default'].button.attrs({
  'data-garden-id': COMPONENT_ID$1,
  'data-garden-version': '8.47.1',
  type: 'button'
}).withConfig({
  displayName: "StyledSortableButton",
  componentId: "sc-2s1dli-3"
})(["position:relative;border:none;background-color:transparent;cursor:pointer;padding:0;padding-", ":", ";width:", ";text-decoration:none;color:inherit;font-family:inherit;font-size:inherit;font-weight:", ";", "{opacity:", ";}", "{opacity:", ";color:", ";fill:", ";}&:hover,&[data-garden-focus-visible]{text-decoration:none;color:", ";", ";", " ", "}&:focus{outline:none;}", ";"], function (props) {
  return props.theme.rtl ? 'left' : 'right';
}, function (props) {
  return polished.math("".concat(props.theme.space.base, " + ").concat(props.theme.iconSizes.sm));
}, function (props) {
  return props.width;
}, function (props) {
  return props.theme.fontWeights.semibold;
}, StyledSortableStrokeIconWrapper, function (props) {
  return props.sort === undefined && 1;
}, StyledSortableFillIconWrapper, function (props) {
  return props.sort !== undefined && 1;
}, function (props) {
  if (props.sort === 'asc') {
    return reactTheming.getColor('neutralHue', 600, props.theme);
  } else if (props.sort === 'desc') {
    return reactTheming.getColor('neutralHue', 400, props.theme);
  }
  return undefined;
}, function (props) {
  if (props.sort === 'asc') {
    return reactTheming.getColor('neutralHue', 400, props.theme);
  } else if (props.sort === 'desc') {
    return reactTheming.getColor('neutralHue', 600, props.theme);
  }
  return undefined;
}, function (props) {
  return reactTheming.getColor('primaryHue', 600, props.theme);
}, function (props) {
  return props.sort === undefined && "\n      ".concat(StyledSortableFillIconWrapper, " {\n        opacity: 1;\n        color: ").concat(reactTheming.getColor('primaryHue', 600, props.theme), ";\n        fill: ").concat(reactTheming.getColor('primaryHue', 600, props.theme), ";\n      }\n\n      ").concat(StyledSortableStrokeIconWrapper, " {\n        opacity: 0;\n      }\n    ");
}, function (props) {
  return props.sort === 'asc' && "\n      ".concat(StyledSortableFillIconWrapper, " {\n        color: ").concat(reactTheming.getColor('primaryHue', 600, props.theme), ";\n        fill: ").concat(reactTheming.getColor('primaryHue', 600, props.theme, 0.25), ";\n      }\n    ");
}, function (props) {
  return props.sort === 'desc' && "\n      ".concat(StyledSortableFillIconWrapper, " {\n        color: ").concat(reactTheming.getColor('primaryHue', 600, props.theme, 0.25), ";\n        fill: ").concat(reactTheming.getColor('primaryHue', 600, props.theme), ";\n      }\n    ");
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID$1, props);
});
StyledSortableButton.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var COMPONENT_ID = 'tables.header_cell';
var truncatedStyling = styled.css(["", "{max-width:100%;overflow:hidden;text-overflow:ellipsis;}"], StyledSortableButton);
var sizeStyles = function sizeStyles(props) {
  var paddingVertical = undefined;
  if (!props.hasOverflow) {
    paddingVertical = polished.math("(".concat(getRowHeight(props), " - ").concat(getLineHeight(props), ") / 2"));
  }
  return styled.css(["padding-top:", ";padding-bottom:", ";"], paddingVertical, paddingVertical);
};
var StyledHeaderCell = styled__default['default'](StyledCell).attrs({
  as: 'th',
  'data-garden-id': COMPONENT_ID,
  'data-garden-version': '8.47.1'
}).withConfig({
  displayName: "StyledHeaderCell",
  componentId: "sc-fzagoe-0"
})(["text-align:", ";font-weight:inherit;", " ", " ", ";"], function (props) {
  if (!props.hasOverflow) {
    if (props.theme.rtl) {
      return 'right';
    }
    return 'left';
  }
  return undefined;
}, function (props) {
  return sizeStyles(props);
}, function (props) {
  return props.isTruncated && truncatedStyling;
}, function (props) {
  return reactTheming.retrieveComponentStyles(COMPONENT_ID, props);
});
StyledHeaderCell.defaultProps = {
  theme: reactTheming.DEFAULT_THEME
};

var Body = React__default['default'].forwardRef(function (props, ref) {
  return React__default['default'].createElement(StyledBody, _extends$3({
    ref: ref
  }, props));
});
Body.displayName = 'Body';

var Caption = React__default['default'].forwardRef(function (props, ref) {
  return React__default['default'].createElement(StyledCaption, _extends$3({
    ref: ref
  }, props));
});
Caption.displayName = 'Caption';

var TableContext = React__default['default'].createContext({
  size: 'medium',
  isReadOnly: false
});
var useTableContext = function useTableContext() {
  return React.useContext(TableContext);
};

var Cell = React__default['default'].forwardRef(function (props, ref) {
  var _useTableContext = useTableContext(),
      size = _useTableContext.size;
  return React__default['default'].createElement(StyledCell, _extends$3({
    ref: ref,
    size: size
  }, props));
});
Cell.displayName = 'Cell';
Cell.propTypes = {
  isMinimum: PropTypes__default['default'].bool,
  isTruncated: PropTypes__default['default'].bool,
  hasOverflow: PropTypes__default['default'].bool,
  width: PropTypes__default['default'].oneOfType([PropTypes__default['default'].string, PropTypes__default['default'].number])
};

var GroupRow = React__default['default'].forwardRef(function (props, ref) {
  var _useTableContext = useTableContext(),
      size = _useTableContext.size;
  return React__default['default'].createElement(StyledGroupRow, _extends$3({
    ref: ref,
    size: size
  }, props));
});
GroupRow.displayName = 'GroupRow';

var Head = React__default['default'].forwardRef(function (props, ref) {
  return React__default['default'].createElement(StyledHead, _extends$3({
    ref: ref
  }, props));
});
Head.displayName = 'Head';

var HeaderCell = React__default['default'].forwardRef(function (props, ref) {
  var _useTableContext = useTableContext(),
      size = _useTableContext.size;
  return React__default['default'].createElement(StyledHeaderCell, _extends$3({
    ref: ref,
    size: size
  }, props));
});
HeaderCell.displayName = 'HeaderCell';
HeaderCell.propTypes = {
  isMinimum: PropTypes__default['default'].bool,
  isTruncated: PropTypes__default['default'].bool,
  hasOverflow: PropTypes__default['default'].bool,
  width: PropTypes__default['default'].oneOfType([PropTypes__default['default'].string, PropTypes__default['default'].number])
};

var HeaderRow = React__default['default'].forwardRef(function (props, ref) {
  var _useTableContext = useTableContext(),
      size = _useTableContext.size;
  return React__default['default'].createElement(StyledHeaderRow, _extends$3({
    ref: ref,
    size: size
  }, props));
});
HeaderRow.displayName = 'HeaderRow';

function _extends$2() { _extends$2 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2.apply(this, arguments); }

var _ref$2 = /*#__PURE__*/React__namespace.createElement("g", {
  fill: "currentColor"
}, /*#__PURE__*/React__namespace.createElement("circle", {
  cx: 2.5,
  cy: 8,
  r: 1.5
}), /*#__PURE__*/React__namespace.createElement("circle", {
  cx: 8,
  cy: 8,
  r: 1.5
}), /*#__PURE__*/React__namespace.createElement("circle", {
  cx: 13.5,
  cy: 8,
  r: 1.5
}));

function SvgOverflowStroke(props) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$2({
    xmlns: "http://www.w3.org/2000/svg",
    width: 16,
    height: 16,
    viewBox: "0 0 16 16",
    focusable: "false",
    role: "presentation"
  }, props), _ref$2);
}

var _excluded$2 = ["onFocus", "onBlur", "isFocused"];
var OverflowButton = React__default['default'].forwardRef(function (_ref, ref) {
  var onFocus = _ref.onFocus,
      onBlur = _ref.onBlur,
      focused = _ref.isFocused,
      other = _objectWithoutProperties(_ref, _excluded$2);
  var _useState = React.useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      isFocused = _useState2[0],
      setIsFocused = _useState2[1];
  var _useTableContext = useTableContext(),
      size = _useTableContext.size;
  return React__default['default'].createElement(StyledOverflowButton, _extends$3({
    onFocus: containerUtilities.composeEventHandlers(onFocus, function () {
      setIsFocused(true);
    }),
    onBlur: containerUtilities.composeEventHandlers(onBlur, function () {
      setIsFocused(false);
    }),
    size: size,
    isFocused: typeof focused === 'undefined' ? isFocused : focused,
    ref: ref
  }, other), React__default['default'].createElement(StyledOverflowButtonIconWrapper, null, React__default['default'].createElement(SvgOverflowStroke, null)));
});
OverflowButton.displayName = 'OverflowButton';
OverflowButton.propTypes = {
  isHovered: PropTypes__default['default'].bool,
  isActive: PropTypes__default['default'].bool,
  isFocused: PropTypes__default['default'].bool
};

var _excluded$1 = ["onFocus", "onBlur", "isFocused"];
var Row = React__default['default'].forwardRef(function (_ref, ref) {
  var onFocus = _ref.onFocus,
      onBlur = _ref.onBlur,
      focused = _ref.isFocused,
      otherProps = _objectWithoutProperties(_ref, _excluded$1);
  var _useState = React.useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      isFocused = _useState2[0],
      setIsFocused = _useState2[1];
  var _useTableContext = useTableContext(),
      size = _useTableContext.size,
      isReadOnly = _useTableContext.isReadOnly;
  var computedFocused = React.useMemo(function () {
    if (typeof focused !== 'undefined') {
      return focused;
    }
    if (isReadOnly) {
      return false;
    }
    return isFocused;
  }, [focused, isFocused, isReadOnly]);
  return React__default['default'].createElement(StyledRow, _extends$3({
    onFocus: containerUtilities.composeEventHandlers(onFocus, function () {
      setIsFocused(true);
    }),
    onBlur: containerUtilities.composeEventHandlers(onBlur, function () {
      setIsFocused(false);
    }),
    size: size,
    isReadOnly: isReadOnly,
    isFocused: computedFocused,
    ref: ref
  }, otherProps));
});
Row.displayName = 'Row';
Row.propTypes = {
  isStriped: PropTypes__default['default'].bool,
  isFocused: PropTypes__default['default'].bool,
  isHovered: PropTypes__default['default'].bool,
  isSelected: PropTypes__default['default'].bool
};

function _extends$1() { _extends$1 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1.apply(this, arguments); }

var _ref$1 = /*#__PURE__*/React__namespace.createElement("path", {
  fill: "none",
  stroke: "currentColor",
  strokeLinecap: "round",
  d: "M2.5 4L5.6.9c.2-.2.5-.2.7 0L9.5 4m-7 4l3.1 3.1c.2.2.5.2.7 0L9.5 8"
});

function SvgSortStroke(props) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$1({
    xmlns: "http://www.w3.org/2000/svg",
    width: 12,
    height: 12,
    viewBox: "0 0 12 12",
    focusable: "false",
    role: "presentation"
  }, props), _ref$1);
}

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var _ref = /*#__PURE__*/React__namespace.createElement("path", {
  fill: "currentColor",
  d: "M10 5H2a.5.5 0 01-.46-.31.47.47 0 01.11-.54L5.29.5A1 1 0 016.7.5l3.65 3.65a.49.49 0 01.11.54A.51.51 0 0110 5z"
});

var _ref2 = /*#__PURE__*/React__namespace.createElement("path", {
  d: "M2 7a.5.5 0 00-.46.31.47.47 0 00.11.54L5.3 11.5a1 1 0 001.41 0l3.65-3.65a.49.49 0 00.11-.54A.53.53 0 0010 7z"
});

function SvgSortFill(props) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends({
    xmlns: "http://www.w3.org/2000/svg",
    width: 12,
    height: 12,
    viewBox: "0 0 12 12",
    focusable: "false",
    role: "presentation"
  }, props), _ref, _ref2);
}

var _excluded = ["sort", "cellProps", "width", "children"];
var SortableCell = React__default['default'].forwardRef(function (_ref, ref) {
  var sort = _ref.sort,
      cellProps = _ref.cellProps,
      width = _ref.width,
      children = _ref.children,
      otherProps = _objectWithoutProperties(_ref, _excluded);
  var ariaSortValue = 'none';
  if (sort === 'asc') {
    ariaSortValue = 'ascending';
  } else if (sort === 'desc') {
    ariaSortValue = 'descending';
  }
  var SortIcon = sort === undefined ? SvgSortStroke : SvgSortFill;
  return React__default['default'].createElement(StyledHeaderCell, _extends$3({
    "aria-sort": ariaSortValue,
    width: width
  }, cellProps), React__default['default'].createElement(StyledSortableButton, _extends$3({
    sort: sort,
    ref: ref
  }, otherProps), children, React__default['default'].createElement(StyledSortableStrokeIconWrapper, null, React__default['default'].createElement(SortIcon, null)), React__default['default'].createElement(StyledSortableFillIconWrapper, null, React__default['default'].createElement(SvgSortFill, null))));
});
SortableCell.displayName = 'SortableCell';
SortableCell.propTypes = {
  sort: PropTypes__default['default'].oneOf(['asc', 'desc']),
  cellProps: PropTypes__default['default'].any,
  width: PropTypes__default['default'].oneOfType([PropTypes__default['default'].string, PropTypes__default['default'].number])
};

var Table = React__default['default'].forwardRef(function (props, ref) {
  var tableContextValue = React.useMemo(function () {
    return {
      size: props.size,
      isReadOnly: props.isReadOnly
    };
  }, [props.size, props.isReadOnly]);
  return React__default['default'].createElement(TableContext.Provider, {
    value: tableContextValue
  }, React__default['default'].createElement(StyledTable, _extends$3({
    ref: ref
  }, props)));
});
Table.displayName = 'Table';
Table.defaultProps = {
  size: 'medium'
};
Table.propTypes = {
  size: PropTypes__default['default'].oneOf(['small', 'medium', 'large'])
};

exports.Body = Body;
exports.Caption = Caption;
exports.Cell = Cell;
exports.GroupRow = GroupRow;
exports.Head = Head;
exports.HeaderCell = HeaderCell;
exports.HeaderRow = HeaderRow;
exports.OverflowButton = OverflowButton;
exports.Row = Row;
exports.SortableCell = SortableCell;
exports.Table = Table;
