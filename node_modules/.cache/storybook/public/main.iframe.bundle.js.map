{"version":3,"file":"main.iframe.bundle.js","mappings":"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;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAWA;AAAA;AAAA;AAKA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AAEA;AAUA;AACA;AACA;AACA;AACA;;AAgBA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAAA;AAQA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA;AAAA;AAAA;;AACA;AAAA;;AACA;;AAGA;AAEA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AASA;AAEA;AAAA;;AACA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAKA;AAGA;AAEA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AASA;AACA;AAEA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAQA;AAAA;AAGA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAQA;AAAA;AAGA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAmBA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAgBA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AADA;AAIA;AAEA;AACA;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtFA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAKA;AACA;AAEA;AA4BA;;AAEA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAwBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AACA;AAoBA;;AAWA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAaA;AAAA;AACA;AAAA;AA8BA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;AC1RA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAQA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAOA;AAAA;AAAA;;AAAA;AAEA;AAEA;AAAA;AAEA;AAAA;AAJA;AAFA;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAOA;AACA;AACA;;AACA;AAEA;AAAA;AAAA;;AAEA;AAEA;AACA;;AAEA;AACA;AACA;AAAA;AAIA;;AAEA;AAQA;AAEA;AACA;AAAA;AAAA;AAIA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAQA;AAAA;AACA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;AAmBA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AAAA;AAKA;AACA;AADA;;;;;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ACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAAA;AAAA;;AAAA;AAIA;AAAA;AAJA;;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAUA;AACA;AACA;AACA;AAEA;AAAA;;AAAA;AACA;AAAA;AAAA;AADA;AAIA;AAEA;AAEA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAUA;AACA;AACA;AACA;AAGA;AAAA;;AAAA;AACA;AAAA;AAAA;AADA;AAKA;AAEA;AAEA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAHA;;AAMA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;AACA;AAGA;AACA;;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;AAIA;AACA;AAuBA;AACA;AA0BA;AACA;AAEA;AACA;AACA;AAEA;AAgDA;;AAEA;AACA;AAEA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAEA;AAqDA;;AAEA;AACA;AAEA;AAMA;;AAEA;AACA;;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA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AAA;AACA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAMA;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AA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AAEA;;AAWA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;AAhBA;AAkBA;AAEA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AAAA;AAEA;AAAA;AAQA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AAIA;AAEA;AACA;AACA;AACA;;;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAkBA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAUA;AACA;AADA;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;;AAEA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;AAhBA;AAkBA;;AAEA;AACA;AACA;AAEA;AAIA;;AAQA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AASA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AAEA;AAIA;;AASA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AASA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AAkBA;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAKA;AAAA;AAGA;AAAA;AACA;AAAA;AAYA;AAAA;AAEA;AAAA;AAQA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;ACvGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AAEA;AASA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAOA;AAAA;AAKA;AAAA;AACA;AAAA;AAEA;AAAA;AAaA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AASA;AAIA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAMA;AAAA;AACA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAMA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AAEA;AACA;AACA;AAEA;AAwBA;;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAYA;AAAA;AACA;AAAA;AAcA;AAAA;AAMA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;ACrFA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAOA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAOA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAMA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AASA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAQA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AAIA;;AAQA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAMA;AAAA;AAEA;AAAA;AAEA;AAAA;AAMA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AAkBA;;AAQA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAUA;AAAA;AAEA;AAAA;AAGA;AAAA;AACA;AAAA;AAiBA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAMA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAGA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;;AACA;AAGA;AAAA;AAAA;;AAAA;AACA;AAAA;AADA;AAGA;;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AADA;AAIA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AAGA;AAAA;AAKA;AACA;AACA;;AAEA;AACA;AAIA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKA;AAEA;;AAUA;AACA;AACA;AACA;AAEA;AAIA;;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAMA;AAAA;AAEA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAMA;AAMA;;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AASA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AADA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AAEA;AAQA;AACA;AADA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AASA;AAKA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AADA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAMA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AAEA;AAUA;AAEA;AAEA;AACA;AACA;;AAsCA;AACA;AACA;AACA;AA+BA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAEA;AAKA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AAGA;AAAA;AAAA;AAAA;;AAGA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AAEA;;AAEA;AAMA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AAFA;AAMA;AACA;AACA;AACA;AAJA;AAQA;AADA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AAxBA;AA8BA;AAGA;AACA;AAeA;AACA;AACA;AACA;AAnBA;AAsBA;AACA;AACA;AACA;AACA;AAAA;;AAJA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzRA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAwCA;AACA;AACA;AACA;AACA;AAAA;;AACA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;;AASA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;;AACA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AA5BA;AAkCA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9GA;AACA;AACA;AACA;AACA;AACA;AAEA;AAUA;AAEA;AAEA;AACA;AAEA;;AA0DA;AACA;AACA;AACA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AAIA;AACA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AAFA;AAMA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAaA;AAGA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AA0BA;AACA;AACA;AACA;AACA;AAAA;;AAJA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/OA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AASA;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;;AACA;AACA;AACA;;AAGA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;;;AAGA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAFA;AAMA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3GA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AACA;AACA;AACA;AAaA;;AA+BA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AAIA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAUA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAeA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AARA;AAYA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAYA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAYA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAaA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAcA;AAGA;AACA;AADA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClRA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAuBA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;AAWA;AACA;AACA;;AAEA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAEA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAPA;AAFA;AAYA;;AACA;AAAA;AACA;;AACA;AACA;AACA;AACA;AAHA;;AAKA;;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AANA;AAFA;AAWA;;AACA;AAAA;AACA;AAEA;AAEA;AAFA;AAFA;AAOA;;AACA;AAAA;AACA;;AAEA;AACA;;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;;AAEA;AAEA;AACA;AAHA;AAKA;;AACA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AANA;AAQA;;AAEA;AAEA;AACA;AAHA;AAKA;;AACA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AANA;AAQA;;AAEA;AAEA;AACA;AAHA;AAKA;;AACA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AANA;AAQA;;AAEA;AAEA;AACA;AAHA;AAKA;;AACA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAEA;AAFA;AAIA;;AAEA;AAEA;AACA;AAHA;AAKA;;AACA;AAAA;AACA;AACA;;AACA;AACA;AA3MA;AA6MA;;;;;;;;;;;;;;;;;ACvTA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAMA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAQA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;;AAMA;AACA;AAAA;;AACA;AAAA;;AACA;;AAEA;AACA;AACA;;AAEA;AAGA;AAEA;;;AACA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAGA;AACA;AAFA;AAFA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAAA;AADA;AAAA;AAAA;AAUA;AAAA;AAIA;AAAA;AAIA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;;AAMA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;AAEA;AACA;;AAEA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAMA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAQA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;;AAEA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AADA;;;;;;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAMA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAOA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAKA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAOA;AACA;AACA;AACA;AAEA;AAOA;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAEA;AAAA;AAOA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAOA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAMA;AAAA;AAUA;AAAA;AACA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAOA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAOA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAQA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;;AAMA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AAEA;AAKA;;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAQA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAMA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAMA;AAAA;AAWA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAMA;;AAEA;AAAA;AACA;AAaA;;AAEA;AAAA;AACA;AAaA;;AAEA;AAAA;AACA;AASA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAwCA;;AAEA;AAAA;AAAA;;AAGA;AAAA;AAAA;AAGA;AAAA;AAAA;AAIA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAqBA;;AAEA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAaA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;ACtLA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAKA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AAAA;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAIA;;AAEA;AAMA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AAHA;AAKA;AASA;AAMA;AACA;AAAA;AAAA;;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;;AAEA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;;AACA;AAAA;AACA;AAAA;AADA;;AAGA;AACA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;;AACA;AAAA;AACA;AAAA;AADA;;AAGA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AAEA;AAQA;AACA;AACA;AACA;AACA;AACA;AAoDA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;;AAWA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;;AAKA;AAKA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AAFA;;AAKA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;AA4BA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzLA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA;AAEA;AACA;AACA;AAHA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAeA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;;AAEA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAIA;AAEA;AAAA;AAAA;AAEA;AACA;AAIA;AAEA;AACA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AAIA;AAEA;AAAA;AAAA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAWA;;AAGA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AAIA;AAEA;AACA;AADA;AAIA;AACA;AAIA;AAEA;AACA;AADA;AAIA;AACA;AAIA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAIA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAWA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AAIA;AACA;AAGA;;AAEA;AAEA;AAKA;;AAGA;AACA;AACA;AAEA;;AAEA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AA2BA;AAEA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AAPA;AASA;AAAA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AARA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AARA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AALA;AAYA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9SA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;;AAEA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAIA;AAEA;AAAA;AAAA;AAEA;AACA;AAIA;AAEA;AACA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AAIA;AAEA;AAAA;AAAA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAYA;AACA;AACA;AACA;AAQA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;;AACA;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAgBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AACA;AAAA;AACA;;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;;AACA;AAAA;AACA;;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;;AACA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAJA;AAMA;;AACA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAHA;AAKA;;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;AAEA;;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AAJA;AAMA;;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;AAEA;;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AAJA;AAMA;;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;AAEA;;AACA;AAAA;AACA;AAAA;AAAA;AACA;;AACA;AAAA;AACA;AAAA;AAAA;AACA;;AACA;AACA;AAAA;AAAA;;AACA;AAAA;AACA;;AAEA;AAAA;AAAA;AAAA;AACA;;AACA;AAAA;AACA;;AAEA;AAAA;AAAA;AAAA;AACA;;AACA;;AACA;AACA;AAtLA;AAwLA;AAxMA;AA0MA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;;;;;;;;;;;;;;;;ACzUA;AACA;AACA;AACA;AACA;AACA;AAEA;AAiBA;AAEA;AACA;AACA;;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AACA;AACA;AAEA;AACA;AAMA;AACA;AACA;AACA;AAsEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAGA;;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AATA;AAWA;AAKA;AAGA;AACA;AAFA;AAIA;AAJA;AAMA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAcA;AACA;AACA;AACA;AACA;AALA;AAWA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAeA;AACA;AACA;AACA;AA5BA;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9SA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;;AAUA;AAMA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAIA;AAEA;AACA;AADA;AAIA;AACA;AAIA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAqBA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AAAA;AAMA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5IA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAOA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AAIA;AACA;AAAA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AAPA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AADA;AAGA;AACA;AAPA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAKA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAQA;AACA;AACA;AACA;AAMA;AAAA;;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;;AACA;AAQA;AAAA;AAAA;;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAHA;AAKA;;AAYA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AACA;;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;;AACA;AAAA;AACA;;AAEA;AAAA;AAAA;AACA;;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AACA;;AACA;AAAA;AACA;;AACA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AACA;;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AACA;;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AACA;;AACA;;AACA;AACA;AAlDA;AAoDA;AAlEA;AAoEA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;;AAEA;AACA;AACA;AACA;AAHA;AAKA;;;;;;;;;;;;;;;;;;;;;;;AChMA;AACA;AACA;AACA;AACA;AACA;;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;AAdA;AAgBA;AAEA;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;AAtBA;AAwBA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACjGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAQA;AAEA;AACA;AACA;;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAMA;AACA;AADA;AAAA;AAAA;AAAA;AAGA;AAAA;AAGA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAGA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAIA;AAMA;AACA;AADA;AAAA;AAAA;AAAA;AASA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AAEA;AAGA;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAMA;AACA;AADA;AAAA;AAAA;AAAA;AAGA;AAAA;AAIA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAUA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAkBA;;AAEA;AAEA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAGA;AAAA;AACA;AAAA;AAKA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AADA;AAAA;AAAA;AAAA;AAQA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AADA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AADA;AAAA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AAGA;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AAIA;;AAEA;AAAA;AACA;AAaA;;AAEA;AAEA;AACA;AADA;AAAA;AAAA;AAAA;AASA;AAAA;AACA;AAAA;AAIA;AAAA;AAKA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AAEA;AAIA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AAGA;AAAA;;AACA;AACA;AAGA;;AAEA;AACA;;AAQA;AACA;AADA;AAAA;AAAA;AAAA;AAaA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AASA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AADA;AAAA;AAAA;AAAA;AASA;AAAA;AAMA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjDA;AAoDA;AACA;AACA;;AACA;AACA;AACA;AACA;AAEA;;;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3GA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAMA;AAsBA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AAEA;AACA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAxBA;AA0BA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAMA;AAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAnBA;AAuBA;AACA;AAHA;AAzCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AASA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAgBA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAMA;AAAA;AAxBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AADA;AAFA;AAQA;AAAA;AAAA;AAnBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AAwBA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;;AAOA;AACA;AACA;AAAA;;AAUA;AACA;;AAOA;AACA;;AAOA;AACA;AAtCA;AAuDA;;AAOA;AAAA;AAAA;AAAA;;AAAA;AAEA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAJA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAMA;AAEA;AAsBA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AAEA;AACA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAxBA;AA4BA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAHA;AAMA;AAAA;AAAA;AATA;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5GA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAmBA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAlBA;AAoBA;AAAA;AAtCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAVA;AAaA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAnCA;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7EA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAmBA;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA;AAAA;;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AACA;AAZA;AADA;AAAA;;AAkBA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;;AAGA;;AAGA;AACA;AAjBA;AAqBA;AACA;AACA;AAHA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAoBA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAzDA;AAiEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAuBA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AApBA;AAuBA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;;AACA;AACA;AACA;;AAGA;;AAGA;AACA;;AAEA;AAGA;AACA;AACA;AAJA;AAOA;AAGA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpJA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AA4CA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAAA;;AACA;;AAGA;;AAGA;AAEA;AACA;AACA;;AACA;AAIA;AAAA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAMA;AACA;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAxCA;AA2CA;;AAEA;AAAA;AAAA;AAAA;;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;;AAEA;AAGA;AADA;AAEA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;AAEA;;AACA;AACA;AARA;AAUA;AA1EA;AA6EA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAFA;AADA;AAuBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9PA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AAAA;;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;;AACA;AAAA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AACA;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AACA;;AAEA;AAAA;AAAA;AACA;AAEA;;AAGA;AACA;AACA;AACA;AAEA;AAIA;AAAA;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAIA;AAJA;AAMA;AAAA;AAAA;AAAA;AACA;AAEA;;AAGA;AAKA;AACA;AADA;AAIA;;AAEA;AACA;AACA;AACA;AAHA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AAHA;AAUA;AArDA;AAyDA;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAeA;AACA;AACA;AACA;AA3BA;AA8BA;AACA;AACA;AACA;AACA;AACA;AALA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpNA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;AACA;AACA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;;AAuCA;AACA;AACA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA;AAAA;;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;;AASA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AACA;AA5BA;AADA;AAAA;;AAkCA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArCA;AAuCA;AAxCA;AA2CA;AAEA;AAAA;AAAA;AACA;AAcA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AADA;AAKA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAWA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAYA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;;AAGA;AACA;AAVA;AAeA;AACA;AACA;AAHA;AAQA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAMA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzCA;AA+CA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAnFA;AA2FA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9bA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAEA;AACA;;AAEA;AAIA;AACA;AACA;;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAGA;AAKA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AAEA;;AAMA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAYA;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;;AASA;AACA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAGA;;AACA;AACA;AAdA;AAkBA;AACA;AACA;AAHA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAgBA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAnDA;AA4DA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7QA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAOA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA;AACA;AACA;;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAGA;AAKA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AAEA;;AAMA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAWA;AAAA;;AACA;AACA;AAAA;AAAA;;AAEA;AAEA;AACA;AACA;AACA;AALA;;AAUA;AAEA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;;;AAEA;AAEA;AACA;AACA;AACA;AACA;;AACA;AAGA;AACA;;AAGA;;AAGA;AACA;AAEA;;AAEA;AAEA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAJA;AAsBA;;AAEA;AACA;AACA;AAFA;AAKA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3PA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAUA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;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;;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAeA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAKA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AASA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;AAdA;AAgBA;AAEA;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;AAtBA;AAwBA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAgBA;AACA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;AC7HA;AACA;AACA;AACA;AACA;AACA;AAEA;AAmBA;AAEA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AAEA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AA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;;AACA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAaA;AAEA;AAWA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AAEA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAIA;AAEA;AAAA;AAAA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;;AAUA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAMA;AAAA;AAIA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAFA;AAgBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5JA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAYA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AADA;;AAMA;AACA;AACA;;AAEA;AACA;AAAA;AAKA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AACA;AACA;;AAWA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AA2BA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AATA;AAYA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAWA;AACA;AACA;AACA;AACA;AAAA;;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAHA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAcA;AACA;AACA;AACA;AACA;AAAA;;AACA;AACA;AAEA;AAEA;AACA;;AAGA;AACA;AACA;AAFA;;AAMA;AACA;AAEA;AACA;AAHA;AAKA;;AAEA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAsBA;AACA;AACA;AACA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AAJA;;AAQA;;AAEA;AACA;AAAA;AAAA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAiBA;AAjBA;AAqBA;AACA;AACA;AAHA;AAWA;AACA;AACA;AAHA;AAUA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/JA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AACA;AACA;AACA;AACA;AACA;AAMA;;AAyBA;AACA;AACA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAIA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAIA;AACA;AACA;;AACA;AACA;AAAA;AAAA;;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAIA;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AACA;AAIA;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AACA;AAIA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AACA;;AAEA;;AAIA;AACA;AAIA;AACA;AACA;;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AAEA;AACA;AACA;;AAEA;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAjDA;;AAoDA;AACA;AACA;AACA;AACA;AA5EA;;;AA+EA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAHA;AAOA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AA3BA;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAnBA;AAyBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AALA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpcA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAOA;AACA;AACA;AACA;AACA;AAAA;;AACA;AACA;;AAEA;AACA;AADA;;AAMA;AACA;AACA;;AAEA;AACA;AAAA;AAKA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AAEA;AAQA;AACA;AACA;AACA;;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AAEA;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AAIA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AARA;;AAWA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAcA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AACA;;AAEA;AACA;AACA;AACA;AAHA;;AAOA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAMA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAQA;AACA;AACA;AACA;AACA;AACA;;AAoBA;AACA;AACA;AAEA;AACA;AACA;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;;AAKA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAIA;AAEA;AACA;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAFA;AAIA;;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;;AAYA;AACA;AAAA;AAAA;AACA;;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAcA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChNA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAOA;AACA;AACA;AACA;AACA;AAAA;;AACA;AACA;;AAEA;AACA;AADA;;AAMA;AACA;AACA;;AAEA;AACA;AAAA;AAKA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAYA;AACA;AAAA;AACA;AAAA;AAGA;AAEA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AAEA;AAQA;AACA;AACA;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAAA;AAMA;AACA;AAAA;AACA;AAAA;AAGA;AACA;;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAEA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;;AAEA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAEA;AAAA;AAAA;AAAA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAHA;AAOA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AASA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAYA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AAwBA;AAEA;AAEA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAkBA;;AAEA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAYA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAKA;AAAA;AAMA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAMA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAMA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAOA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAMA;;AAOA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAOA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAOA;AACA;;AAMA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAKA;;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAIA;AAAA;AAIA;AAAA;AACA;AAAA;AAEA;AAAA;AAKA;AAAA;AAMA;AAAA;AAGA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AAAA;AAAA;AAAA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AAMA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAMA;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAIA;AASA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AAmBA;;AAQA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAmCA;AAAA;AASA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;ACrIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAWA;AAAA;AAUA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAGA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAGA;AACA;AAFA;AAFA;AAAA;AAAA;AAOA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAQA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAMA;AAAA;AAGA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAMA;AACA;AACA;AAEA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AA2BA;;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAgBA;;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAQA;AAAA;AAOA;AAAA;AACA;AAAA;AAiBA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;AC9HA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAkCA;AAEA;AACA;AACA;;;AACA;AACA;AAEA;AAgDA;;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAWA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;ACzIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AA+CA;;AAEA;AACA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAoBA;;AAMA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAWA;AAAA;AAOA;AAAA;AAWA;AAAA;AAcA;AAAA;AAMA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;AC3KA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AAAA;;AACA;AACA;AAEA;AAUA;AAEA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAUA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAWA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAAA;AACA;AAaA;;AAEA;AAAA;AACA;AAaA;;AAEA;AAAA;AACA;AASA;;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AAIA;AAiEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AA6BA;;AAOA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAQA;AAAA;AAiBA;AAAA;AAEA;AAAA;AASA;AAAA;AAkBA;AAAA;AAGA;AACA;AACA;AACA;AAHA;;;;;;;;;;;;;;;;;;;;;ACxQA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAaA;AAAA;AAIA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAOA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AA2BA;;AAEA;AACA;AACA;AAEA;AAKA;;AAEA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAOA;AAAA;AAMA;AAAA;AAMA;AAAA;AAEA;AAAA;AAGA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;AC3GA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAQA;AACA;AACA;AACA;AACA;AAEA;AAQA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;;AAEA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAEA;AAAA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AAHA;;;;;;;;;;;;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AAEA;AAKA;;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAMA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AAEA;;AACA;AAOA;;AAEA;AACA;AACA;AACA;AAEA;AASA;AAEA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAQA;AAAA;AACA;AAAA;AAaA;AAAA;AAUA;AACA;AADA;;;;;;;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AASA;AACA;AADA;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAFA;AAAA;AAAA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAIA;AAAA;AAGA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAOA;AACA;AACA;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAmCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAGA;AAGA;AACA;AAIA;AAmDA;;AAWA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AACA;AAAA;AACA;AAAA;AAOA;AAAA;AAUA;AAAA;AAKA;AAAA;AAeA;AAAA;AAuBA;AAAA;AAOA;AAAA;AAMA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrSA;AACA;AACA;AACA;AACA;AACA;AAE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A;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;AAAA;AADA;AAIA;AADA;AAIA;AADA;AAIA;AADA;AAIA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAQA;AACA;;AA+EA;AACA;AACA;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrHA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAWA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAGA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAQA;AACA;;AAkDA;AACA;AACA;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/EA;AACA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A;AACA;AAGA;;AAEA;AAGA;;AAUA;AAAA;;AACA;AACA;AAIA;;AAEA;AAIA;;AAEA;AAGA;AAAA;AACA;AACA;AAUA;;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAeA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;AC3HA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAQA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AADA;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AACA;AAgCA;AAwBA;;;;;;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBA;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAeA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAEA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAKA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AASA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAeA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAFA;AA7BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAaA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;AAEA;AAEA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AAAA;AAHA;AAkBA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAMA;AAAA;AARA;AAkBA;;;;;;;;;;;;;;;;AC/FA;AACA;AACA;AACA;AACA;AACA;AAIA;AAoBA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;;;;;;;;;;;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAEA;AAAA;;AAEA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAIA;AAAA;;AAEA;AACA;AAAA;AAIA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAEA;AAAA;;AAEA;AACA;AAAA;AAIA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAIA;AAAA;;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AAEA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;;AA4CA;AACA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAAA;AAAA;AAAA;AAAA;;AAUA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAAA;;AAQA;AACA;AACA;;AAEA;AACA;AAAA;AACA;AAFA;AAIA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAOA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzLA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAEA;AAAA;;AAEA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAEA;AAAA;;AAEA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;AACA;AACA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAIA;AAAA;;AAEA;AACA;AAAA;AAKA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AAEA;AAEA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;;AA2CA;AACA;AACA;AACA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AALA;AADA;AAAA;AAAA;AAAA;AAAA;;AASA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAAA;;AASA;AACA;AACA;;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAJA;AAcA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1NA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAEA;AAAA;;AAEA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAIA;AAAA;;AAEA;AACA;AAAA;AAIA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAEA;AAAA;;AAEA;AACA;AAAA;AAIA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AAEA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAOA;AACA;AACA;;AA4DA;AACA;AACA;AACA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAAA;;AACA;AAEA;AACA;AACA;AACA;;AACA;AACA;AANA;AADA;AAAA;AAAA;AAAA;AAAA;;AAUA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AAAA;;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;;AAQA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AASA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAKA;AAGA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAOA;AAUA;AACA;AACA;;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAUA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AAAA;AAGA;AACA;AADA;AAIA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAMA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAMA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AAEA;AACA;AACA;AAEA;AAwBA;AAEA;AACA;AACA;;;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAWA;AAAA;AACA;AAAA;AAcA;AAAA;AAMA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAOA;AAAA;AAIA;AAAA;AAKA;AAAA;AACA;AAAA;AAGA;AAAA;AASA;AAAA;AAQA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAMA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAQA;AAAA;AAEA;AAAA;AAOA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAMA;AAAA;AAIA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAOA;AASA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAKA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAQA;;AAeA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AAEA;AAMA;AAEA;AACA;AACA;;;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAOA;AAAA;AASA;AAAA;AAEA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AAFA;AAKA;AACA;AADA;;;;;;;;;;;;;;;;;;;AC7GA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAYA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAIA;AACA;AACA;AACA;AAHA;;AAMA;AACA;AACA;;AAEA;AACA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAYA;AAAA;AACA;AAAA;AAWA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAMA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAQA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAMA;;AAEA;AAAA;AAAA;;AAOA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AASA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AADA;AAcA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAgBA;AACA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA;AAEA;AACA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrGA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AAEA;AAQA;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AASA;AAAA;AAEA;AAAA;AAXA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AASA;AAAA;AAEA;AAAA;AAXA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAQA;AAAA;AAAA;AARA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAQA;AAaA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AAAA;AAAA;AAIA;AAAA;AAAA;AAJA;;AAQA;AACA;;AAEA;AAEA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAQA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAJA;AAaA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1HA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEA;AAAA;AAFA;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAOA;AAEA;AAEA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAQA;AAEA;AAEA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AASA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAIA;AAEA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;AACA;AAGA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAOA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAOA;AAAA;AAAA;;AACA;AAAA;;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAQA;AAEA;AAOA;AAEA;AAmBA;AAKA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;;AAEA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AAJA;AAQA;AAIA;AACA;AAAA;AAUA;AAEA;AAEA;AACA;AADA;AAIA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/FA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AASA;AAMA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAIA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxGA;AACA;AACA;AACA;AACA;AACA;AA2CA;AACA;AACA;AADA;AAGA;AAEA;AAIA;AACA;AAAA;AACA;AAEA;AAFA;AAIA;;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AAFA;AAIA;;AACA;AAAA;AACA;AACA;AACA;AACA;;AAEA;;AACA;AAAA;AAAA;;AAEA;AACA;AACA;;AAEA;AAKA;AACA;AAEA;AAEA;AAFA;AAIA;;AACA;AAAA;AACA;AAEA;AAFA;AAIA;;AACA;;AACA;AACA;AAjDA;AAmDA;;;;;;;;;;;;;;;;;;;;AC7GA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AAMA;AAKA;AACA;;AAEA;AACA;AAiCA;AACA;AADA;;AASA;AACA;AACA;AAEA;AAKA;AAMA;AAKA;AAKA;AAMA;;AAKA;AACA;AACA;AACA;AACA;;AAEA;;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;;AACA;AACA;AACA;AACA;;AAEA;;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;;AACA;;AACA;AACA;AA/BA;AAiCA;;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAKA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;AC7JA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAKA;AACA;;AAEA;AACA;AACA;;AAEA;AAAA;AAEA;AACA;;AACA;;AAEA;AACA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AAAA;AAEA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAMA;AAAA;AAAA;AAMA;AACA;AACA;;;AACA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AASA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAKA;;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAOA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AAfA;;AAkBA;AAKA;AAEA;AACA;AACA;;;AACA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAGA;AACA;AADA;AAIA;AACA;AADA;;;;;;;;;;;;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAMA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AAEA;AAAA;AAQA;AAAA;AASA;AAAA;AAIA;AAAA;AAQA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AAMA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AAEA;A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A;AAAA;;AAqCA;AAAA;;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AAEA;AAKA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;;AAEA;AACA;AACA;AAEA;AAKA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;;AAEA;AAAA;AACA;AAAA;AADA;;AAIA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAeA;AAEA;AACA;AACA;;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AAIA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAMA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AAFA;AAKA;AAEA;AACA;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1SA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AASA;AAAA;AAGA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAOA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;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A;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAQA;AACA;;AAEA;AACA;AACA;;AAEA;AAIA;;AAEA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AAGA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AAAA;AAKA;AAAA;AAGA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAaA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAqBA;AAEA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAWA;AAAA;AAMA;AAAA;AAGA;AACA;AADA;AAIA;AAAA;AAAA;AAAA;AAeA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;ACvHA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAiBA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAKA;AACA;AADA;;AAIA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;A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AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAHA;AAQA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAmBA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AADA;AAIA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;;AAAA;AAAA;AAGA;AACA;AAFA;AAFA;AAAA;AAAA;AASA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAwBA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAMA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAoBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAgCA;;AAUA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAOA;AAAA;AASA;AAAA;AACA;AAAA;AAEA;AAAA;AAwBA;AAAA;AAUA;AAAA;AAIA;AAAA;AAIA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAWA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAEA;AAEA;AACA;AACA;AAHA;AADA;AAQA;AAAA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAFA;;;;;;;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAQA;AAAA;AAAA;AAAA;AACA;AAAA;AAUA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAOA;AACA;AACA;AAFA;AAKA;AACA;AADA;AAIA;AACA;AADA;AAIA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAOA;;AACA;AAAA;AAAA;AAAA;AAOA;AAEA;AADA;AADA;AAMA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAJA;AADA;AAcA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;AC3GA;AACA;AACA;AACA;AACA;AACA;AAEA;AAeA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAkBA;AAKA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAMA;;AAEA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;AAWA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AA1IA;AAkJA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC3JA;AACA;AACA;AACA;AACA;AACA;AAEA;AAoGA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AADA;AAIA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AADA;AAEA;AAFA;AAGA;AAHA;AAQA;AACA;AADA;AAEA;AAFA;AAGA;AAHA;AAIA;AAJA;AAKA;AALA;AAMA;AANA;AAOA;AAPA;AAQA;AARA;AATA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;AASA;AAEA;;;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AAuBA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpQA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AAVA;AADA;AADA;;AAiBA;AACA;AACA;AACA;AACA;;AACA;AAOA;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAiCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjNA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAKA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5FA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AAAA;AAAA;;AACA;AACA;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAaA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAOA;AAKA;;AAEA;AACA;AAEA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAoCA;;;;;;;;;;;;;;AC3IA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AAIA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAOA;AAAA;AAAA;;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAFA;AASA;AAAA;AAAA;AAAA;AAAA;AAbA;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;AACA;AAGA;AAAA;AAAA;AAAA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAKA;;AAoCA;AACA;AACA;AACA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;;AACA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAIA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AADA;AADA;;AAOA;AAGA;;AAAA;AACA;AAOA;AAGA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AACA;;AAEA;AAAA;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;;AAeA;AAEA;AACA;AACA;AACA;AAJA;;AAUA;AACA;AACA;;AAEA;AACA;AAIA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AA3BA;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5NA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAMA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAMA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAQA;AACA;AACA;AAEA;;AAcA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAWA;AAAA;AAAA;AAUA;;AAEA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AACA;;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;;AAEA;AAUA;AAEA;AACA;AACA;;;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAQA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;ACvLA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AAQA;AACA;AADA;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAgBA;AACA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA;AAEA;AACA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAMA;AAAA;AAAA;;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAQA;AACA;AACA;AAEA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAJA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAMA;AAAA;AAAA;;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAOA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAxBA;;AA2BA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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A;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAWA;AAAA;AAGA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAfA;;AAkBA;AACA;AACA;;AAEA;AACA;;AAEA;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAWA;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAIA;AAAA;AAIA;AAAA;AAGA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;ACpHA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAkBA;AAuGA;;AAMA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAOA;AAAA;AAgBA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;AC/KA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAOA;AAAA;AAEA;AAAA;AAGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAOA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA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;AACA;AAAA;AACA;AADA;AAEA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AADA;AAHA;AAhBA;AAuBA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AA/BA;AAgCA;AAAA;AAAA;AAAA;AAIA;;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AADA;AAHA;AAhBA;AAwBA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAFA;AAIA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5HA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AADA;AAIA;AADA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AADA;AADA;AAIA;AACA;AACA;AADA;AADA;AAIA;AARA;AASA;AAAA;AAAA;AAAA;AAAA;AAIA;AADA;AAIA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AADA;AADA;AAIA;AACA;AADA;AAEA;AACA;AACA;AADA;AADA;AAIA;AAVA;AAWA;AAAA;AAAA;AAAA;AAIA;;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AADA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AADA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A;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1GA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAGA;AAHA;AAKA;AADA;AAGA;AAAA;AAEA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAGA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AADA;AAFA;AAtDA;AA4DA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AArEA;AAsEA;AAAA;AAAA;AAAA;AAIA;;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AADA;AAFA;AAtDA;AA6DA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAGA;AAHA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A;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAjJA;AAuJA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AApLA;AAsLA;;AAEA;AAAA;AAAA;AAAA;AAIA;AACA;AAFA;AAHA;;AAQA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;;AAEA;AACA;AAEA;AACA;;AAEA;AAAA;AAAA;AAAA;AAIA;AACA;AAFA;AAHA;;AAQA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAjJA;AAwJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;AAwBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAsBA;AAtBA;AAwBA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClhBA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AADA;AAGA;AAAA;AAEA;AADA;AAIA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAGA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAOA;AAVA;AAWA;AAAA;;AAAA;AAGA;AAAA;AAHA;AAOA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAGA;AACA;AACA;AADA;AADA;AAIA;AAPA;AASA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AAAA;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A;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AACA;AASA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAOA;AAPA;AASA;AADA;AAGA;AAAA;AAEA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAbA;AAgBA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AAxEA;AAiFA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AAvGA;AAyGA;;AAEA;AAAA;AACA;AACA;AAFA;AAAA;;AAKA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AACA;AADA;AAGA;AADA;AAFA;;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;;AAEA;AACA;AAEA;AACA;;AAEA;AAAA;AACA;AACA;AAFA;AAAA;;AAKA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AACA;AADA;AAGA;AADA;AAFA;;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AAxEA;AAkFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAbA;AAiBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAOA;AAPA;AASA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtUA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AACA;AASA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAOA;AAPA;AASA;AADA;AAGA;AAAA;AAEA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAaA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AAvEA;AAgFA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AAnGA;AAqGA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAGA;AAAA;;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AADA;AAGA;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;;AAEA;AACA;AAEA;AACA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAGA;AAAA;;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AADA;AAGA;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AAvEA;AAiFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAOA;AAPA;AASA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpUA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AACA;AAgBA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAeA;AAfA;AAiBA;AADA;AAGA;AAAA;AAEA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAOA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AADA;AAFA;AAxCA;AA8CA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAJA;AANA;AAYA;AAjEA;AAmEA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AACA;AADA;AAGA;AADA;AAFA;;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;;AAEA;AACA;AAEA;AACA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AACA;AADA;AAGA;AADA;AAFA;;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AADA;AAFA;AAxCA;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAJA;AANA;AAcA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAeA;AAfA;AAiBA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvQA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AACA;AASA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAOA;AAPA;AASA;AADA;AAGA;AAAA;AAEA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAdA;AAiBA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AA/EA;AAwFA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AA/GA;AAiHA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AACA;AADA;AAGA;AADA;AAFA;;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;;AAEA;AACA;AAEA;AACA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AACA;AADA;AAGA;AADA;AAFA;;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AA/EA;AAyFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAdA;AAkBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAOA;AAPA;AASA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpVA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AACA;AASA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAOA;AAPA;AASA;AADA;AAGA;AAAA;AAEA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAYA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AApEA;AA6EA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AA/FA;AAiGA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AACA;AADA;AAGA;AADA;AAFA;;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;;AAEA;AACA;AAEA;AACA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AACA;AADA;AAGA;AADA;AAFA;;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AApEA;AA8EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAOA;AAPA;AASA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5SA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAEA;;AAEA;AACA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAjDA;AAuDA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AA1EA;AA4EA;AADA;AAGA;AAAA;AAEA;AADA;AAIA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AADA;AAEA;AAFA;AAIA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AAAA;AAAA;AACA;AAIA;;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAjDA;AAuDA;AA1EA;AA4EA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9OA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AALA;AAOA;AADA;AAGA;AAAA;AAEA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AASA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAvDA;AA0DA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AAzEA;AA0EA;AAAA;AAAA;AAAA;AAIA;;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAvDA;AA2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AALA;AAOA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrNA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAOA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AArCA;AA2CA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AA3DA;AA6DA;AADA;AAGA;AAAA;AAEA;AADA;AAIA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AAAA;AACA;AACA;AAFA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAOA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AArCA;AA2CA;AA3DA;AA6DA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnMA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAJA;AAMA;AADA;AAGA;AAAA;AAEA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AADA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AANA;AAlBA;AA4BA;AA9BA;AA+BA;AAAA;AAAA;AAAA;AAIA;;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AANA;AAlBA;AA6BA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAJA;AAMA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9HA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAGA;AAHA;AAKA;AADA;AAGA;AAAA;AAEA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AADA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAJA;AAUA;AAZA;AAaA;AAAA;AAAA;AAAA;AAIA;;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAJA;AAWA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAGA;AAHA;AAKA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AALA;AAOA;AADA;AAGA;AAAA;AAEA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AASA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AA9CA;AAoDA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AAnEA;AAoEA;AAAA;AAAA;AAAA;AAIA;;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AA9CA;AAqDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AALA;AAOA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzMA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AAFA;AADA;AApDA;AA0DA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AA7EA;AA+EA;AADA;AAGA;AAAA;AAEA;AADA;AAIA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AADA;AAEA;AAFA;AAGA;AAAA;AAAA;AAAA;AAIA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AADA;AAEA;AAFA;AAIA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AAAA;AAAA;AACA;AAIA;;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AAFA;AADA;AApDA;AA0DA;AA7EA;AA+EA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3PA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAMA;AANA;AAQA;AADA;AAGA;AAAA;AAEA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAUA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AA9EA;AAoFA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AApGA;AAqGA;AAAA;AAAA;AAAA;AAIA;;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AA9EA;AAqFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAMA;AANA;AAQA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9QA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAUA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AAFA;AADA;AA1DA;AAgEA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AArFA;AAuFA;AADA;AAGA;AAAA;AAEA;AADA;AAIA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AADA;AAEA;AAFA;AAGA;AAAA;AAAA;AAAA;AAIA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AADA;AAEA;AAFA;AAIA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AAAA;AAAA;AACA;AAIA;;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAUA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AAFA;AADA;AA1DA;AAgEA;AArFA;AAuFA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3QA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AALA;AAOA;AADA;AAGA;AAAA;AAEA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AA1DA;AAgEA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AA9EA;AAgFA;;AAEA;AAAA;AAAA;AAAA;AAIA;AACA;AAFA;AAHA;;AAQA;AAAA;AAAA;AAAA;AACA;AAIA;;AAEA;AACA;AAEA;AACA;;AAEA;AAAA;AAAA;AAAA;AAIA;AACA;AAFA;AAHA;;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AA1DA;AAiEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AALA;AAOA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxPA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAjDA;AAuDA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AA1EA;AA4EA;AADA;AAGA;AAAA;AAEA;AADA;AAIA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AADA;AAEA;AAFA;AAIA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AAAA;AAAA;AACA;AAIA;;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAjDA;AAuDA;AA1EA;AA4EA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9OA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AA1DA;AAgEA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AAnFA;AAqFA;AADA;AAGA;AAAA;AAEA;AADA;AAIA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AADA;AAEA;AAFA;AAIA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AAAA;AAAA;AACA;AAIA;;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AA1DA;AAgEA;AAnFA;AAqFA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChQA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AASA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AA3CA;AAiDA;AA/DA;AAiEA;AADA;AAGA;AAAA;AAEA;AADA;AAIA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AADA;AAEA;AAFA;AAIA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AAAA;AAAA;AACA;AAIA;;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AASA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AA3CA;AAiDA;AA/DA;AAiEA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzNA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAjDA;AAoDA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AAvEA;AAyEA;AADA;AAGA;AAAA;AAEA;AADA;AAIA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AADA;AAEA;AAFA;AAGA;AAAA;AAAA;AAAA;AAIA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AADA;AAEA;AAFA;AAIA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AAAA;AAAA;AACA;AAIA;;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAjDA;AAoDA;AAvEA;AAyEA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/OA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAJA;AAUA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AA1BA;AA4BA;AADA;AAGA;AAAA;AAEA;AADA;AAIA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AADA;AADA;AAIA;AAJA;AAKA;AAAA;AAAA;AAAA;AAIA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AADA;AAEA;AAFA;AAIA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AAAA;AAAA;AACA;AAIA;;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAJA;AAUA;AA1BA;AA4BA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1JA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAjDA;AAuDA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AA1EA;AA4EA;AADA;AAGA;AAAA;AAEA;AADA;AAIA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AADA;AAEA;AAFA;AAIA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AAAA;AAAA;AACA;AAIA;;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAjDA;AAuDA;AA1EA;AA4EA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9OA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AADA;AAIA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AAlCA;AA2CA;AA/CA;AAgDA;AAAA;AAAA;AAAA;AAIA;;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AAlCA;AA4CA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzJA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAEA;;AAEA;AACA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AAQA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAGA;AAHA;AAKA;AADA;AAGA;AAAA;AAEA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AA7JA;AAsKA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AAhLA;AAiLA;AAAA;AAAA;AAAA;AAIA;;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AA7JA;AAuKA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAGA;AAHA;AAKA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1aA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAEA;;AAEA;AACA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;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A;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAxCA;AA8CA;AAtDA;AAwDA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;;AAEA;AACA;AAEA;AACA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAxCA;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAMA;AANA;AAQA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3MA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAMA;AANA;AAQA;AADA;AAGA;AAAA;AAEA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAWA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAnDA;AAyDA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AA1EA;AA4EA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;;AAEA;AACA;AAEA;AACA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAnDA;AA0DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAMA;AANA;AAQA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnPA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAMA;AANA;AAQA;AADA;AAGA;AAAA;AAEA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAWA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAlCA;AAwCA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AAzDA;AA2DA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;;AAEA;AACA;AAEA;AACA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAlCA;AAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAMA;AANA;AAQA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjNA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAEA;;AAEA;AACA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAJA;AAMA;AADA;AAGA;AAAA;AAEA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAMA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AArBA;AA2BA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AAvCA;AAwCA;AAAA;AAAA;AAAA;AAIA;;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AArBA;AA4BA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAJA;AAMA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/IA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAJA;AAMA;AADA;AAGA;AAAA;AAEA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AA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;AAKA;AALA;AAOA;AADA;AAGA;AAAA;AAEA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAOA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AA7BA;AAmCA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AAhDA;AAkDA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AAAA;AAAA;AACA;AAIA;;AAEA;AACA;AAEA;AACA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AA7BA;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AALA;AAOA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpLA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AAGA;AAGA;;AACA;AAGA;AAAA;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AADA;AAGA;AAAA;AAEA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAGA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AATA;AAWA;;AAEA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AAAA;AAAA;AACA;AAIA;;AAEA;AACA;AAEA;AACA;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","sources":["webpack://@zendeskgarden/react-components/./.storybook/preview.js","webpack://@zendeskgarden/react-components/./.storybook/preview.js-generated-config-entry.js","webpack://@zendeskgarden/react-components/./generated-stories-entry.js","webpack://@zendeskgarden/react-components/./packages/accordions/demo/stories/AccordionStory.tsx","webpack://@zendeskgarden/react-components/./packages/accordions/demo/stories/StepperStory.tsx","webpack://@zendeskgarden/react-components/./packages/accordions/demo/stories/TimelineStory.tsx","webpack://@zendeskgarden/react-components/./packages/accordions/demo/stories/data.ts","webpack://@zendeskgarden/react-components/./packages/accordions/src/elements/accordion/Accordion.tsx","webpack://@zendeskgarden/react-components/./packages/accordions/src/elements/accordion/components/Header.tsx","webpack://@zendeskgarden/react-components/./packages/accordions/src/elements/accordion/components/Label.tsx","webpack://@zendeskgarden/react-components/./packages/accordions/src/elements/accordion/components/Panel.tsx","webpack://@zendeskgarden/react-components/./packages/accordions/src/elements/accordion/components/Section.tsx","webpack://@zendeskgarden/react-components/./packages/accordions/src/elements/stepper/Stepper.tsx","webpack://@zendeskgarden/react-components/./packages/accordions/src/elements/stepper/components/Content.tsx","webpack://@zendeskgarden/react-components/./packages/accordions/src/elements/stepper/components/Label.tsx","webpack://@zendeskgarden/react-components/./packages/accordions/src/elements/stepper/components/Step.tsx","webpack://@zendeskgarden/react-components/./packages/accordions/src/elements/timeline/Timeline.tsx","webpack://@zendeskgarden/react-components/./packages/accordions/src/elements/timeline/components/Content.tsx","webpack://@zendeskgarden/react-components/./packages/accordions/src/elements/timeline/components/Item.tsx","webpack://@zendeskgarden/react-components/./packages/accordions/src/elements/timeline/components/OppositeContent.tsx","webpack://@zendeskgarden/react-components/./packages/accordions/src/styled/accordion/StyledAccordion.ts","webpack://@zendeskgarden/react-components/./packages/accordions/src/styled/accordion/StyledButton.ts","webpack://@zendeskgarden/react-components/./packages/accordions/src/styled/accordion/StyledHeader.ts","webpack://@zendeskgarden/react-components/./packages/accordions/src/styled/accordion/StyledInnerPanel.ts","webpack://@zendeskgarden/react-components/./packages/accordions/src/styled/accordion/StyledPanel.ts","webpack://@zendeskgarden/react-components/./packages/accordions/src/styled/accordion/StyledRotateIcon.ts","webpack://@zendeskgarden/react-components/./packages/accordions/src/styled/accordion/StyledSection.ts","webpack://@zendeskgarden/react-components/./packages/accordions/src/styled/stepper/StyledContent.ts","webpack://@zendeskgarden/react-components/./packages/accordions/src/styled/stepper/StyledIcon.ts","webpack://@zendeskgarden/react-components/./packages/accordions/src/styled/stepper/StyledInnerContent.ts","webpack://@zendeskgarden/react-components/./packages/accordions/src/styled/stepper/StyledLabel.ts","webpack://@zendeskgarden/react-components/./packages/accordions/src/styled/stepper/StyledLabelText.ts","webpack://@zendeskgarden/react-components/./packages/accordions/src/styled/stepper/StyledLine.ts","webpack://@zendeskgarden/react-components/./packages/accordions/src/styled/stepper/StyledStep.ts","webpack://@zendeskgarden/react-components/./packages/accordions/src/styled/stepper/StyledStepper.ts","webpack://@zendeskgarden/react-components/./packages/accordions/src/styled/timeline/StyledContent.ts","webpack://@zendeskgarden/react-components/./packages/accordions/src/styled/timeline/StyledItem.ts","webpack://@zendeskgarden/react-components/./packages/accordions/src/styled/timeline/StyledItemIcon.ts","webpack://@zendeskgarden/react-components/./packages/accordions/src/styled/timeline/StyledOppositeContent.ts","webpack://@zendeskgarden/react-components/./packages/accordions/src/styled/timeline/StyledSeparator.ts","webpack://@zendeskgarden/react-components/./packages/accordions/src/styled/timeline/StyledTimeline.ts","webpack://@zendeskgarden/react-components/./packages/accordions/src/utils/useAccordionContext.ts","webpack://@zendeskgarden/react-components/./packages/accordions/src/utils/useHeaderContext.ts","webpack://@zendeskgarden/react-components/./packages/accordions/src/utils/useSectionContext.ts","webpack://@zendeskgarden/react-components/./packages/accordions/src/utils/useStepContext.ts","webpack://@zendeskgarden/react-components/./packages/accordions/src/utils/useStepperContext.ts","webpack://@zendeskgarden/react-components/./packages/accordions/src/utils/useTimelineContext.ts","webpack://@zendeskgarden/react-components/./packages/accordions/src/utils/useTimelineItemContext.ts","webpack://@zendeskgarden/react-components/./packages/avatars/demo/stories/AvatarStory.tsx","webpack://@zendeskgarden/react-components/./packages/avatars/demo/stories/data.ts","webpack://@zendeskgarden/react-components/./packages/avatars/demo/~patterns/stories/ChromeStory.tsx","webpack://@zendeskgarden/react-components/./packages/avatars/demo/~patterns/stories/MenuStory.tsx","webpack://@zendeskgarden/react-components/./packages/avatars/src/elements/Avatar.tsx","webpack://@zendeskgarden/react-components/./packages/avatars/src/styled/StyledAvatar.ts","webpack://@zendeskgarden/react-components/./packages/avatars/src/styled/StyledText.ts","webpack://@zendeskgarden/react-components/./packages/breadcrumbs/demo/stories/BreadcrumbStory.tsx","webpack://@zendeskgarden/react-components/./packages/breadcrumbs/demo/stories/data.ts","webpack://@zendeskgarden/react-components/./packages/breadcrumbs/src/elements/Breadcrumb.tsx","webpack://@zendeskgarden/react-components/./packages/breadcrumbs/src/styled/StyledBreadcrumb.ts","webpack://@zendeskgarden/react-components/./packages/breadcrumbs/src/styled/StyledBreadcrumbItem.ts","webpack://@zendeskgarden/react-components/./packages/breadcrumbs/src/styled/StyledCenteredBreadcrumbItem.tsx","webpack://@zendeskgarden/react-components/./packages/breadcrumbs/src/styled/StyledChevronIcon.tsx","webpack://@zendeskgarden/react-components/./packages/breadcrumbs/src/styled/chevron-right.tsx","webpack://@zendeskgarden/react-components/./packages/buttons/demo/stories/ButtonGroupStory.tsx","webpack://@zendeskgarden/react-components/./packages/buttons/demo/stories/ButtonStory.tsx","webpack://@zendeskgarden/react-components/./packages/buttons/demo/stories/SplitButtonStory.tsx","webpack://@zendeskgarden/react-components/./packages/buttons/demo/stories/data.ts","webpack://@zendeskgarden/react-components/./packages/buttons/src/elements/Anchor.tsx","webpack://@zendeskgarden/react-components/./packages/buttons/src/elements/Button.tsx","webpack://@zendeskgarden/react-components/./packages/buttons/src/elements/ButtonGroup.tsx","webpack://@zendeskgarden/react-components/./packages/buttons/src/elements/ChevronButton.tsx","webpack://@zendeskgarden/react-components/./packages/buttons/src/elements/IconButton.tsx","webpack://@zendeskgarden/react-components/./packages/buttons/src/elements/SplitButton.tsx","webpack://@zendeskgarden/react-components/./packages/buttons/src/elements/ToggleButton.tsx","webpack://@zendeskgarden/react-components/./packages/buttons/src/elements/ToggleIconButton.tsx","webpack://@zendeskgarden/react-components/./packages/buttons/src/styled/StyledAnchor.ts","webpack://@zendeskgarden/react-components/./packages/buttons/src/styled/StyledButton.ts","webpack://@zendeskgarden/react-components/./packages/buttons/src/styled/StyledButtonGroup.ts","webpack://@zendeskgarden/react-components/./packages/buttons/src/styled/StyledExternalIcon.ts","webpack://@zendeskgarden/react-components/./packages/buttons/src/styled/StyledIcon.ts","webpack://@zendeskgarden/react-components/./packages/buttons/src/styled/StyledIconButton.ts","webpack://@zendeskgarden/react-components/./packages/buttons/src/utils/useButtonGroupContext.ts","webpack://@zendeskgarden/react-components/./packages/buttons/src/utils/useSplitButtonContext.ts","webpack://@zendeskgarden/react-components/./packages/chrome/demo/stories/ChromeStory.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/demo/stories/CollapsibleSubNavItemStory.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/demo/stories/SheetStory.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/demo/stories/app.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/demo/stories/box.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/demo/stories/brand.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/demo/stories/chat.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/demo/stories/chrome.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/demo/stories/connect.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/demo/stories/customerlist.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/demo/stories/dashboard.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/demo/stories/data.ts","webpack://@zendeskgarden/react-components/./packages/chrome/demo/stories/email.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/demo/stories/explore.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/demo/stories/garden.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/demo/stories/guide.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/demo/stories/home.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/demo/stories/lifesaver.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/demo/stories/message.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/demo/stories/rchat.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/demo/stories/relationship.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/demo/stories/search.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/demo/stories/settings.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/demo/stories/support.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/demo/stories/user-solo.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/elements/Chrome.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/elements/SkipNav.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/elements/body/Body.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/elements/body/Content.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/elements/body/Main.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/elements/body/Sidebar.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/elements/footer/Footer.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/elements/footer/FooterItem.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/elements/header/Header.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/elements/header/HeaderItem.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/elements/header/HeaderItemIcon.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/elements/header/HeaderItemText.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/elements/header/HeaderItemWrapper.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/elements/nav/Nav.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/elements/nav/NavItem.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/elements/nav/NavItemIcon.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/elements/nav/NavItemText.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/elements/sheet/Sheet.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/elements/sheet/components/Body.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/elements/sheet/components/Close.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/elements/sheet/components/Description.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/elements/sheet/components/Footer.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/elements/sheet/components/FooterItem.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/elements/sheet/components/Header.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/elements/sheet/components/Title.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/elements/subnav/CollapsibleSubNavItem.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/elements/subnav/SubNav.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/elements/subnav/SubNavItem.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/elements/subnav/SubNavItemText.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/StyledChrome.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/StyledSkipNav.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/StyledSkipNavIcon.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/body/StyledBody.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/body/StyledContent.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/body/StyledMain.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/body/StyledSidebar.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/footer/StyledFooter.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/footer/StyledFooterItem.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/header/StyledBaseHeaderItem.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/header/StyledHeader.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/header/StyledHeaderItem.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/header/StyledHeaderItemIcon.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/header/StyledHeaderItemText.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/header/StyledHeaderItemWrapper.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/header/StyledLogoHeaderItem.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/link.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/nav/StyledBaseNavItem.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/nav/StyledBrandmarkNavItem.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/nav/StyledLogoNavItem.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/nav/StyledNav.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/nav/StyledNavItem.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/nav/StyledNavItemIcon.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/nav/StyledNavItemText.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/sheet/StyledSheet.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/sheet/StyledSheetBody.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/sheet/StyledSheetClose.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/sheet/StyledSheetDescription.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/sheet/StyledSheetFooter.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/sheet/StyledSheetFooterItem.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/sheet/StyledSheetHeader.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/sheet/StyledSheetTitle.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/sheet/StyledSheetWrapper.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/subnav/StyledSubNav.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/subnav/StyledSubNavItem.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/subnav/StyledSubNavItemHeader.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/subnav/StyledSubNavItemIcon.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/subnav/StyledSubNavItemText.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/subnav/StyledSubNavPanel.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/styled/subnav/chevro-down.tsx","webpack://@zendeskgarden/react-components/./packages/chrome/src/utils/types.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/utils/useBodyContext.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/utils/useChromeContext.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/utils/useFocusableMount.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/utils/useNavContext.ts","webpack://@zendeskgarden/react-components/./packages/chrome/src/utils/useSheetContext.ts","webpack://@zendeskgarden/react-components/./packages/colorpickers/demo/stories/ColorSwatchDialogStory.tsx","webpack://@zendeskgarden/react-components/./packages/colorpickers/demo/stories/ColorpickerDialogStory.tsx","webpack://@zendeskgarden/react-components/./packages/colorpickers/demo/stories/data.ts","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/elements/ColorSwatchDialog/index.tsx","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/elements/ColorSwatch/index.tsx","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/elements/ColorpickerDialog/index.tsx","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/elements/Colorpicker/ColorWell.tsx","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/elements/Colorpicker/index.tsx","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/elements/Colorpicker/reducer.ts","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/styled/ColorSwatch/StyledCell.ts","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/styled/ColorSwatch/StyledColorSwatch.ts","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/styled/ColorSwatch/StyledIcon.ts","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/styled/ColorSwatch/StyledSwatchButton.ts","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/styled/ColorpickerDialog/StyledButton.ts","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/styled/ColorpickerDialog/StyledButtonPreview.ts","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/styled/ColorpickerDialog/StyledTooltipBody.ts","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/styled/ColorpickerDialog/StyledTooltipModal.ts","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/styled/Colorpicker/StyledAlphaRange.ts","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/styled/Colorpicker/StyledColorPicker.ts","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/styled/Colorpicker/StyledColorWell.ts","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/styled/Colorpicker/StyledColorWellThumb.ts","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/styled/Colorpicker/StyledHexField.ts","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/styled/Colorpicker/StyledHueRange.ts","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/styled/Colorpicker/StyledInput.ts","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/styled/Colorpicker/StyledInputGroup.ts","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/styled/Colorpicker/StyledLabel.ts","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/styled/Colorpicker/StyledPreview.ts","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/styled/Colorpicker/StyledRGBAField.ts","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/styled/Colorpicker/StyledSliderGroup.ts","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/styled/Colorpicker/StyledSliders.ts","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/styled/common/StyledRange.ts","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/styled/common/checkeredBackground.ts","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/utils/conversion.ts","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/utils/saturation.ts","webpack://@zendeskgarden/react-components/./packages/colorpickers/src/utils/validation.ts","webpack://@zendeskgarden/react-components/./packages/datepickers/demo/stories/DatepickerRangeStory.tsx","webpack://@zendeskgarden/react-components/./packages/datepickers/demo/stories/DatepickerStory.tsx","webpack://@zendeskgarden/react-components/./packages/datepickers/demo/stories/data.ts","webpack://@zendeskgarden/react-components/./packages/datepickers/src/elements/DatepickerRange/DatepickerRange.tsx","webpack://@zendeskgarden/react-components/./packages/datepickers/src/elements/DatepickerRange/components/Calendar.tsx","webpack://@zendeskgarden/react-components/./packages/datepickers/src/elements/DatepickerRange/components/End.tsx","webpack://@zendeskgarden/react-components/./packages/datepickers/src/elements/DatepickerRange/components/Month.tsx","webpack://@zendeskgarden/react-components/./packages/datepickers/src/elements/DatepickerRange/components/Start.tsx","webpack://@zendeskgarden/react-components/./packages/datepickers/src/elements/DatepickerRange/utils/datepicker-range-reducer.ts","webpack://@zendeskgarden/react-components/./packages/datepickers/src/elements/DatepickerRange/utils/useDatepickerRangeContext.ts","webpack://@zendeskgarden/react-components/./packages/datepickers/src/elements/Datepicker/Datepicker.tsx","webpack://@zendeskgarden/react-components/./packages/datepickers/src/elements/Datepicker/components/Calendar.tsx","webpack://@zendeskgarden/react-components/./packages/datepickers/src/elements/Datepicker/components/MonthSelector.tsx","webpack://@zendeskgarden/react-components/./packages/datepickers/src/elements/Datepicker/utils/datepicker-reducer.ts","webpack://@zendeskgarden/react-components/./packages/datepickers/src/elements/Datepicker/utils/garden-placements.ts","webpack://@zendeskgarden/react-components/./packages/datepickers/src/elements/Datepicker/utils/useDatepickerContext.ts","webpack://@zendeskgarden/react-components/./packages/datepickers/src/styled/StyledCalendar.ts","webpack://@zendeskgarden/react-components/./packages/datepickers/src/styled/StyledCalendarItem.ts","webpack://@zendeskgarden/react-components/./packages/datepickers/src/styled/StyledDatepicker.ts","webpack://@zendeskgarden/react-components/./packages/datepickers/src/styled/StyledDay.ts","webpack://@zendeskgarden/react-components/./packages/datepickers/src/styled/StyledDayLabel.ts","webpack://@zendeskgarden/react-components/./packages/datepickers/src/styled/StyledHeader.ts","webpack://@zendeskgarden/react-components/./packages/datepickers/src/styled/StyledHeaderLabel.ts","webpack://@zendeskgarden/react-components/./packages/datepickers/src/styled/StyledHeaderPaddle.ts","webpack://@zendeskgarden/react-components/./packages/datepickers/src/styled/StyledHighlight.ts","webpack://@zendeskgarden/react-components/./packages/datepickers/src/styled/StyledMenu.ts","webpack://@zendeskgarden/react-components/./packages/datepickers/src/styled/StyledMenuWrapper.ts","webpack://@zendeskgarden/react-components/./packages/datepickers/src/styled/StyledRangeCalendar.ts","webpack://@zendeskgarden/react-components/./packages/datepickers/src/utils/calendar-utils.ts","webpack://@zendeskgarden/react-components/./packages/dropdowns/demo/stories/AutocompleteStory.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/demo/stories/ComboboxStory.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/demo/stories/DropdownFieldStory.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/demo/stories/DropdownStory.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/demo/stories/MenuStory.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/demo/stories/MultiselectStory.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/demo/stories/SelectStory.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/demo/stories/TriggerStory.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/demo/stories/data.ts","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/elements/Autocomplete/Autocomplete.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/elements/Combobox/Combobox.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/elements/Dropdown/Dropdown.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/elements/Fields/Field.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/elements/Fields/Hint.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/elements/Fields/Label.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/elements/Fields/Message.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/elements/Menu/Items/AddItem.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/elements/Menu/Items/HeaderIcon.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/elements/Menu/Items/HeaderItem.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/elements/Menu/Items/Item.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/elements/Menu/Items/ItemMeta.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/elements/Menu/Items/MediaBody.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/elements/Menu/Items/MediaFigure.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/elements/Menu/Items/MediaItem.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/elements/Menu/Items/NextItem.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/elements/Menu/Items/PreviousItem.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/elements/Menu/Menu.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/elements/Menu/Separator.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/elements/Multiselect/Multiselect.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/elements/Select/Select.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/elements/Trigger/Trigger.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/styled/items/StyledAddItem.ts","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/styled/items/StyledItem.ts","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/styled/items/StyledItemIcon.ts","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/styled/items/StyledItemMeta.ts","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/styled/items/StyledNextIcon.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/styled/items/StyledNextItem.ts","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/styled/items/StyledPreviousIcon.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/styled/items/StyledPreviousItem.ts","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/styled/items/chevron-left.tsx","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/styled/items/header/StyledHeaderIcon.ts","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/styled/items/header/StyledHeaderItem.ts","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/styled/items/media/StyledMediaBody.ts","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/styled/items/media/StyledMediaFigure.ts","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/styled/items/media/StyledMediaItem.ts","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/styled/menu/StyledMenu.ts","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/styled/menu/StyledMenuWrapper.ts","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/styled/menu/StyledSeparator.ts","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/styled/multiselect/StyledMultiselectInput.ts","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/styled/multiselect/StyledMultiselectItemWrapper.ts","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/styled/multiselect/StyledMultiselectItemsContainer.ts","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/styled/multiselect/StyledMultiselectMoreAnchor.ts","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/styled/select/StyledFauxInput.ts","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/styled/select/StyledInput.ts","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/styled/select/StyledSelect.ts","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/utils/garden-placements.ts","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/utils/useDropdownContext.ts","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/utils/useFieldContext.ts","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/utils/useItemContext.ts","webpack://@zendeskgarden/react-components/./packages/dropdowns/src/utils/useMenuContext.ts","webpack://@zendeskgarden/react-components/./packages/forms/demo/stories/CheckboxStory.tsx","webpack://@zendeskgarden/react-components/./packages/forms/demo/stories/FauxInputStory.tsx","webpack://@zendeskgarden/react-components/./packages/forms/demo/stories/FieldStory.tsx","webpack://@zendeskgarden/react-components/./packages/forms/demo/stories/FieldsetStory.tsx","webpack://@zendeskgarden/react-components/./packages/forms/demo/stories/FileListStory.tsx","webpack://@zendeskgarden/react-components/./packages/forms/demo/stories/FileStory.tsx","webpack://@zendeskgarden/react-components/./packages/forms/demo/stories/FileUploadStory.tsx","webpack://@zendeskgarden/react-components/./packages/forms/demo/stories/InputGroupStory.tsx","webpack://@zendeskgarden/react-components/./packages/forms/demo/stories/InputStory.tsx","webpack://@zendeskgarden/react-components/./packages/forms/demo/stories/MediaInputStory.tsx","webpack://@zendeskgarden/react-components/./packages/forms/demo/stories/MultiThumbRangeStory.tsx","webpack://@zendeskgarden/react-components/./packages/forms/demo/stories/RadioStory.tsx","webpack://@zendeskgarden/react-components/./packages/forms/demo/stories/RangeStory.tsx","webpack://@zendeskgarden/react-components/./packages/forms/demo/stories/SelectStory.tsx","webpack://@zendeskgarden/react-components/./packages/forms/demo/stories/TextareaStory.tsx","webpack://@zendeskgarden/react-components/./packages/forms/demo/stories/TilesStory.tsx","webpack://@zendeskgarden/react-components/./packages/forms/demo/stories/ToggleStory.tsx","webpack://@zendeskgarden/react-components/./packages/forms/demo/stories/asteriskstroke.tsx","webpack://@zendeskgarden/react-components/./packages/forms/demo/stories/box3dstroke.tsx","webpack://@zendeskgarden/react-components/./packages/forms/demo/stories/calenderstroke.tsx","webpack://@zendeskgarden/react-components/./packages/forms/demo/stories/checkbox.tsx","webpack://@zendeskgarden/react-components/./packages/forms/demo/stories/checkboxlg.tsx","webpack://@zendeskgarden/react-components/./packages/forms/demo/stories/chevronbox.tsx","webpack://@zendeskgarden/react-components/./packages/forms/demo/stories/creditcardstroke.tsx","webpack://@zendeskgarden/react-components/./packages/forms/demo/stories/data.ts","webpack://@zendeskgarden/react-components/./packages/forms/demo/stories/decimalstroke.tsx","webpack://@zendeskgarden/react-components/./packages/forms/demo/stories/multiline.tsx","webpack://@zendeskgarden/react-components/./packages/forms/demo/stories/numberstroke.tsx","webpack://@zendeskgarden/react-components/./packages/forms/demo/stories/textstroke.tsx","webpack://@zendeskgarden/react-components/./packages/forms/demo/~patterns/stories/FileUploadStory.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/elements/Checkbox.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/elements/FauxInput.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/elements/FileUpload.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/elements/Input.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/elements/MediaInput.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/elements/MultiThumbRange.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/elements/Radio.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/elements/Range.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/elements/Select.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/elements/Textarea.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/elements/Toggle.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/elements/common/Field.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/elements/common/Fieldset.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/elements/common/Hint.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/elements/common/Label.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/elements/common/Legend.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/elements/common/Message.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/elements/file-list/FileList.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/elements/file-list/components/Close.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/elements/file-list/components/Delete.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/elements/file-list/components/File.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/elements/file-list/components/Item.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/elements/file-list/utils.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/elements/input-group/InputGroup.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/elements/tiles/Tiles.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/elements/tiles/components/Description.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/elements/tiles/components/Icon.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/elements/tiles/components/Label.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/elements/tiles/components/Tile.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/checkbox/StyledCheckHint.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/checkbox/StyledCheckInput.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/checkbox/StyledCheckLabel.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/checkbox/StyledCheckMessage.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/checkbox/StyledCheckSvg.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/checkbox/StyledDashSvg.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/checkbox/check-sm.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/checkbox/dash-fill.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/common/StyledField.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/common/StyledFieldset.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/common/StyledHint.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/common/StyledLabel.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/common/StyledLegend.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/common/StyledMessage.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/common/StyledMessageIcon.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/file-list/StyledFile.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/file-list/StyledFileClose.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/file-list/StyledFileDelete.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/file-list/StyledFileIcon.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/file-list/StyledFileList.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/file-list/StyledFileListItem.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/file-upload/StyledFileUpload.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/input-group/StyledInputGroup.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/radio/StyledRadioHint.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/radio/StyledRadioInput.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/radio/StyledRadioLabel.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/radio/StyledRadioMessage.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/radio/StyledRadioSvg.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/radio/circle-sm.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/range/StyledRangeInput.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/range/StyledSlider.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/range/StyledSliderThumb.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/range/StyledSliderTrack.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/range/StyledSliderTrackRail.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/select/StyledSelect.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/select/StyledSelectWrapper.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/text/StyledTextFauxInput.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/text/StyledTextInput.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/text/StyledTextMediaFigure.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/text/StyledTextMediaInput.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/text/StyledTextarea.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/tiles/StyledTile.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/tiles/StyledTileDescription.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/tiles/StyledTileIcon.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/tiles/StyledTileInput.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/tiles/StyledTileLabel.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/toggle/StyledToggleHint.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/toggle/StyledToggleInput.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/toggle/StyledToggleLabel.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/toggle/StyledToggleMessage.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/toggle/StyledToggleSvg.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/toggle/circle-sm.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/utils/useFieldContext.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/utils/useFieldsetContext.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/utils/useFileContext.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/utils/useInputContext.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/utils/useInputGroupContext.ts","webpack://@zendeskgarden/react-components/./packages/forms/src/utils/useTilesContext.ts","webpack://@zendeskgarden/react-components/./packages/grid/demo/stories/GridStory.tsx","webpack://@zendeskgarden/react-components/./packages/grid/demo/stories/data.ts","webpack://@zendeskgarden/react-components/./packages/grid/src/elements/Col.tsx","webpack://@zendeskgarden/react-components/./packages/grid/src/elements/Grid.tsx","webpack://@zendeskgarden/react-components/./packages/grid/src/elements/Row.tsx","webpack://@zendeskgarden/react-components/./packages/grid/src/styled/StyledCol.ts","webpack://@zendeskgarden/react-components/./packages/grid/src/styled/StyledGrid.ts","webpack://@zendeskgarden/react-components/./packages/grid/src/styled/StyledRow.ts","webpack://@zendeskgarden/react-components/./packages/grid/src/utils/types.ts","webpack://@zendeskgarden/react-components/./packages/grid/src/utils/useGridContext.ts","webpack://@zendeskgarden/react-components/./packages/loaders/demo/stories/SkeletonStory.tsx","webpack://@zendeskgarden/react-components/./packages/loaders/demo/stories/data.ts","webpack://@zendeskgarden/react-components/./packages/loaders/src/elements/Dots.tsx","webpack://@zendeskgarden/react-components/./packages/loaders/src/elements/Inline.tsx","webpack://@zendeskgarden/react-components/./packages/loaders/src/elements/Progress.tsx","webpack://@zendeskgarden/react-components/./packages/loaders/src/elements/Skeleton.tsx","webpack://@zendeskgarden/react-components/./packages/loaders/src/elements/Spinner.tsx","webpack://@zendeskgarden/react-components/./packages/loaders/src/styled/StyledDots.ts","webpack://@zendeskgarden/react-components/./packages/loaders/src/styled/StyledInlineTypingIndicator.tsx","webpack://@zendeskgarden/react-components/./packages/loaders/src/styled/StyledLoadingPlaceholder.ts","webpack://@zendeskgarden/react-components/./packages/loaders/src/styled/StyledProgress.ts","webpack://@zendeskgarden/react-components/./packages/loaders/src/styled/StyledSVG.ts","webpack://@zendeskgarden/react-components/./packages/loaders/src/styled/StyledSkeleton.ts","webpack://@zendeskgarden/react-components/./packages/loaders/src/styled/StyledSpinnerCircle.ts","webpack://@zendeskgarden/react-components/./packages/loaders/src/utils/animations.ts","webpack://@zendeskgarden/react-components/./packages/loaders/src/utils/spinner-coordinates.ts","webpack://@zendeskgarden/react-components/./packages/modals/demo/stories/DrawerModalStory.tsx","webpack://@zendeskgarden/react-components/./packages/modals/demo/stories/ModalStory.tsx","webpack://@zendeskgarden/react-components/./packages/modals/demo/stories/TooltipModalStory.tsx","webpack://@zendeskgarden/react-components/./packages/modals/demo/stories/data.ts","webpack://@zendeskgarden/react-components/./packages/modals/src/elements/Body.tsx","webpack://@zendeskgarden/react-components/./packages/modals/src/elements/Close.tsx","webpack://@zendeskgarden/react-components/./packages/modals/src/elements/DrawerModal/Body.tsx","webpack://@zendeskgarden/react-components/./packages/modals/src/elements/DrawerModal/Close.tsx","webpack://@zendeskgarden/react-components/./packages/modals/src/elements/DrawerModal/DrawerModal.tsx","webpack://@zendeskgarden/react-components/./packages/modals/src/elements/DrawerModal/Header.tsx","webpack://@zendeskgarden/react-components/./packages/modals/src/elements/Footer.tsx","webpack://@zendeskgarden/react-components/./packages/modals/src/elements/FooterItem.tsx","webpack://@zendeskgarden/react-components/./packages/modals/src/elements/Header.tsx","webpack://@zendeskgarden/react-components/./packages/modals/src/elements/Modal.tsx","webpack://@zendeskgarden/react-components/./packages/modals/src/elements/TooltipModal/Body.tsx","webpack://@zendeskgarden/react-components/./packages/modals/src/elements/TooltipModal/Close.tsx","webpack://@zendeskgarden/react-components/./packages/modals/src/elements/TooltipModal/Title.tsx","webpack://@zendeskgarden/react-components/./packages/modals/src/elements/TooltipModal/TooltipModal.tsx","webpack://@zendeskgarden/react-components/./packages/modals/src/styled/StyledBackdrop.ts","webpack://@zendeskgarden/react-components/./packages/modals/src/styled/StyledBody.ts","webpack://@zendeskgarden/react-components/./packages/modals/src/styled/StyledClose.ts","webpack://@zendeskgarden/react-components/./packages/modals/src/styled/StyledDangerIcon.ts","webpack://@zendeskgarden/react-components/./packages/modals/src/styled/StyledDrawerModal.ts","webpack://@zendeskgarden/react-components/./packages/modals/src/styled/StyledDrawerModalBody.ts","webpack://@zendeskgarden/react-components/./packages/modals/src/styled/StyledDrawerModalClose.ts","webpack://@zendeskgarden/react-components/./packages/modals/src/styled/StyledDrawerModalFooter.ts","webpack://@zendeskgarden/react-components/./packages/modals/src/styled/StyledDrawerModalFooterItem.ts","webpack://@zendeskgarden/react-components/./packages/modals/src/styled/StyledDrawerModalHeader.ts","webpack://@zendeskgarden/react-components/./packages/modals/src/styled/StyledFooter.ts","webpack://@zendeskgarden/react-components/./packages/modals/src/styled/StyledFooterItem.ts","webpack://@zendeskgarden/react-components/./packages/modals/src/styled/StyledHeader.ts","webpack://@zendeskgarden/react-components/./packages/modals/src/styled/StyledModal.ts","webpack://@zendeskgarden/react-components/./packages/modals/src/styled/StyledTooltipModal.ts","webpack://@zendeskgarden/react-components/./packages/modals/src/styled/StyledTooltipModalBackdrop.ts","webpack://@zendeskgarden/react-components/./packages/modals/src/styled/StyledTooltipModalBody.ts","webpack://@zendeskgarden/react-components/./packages/modals/src/styled/StyledTooltipModalClose.ts","webpack://@zendeskgarden/react-components/./packages/modals/src/styled/StyledTooltipModalFooter.ts","webpack://@zendeskgarden/react-components/./packages/modals/src/styled/StyledTooltipModalFooterItem.ts","webpack://@zendeskgarden/react-components/./packages/modals/src/styled/StyledTooltipModalTitle.ts","webpack://@zendeskgarden/react-components/./packages/modals/src/styled/StyledTooltipWrapper.ts","webpack://@zendeskgarden/react-components/./packages/modals/src/utils/gardenPlacements.tsx","webpack://@zendeskgarden/react-components/./packages/modals/src/utils/useModalContext.ts","webpack://@zendeskgarden/react-components/./packages/modals/src/utils/useTooltipModalContext.tsx","webpack://@zendeskgarden/react-components/./packages/notifications/demo/stories/AlertStory.tsx","webpack://@zendeskgarden/react-components/./packages/notifications/demo/stories/NotificationStory.tsx","webpack://@zendeskgarden/react-components/./packages/notifications/demo/stories/ToastProviderStory.tsx","webpack://@zendeskgarden/react-components/./packages/notifications/demo/stories/ToastStory.tsx","webpack://@zendeskgarden/react-components/./packages/notifications/demo/stories/WellStory.tsx","webpack://@zendeskgarden/react-components/./packages/notifications/demo/stories/data.ts","webpack://@zendeskgarden/react-components/./packages/notifications/src/elements/Alert.tsx","webpack://@zendeskgarden/react-components/./packages/notifications/src/elements/Notification.tsx","webpack://@zendeskgarden/react-components/./packages/notifications/src/elements/Well.tsx","webpack://@zendeskgarden/react-components/./packages/notifications/src/elements/content/Close.tsx","webpack://@zendeskgarden/react-components/./packages/notifications/src/elements/content/Paragraph.tsx","webpack://@zendeskgarden/react-components/./packages/notifications/src/elements/content/Title.tsx","webpack://@zendeskgarden/react-components/./packages/notifications/src/elements/toaster/Toast.tsx","webpack://@zendeskgarden/react-components/./packages/notifications/src/elements/toaster/ToastProvider.tsx","webpack://@zendeskgarden/react-components/./packages/notifications/src/elements/toaster/ToastSlot.tsx","webpack://@zendeskgarden/react-components/./packages/notifications/src/elements/toaster/reducer.ts","webpack://@zendeskgarden/react-components/./packages/notifications/src/elements/toaster/styled.ts","webpack://@zendeskgarden/react-components/./packages/notifications/src/elements/toaster/useToast.ts","webpack://@zendeskgarden/react-components/./packages/notifications/src/styled/StyledAlert.ts","webpack://@zendeskgarden/react-components/./packages/notifications/src/styled/StyledBase.ts","webpack://@zendeskgarden/react-components/./packages/notifications/src/styled/StyledIcon.ts","webpack://@zendeskgarden/react-components/./packages/notifications/src/styled/StyledNotification.ts","webpack://@zendeskgarden/react-components/./packages/notifications/src/styled/StyledWell.ts","webpack://@zendeskgarden/react-components/./packages/notifications/src/styled/content/StyledClose.ts","webpack://@zendeskgarden/react-components/./packages/notifications/src/styled/content/StyledParagraph.ts","webpack://@zendeskgarden/react-components/./packages/notifications/src/styled/content/StyledTitle.ts","webpack://@zendeskgarden/react-components/./packages/notifications/src/utils/alert-error.tsx","webpack://@zendeskgarden/react-components/./packages/notifications/src/utils/alert-warning.tsx","webpack://@zendeskgarden/react-components/./packages/notifications/src/utils/check-circle.tsx","webpack://@zendeskgarden/react-components/./packages/notifications/src/utils/icons.ts","webpack://@zendeskgarden/react-components/./packages/notifications/src/utils/info-stroke.tsx","webpack://@zendeskgarden/react-components/./packages/notifications/src/utils/types.ts","webpack://@zendeskgarden/react-components/./packages/notifications/src/utils/useNotificationsContext.ts","webpack://@zendeskgarden/react-components/./packages/pagination/demo/stories/CursorPaginationStory.tsx","webpack://@zendeskgarden/react-components/./packages/pagination/src/elements/CursorPagination/CursorPagination.tsx","webpack://@zendeskgarden/react-components/./packages/pagination/src/elements/CursorPagination/components/First.tsx","webpack://@zendeskgarden/react-components/./packages/pagination/src/elements/CursorPagination/components/Last.tsx","webpack://@zendeskgarden/react-components/./packages/pagination/src/elements/CursorPagination/components/Next.tsx","webpack://@zendeskgarden/react-components/./packages/pagination/src/elements/CursorPagination/components/Previous.tsx","webpack://@zendeskgarden/react-components/./packages/pagination/src/elements/Pagination/Pagination.tsx","webpack://@zendeskgarden/react-components/./packages/pagination/src/styled/CursorPagination/StyledCursor.ts","webpack://@zendeskgarden/react-components/./packages/pagination/src/styled/CursorPagination/StyledCursorPagination.ts","webpack://@zendeskgarden/react-components/./packages/pagination/src/styled/CursorPagination/StyledIcon.ts","webpack://@zendeskgarden/react-components/./packages/pagination/src/styled/Pagination/StyledGap.ts","webpack://@zendeskgarden/react-components/./packages/pagination/src/styled/Pagination/StyledNavigation.ts","webpack://@zendeskgarden/react-components/./packages/pagination/src/styled/Pagination/StyledPage.ts","webpack://@zendeskgarden/react-components/./packages/pagination/src/styled/Pagination/StyledPageBase.ts","webpack://@zendeskgarden/react-components/./packages/pagination/src/styled/Pagination/StyledPagination.ts","webpack://@zendeskgarden/react-components/./packages/tables/demo/stories/TableStory.tsx","webpack://@zendeskgarden/react-components/./packages/tables/demo/stories/data.ts","webpack://@zendeskgarden/react-components/./packages/tables/src/elements/Body.tsx","webpack://@zendeskgarden/react-components/./packages/tables/src/elements/Caption.tsx","webpack://@zendeskgarden/react-components/./packages/tables/src/elements/Cell.tsx","webpack://@zendeskgarden/react-components/./packages/tables/src/elements/GroupRow.tsx","webpack://@zendeskgarden/react-components/./packages/tables/src/elements/Head.tsx","webpack://@zendeskgarden/react-components/./packages/tables/src/elements/HeaderCell.tsx","webpack://@zendeskgarden/react-components/./packages/tables/src/elements/HeaderRow.tsx","webpack://@zendeskgarden/react-components/./packages/tables/src/elements/OverflowButton.tsx","webpack://@zendeskgarden/react-components/./packages/tables/src/elements/Row.tsx","webpack://@zendeskgarden/react-components/./packages/tables/src/elements/SortableCell.tsx","webpack://@zendeskgarden/react-components/./packages/tables/src/elements/Table.tsx","webpack://@zendeskgarden/react-components/./packages/tables/src/styled/StyledBody.ts","webpack://@zendeskgarden/react-components/./packages/tables/src/styled/StyledCaption.ts","webpack://@zendeskgarden/react-components/./packages/tables/src/styled/StyledCell.ts","webpack://@zendeskgarden/react-components/./packages/tables/src/styled/StyledGroupRow.ts","webpack://@zendeskgarden/react-components/./packages/tables/src/styled/StyledHead.ts","webpack://@zendeskgarden/react-components/./packages/tables/src/styled/StyledHeaderCell.ts","webpack://@zendeskgarden/react-components/./packages/tables/src/styled/StyledHeaderRow.ts","webpack://@zendeskgarden/react-components/./packages/tables/src/styled/StyledOverflowButton.ts","webpack://@zendeskgarden/react-components/./packages/tables/src/styled/StyledRow.ts","webpack://@zendeskgarden/react-components/./packages/tables/src/styled/StyledSortableButton.ts","webpack://@zendeskgarden/react-components/./packages/tables/src/styled/StyledTable.ts","webpack://@zendeskgarden/react-components/./packages/tables/src/styled/style-utils.ts","webpack://@zendeskgarden/react-components/./packages/tables/src/utils/useTableContext.ts","webpack://@zendeskgarden/react-components/./packages/tabs/demo/stories/TabsStory.tsx","webpack://@zendeskgarden/react-components/./packages/tabs/demo/stories/data.ts","webpack://@zendeskgarden/react-components/./packages/tabs/src/elements/Tab.tsx","webpack://@zendeskgarden/react-components/./packages/tabs/src/elements/TabList.tsx","webpack://@zendeskgarden/react-components/./packages/tabs/src/elements/TabPanel.tsx","webpack://@zendeskgarden/react-components/./packages/tabs/src/elements/Tabs.tsx","webpack://@zendeskgarden/react-components/./packages/tabs/src/styled/StyledTab.ts","webpack://@zendeskgarden/react-components/./packages/tabs/src/styled/StyledTabList.ts","webpack://@zendeskgarden/react-components/./packages/tabs/src/styled/StyledTabPanel.ts","webpack://@zendeskgarden/react-components/./packages/tabs/src/styled/StyledTabs.ts","webpack://@zendeskgarden/react-components/./packages/tabs/src/utils/useTabsContext.ts","webpack://@zendeskgarden/react-components/./packages/tags/demo/stories/TagStory.tsx","webpack://@zendeskgarden/react-components/./packages/tags/demo/~patterns/stories/FauxInputStory.tsx","webpack://@zendeskgarden/react-components/./packages/tags/demo/~patterns/stories/data.ts","webpack://@zendeskgarden/react-components/./packages/tags/src/elements/Close.tsx","webpack://@zendeskgarden/react-components/./packages/tags/src/elements/Tag.tsx","webpack://@zendeskgarden/react-components/./packages/tags/src/styled/StyledAvatar.ts","webpack://@zendeskgarden/react-components/./packages/tags/src/styled/StyledClose.ts","webpack://@zendeskgarden/react-components/./packages/tags/src/styled/StyledTag.ts","webpack://@zendeskgarden/react-components/./packages/theming/demo/stories/ArrowStylesStory.tsx","webpack://@zendeskgarden/react-components/./packages/theming/demo/stories/GetColorStory.tsx","webpack://@zendeskgarden/react-components/./packages/theming/demo/stories/MenuStylesStory.tsx","webpack://@zendeskgarden/react-components/./packages/theming/demo/stories/data.ts","webpack://@zendeskgarden/react-components/./packages/theming/src/elements/ThemeProvider.tsx","webpack://@zendeskgarden/react-components/./packages/theming/src/elements/palette/index.ts","webpack://@zendeskgarden/react-components/./packages/theming/src/elements/theme/index.ts","webpack://@zendeskgarden/react-components/./packages/theming/src/utils/arrowStyles.ts","webpack://@zendeskgarden/react-components/./packages/theming/src/utils/getColor.ts","webpack://@zendeskgarden/react-components/./packages/theming/src/utils/getLineHeight.ts","webpack://@zendeskgarden/react-components/./packages/theming/src/utils/isRtl.ts","webpack://@zendeskgarden/react-components/./packages/theming/src/utils/menuStyles.ts","webpack://@zendeskgarden/react-components/./packages/theming/src/utils/retrieveComponentStyles.ts","webpack://@zendeskgarden/react-components/./packages/theming/src/utils/useDocument.ts","webpack://@zendeskgarden/react-components/./packages/tooltips/demo/stories/TooltipStory.tsx","webpack://@zendeskgarden/react-components/./packages/tooltips/demo/stories/data.ts","webpack://@zendeskgarden/react-components/./packages/tooltips/src/elements/Paragraph.tsx","webpack://@zendeskgarden/react-components/./packages/tooltips/src/elements/Title.tsx","webpack://@zendeskgarden/react-components/./packages/tooltips/src/elements/Tooltip.tsx","webpack://@zendeskgarden/react-components/./packages/tooltips/src/styled/StyledParagraph.ts","webpack://@zendeskgarden/react-components/./packages/tooltips/src/styled/StyledTitle.ts","webpack://@zendeskgarden/react-components/./packages/tooltips/src/styled/StyledTooltip.ts","webpack://@zendeskgarden/react-components/./packages/tooltips/src/styled/StyledTooltipWrapper.ts","webpack://@zendeskgarden/react-components/./packages/tooltips/src/utils/gardenPlacements.ts","webpack://@zendeskgarden/react-components/./packages/typography/demo/stories/BlockquoteStory.tsx","webpack://@zendeskgarden/react-components/./packages/typography/demo/stories/OrderedListStory.tsx","webpack://@zendeskgarden/react-components/./packages/typography/demo/stories/ParagraphStory.tsx","webpack://@zendeskgarden/react-components/./packages/typography/demo/stories/SpanStory.tsx","webpack://@zendeskgarden/react-components/./packages/typography/demo/stories/TypescaleStory.tsx","webpack://@zendeskgarden/react-components/./packages/typography/demo/stories/UnorderedListStory.tsx","webpack://@zendeskgarden/react-components/./packages/typography/demo/stories/data.ts","webpack://@zendeskgarden/react-components/./packages/typography/src/elements/Blockquote.tsx","webpack://@zendeskgarden/react-components/./packages/typography/src/elements/Code.tsx","webpack://@zendeskgarden/react-components/./packages/typography/src/elements/CodeBlock.tsx","webpack://@zendeskgarden/react-components/./packages/typography/src/elements/Ellipsis.tsx","webpack://@zendeskgarden/react-components/./packages/typography/src/elements/LG.tsx","webpack://@zendeskgarden/react-components/./packages/typography/src/elements/MD.tsx","webpack://@zendeskgarden/react-components/./packages/typography/src/elements/Paragraph.tsx","webpack://@zendeskgarden/react-components/./packages/typography/src/elements/SM.tsx","webpack://@zendeskgarden/react-components/./packages/typography/src/elements/Span.tsx","webpack://@zendeskgarden/react-components/./packages/typography/src/elements/XL.tsx","webpack://@zendeskgarden/react-components/./packages/typography/src/elements/XXL.tsx","webpack://@zendeskgarden/react-components/./packages/typography/src/elements/XXXL.tsx","webpack://@zendeskgarden/react-components/./packages/typography/src/elements/lists/OrderedList.tsx","webpack://@zendeskgarden/react-components/./packages/typography/src/elements/lists/OrderedListItem.tsx","webpack://@zendeskgarden/react-components/./packages/typography/src/elements/lists/UnorderedList.tsx","webpack://@zendeskgarden/react-components/./packages/typography/src/elements/lists/UnorderedListItem.tsx","webpack://@zendeskgarden/react-components/./packages/typography/src/styled/StyledBlockquote.ts","webpack://@zendeskgarden/react-components/./packages/typography/src/styled/StyledCode.ts","webpack://@zendeskgarden/react-components/./packages/typography/src/styled/StyledCodeBlock.ts","webpack://@zendeskgarden/react-components/./packages/typography/src/styled/StyledCodeBlockContainer.ts","webpack://@zendeskgarden/react-components/./packages/typography/src/styled/StyledCodeBlockLine.ts","webpack://@zendeskgarden/react-components/./packages/typography/src/styled/StyledCodeBlockToken.ts","webpack://@zendeskgarden/react-components/./packages/typography/src/styled/StyledEllipsis.ts","webpack://@zendeskgarden/react-components/./packages/typography/src/styled/StyledFont.tsx","webpack://@zendeskgarden/react-components/./packages/typography/src/styled/StyledIcon.ts","webpack://@zendeskgarden/react-components/./packages/typography/src/styled/StyledList.ts","webpack://@zendeskgarden/react-components/./packages/typography/src/styled/StyledListItem.ts","webpack://@zendeskgarden/react-components/./packages/typography/src/styled/StyledParagraph.ts","webpack://@zendeskgarden/react-components/./packages/typography/src/utils/useOrderedListContext.ts","webpack://@zendeskgarden/react-components/./packages/typography/src/utils/useUnorderedListContext.ts","webpack://@zendeskgarden/react-components/./storybook-init-framework-entry.js","webpack://@zendeskgarden/react-components/./packages/accordions/demo/#readme.stories.mdx","webpack://@zendeskgarden/react-components/./packages/accordions/demo/accordion.stories.mdx","webpack://@zendeskgarden/react-components/./packages/accordions/demo/stepper.stories.mdx","webpack://@zendeskgarden/react-components/./packages/accordions/demo/timeline.stories.mdx","webpack://@zendeskgarden/react-components/./packages/avatars/demo/#readme.stories.mdx","webpack://@zendeskgarden/react-components/./packages/avatars/demo/avatar.stories.mdx","webpack://@zendeskgarden/react-components/./packages/avatars/demo/~patterns/patterns.stories.mdx","webpack://@zendeskgarden/react-components/./packages/breadcrumbs/demo/#readme.stories.mdx","webpack://@zendeskgarden/react-components/./packages/breadcrumbs/demo/breadcrumb.stories.mdx","webpack://@zendeskgarden/react-components/./packages/buttons/demo/#readme.stories.mdx","webpack://@zendeskgarden/react-components/./packages/buttons/demo/anchor.stories.mdx","webpack://@zendeskgarden/react-components/./packages/buttons/demo/button.stories.mdx","webpack://@zendeskgarden/react-components/./packages/buttons/demo/buttonGroup.stories.mdx","webpack://@zendeskgarden/react-components/./packages/buttons/demo/chevronButton.stories.mdx","webpack://@zendeskgarden/react-components/./packages/buttons/demo/iconButton.stories.mdx","webpack://@zendeskgarden/react-components/./packages/buttons/demo/splitButton.stories.mdx","webpack://@zendeskgarden/react-components/./packages/buttons/demo/toggleButton.stories.mdx","webpack://@zendeskgarden/react-components/./packages/buttons/demo/toggleIconButton.stories.mdx","webpack://@zendeskgarden/react-components/./packages/chrome/demo/#readme.stories.mdx","webpack://@zendeskgarden/react-components/./packages/chrome/demo/chrome.stories.mdx","webpack://@zendeskgarden/react-components/./packages/chrome/demo/collapsibleSubNavItem.stories.mdx","webpack://@zendeskgarden/react-components/./packages/chrome/demo/sheet.stories.mdx","webpack://@zendeskgarden/react-components/./packages/colorpickers/demo/#readme.stories.mdx","webpack://@zendeskgarden/react-components/./packages/colorpickers/demo/colorPicker.stories.mdx","webpack://@zendeskgarden/react-components/./packages/colorpickers/demo/colorPickerDialog.stories.mdx","webpack://@zendeskgarden/react-components/./packages/colorpickers/demo/colorSwatch.stories.mdx","webpack://@zendeskgarden/react-components/./packages/colorpickers/demo/colorSwatchDialog.stories.mdx","webpack://@zendeskgarden/react-components/./packages/datepickers/demo/#readme.stories.mdx","webpack://@zendeskgarden/react-components/./packages/datepickers/demo/datepicker.stories.mdx","webpack://@zendeskgarden/react-components/./packages/datepickers/demo/datepickerRange.stories.mdx","webpack://@zendeskgarden/react-components/./packages/dropdowns/demo/#readme.stories.mdx","webpack://@zendeskgarden/react-components/./packages/dropdowns/demo/autocomplete.stories.mdx","webpack://@zendeskgarden/react-components/./packages/dropdowns/demo/combobox.stories.mdx","webpack://@zendeskgarden/react-components/./packages/dropdowns/demo/menu.stories.mdx","webpack://@zendeskgarden/react-components/./packages/dropdowns/demo/multiselect.stories.mdx","webpack://@zendeskgarden/react-components/./packages/dropdowns/demo/select.stories.mdx","webpack://@zendeskgarden/react-components/./packages/forms/demo/#readme.stories.mdx","webpack://@zendeskgarden/react-components/./packages/forms/demo/checkbox.stories.mdx","webpack://@zendeskgarden/react-components/./packages/forms/demo/fauxInput.stories.mdx","webpack://@zendeskgarden/react-components/./packages/forms/demo/fieldset.stories.mdx","webpack://@zendeskgarden/react-components/./packages/forms/demo/file.stories.mdx","webpack://@zendeskgarden/react-components/./packages/forms/demo/fileList.stories.mdx","webpack://@zendeskgarden/react-components/./packages/forms/demo/fileUpload.stories.mdx","webpack://@zendeskgarden/react-components/./packages/forms/demo/input.stories.mdx","webpack://@zendeskgarden/react-components/./packages/forms/demo/inputGroup.stories.mdx","webpack://@zendeskgarden/react-components/./packages/forms/demo/mediaInput.stories.mdx","webpack://@zendeskgarden/react-components/./packages/forms/demo/multiThumbRange.stories.mdx","webpack://@zendeskgarden/react-components/./packages/forms/demo/radio.stories.mdx","webpack://@zendeskgarden/react-components/./packages/forms/demo/range.stories.mdx","webpack://@zendeskgarden/react-components/./packages/forms/demo/select.stories.mdx","webpack://@zendeskgarden/react-components/./packages/forms/demo/textarea.stories.mdx","webpack://@zendeskgarden/react-components/./packages/forms/demo/tiles.stories.mdx","webpack://@zendeskgarden/react-components/./packages/forms/demo/toggle.stories.mdx","webpack://@zendeskgarden/react-components/./packages/forms/demo/~patterns/patterns.stories.mdx","webpack://@zendeskgarden/react-components/./packages/grid/demo/#readme.stories.mdx","webpack://@zendeskgarden/react-components/./packages/grid/demo/grid.stories.mdx","webpack://@zendeskgarden/react-components/./packages/loaders/demo/#readme.stories.mdx","webpack://@zendeskgarden/react-components/./packages/loaders/demo/dots.stories.mdx","webpack://@zendeskgarden/react-components/./packages/loaders/demo/inline.stories.mdx","webpack://@zendeskgarden/react-components/./packages/loaders/demo/progress.stories.mdx","webpack://@zendeskgarden/react-components/./packages/loaders/demo/skeleton.stories.mdx","webpack://@zendeskgarden/react-components/./packages/loaders/demo/spinner.stories.mdx","webpack://@zendeskgarden/react-components/./packages/modals/demo/#readme.stories.mdx","webpack://@zendeskgarden/react-components/./packages/modals/demo/drawerModal.stories.mdx","webpack://@zendeskgarden/react-components/./packages/modals/demo/modal.stories.mdx","webpack://@zendeskgarden/react-components/./packages/modals/demo/tooltipModal.stories.mdx","webpack://@zendeskgarden/react-components/./packages/notifications/demo/#readme.stories.mdx","webpack://@zendeskgarden/react-components/./packages/notifications/demo/alert.stories.mdx","webpack://@zendeskgarden/react-components/./packages/notifications/demo/notification.stories.mdx","webpack://@zendeskgarden/react-components/./packages/notifications/demo/toastProvider.stories.mdx","webpack://@zendeskgarden/react-components/./packages/notifications/demo/well.stories.mdx","webpack://@zendeskgarden/react-components/./packages/pagination/demo/#readme.stories.mdx","webpack://@zendeskgarden/react-components/./packages/pagination/demo/cursorPagination.stories.mdx","webpack://@zendeskgarden/react-components/./packages/pagination/demo/pagination.stories.mdx","webpack://@zendeskgarden/react-components/./packages/tables/demo/#readme.stories.mdx","webpack://@zendeskgarden/react-components/./packages/tables/demo/table.stories.mdx","webpack://@zendeskgarden/react-components/./packages/tabs/demo/#readme.stories.mdx","webpack://@zendeskgarden/react-components/./packages/tabs/demo/tabs.stories.mdx","webpack://@zendeskgarden/react-components/./packages/tags/demo/#readme.stories.mdx","webpack://@zendeskgarden/react-components/./packages/tags/demo/tag.stories.mdx","webpack://@zendeskgarden/react-components/./packages/tags/demo/~patterns/patterns.stories.mdx","webpack://@zendeskgarden/react-components/./packages/theming/demo/#readme.stories.mdx","webpack://@zendeskgarden/react-components/./packages/theming/demo/utilities.stories.mdx","webpack://@zendeskgarden/react-components/./packages/tooltips/demo/#readme.stories.mdx","webpack://@zendeskgarden/react-components/./packages/tooltips/demo/tooltip.stories.mdx","webpack://@zendeskgarden/react-components/./packages/typography/demo/#readme.stories.mdx","webpack://@zendeskgarden/react-components/./packages/typography/demo/00_sm.stories.mdx","webpack://@zendeskgarden/react-components/./packages/typography/demo/01_md.stories.mdx","webpack://@zendeskgarden/react-components/./packages/typography/demo/02_lg.stories.mdx","webpack://@zendeskgarden/react-components/./packages/typography/demo/03_xl.stories.mdx","webpack://@zendeskgarden/react-components/./packages/typography/demo/04_xxl.stories.mdx","webpack://@zendeskgarden/react-components/./packages/typography/demo/05_xxxl.stories.mdx","webpack://@zendeskgarden/react-components/./packages/typography/demo/blockquote.stories.mdx","webpack://@zendeskgarden/react-components/./packages/typography/demo/code.stories.mdx","webpack://@zendeskgarden/react-components/./packages/typography/demo/codeBlock.stories.mdx","webpack://@zendeskgarden/react-components/./packages/typography/demo/ellipsis.stories.mdx","webpack://@zendeskgarden/react-components/./packages/typography/demo/orderedList.stories.mdx","webpack://@zendeskgarden/react-components/./packages/typography/demo/paragraph.stories.mdx","webpack://@zendeskgarden/react-components/./packages/typography/demo/span.stories.mdx","webpack://@zendeskgarden/react-components/./packages/typography/demo/unorderedList.stories.mdx","webpack://@zendeskgarden/react-components/\\.)(","webpack://@zendeskgarden/react-components/ignored|C:\\Users\\John\\Desktop\\story\\storybook\\node_modules\\object-inspect|./util.inspect"],"sourcesContent":["/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\nimport { create } from '@storybook/theming/create';\r\nimport { ThemeProvider, DEFAULT_THEME } from '../packages/theming/src';\r\n\r\nexport const parameters = {\r\n  actions: { argTypesRegex: '^on[A-Z].*' },\r\n  backgrounds: {\r\n    disable: true,\r\n    grid: { disable: true }\r\n  },\r\n  controls: {\r\n    hideNoControlsWarning: true,\r\n    sort: 'alpha'\r\n  },\r\n  docs: {\r\n    theme: create({\r\n      base: DEFAULT_THEME.colors.base\r\n    })\r\n  }\r\n};\r\n\r\nconst GlobalPreviewStyling = createGlobalStyle`\r\n  body {\r\n    background-color: ${p => p.theme.colors.background};\r\n    /* stylelint-disable-next-line declaration-no-important */\r\n    padding: 0 !important;\r\n    font-family: ${p => p.theme.fonts.system};\r\n  }\r\n`;\r\n\r\nconst StyledExampleWrapper = styled.div`\r\n  direction: ${p => (p.theme.rtl ? 'rtl' : 'ltr')};\r\n  padding: ${p => p.theme.space.xl};\r\n`;\r\n\r\nconst withThemeProvider = (Story, context) => {\r\n  const rtl = context.globals.locale === 'rtl';\r\n\r\n  if (context.globals.bedrock === 'enabled') {\r\n    document.querySelector('link[href$=\"bedrock/dist/index.css\"]').removeAttribute('disabled');\r\n  } else {\r\n    document.querySelector('link[href$=\"bedrock/dist/index.css\"]').setAttribute('disabled', true);\r\n  }\r\n\r\n  const theme = {\r\n    ...DEFAULT_THEME,\r\n    colors: { ...DEFAULT_THEME.colors, primaryHue: context.globals.primaryHue },\r\n    rtl\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalPreviewStyling />\r\n      {/* Work-around to get Storybook to play well with CSS transitions that are associated to props.\r\n      See: https://github.com/storybookjs/storybook/issues/12255 */}\r\n      {/* eslint-disable-next-line new-cap */}\r\n      <StyledExampleWrapper>{Story()}</StyledExampleWrapper>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport const decorators = [withThemeProvider];\r\n\r\nexport const globalTypes = {\r\n  locale: {\r\n    name: 'direction',\r\n    description: 'Locale direction',\r\n    defaultValue: 'ltr',\r\n    toolbar: {\r\n      icon: 'globe',\r\n      items: [\r\n        { value: 'ltr', title: 'LTR' },\r\n        { value: 'rtl', title: 'RTL' }\r\n      ]\r\n    }\r\n  },\r\n  bedrock: {\r\n    name: 'bedrock',\r\n    description: 'CSS Bedrock',\r\n    defaultValue: 'disabled',\r\n    toolbar: {\r\n      icon: 'link',\r\n      items: [\r\n        { value: 'disabled', title: 'Bedrock disabled' },\r\n        { value: 'enabled', title: 'Bedrock enabled' }\r\n      ]\r\n    }\r\n  },\r\n  primaryHue: {\r\n    name: 'primaryHue',\r\n    description: 'Primary hue',\r\n    defaultValue: DEFAULT_THEME.colors.primaryHue,\r\n    toolbar: {\r\n      icon: 'paintbrush',\r\n      items: [\r\n        { value: DEFAULT_THEME.colors.primaryHue, title: 'Default primary hue' },\r\n        { value: 'fuschia', title: 'Custom primary hue' }\r\n      ]\r\n    }\r\n  }\r\n};\r\n","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\r\n\r\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\r\n\r\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n/* eslint-disable import/no-unresolved */\r\nimport { addDecorator, addParameters, addLoader, addArgsEnhancer, addArgTypesEnhancer, setGlobalRender } from 'C:/Users/John/Desktop/story/storybook/node_modules/@storybook/client-api';\r\nimport { logger } from 'C:/Users/John/Desktop/story/storybook/node_modules/@storybook/client-logger';\r\nimport * as config from 'C:/Users/John/Desktop/story/storybook/.storybook/preview.js';\r\nObject.keys(config).forEach(function (key) {\r\n  var value = config[key];\r\n\r\n  switch (key) {\r\n    case 'args':\r\n    case 'argTypes':\r\n      {\r\n        return logger.warn('Invalid args/argTypes in config, ignoring.', JSON.stringify(value));\r\n      }\r\n\r\n    case 'decorators':\r\n      {\r\n        return value.forEach(function (decorator) {\r\n          return addDecorator(decorator, false);\r\n        });\r\n      }\r\n\r\n    case 'loaders':\r\n      {\r\n        return value.forEach(function (loader) {\r\n          return addLoader(loader, false);\r\n        });\r\n      }\r\n\r\n    case 'parameters':\r\n      {\r\n        return addParameters(_objectSpread({}, value), false);\r\n      }\r\n\r\n    case 'argTypesEnhancers':\r\n      {\r\n        return value.forEach(function (enhancer) {\r\n          return addArgTypesEnhancer(enhancer);\r\n        });\r\n      }\r\n\r\n    case 'argsEnhancers':\r\n      {\r\n        return value.forEach(function (enhancer) {\r\n          return addArgsEnhancer(enhancer);\r\n        });\r\n      }\r\n\r\n    case 'render':\r\n      {\r\n        return setGlobalRender(value);\r\n      }\r\n\r\n    case 'globals':\r\n    case 'globalTypes':\r\n      {\r\n        var v = {};\r\n        v[key] = value;\r\n        return addParameters(v, false);\r\n      }\r\n\r\n    case 'decorateStory':\r\n    case 'renderToDOM':\r\n      {\r\n        return null; // This key is not handled directly in v6 mode.\r\n      }\r\n\r\n    default:\r\n      {\r\n        // eslint-disable-next-line prefer-template\r\n        return console.log(key + ' was not supported :( !');\r\n      }\r\n  }\r\n});","\"use strict\";\r\n\r\nvar _frameworkImportPath = require(\"@storybook/react\");\r\n\r\n/* eslint-disable import/no-unresolved */\r\n(0, _frameworkImportPath.configure)([require.context('./packages', true, /^\\.[\\\\/](?:(?!\\.)(?=.)[^\\\\/]*?[\\\\/]demo(?:[\\\\/](?!\\.)(?:(?:(?!(?:^|[\\\\/])\\.).)*?)[\\\\/]|[\\\\/]|$)(?!\\.)(?=.)[^\\\\/]*?\\.stories\\.(js|jsx|ts|tsx|mdx))$/)], module, false);","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { MouseEventHandler } from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { Accordion, IAccordionProps } from '@zendeskgarden/react-accordions';\r\nimport { IconButton } from '@zendeskgarden/react-buttons';\r\nimport { Tooltip } from '@zendeskgarden/react-tooltips';\r\nimport { IAccordionSection } from './types';\r\n\r\ninterface IProps {\r\n  isCompact: boolean;\r\n}\r\n\r\nconst handleClick: MouseEventHandler<HTMLButtonElement> = event => event.preventDefault();\r\n\r\nconst IconButtons = ({ isCompact }: IProps) => (\r\n  <>\r\n    <Tooltip content=\"Settings\">\r\n      <IconButton\r\n        focusInset={isCompact}\r\n        size={isCompact ? 'small' : 'medium'}\r\n        onClick={handleClick}\r\n      >\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n          <path fill=\"currentColor\" d=\"M12.688 5.61a.5.5 0 01.69.718l-.066.062-5 4a.5.5 0 01-.542.054l-.082-.054-5-4a.5.5 0 01.55-.83l.074.05L8 9.359l4.688-3.75z\"/>\r\n        </svg>\r\n    </IconButton>\r\n    </Tooltip>\r\n    <Tooltip content=\"Folders\">\r\n      <IconButton\r\n        focusInset={isCompact}\r\n        size={isCompact ? 'small' : 'medium'}\r\n        onClick={handleClick}\r\n      >\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n        <path fill=\"currentColor\" d=\"M12.688 5.61a.5.5 0 01.69.718l-.066.062-5 4a.5.5 0 01-.542.054l-.082-.054-5-4a.5.5 0 01.55-.83l.074.05L8 9.359l4.688-3.75z\"/>\r\n        </svg>\r\n      </IconButton>\r\n    </Tooltip>\r\n  </>\r\n);\r\n\r\ninterface IArgs extends IAccordionProps {\r\n  hasIconButtons: boolean;\r\n  sections: IAccordionSection[];\r\n}\r\n\r\nexport const AccordionStory: Story<IArgs> = ({ sections, ...args }: IArgs) => (\r\n  <Accordion {...args}>\r\n    {sections.map((section, index) => (\r\n      <Accordion.Section key={index}>\r\n        <Accordion.Header>\r\n          <Accordion.Label>{section.headerLabel}</Accordion.Label>\r\n          {args.hasIconButtons && <IconButtons isCompact={args.isCompact || false} />}\r\n        </Accordion.Header>\r\n        <Accordion.Panel>{section.panel}</Accordion.Panel>\r\n      </Accordion.Section>\r\n    ))}\r\n  </Accordion>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport Icon from '@zendeskgarden/svg-icons/src/12/clipboard-list-stroke.svg';\r\nimport { Stepper, IStepperProps } from '@zendeskgarden/react-accordions';\r\nimport { IStepperStep } from './types';\r\n\r\ninterface IArgs extends IStepperProps {\r\n  hasIcon: boolean;\r\n  isLabelHidden: boolean;\r\n  steps: IStepperStep[];\r\n}\r\n\r\nexport const StepperStory: Story<IArgs> = ({ steps, ...args }) => (\r\n  <Stepper {...args}>\r\n    {steps.map((step, index) => (\r\n      <Stepper.Step key={index}>\r\n        <Stepper.Label icon={args.hasIcon && <Icon />} isHidden={args.isLabelHidden}>\r\n          {step.label}\r\n        </Stepper.Label>\r\n        <Stepper.Content>{step.content}</Stepper.Content>\r\n      </Stepper.Step>\r\n    ))}\r\n  </Stepper>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { Span } from '@zendeskgarden/react-typography';\r\nimport { Timeline, ITimelineProps } from '@zendeskgarden/react-accordions';\r\nimport { ITimelineItem } from './types';\r\n\r\ninterface IArgs extends ITimelineProps {\r\n  hasIcon: boolean;\r\n  hasOppositeContent: boolean;\r\n  items: ITimelineItem[];\r\n  surfaceColor: string;\r\n}\r\n\r\nexport const TimelineStory: Story<IArgs> = ({ items, ...args }) => (\r\n  <div style={{ backgroundColor: args.surfaceColor }}>\r\n    <Timeline {...args}>\r\n      {items.map((item, index) => (\r\n        <Timeline.Item key={index} icon={args.hasIcon && <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" focusable=\"false\" viewBox=\"0 0 12 12\">\r\n        <g fill=\"none\" stroke=\"currentColor\">\r\n          <circle cx=\"6\" cy=\"6\" r=\"5.5\"/>\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M5.5 3v3.5H8\"/>\r\n        </g>\r\n      </svg>} surfaceColor={args.surfaceColor}>\r\n          {args.hasOppositeContent && (\r\n            <Timeline.OppositeContent>\r\n              <Span hue=\"grey\">{item.description}</Span>\r\n            </Timeline.OppositeContent>\r\n          )}\r\n          <Timeline.Content>\r\n            <Span isBold tag=\"div\">\r\n              {item.title}\r\n            </Span>\r\n            {!args.hasOppositeContent && <Span hue=\"grey\">{item.description}</Span>}\r\n          </Timeline.Content>\r\n        </Timeline.Item>\r\n      ))}\r\n    </Timeline>\r\n  </div>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { IAccordionSection, IStepperStep, ITimelineItem } from './types';\r\n\r\nexport const ACCORDION_SECTIONS: IAccordionSection[] = [\r\n  {\r\n    headerLabel: 'Turnip greens yarrow',\r\n    panel: `Turnip greens yarrow ricebean rutabaga endive cauliflower sea\r\n    lettuce kohlrabi amaranth water spinach avocado daikon napa cabbage\r\n    asparagus winter purslane kale. Celery potato scallion desert raisin\r\n    horseradish spinach carrot soko. Lotus root water spinach fennel kombu maize\r\n    bamboo shoot green bean swiss chard seakale pumpkin onion chickpea gram corn\r\n    pea.  Brussels sprout coriander water chestnut gourd swiss chard wakame\r\n    kohlrabi beetroot carrot watercress.`\r\n  },\r\n  {\r\n    headerLabel: 'Corn amaranth salsify',\r\n    panel: `Corn amaranth salsify bunya nuts nori azuki bean chickweed potato\r\n    bell pepper artichoke. Nori grape silver beet broccoli kombu beet greens\r\n    fava bean potato quandong celery.  Bunya nuts black-eyed pea prairie turnip\r\n    leek lentil turnip greens parsnip. Sea lettuce lettuce water chestnut\r\n    eggplant winter purslane fennel azuki bean earthnut pea sierra leone bologi\r\n    leek soko chicory celtuce parsley jícama.`\r\n  },\r\n  {\r\n    headerLabel: 'Celery quandong swiss',\r\n    panel: `Celery quandong swiss chard chicory earthnut pea potato. Salsify\r\n    taro catsear garlic gram celery bitterleaf wattle seed collard greens nori.\r\n    Grape wattle seed kombu beetroot horseradish carrot squash brussels sprout\r\n    chard. Pea horseradish azuki bean lettuce avocado asparagus okra. Kohlrabi\r\n    radish okra azuki bean corn fava bean mustard tigernut jícama green bean\r\n    celtuce collard greens avocado quandong fennel gumbo black-eyed pea.`\r\n  },\r\n  {\r\n    headerLabel: 'Grape silver beet',\r\n    panel: `Grape silver beet watercress potato tigernut corn groundnut.\r\n    Chickweed okra winter purslane coriander yarrow sweet pepper radish garlic\r\n    brussels sprout pea groundnut summer purslane earthnut pea tomato spring\r\n    onion azuki bean gourd. Gumbo kakadu plum komatsuna black-eyed pea green\r\n    bean zucchini gourd winter purslane silver beet rock melon radish asparagus\r\n    spinach.`\r\n  },\r\n  {\r\n    headerLabel: 'Soko radicchio bunya',\r\n    panel: `Soko radicchio bunya nuts gram dulse silver beet parsnip napa\r\n    cabbage lotus root sea lettuce brussels sprout cabbage. Catsear cauliflower\r\n    garbanzo yarrow salsify chicory garlic bell pepper napa cabbage lettuce\r\n    tomato kale arugula melon sierra leone bologi rutabaga tigernut. Sea lettuce\r\n    gumbo grape kale kombu cauliflower salsify kohlrabi okra sea lettuce\r\n    broccoli celery lotus root carrot winter purslane turnip greens garlic.\r\n    Jícama garlic courgette coriander radicchio plantain scallion cauliflower\r\n    fava bean desert raisin spring onion chicory bunya nuts. Sea lettuce water\r\n    spinach gram fava bean leek dandelion silver beet eggplant bush.`\r\n  }\r\n];\r\n\r\nexport const STEPPER_STEPS: IStepperStep[] = [\r\n  {\r\n    label: 'Veggies es',\r\n    content: `Veggies es vobis, sweetpotatotomatillo vos postulo essum magis kohlrabi welsh\r\n      onion daikon amaranth tatsoi tomatillo melon azuki bean garlic. Gumbo beet greens corn soko\r\n      endive gumbo gourd. Parsley shallot courgette tatsoi pea sprouts fava bean collard greens\r\n      dandelion okra wakame tomato. Dandelion cucumber earthnut pea peanut soko zucchini.`\r\n  },\r\n  {\r\n    label: 'Turnip greens',\r\n    content: `Turnip greens yarrow ricebean rutabaga endive cauliflower sea lettuce kohlrabi\r\n      amaranth water spinach avocado daikon napa cabbage asparagus winter purslane kale. Celery\r\n      potato scallion desert raisin horseradish spinach carrot soko. Lotus root water spinach fennel\r\n      kombu maize bamboo shoot green bean swiss chard seakale pumpkin onion chickpea gram corn pea.\r\n      Brussels sprout coriander water chestnut gourd swiss chard wakame kohlrabi beetroot carrot\r\n      watercress.`\r\n  },\r\n  {\r\n    label: 'Corn amaranth',\r\n    content: `Corn amaranth salsify bunya nuts nori azuki bean chickweed potato bell pepper\r\n      artichoke. Nori grape silver beet broccoli kombu beet greens fava bean potato quandong celery.\r\n      Bunya nuts black-eyed pea prairie turnip leek lentil turnip greens parsnip. Sea lettuce lettuce\r\n      water chestnut eggplant winter purslane fennel azuki bean earthnut pea sierra leone bologi leek\r\n      soko chicory celtuce parsley jícama.`\r\n  },\r\n  {\r\n    label: 'Celery quandong',\r\n    content: `Celery quandong swiss chard chicory earthnut pea potato. Salsify taro catsear garlic\r\n      gram celery bitterleaf wattle seed collard greens nori. Grape wattle seed kombu beetroot\r\n      horseradish carrot squash brussels sprout chard. Pea horseradish azuki bean lettuce avocado\r\n      asparagus okra. Kohlrabi radish okra azuki bean corn fava bean mustard tigernut jícama green\r\n      bean celtuce collard greens avocado quandong fennel gumbo black-eyed pea.`\r\n  },\r\n  {\r\n    label: 'Grape silver',\r\n    content: `Grape silver beet watercress potato tigernut corn groundnut. Chickweed okra winter\r\n      purslane coriander yarrow sweet pepper radish garlic brussels sprout pea groundnut summer\r\n      purslane earthnut pea tomato spring onion azuki bean gourd. Gumbo kakadu plum komatsuna\r\n      black-eyed pea green bean zucchini gourd winter purslane silver beet rock melon radish\r\n      asparagus spinach.`\r\n  },\r\n  {\r\n    label: 'Beetroot water',\r\n    content: `Beetroot water spinach okra water chestnut ricebean pea catsear courgette summer\r\n      purslane. Water spinach arugula pea tatsoi aubergine spring onion bush tomato kale radicchio\r\n      turnip chicory salsify pea sprouts fava bean. Dandelion zucchini burdock yarrow chickpea\r\n      dandelion sorrel courgette turnip greens tigernut soybean radish artichoke wattle seed endive\r\n      groundnut broccoli arugula.`\r\n  },\r\n  {\r\n    label: 'Soko radicchio',\r\n    content: `Soko radicchio bunya nuts gram dulse silver beet parsnip napa cabbage lotus root sea\r\n      lettuce brussels sprout cabbage. Catsear cauliflower garbanzo yarrow salsify chicory garlic\r\n      bell pepper napa cabbage lettuce tomato kale arugula melon sierra leone bologi rutabaga\r\n      tigernut. Sea lettuce gumbo grape kale kombu cauliflower salsify kohlrabi okra sea lettuce\r\n      broccoli celery lotus root carrot winter purslane turnip greens garlic. Jícama garlic courgette\r\n      coriander radicchio plantain scallion cauliflower fava bean desert raisin spring onion chicory\r\n      bunya nuts. Sea lettuce water spinach gram fava bean leek dandelion silver beet eggplant bush.`\r\n  },\r\n  {\r\n    label: 'Zucchini soko',\r\n    content: `Zucchini soko peanut pea okra cucumber Dandelion tomato. wakame earthnut dandelion\r\n      greens collard bean fava sprouts pea tatsoi courgette shallot Parsley gourd. Gumbo endive soko\r\n      corn greens beet Gumbo garlic. Bean azuki melon tomatillo tatsoi amaranth daikon onion welsh\r\n      kohlrabi magis essum postulo vos proinde vobis, bonus es veggies.`\r\n  },\r\n  {\r\n    label: 'Swiss carrot',\r\n    content: `Swiss carrot beetroot kohlrabi wakame chard gourd chestnut water coriander sprout\r\n      brussels pea. Corn gram chickpea onion pumpkin seakale chard swiss bean green shoot bamboo\r\n      maize kombu fennel spinach water root Lotus soko. Carrot spinach horseradish raisin desert\r\n      scallion potato celery kale. Purslane winter asparagus cabbage napa daikon avocado spinach\r\n      water amaranth kohlrabi lettuce sea cauliflower endive rutabaga ricebean yarrow greens.`\r\n  },\r\n  {\r\n    label: 'Pea black-eyed',\r\n    content: `Pea black-eyed gumbo fennel quandong avocado greens collard celtuce bean green jícama\r\n      tigernut mustard bean fava corn bean azuki okra radish Kohlrabi okra. asparagus avocado lettuce\r\n      bean azuki horseradish pea chard. Sprout brussels squash carrot horseradish beetroot kombu seed\r\n      wattle Grape nori. Greens collard seed wattle bitterleaf celery gram garlic catsear taro\r\n      salsify potato. Pea earthnut chicory chard swiss quandong celery.`\r\n  }\r\n];\r\n\r\nexport const TIMELINE_ITEMS: ITimelineItem[] = [\r\n  {\r\n    title: 'Issue with order',\r\n    description: 'Today 9:00 AM'\r\n  },\r\n  {\r\n    title: 'Ordered 3 items',\r\n    description: 'Feb 08, 9:05 AM'\r\n  },\r\n  {\r\n    title: 'Added 3 items to cart',\r\n    description: 'Jan 21, 9:13 AM'\r\n  },\r\n  {\r\n    title: 'Viewed product page',\r\n    description: 'Jan 21, 9:21 AM'\r\n  }\r\n];\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, {\r\n  useRef,\r\n  useEffect,\r\n  forwardRef,\r\n  RefAttributes,\r\n  HTMLAttributes,\r\n  PropsWithoutRef,\r\n  ForwardRefExoticComponent,\r\n  useMemo\r\n} from 'react';\r\nimport { useAccordion } from '@zendeskgarden/container-accordion';\r\nimport { StyledAccordion } from '../../styled';\r\nimport { AccordionContext } from '../../utils';\r\nimport { Section } from '../accordion/components/Section';\r\nimport { Header } from '../accordion/components/Header';\r\nimport { Label } from '../accordion/components/Label';\r\nimport { Panel } from '../accordion/components/Panel';\r\n\r\ninterface IStaticAccordionExport<T, P>\r\n  extends ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>> {\r\n  Section: typeof Section;\r\n  Header: typeof Header;\r\n  Label: typeof Label;\r\n  Panel: typeof Panel;\r\n}\r\n\r\nexport interface IAccordionProps extends Omit<HTMLAttributes<HTMLDivElement>, 'onChange'> {\r\n  /** Sets `aria-level` heading rank in the document structure */\r\n  level: number;\r\n  /** Sets the expanded sections in a controlled accordion */\r\n  expandedSections?: number[];\r\n  /** Sets the default expanded sections in an uncontrolled accordion */\r\n  defaultExpandedSections?: number[];\r\n  /** Hides section borders */\r\n  isBare?: boolean;\r\n  /** Allows uncontrolled accordion sections to collapse */\r\n  isCollapsible?: boolean;\r\n  /** Applies compact styling */\r\n  isCompact?: boolean;\r\n  /** Animates section expansion and collapse */\r\n  isAnimated?: boolean;\r\n  /** Enables simultaneous expansion of uncontrolled accordion sections */\r\n  isExpandable?: boolean;\r\n  /**\r\n   * Handles accordion expansion changes\r\n   *\r\n   * @param {number} index A section index\r\n   */\r\n  onChange?: (index: number) => void;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Accordion = forwardRef<HTMLDivElement, IAccordionProps>(\r\n  (\r\n    {\r\n      level,\r\n      isBare,\r\n      onChange,\r\n      isCompact,\r\n      isAnimated,\r\n      isExpandable,\r\n      isCollapsible,\r\n      defaultExpandedSections,\r\n      expandedSections: controlledExpandedSections,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const { expandedSections, getHeaderProps, getTriggerProps, getPanelProps } = useAccordion({\r\n      collapsible: isCollapsible,\r\n      expandable: isExpandable,\r\n      onChange,\r\n      defaultExpandedSections,\r\n      expandedSections: controlledExpandedSections\r\n    });\r\n    const currentIndexRef = useRef(0);\r\n\r\n    useEffect(() => {\r\n      currentIndexRef.current = 0;\r\n    });\r\n\r\n    const value = useMemo(\r\n      () => ({\r\n        level,\r\n        isBare,\r\n        isCompact,\r\n        isAnimated,\r\n        isCollapsible,\r\n        getPanelProps,\r\n        getHeaderProps,\r\n        getTriggerProps,\r\n        currentIndexRef,\r\n        expandedSections\r\n      }),\r\n      [\r\n        level,\r\n        isBare,\r\n        isCompact,\r\n        isAnimated,\r\n        isCollapsible,\r\n        getPanelProps,\r\n        getHeaderProps,\r\n        getTriggerProps,\r\n        currentIndexRef,\r\n        expandedSections\r\n      ]\r\n    );\r\n\r\n    return (\r\n      <AccordionContext.Provider value={value}>\r\n        <StyledAccordion ref={ref} {...props} />\r\n      </AccordionContext.Provider>\r\n    );\r\n  }\r\n) as IStaticAccordionExport<HTMLDivElement, IAccordionProps>;\r\n\r\nAccordion.Section = Section;\r\nAccordion.Header = Header;\r\nAccordion.Label = Label;\r\nAccordion.Panel = Panel;\r\n\r\nAccordion.displayName = 'Accordion';\r\n\r\nAccordion.defaultProps = {\r\n  isBare: false,\r\n  isCompact: false,\r\n  isAnimated: true,\r\n  isCollapsible: true,\r\n  isExpandable: false,\r\n  expandedSections: undefined,\r\n  onChange: () => undefined\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useState, FocusEvent, forwardRef, HTMLAttributes, useMemo } from 'react';\r\nimport { composeEventHandlers } from '@zendeskgarden/container-utilities';\r\n// import ChevronDown from '@zendeskgarden/svg-icons/src/16/chevron-down-stroke.svg';\r\nimport { useAccordionContext, useSectionContext, HeaderContext } from '../../../utils';\r\nimport { StyledHeader, StyledRotateIcon, COMPONENT_ID as buttonGardenId } from '../../../styled';\r\n\r\nexport const Header = forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>((props, ref) => {\r\n  const {\r\n    level: ariaLevel,\r\n    isCompact,\r\n    isCollapsible,\r\n    getHeaderProps,\r\n    getTriggerProps,\r\n    expandedSections\r\n  } = useAccordionContext();\r\n  const { onClick, onFocus, onBlur, onMouseOver, onMouseOut, children, ...other } = props;\r\n  const sectionIndex = useSectionContext();\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const isExpanded = expandedSections.includes(sectionIndex);\r\n  /**\r\n   *  Pressing the space key on a button triggers the `onTriggerClick` callback.\r\n   * `onKeyDown` is plucked out and not passed to the Label (button) element\r\n   * to prevent double invocations of the click event.\r\n   */\r\n  const {\r\n    onClick: onTriggerClick,\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    onKeyDown,\r\n    ...otherTriggerProps\r\n  } = getTriggerProps({\r\n    type: 'button',\r\n    index: sectionIndex\r\n  });\r\n  const onHeaderFocus = (e: FocusEvent) => {\r\n    e.persist();\r\n\r\n    setTimeout(() => {\r\n      const isAccordionButton = e.target.getAttribute('data-garden-id') === buttonGardenId;\r\n      const isFocusVisible = e.target.getAttribute('data-garden-focus-visible');\r\n\r\n      if (isAccordionButton && isFocusVisible) {\r\n        setIsFocused(true);\r\n      }\r\n    }, 0);\r\n  };\r\n\r\n  const value = useMemo(\r\n    () => ({\r\n      isHovered,\r\n      otherTriggerProps\r\n    }),\r\n    [isHovered, otherTriggerProps]\r\n  );\r\n\r\n  return (\r\n    <HeaderContext.Provider value={value}>\r\n      <StyledHeader\r\n        {...getHeaderProps({\r\n          ref,\r\n          ariaLevel,\r\n          isCompact,\r\n          isFocused,\r\n          isExpanded,\r\n          isCollapsible,\r\n          onClick: composeEventHandlers(onClick, onTriggerClick),\r\n          onFocus: composeEventHandlers(onFocus, onHeaderFocus),\r\n          onBlur: composeEventHandlers(onBlur, () => setIsFocused(false)),\r\n          onMouseOver: composeEventHandlers(onMouseOver, () => setIsHovered(true)),\r\n          onMouseOut: composeEventHandlers(onMouseOut, () => setIsHovered(false)),\r\n          ...other\r\n        })}\r\n      >\r\n        {children}\r\n        <StyledRotateIcon\r\n          isCompact={isCompact}\r\n          isHovered={isHovered}\r\n          isRotated={isExpanded}\r\n          isCollapsible={isCollapsible}\r\n          onMouseOver={composeEventHandlers(onMouseOver, () => setIsHovered(true))}\r\n          onMouseOut={composeEventHandlers(onMouseOut, () => setIsHovered(false))}\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"currentColor\" d=\"M12.688 5.61a.5.5 0 01.69.718l-.066.062-5 4a.5.5 0 01-.542.054l-.082-.054-5-4a.5.5 0 01.55-.83l.074.05L8 9.359l4.688-3.75z\"/>\r\n</svg>\r\n        </StyledRotateIcon>\r\n      </StyledHeader>\r\n    </HeaderContext.Provider>\r\n  );\r\n});\r\n\r\nHeader.displayName = 'Header';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { forwardRef, ButtonHTMLAttributes } from 'react';\r\nimport { StyledButton } from '../../../styled';\r\nimport { useAccordionContext, useHeaderContext, useSectionContext } from '../../../utils';\r\n\r\nexport const Label = forwardRef<HTMLButtonElement, ButtonHTMLAttributes<HTMLButtonElement>>(\r\n  (props, ref) => {\r\n    const sectionIndex = useSectionContext();\r\n    const { isCompact, isCollapsible, expandedSections } = useAccordionContext();\r\n    const isExpanded = expandedSections.includes(sectionIndex);\r\n    const { isHovered, otherTriggerProps } = useHeaderContext();\r\n\r\n    return (\r\n      <StyledButton\r\n        ref={ref}\r\n        isCompact={isCompact}\r\n        isHovered={isHovered}\r\n        isExpanded={isExpanded}\r\n        isCollapsible={isCollapsible}\r\n        {...otherTriggerProps}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nLabel.displayName = 'Label';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useCallback, useRef, forwardRef, HTMLAttributes } from 'react';\r\nimport debounce from 'lodash.debounce';\r\nimport mergeRefs from 'react-merge-refs';\r\nimport { useAccordionContext, useSectionContext, IAccordionContext } from '../../../utils';\r\nimport { StyledPanel, StyledInnerPanel } from '../../../styled';\r\n\r\ntype PanelProps = IAccordionContext | { isExpanded?: boolean };\r\n\r\nexport const Panel = forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => {\r\n  const { isCompact, isBare, isAnimated, getPanelProps, expandedSections } = useAccordionContext();\r\n  const panelRef = useRef<HTMLElement>();\r\n  const index = useSectionContext();\r\n  const isExpanded = expandedSections.includes(index);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const updateMaxHeight = useCallback(\r\n    debounce(() => {\r\n      if (panelRef.current) {\r\n        const child = panelRef.current.children[0] as any;\r\n\r\n        child.style.maxHeight = `${child.scrollHeight}px`;\r\n      }\r\n    }, 100),\r\n    [panelRef]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (!isAnimated) {\r\n      return undefined;\r\n    }\r\n\r\n    addEventListener('resize', updateMaxHeight);\r\n    updateMaxHeight();\r\n\r\n    return () => {\r\n      removeEventListener('resize', updateMaxHeight);\r\n    };\r\n  }, [isAnimated, isExpanded, updateMaxHeight, props.children]);\r\n\r\n  return (\r\n    <StyledPanel\r\n      {...getPanelProps<PanelProps>({\r\n        role: null,\r\n        ref: mergeRefs([panelRef, ref]),\r\n        index,\r\n        isBare,\r\n        isCompact,\r\n        isExpanded,\r\n        isAnimated,\r\n        ...props\r\n      })}\r\n    >\r\n      <StyledInnerPanel isExpanded={isExpanded} isAnimated={isAnimated}>\r\n        {props.children}\r\n      </StyledInnerPanel>\r\n    </StyledPanel>\r\n  );\r\n});\r\n\r\nPanel.displayName = 'Panel';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { forwardRef, useRef, HTMLAttributes } from 'react';\r\nimport { useAccordionContext, SectionContext } from '../../../utils';\r\nimport { StyledSection } from '../../../styled';\r\n\r\nexport const Section = forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>((props, ref) => {\r\n  const { currentIndexRef } = useAccordionContext();\r\n  const sectionIndexRef = useRef(currentIndexRef.current++);\r\n  const sectionIndex = sectionIndexRef.current;\r\n\r\n  return (\r\n    <SectionContext.Provider value={sectionIndex}>\r\n      <StyledSection ref={ref} {...props} />\r\n    </SectionContext.Provider>\r\n  );\r\n});\r\n\r\nSection.displayName = 'Section';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, {\r\n  useRef,\r\n  useEffect,\r\n  forwardRef,\r\n  OlHTMLAttributes,\r\n  ForwardRefExoticComponent,\r\n  PropsWithoutRef,\r\n  RefAttributes,\r\n  useMemo\r\n} from 'react';\r\nimport { StyledStepper } from '../../styled';\r\nimport { StepperContext } from '../../utils';\r\nimport { Step } from './components/Step';\r\nimport { Label } from './components/Label';\r\nimport { Content } from './components/Content';\r\n\r\ninterface IStaticStepperExport<T, P>\r\n  extends ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>> {\r\n  Step: typeof Step;\r\n  Label: typeof Label;\r\n  Content: typeof Content;\r\n}\r\n\r\nexport interface IStepperProps extends OlHTMLAttributes<HTMLOListElement> {\r\n  /** Defines the currently active step, starting at 0 */\r\n  activeIndex?: number;\r\n  /** Applies horizontal layout styling */\r\n  isHorizontal?: boolean;\r\n}\r\n\r\n/**\r\n * @extends OlHTMLAttributes<HTMLOListElement>\r\n */\r\nexport const Stepper = forwardRef<HTMLOListElement, IStepperProps>(\r\n  ({ isHorizontal, activeIndex, ...props }, ref) => {\r\n    const currentIndexRef = useRef(0);\r\n    const stepperContext = useMemo(\r\n      () => ({\r\n        isHorizontal: isHorizontal!,\r\n        activeIndex: activeIndex!,\r\n        currentIndexRef\r\n      }),\r\n      [isHorizontal, activeIndex, currentIndexRef]\r\n    );\r\n\r\n    useEffect(() => {\r\n      currentIndexRef.current = 0;\r\n    });\r\n\r\n    return (\r\n      <StepperContext.Provider value={stepperContext}>\r\n        <StyledStepper ref={ref} isHorizontal={isHorizontal} {...props} />\r\n      </StepperContext.Provider>\r\n    );\r\n  }\r\n) as IStaticStepperExport<HTMLDivElement, IStepperProps>;\r\n\r\nStepper.Step = Step;\r\nStepper.Label = Label;\r\nStepper.Content = Content;\r\n\r\nStepper.displayName = 'Stepper';\r\n\r\nStepper.defaultProps = {\r\n  activeIndex: 0,\r\n  isHorizontal: false\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { forwardRef, useRef, useCallback, useEffect, HTMLAttributes } from 'react';\r\nimport mergeRefs from 'react-merge-refs';\r\nimport debounce from 'lodash.debounce';\r\nimport { StyledContent, StyledInnerContent } from '../../../styled';\r\nimport { useStepContext, useStepperContext } from '../../../utils';\r\n\r\nexport const Content = forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>((props, ref) => {\r\n  const contentRef = useRef<HTMLDivElement>();\r\n  const { activeIndex, isHorizontal } = useStepperContext();\r\n  const { currentStepIndex } = useStepContext();\r\n  const isActive = currentStepIndex === activeIndex;\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const updateMaxHeight = useCallback(\r\n    debounce(() => {\r\n      if (contentRef.current) {\r\n        const child = contentRef.current.children[0] as any;\r\n\r\n        child.style.maxHeight = `${child.scrollHeight}px`;\r\n      }\r\n    }, 100),\r\n    [contentRef]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isActive && isHorizontal === false) {\r\n      addEventListener('resize', updateMaxHeight);\r\n      updateMaxHeight();\r\n\r\n      return () => {\r\n        removeEventListener('resize', updateMaxHeight);\r\n      };\r\n    }\r\n\r\n    return undefined;\r\n  }, [isActive, isHorizontal, props.children, updateMaxHeight]);\r\n\r\n  return isHorizontal === false ? (\r\n    <StyledContent ref={mergeRefs([contentRef, ref])} isActive={isActive} {...props}>\r\n      <StyledInnerContent isActive={isActive}>{props.children}</StyledInnerContent>\r\n    </StyledContent>\r\n  ) : null;\r\n});\r\n\r\nContent.displayName = 'Content';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { forwardRef, HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CheckCircleStrokeIcon from '@zendeskgarden/svg-icons/src/16/check-sm-stroke.svg';\r\nimport { StyledLabel, StyledLabelText, StyledIcon, StyledIconFlexContainer } from '../../../styled';\r\nimport { useStepContext, useStepperContext } from '../../../utils';\r\n\r\ninterface ILabel {\r\n  /** Replaces the stepper number with an icon */\r\n  icon?: React.ReactNode;\r\n  /** Determines if the label is displayed */\r\n  isHidden?: boolean;\r\n}\r\n\r\nexport const Label = forwardRef<HTMLDivElement, ILabel & HTMLAttributes<HTMLDivElement>>(\r\n  (props, ref) => {\r\n    const { currentStepIndex } = useStepContext();\r\n    const { activeIndex, isHorizontal } = useStepperContext();\r\n    const numericStep = currentStepIndex + 1;\r\n    const stepIcon = props.icon || numericStep;\r\n    const isActive = activeIndex === currentStepIndex;\r\n    const isCompleted = activeIndex > currentStepIndex;\r\n    const styledIcon = (\r\n      <StyledIcon isActive={isActive} isHorizontal={isHorizontal}>\r\n        {isCompleted ? <CheckCircleStrokeIcon /> : stepIcon}\r\n      </StyledIcon>\r\n    );\r\n\r\n    return (\r\n      <StyledLabel ref={ref} isActive={isActive} isHorizontal={isHorizontal} {...props}>\r\n        {isHorizontal ? (\r\n          <StyledIconFlexContainer>{styledIcon}</StyledIconFlexContainer>\r\n        ) : (\r\n          styledIcon\r\n        )}\r\n        <StyledLabelText isHidden={props.isHidden} isHorizontal={isHorizontal}>\r\n          {props.children}\r\n        </StyledLabelText>\r\n      </StyledLabel>\r\n    );\r\n  }\r\n);\r\n\r\nLabel.displayName = 'Label';\r\n\r\nLabel.propTypes = {\r\n  icon: PropTypes.node,\r\n  isHidden: PropTypes.bool\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { forwardRef, LiHTMLAttributes, useEffect, useMemo, useState } from 'react';\r\nimport { StyledStep, StyledLine } from '../../../styled';\r\nimport { StepContext, useStepperContext } from '../../../utils';\r\n\r\nexport const Step = forwardRef<HTMLLIElement, LiHTMLAttributes<HTMLLIElement>>((props, ref) => {\r\n  const { currentIndexRef, isHorizontal } = useStepperContext();\r\n  const [currentStepIndex, setIndex] = useState(currentIndexRef.current);\r\n\r\n  useEffect(() => {\r\n    setIndex(currentIndexRef.current);\r\n    currentIndexRef.current++;\r\n    const currentIndex = currentIndexRef;\r\n\r\n    return () => {\r\n      currentIndex.current--;\r\n    };\r\n  }, [currentIndexRef]);\r\n\r\n  const value = useMemo(() => ({ currentStepIndex }), [currentStepIndex]);\r\n\r\n  return (\r\n    <StepContext.Provider value={value}>\r\n      <StyledStep ref={ref} isHorizontal={isHorizontal} {...props}>\r\n        {isHorizontal && <StyledLine data-test-id=\"step-line\" />}\r\n        {props.children}\r\n      </StyledStep>\r\n    </StepContext.Provider>\r\n  );\r\n});\r\n\r\nStep.displayName = 'Step';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, {\r\n  useMemo,\r\n  forwardRef,\r\n  RefAttributes,\r\n  HTMLAttributes,\r\n  PropsWithoutRef,\r\n  ForwardRefExoticComponent\r\n} from 'react';\r\nimport { TimelineContext } from '../../utils';\r\nimport { StyledTimeline } from '../../styled';\r\nimport { Item } from '../timeline/components/Item';\r\nimport { Content } from '../timeline/components/Content';\r\nimport { OppositeContent } from '../timeline/components/OppositeContent';\r\n\r\ninterface IStaticTimelineExport<T, P>\r\n  extends ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>> {\r\n  Item: typeof Item;\r\n  Content: typeof Content;\r\n  OppositeContent: typeof OppositeContent;\r\n}\r\n\r\nexport interface ITimelineProps extends Omit<HTMLAttributes<HTMLOListElement>, 'onChange'> {\r\n  /** Applies alternate styling */\r\n  isAlternate?: boolean;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLOListElement>\r\n */\r\nexport const Timeline = forwardRef<HTMLOListElement, ITimelineProps>(\r\n  ({ isAlternate, ...props }, ref) => {\r\n    const value = useMemo(() => ({ isAlternate }), [isAlternate]);\r\n\r\n    return (\r\n      <TimelineContext.Provider value={value}>\r\n        <StyledTimeline ref={ref} {...props} />\r\n      </TimelineContext.Provider>\r\n    );\r\n  }\r\n) as IStaticTimelineExport<HTMLOListElement, ITimelineProps>;\r\n\r\nTimeline.Item = Item;\r\nTimeline.Content = Content;\r\nTimeline.OppositeContent = OppositeContent;\r\n\r\nTimeline.displayName = 'Timeline';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { forwardRef, HTMLAttributes } from 'react';\r\nimport { StyledTimelineContent, StyledSeparator, StyledItemIcon } from '../../../styled';\r\nimport { useTimelineItemContext } from '../../../utils';\r\n\r\nexport const Content = forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>((props, ref) => {\r\n  const { icon, surfaceColor } = useTimelineItemContext();\r\n\r\n  return (\r\n    <>\r\n      <StyledSeparator>\r\n        <StyledItemIcon surfaceColor={surfaceColor}>{icon || <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" focusable=\"false\" viewBox=\"0 0 12 12\">\r\n        <g fill=\"none\" stroke=\"currentColor\">\r\n          <circle cx=\"6\" cy=\"6\" r=\"5.5\"/>\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M5.5 3v3.5H8\"/>\r\n        </g>\r\n      </svg>}</StyledItemIcon>\r\n      </StyledSeparator>\r\n      <StyledTimelineContent ref={ref} {...props} />\r\n    </>\r\n  );\r\n});\r\n\r\nContent.displayName = 'Content';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, {\r\n  useMemo,\r\n  forwardRef,\r\n  Children,\r\n  ReactNode,\r\n  ReactElement,\r\n  HTMLAttributes\r\n} from 'react';\r\nimport { Timeline } from '../Timeline';\r\nimport { StyledTimelineItem } from '../../../styled';\r\nimport { TimelineItemContext, useTimelineContext } from '../../../utils';\r\n\r\nexport interface IItem extends HTMLAttributes<HTMLLIElement> {\r\n  /** Defines the icon rendered in place of the dot */\r\n  icon?: ReactNode;\r\n  /** Provides surface color for an SVG icon placed on a non-white background */\r\n  surfaceColor?: string;\r\n}\r\n\r\nexport const Item = forwardRef<HTMLLIElement, IItem>(({ icon, surfaceColor, ...props }, ref) => {\r\n  const value = useMemo(() => ({ icon, surfaceColor }), [icon, surfaceColor]);\r\n  const { isAlternate } = useTimelineContext();\r\n  let hasOppositeContent = false;\r\n\r\n  Children.forEach(props.children, child => {\r\n    if (child) {\r\n      if ((child as ReactElement).type === Timeline.OppositeContent) {\r\n        hasOppositeContent = true;\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <TimelineItemContext.Provider value={value}>\r\n      <StyledTimelineItem\r\n        ref={ref}\r\n        isAlternate={isAlternate}\r\n        hasOppositeContent={hasOppositeContent}\r\n        {...props}\r\n      />\r\n    </TimelineItemContext.Provider>\r\n  );\r\n});\r\n\r\nItem.displayName = 'Item';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { forwardRef, HTMLAttributes } from 'react';\r\nimport { StyledOppositeContent } from '../../../styled';\r\n\r\nexport const OppositeContent = forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  (props, ref) => <StyledOppositeContent ref={ref} {...props} />\r\n);\r\n\r\nOppositeContent.displayName = 'OppositeContent';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'accordions.accordion';\r\n\r\nexport const StyledAccordion = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledAccordion.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport {\r\n  getLineHeight,\r\n  getColor,\r\n  retrieveComponentStyles,\r\n  DEFAULT_THEME\r\n} from '@zendeskgarden/react-theming';\r\n\r\nexport const COMPONENT_ID = 'accordions.button';\r\n\r\nexport interface IStyledButton {\r\n  isCompact?: boolean;\r\n  isHovered?: boolean;\r\n  isCollapsible?: boolean;\r\n  isExpanded?: boolean;\r\n}\r\n\r\nconst colorStyles = (props: ThemeProps<DefaultTheme> & IStyledButton) => {\r\n  const showColor = props.isCollapsible || !props.isExpanded;\r\n  let color = props.theme.colors.foreground;\r\n\r\n  if (showColor && props.isHovered) {\r\n    color = getColor('primaryHue', 600, props.theme)!;\r\n  }\r\n\r\n  return css`\r\n    color: ${color};\r\n\r\n    &:hover {\r\n      cursor: ${showColor && 'pointer'};\r\n      color: ${showColor && color};\r\n    }\r\n  `;\r\n};\r\n\r\n/**\r\n * 1. <button> override.\r\n * 2. Remove dotted outline from Firefox on focus.\r\n */\r\nexport const StyledButton = styled.button.attrs<IStyledButton>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledButton>`\r\n  transition: color 0.1s ease-in-out;\r\n  outline: none;\r\n  border: none;\r\n  background: transparent;\r\n  padding: ${props =>\r\n    props.isCompact\r\n      ? `${props.theme.space.base * 2}px ${props.theme.space.base * 3}px`\r\n      : `${props.theme.space.base * 5}px`};\r\n  width: 100%;\r\n  text-align: ${props => (props.theme.rtl ? 'right' : 'left')};\r\n  line-height: ${props => getLineHeight(props.theme.space.base * 5, props.theme.fontSizes.md)};\r\n  font-family: inherit; /* [1] */\r\n  font-size: ${props => props.theme.fontSizes.md};\r\n  font-weight: ${props => props.theme.fontWeights.semibold};\r\n\r\n  ${colorStyles}\r\n\r\n  &::-moz-focus-inner {\r\n    border: 0; /* [2] */\r\n  }\r\n\r\n  &:hover {\r\n    cursor: ${props => (props.isCollapsible || !props.isExpanded) && 'pointer'};\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledButton.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { getColor, retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'accordions.header';\r\n\r\nexport interface IStyledHeader {\r\n  isFocused?: boolean;\r\n  isExpanded?: boolean;\r\n  isCollapsible?: boolean;\r\n}\r\n\r\nexport const StyledHeader = styled.div.attrs<IStyledHeader>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledHeader>`\r\n  display: flex;\r\n  align-items: center;\r\n  box-shadow: ${props =>\r\n    props.isFocused &&\r\n    `${props.theme.shadows.md(getColor('primaryHue', 600, props.theme, 0.35) as string)} inset`};\r\n  font-size: ${props => props.theme.fontSizes.md};\r\n\r\n  &:hover {\r\n    cursor: ${props => (props.isCollapsible || !props.isExpanded) && 'pointer'};\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledHeader.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport {\r\n  retrieveComponentStyles,\r\n  DEFAULT_THEME,\r\n  getLineHeight\r\n} from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'accordions.step_inner_panel';\r\n\r\nexport interface IStyledInnerPanel {\r\n  isExpanded?: boolean;\r\n  isAnimated?: boolean;\r\n}\r\n\r\n/**\r\n * 1. Override the inline max-height style used for animation.\r\n */\r\nexport const StyledInnerPanel = styled.div.attrs<IStyledInnerPanel>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledInnerPanel>`\r\n  transition: ${props => props.isAnimated && 'max-height 0.25s ease-in-out'};\r\n  /* stylelint-disable-next-line declaration-no-important */\r\n  max-height: ${props => !props.isExpanded && '0 !important'}; /* [1] */\r\n  overflow: hidden;\r\n  line-height: ${props => getLineHeight(props.theme.space.base * 5, props.theme.fontSizes.md)};\r\n  font-size: ${props => props.theme.fontSizes.md};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledInnerPanel.defaultProps = {\r\n  isAnimated: true,\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { getColor, retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nexport interface IStyledPanel {\r\n  isBare?: boolean;\r\n  isCompact?: boolean;\r\n  isExpanded?: boolean;\r\n  isAnimated?: boolean;\r\n}\r\n\r\nconst COMPONENT_ID = 'accordions.panel';\r\n\r\nconst paddingStyles = (props: IStyledPanel & ThemeProps<DefaultTheme>) => {\r\n  const { base } = props.theme.space;\r\n  let paddingTop = base * 2;\r\n  let paddingHorizontal = base * 5;\r\n  let paddingBottom = base * 8;\r\n\r\n  if (props.isCompact) {\r\n    paddingTop = base * 2;\r\n    paddingHorizontal = base * 3;\r\n    paddingBottom = base * 4;\r\n  }\r\n\r\n  if (props.isExpanded === false) {\r\n    paddingTop = 0;\r\n    paddingBottom = 0;\r\n  }\r\n\r\n  return css`\r\n    transition: ${props.isAnimated && 'padding 0.25s ease-in-out'};\r\n    padding: ${paddingTop}px ${paddingHorizontal}px ${paddingBottom}px;\r\n  `;\r\n};\r\n\r\nexport const StyledPanel = styled.section.attrs<IStyledPanel>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledPanel>`\r\n  ${paddingStyles};\r\n  border-bottom: ${props =>\r\n    `${props.theme.borders.sm} ${\r\n      props.isBare ? 'transparent' : getColor('neutralHue', 300, props.theme)\r\n    }`};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledPanel.defaultProps = {\r\n  isAnimated: true,\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { cloneElement, Children } from 'react';\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { getColor, retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'accordions.rotate_icon';\r\n\r\nexport interface IStyledRotateIcon {\r\n  isCompact?: boolean;\r\n}\r\n\r\nconst colorStyles = (props: ThemeProps<DefaultTheme> & any) => {\r\n  const showColor = props.isCollapsible || !props.isRotated;\r\n  let color = getColor('neutralHue', 600, props.theme);\r\n\r\n  if (showColor && props.isHovered) {\r\n    color = getColor('primaryHue', 600, props.theme);\r\n  }\r\n\r\n  return css`\r\n    color: ${color};\r\n\r\n    &:hover {\r\n      color: ${showColor && color};\r\n    }\r\n  `;\r\n};\r\n\r\nexport const StyledRotateIcon = styled(\r\n  /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\r\n  ({ children, isRotated, isHovered, isCompact, isCollapsible, ...props }) =>\r\n    cloneElement(Children.only(children), props)\r\n).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledRotateIcon>`\r\n  transform: ${props => props.isRotated && `rotate(${props.theme.rtl ? '-' : '+'}180deg)`};\r\n  transition: transform 0.25s ease-in-out, color 0.1s ease-in-out;\r\n  box-sizing: content-box;\r\n  padding: ${props =>\r\n    props.isCompact\r\n      ? `${props.theme.space.base * 1.5}px ${props.theme.space.base * 3}px`\r\n      : `${props.theme.space.base * 5}px`};\r\n  width: ${props => props.theme.iconSizes.md};\r\n  height: ${props => props.theme.iconSizes.md};\r\n  vertical-align: middle;\r\n\r\n  ${colorStyles}\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledRotateIcon.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledPanel } from './StyledPanel';\r\n\r\nconst COMPONENT_ID = 'accordions.section';\r\n\r\nexport const StyledSection = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  &:last-child ${StyledPanel} {\r\n    border: none;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledSection.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'accordions.step_content';\r\n\r\ninterface IStyledContent {\r\n  isActive?: boolean;\r\n}\r\n\r\nconst sizeStyles = (props: IStyledContent & ThemeProps<DefaultTheme>) => {\r\n  const { rtl, space } = props.theme;\r\n  const paddingBottom = props.isActive ? space.base * 8 : space.base * 6;\r\n  const paddingRight = rtl ? space.base * 6 : space.base * 5;\r\n  const paddingLeft = rtl ? space.base * 5 : space.base * 6;\r\n  const marginRight = rtl ? space.base * 3 : '0';\r\n  const marginLeft = rtl ? '0' : space.base * 3;\r\n  const marginVertical = space.base * 3;\r\n\r\n  return css`\r\n    margin: ${marginVertical}px ${marginRight}px ${marginVertical}px ${marginLeft}px;\r\n    padding: 0 ${paddingRight}px ${paddingBottom}px ${paddingLeft}px;\r\n  `;\r\n};\r\n\r\nexport const StyledContent = styled.div.attrs<IStyledContent>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledContent>`\r\n  ${sizeStyles}\r\n  min-width: ${props => props.theme.space.base * 30}px;\r\n  word-break: break-word;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledContent.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport {\r\n  getColor,\r\n  getLineHeight,\r\n  retrieveComponentStyles,\r\n  DEFAULT_THEME\r\n} from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'accordions.step_icon';\r\n\r\ninterface IStyledIcon {\r\n  isActive?: boolean;\r\n  isHorizontal?: boolean;\r\n}\r\n\r\nexport const StyledIconFlexContainer = styled.div`\r\n  display: flex;\r\n  flex-basis: 100%;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst sizeStyles = (props: IStyledIcon & ThemeProps<DefaultTheme>) => {\r\n  const size = `${props.theme.space.base * 6}px`;\r\n  const fontSize = props.theme.fontSizes.sm;\r\n\r\n  return css`\r\n    margin-bottom: ${props.isHorizontal && `${props.theme.space.base * 2}px`};\r\n    /* stylelint-disable-next-line property-no-unknown */\r\n    margin-${props.theme.rtl ? 'left' : 'right'}: ${\r\n    !props.isHorizontal && `${props.theme.space.base * 3}px`\r\n  };\r\n    width: ${size};\r\n    min-width: ${size};\r\n    height: ${size};\r\n    min-height: ${size};\r\n    line-height: ${getLineHeight(size, fontSize)};\r\n    font-size: ${fontSize};\r\n  `;\r\n};\r\n\r\nconst colorStyles = (props: IStyledIcon & ThemeProps<DefaultTheme>) => {\r\n  return css`\r\n    background: ${props.isActive\r\n      ? getColor('neutralHue', 600, props.theme)\r\n      : getColor('neutralHue', 200, props.theme)};\r\n    color: ${props.isActive ? props.theme.colors.background : props.theme.colors.foreground};\r\n  `;\r\n};\r\n\r\nexport const StyledIcon = styled.div.attrs<IStyledIcon>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledIcon>`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: background 0.25s ease-in-out, color 0.25s ease-in-out;\r\n  border-radius: 100%;\r\n  ${sizeStyles}\r\n  ${colorStyles}\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledIconFlexContainer.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n\r\nStyledIcon.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport {\r\n  getLineHeight,\r\n  retrieveComponentStyles,\r\n  DEFAULT_THEME\r\n} from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'accordions.step_inner_content';\r\n\r\nexport interface IStyledInnerContent {\r\n  isActive?: boolean;\r\n}\r\n\r\nexport const StyledInnerContent = styled.div.attrs<IStyledInnerContent>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledInnerContent>`\r\n  transition: max-height 0.25s ease-in-out;\r\n  overflow: hidden;\r\n  max-height: ${props => !props.isActive && '0 !important'}; /* stylelint-disable-line */\r\n  line-height: ${props => getLineHeight(props.theme.space.base * 5, props.theme.fontSizes.md)};\r\n  color: ${props => props.theme.colors.foreground};\r\n  font-size: ${props => props.theme.fontSizes.md};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledInnerContent.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport {\r\n  getColor,\r\n  getLineHeight,\r\n  retrieveComponentStyles,\r\n  DEFAULT_THEME\r\n} from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'accordions.step_label';\r\n\r\ninterface IStyledLabelProps {\r\n  isActive?: boolean;\r\n  isHorizontal?: boolean;\r\n}\r\n\r\nexport const StyledLabel = styled.div.attrs<IStyledLabelProps>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledLabelProps>`\r\n  display: ${props => !props.isHorizontal && 'flex'};\r\n  align-items: ${props => !props.isHorizontal && 'center'};\r\n  transition: color 0.25s ease-in-out, font-weight 0.25s ease-in-out;\r\n  text-align: ${props => props.isHorizontal && 'center'};\r\n  line-height: ${props => getLineHeight(props.theme.space.base * 5, props.theme.fontSizes.md)};\r\n  color: ${props =>\r\n    props.isActive ? props.theme.colors.foreground : getColor('neutralHue', 600, props.theme)};\r\n  font-size: ${props => props.theme.fontSizes.md};\r\n  font-weight: ${props => props.isActive && 600};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledLabel.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'accordions.step_label_text';\r\n\r\ninterface IStyledLabelTextProps {\r\n  isHidden?: boolean;\r\n  isHorizontal?: boolean;\r\n}\r\n\r\nexport const StyledLabelText = styled.div.attrs<IStyledLabelTextProps>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledLabelTextProps>`\r\n  display: ${props => props.isHidden && 'none'};\r\n  padding: ${props => props.isHorizontal && `0 ${props.theme.space.base * 3}px`};\r\n  word-wrap: ${props => props.isHorizontal && 'break-word'};\r\n`;\r\n\r\nStyledLabelText.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { getColor, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'accordions.step_line';\r\n\r\nexport const StyledLine = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  display: block;\r\n  position: absolute;\r\n  top: ${props => props.theme.space.base * 3}px;\r\n  right: ${props => `calc(50% + ${props.theme.space.base * 6}px)`};\r\n  left: ${props => `calc(-50% + ${props.theme.space.base * 6}px)`};\r\n  flex: 1;\r\n  border-top: ${props => props.theme.borders.sm};\r\n  border-color: ${props => getColor('neutralHue', 300, props.theme)};\r\n`;\r\n\r\nStyledLine.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { getColor, retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledContent } from './StyledContent';\r\nimport { StyledLine } from './StyledLine';\r\n\r\nconst COMPONENT_ID = 'accordions.step';\r\n\r\nexport interface IStyledStep {\r\n  isHorizontal?: boolean;\r\n}\r\n\r\nexport const StyledStep = styled.li.attrs<IStyledStep>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledStep>`\r\n  position: ${props => props.isHorizontal && 'relative'};\r\n  flex: ${props => props.isHorizontal && '1'};\r\n  min-width: ${props => props.isHorizontal && `${props.theme.space.base * 15}px`};\r\n\r\n  &:last-of-type ${StyledLine} {\r\n    display: ${props => props.theme.rtl && 'none'};\r\n  }\r\n\r\n  &:first-of-type ${StyledLine} {\r\n    display: ${props => !props.theme.rtl && 'none'};\r\n  }\r\n\r\n  &:not(:last-of-type) ${StyledContent} {\r\n    /* stylelint-disable-next-line property-no-unknown */\r\n    border-${props => (props.theme.rtl ? 'right' : 'left')}: ${props => props.theme.borders.sm};\r\n    border-color: ${props => getColor('neutralHue', 300, props.theme)};\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledStep.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'accordions.stepper';\r\n\r\nexport interface IStyledStepper {\r\n  isHorizontal?: boolean;\r\n}\r\n\r\n/**\r\n * 1. <ol> reset.\r\n */\r\nexport const StyledStepper = styled.ol.attrs<IStyledStepper>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledStepper>`\r\n  display: ${props => props.isHorizontal && 'flex'};\r\n  margin: 0; /* [1] */\r\n  padding: 0; /* [1] */\r\n  list-style: none; /* [1] */\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledStepper.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'timeline.content';\r\n\r\nexport const StyledTimelineContent = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  flex: 1;\r\n  padding: ${props => `${props.theme.space.base * 5}px ${props.theme.space.base * 4}px`};\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledTimelineContent.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css } from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledSeparator } from './StyledSeparator';\r\nimport { StyledTimelineContent } from './StyledContent';\r\nimport { StyledOppositeContent } from './StyledOppositeContent';\r\n\r\nconst COMPONENT_ID = 'timeline.item';\r\n\r\ninterface IStyledTimelineItem {\r\n  surfaceColor?: string;\r\n  isAlternate?: boolean;\r\n  hasOppositeContent?: boolean;\r\n}\r\n\r\nexport const StyledTimelineItem = styled.li.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledTimelineItem>`\r\n  display: flex;\r\n  position: relative;\r\n\r\n  &:last-of-type ${StyledSeparator}::after {\r\n    display: none;\r\n  }\r\n\r\n  ${props =>\r\n    !props.hasOppositeContent &&\r\n    props.isAlternate &&\r\n    css`\r\n      &:before {\r\n        flex: 1;\r\n        content: '';\r\n        padding: ${props.theme.space.base * 4}px;\r\n      }\r\n    `}\r\n\r\n  ${props =>\r\n    props.isAlternate &&\r\n    css`\r\n      &:nth-child(even) {\r\n        flex-direction: row-reverse;\r\n        ${StyledOppositeContent} {\r\n          text-align: ${props.theme.rtl ? 'right' : 'left'};\r\n        }\r\n        ${StyledTimelineContent} {\r\n          text-align: ${props.theme.rtl ? 'left' : 'right'};\r\n        }\r\n      }\r\n    `}\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledTimelineItem.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { cloneElement, Children } from 'react';\r\nimport styled from 'styled-components';\r\nimport { math } from 'polished';\r\nimport { getColor, retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'timeline.icon';\r\n\r\ninterface IStyledItemIcon {\r\n  surfaceColor?: string;\r\n}\r\n\r\n/**\r\n * 1. Odd sizing allows the timeline line to center respective of the circle icon.\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nexport const StyledItemIcon = styled(({ surfaceColor, children, ...props }) =>\r\n  cloneElement(Children.only(children), props)\r\n).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledItemIcon>`\r\n  z-index: 1;\r\n  box-sizing: content-box;\r\n  background-color: ${props => props.surfaceColor || props.theme.colors.background};\r\n  padding: ${props => props.theme.space.base}px 0;\r\n  width: ${props => math(`${props.theme.iconSizes.sm} + 1`)}; /* [1] */\r\n  height: ${props => math(`${props.theme.iconSizes.sm} + 1`)}; /* [1] */\r\n  color: ${props => getColor('neutralHue', 600, props.theme)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledItemIcon.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'timeline.opposite.content';\r\n\r\nexport const StyledOppositeContent = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  flex: 1;\r\n  padding: ${props => `${props.theme.space.base * 5}px ${props.theme.space.base * 4}px`};\r\n  text-align: ${props => (props.theme.rtl ? 'left' : 'right')};\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledOppositeContent.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { getColor, retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'timeline.content.separator';\r\n\r\nexport const StyledSeparator = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  display: flex;\r\n  position: relative;\r\n  justify-content: center;\r\n  padding: ${props => `${props.theme.space.base * 5}px ${props.theme.space.base}px`};\r\n\r\n  &::after {\r\n    position: absolute;\r\n    border-left: ${props =>\r\n      `${props.theme.borders.sm} ${getColor('neutralHue', 600, props.theme)}`};\r\n    height: 100%;\r\n    content: '';\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledSeparator.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'timeline';\r\n\r\n/**\r\n * 1. <ol> reset.\r\n */\r\nexport const StyledTimeline = styled.ol.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  margin: 0; /* [1] */\r\n  padding: 0; /* [1] */\r\n  list-style: none; /* [1] */\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledTimeline.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { createContext, useContext, MutableRefObject } from 'react';\r\nimport { IUseAccordionPropGetters } from 'packages/chrome/node_modules/@zendeskgarden/container-accordion/dist/typings';\r\nexport interface IAccordionContext extends IUseAccordionPropGetters {\r\n  expandedSections: number[];\r\n  currentIndexRef: MutableRefObject<number>;\r\n  level: number;\r\n  isCompact?: boolean;\r\n  isAnimated?: boolean;\r\n  isBare?: boolean;\r\n  isCollapsible?: boolean;\r\n}\r\n\r\nexport const AccordionContext = createContext<IAccordionContext | undefined>(undefined);\r\n\r\nexport const useAccordionContext = () => {\r\n  const context = useContext(AccordionContext);\r\n\r\n  if (context === undefined) {\r\n    throw new Error('This component must be rendered within a Accordion component');\r\n  }\r\n\r\n  return context;\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { createContext, useContext } from 'react';\r\n\r\nexport interface IHeaderContext {\r\n  isHovered: boolean;\r\n  otherTriggerProps: any;\r\n}\r\n\r\nexport const HeaderContext = createContext<IHeaderContext | undefined>(undefined);\r\n\r\nexport const useHeaderContext = () => {\r\n  const context = useContext(HeaderContext);\r\n\r\n  if (context === undefined) {\r\n    throw new Error('This component must be rendered within a Accordion.Header component');\r\n  }\r\n\r\n  return context;\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { createContext, useContext } from 'react';\r\n\r\nexport interface ISectionContext {\r\n  sectionIndex: number;\r\n}\r\n\r\nexport const SectionContext = createContext<number | undefined>(undefined);\r\n\r\nexport const useSectionContext = () => {\r\n  const context = useContext(SectionContext);\r\n\r\n  if (context === undefined) {\r\n    throw new Error('This component must be rendered within a Accordion.Section component');\r\n  }\r\n\r\n  return context;\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { createContext, useContext } from 'react';\r\n\r\nexport interface IStepContext {\r\n  currentStepIndex: number;\r\n}\r\n\r\nexport const StepContext = createContext<IStepContext | undefined>(undefined);\r\n\r\nexport const useStepContext = () => {\r\n  const context = useContext(StepContext);\r\n\r\n  if (context === undefined) {\r\n    throw new Error('This component must be rendered within a Stepper.Step component');\r\n  }\r\n\r\n  return context;\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { createContext, useContext } from 'react';\r\n\r\nexport interface IStepperContext {\r\n  activeIndex: number;\r\n  isHorizontal: boolean;\r\n  currentIndexRef: React.MutableRefObject<number>;\r\n}\r\n\r\nexport const StepperContext = createContext<IStepperContext | undefined>(undefined);\r\n\r\nexport const useStepperContext = () => {\r\n  const context = useContext(StepperContext);\r\n\r\n  if (context === undefined) {\r\n    throw new Error('This component must be rendered within a Stepper component');\r\n  }\r\n\r\n  return context;\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { createContext, useContext } from 'react';\r\n\r\nexport interface ITimelineContext {\r\n  isAlternate?: boolean;\r\n}\r\n\r\nexport const TimelineContext = createContext<ITimelineContext | undefined>(undefined);\r\n\r\nexport const useTimelineContext = () => {\r\n  const context = useContext(TimelineContext);\r\n\r\n  if (context === undefined) {\r\n    throw new Error('This component must be rendered within a Timeline component');\r\n  }\r\n\r\n  return context;\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { createContext, useContext, ReactNode } from 'react';\r\n\r\nexport interface ITimelineItemContext {\r\n  icon?: ReactNode;\r\n  surfaceColor?: string;\r\n}\r\n\r\nexport const TimelineItemContext = createContext<ITimelineItemContext | undefined>(undefined);\r\n\r\nexport const useTimelineItemContext = () => {\r\n  const context = useContext(TimelineItemContext);\r\n\r\n  if (context === undefined) {\r\n    throw new Error('This component must be rendered within a Timeline.Item component');\r\n  }\r\n\r\n  return context;\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { PALETTE } from '@zendeskgarden/react-theming';\r\nimport { Avatar, IAvatarProps } from '@zendeskgarden/react-avatars';\r\nimport { TYPE } from './types';\r\n\r\ninterface IArgs extends IAvatarProps {\r\n  type: TYPE;\r\n}\r\n\r\nexport const AvatarStory: Story<IArgs> = ({ children, type, ...args }) => (\r\n  <Avatar\r\n    {...args}\r\n    backgroundColor={args.backgroundColor || (type === 'image' ? undefined : PALETTE.kale[800])}\r\n  >\r\n    {\r\n      {\r\n        icon: args.isSystem ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" focusable=\"false\" viewBox=\"0 0 26 26\">\r\n        <path fill=\"currentColor\" d=\"M12 8.2v14.5H0zM12 3c0 3.3-2.7 6-6 6S0 6.3 0 3h12zm2 19.7c0-3.3 2.7-6 6-6s6 2.7 6 6H14zm0-5.2V3h12z\"/>\r\n      </svg> :  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n        <g fill=\"none\" stroke=\"currentColor\">\r\n          <circle cx=\"8\" cy=\"5\" r=\"3.5\"/>\r\n          <path strokeLinecap=\"round\" d=\"M2.5 15.5c.3-2.8 2.6-5 5.5-5s5.2 2.2 5.5 5\"/>\r\n        </g>\r\n      </svg>,\r\n        image: <img alt=\"\" src={`images/avatars/${args.isSystem ? 'system' : 'user'}.png`} />,\r\n        text: <Avatar.Text>{children || (args.isSystem ? 'ZD' : 'G')}</Avatar.Text>\r\n      }[type]\r\n    }\r\n  </Avatar>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nexport const AVATAR_TYPE = ['icon', 'image', 'text'] as const;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { Chrome, Body, Header, HeaderItem, HeaderItemIcon } from '@zendeskgarden/react-chrome';\r\nimport { Avatar, IAvatarProps } from '@zendeskgarden/react-avatars';\r\n\r\nexport const ChromeStory: Story<IAvatarProps> = args => (\r\n  <Chrome isFluid style={{ height: 'auto' }}>\r\n    <Body>\r\n      <Header>\r\n        <HeaderItem aria-label=\"Products\">\r\n          <HeaderItemIcon>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n            <path fill=\"currentColor\" d=\"M1 1v5h5V1H1zm5 8a1 1 0 011 1v5a1 1 0 01-1 1H1a1 1 0 01-1-1v-5a1 1 0 011-1h5zm9 0a1 1 0 011 1v5a1 1 0 01-1 1h-5a1 1 0 01-1-1v-5a1 1 0 011-1h5zm-9 1H1v5h5v-5zm9 0h-5v5h5v-5zM6 0a1 1 0 011 1v5a1 1 0 01-1 1H1a1 1 0 01-1-1V1a1 1 0 011-1h5zm9 0a1 1 0 011 1v5a1 1 0 01-1 1h-5a1 1 0 01-1-1V1a1 1 0 011-1h5zm0 1h-5v5h5V1z\"/>\r\n          </svg>\r\n          </HeaderItemIcon>\r\n        </HeaderItem>\r\n        <HeaderItem isRound aria-label=\"User profile\">\r\n          <Avatar {...args} size=\"extrasmall\">\r\n            <img alt=\"Example User\" src=\"images/avatars/chrome.png\" />\r\n          </Avatar>\r\n        </HeaderItem>\r\n      </Header>\r\n    </Body>\r\n  </Chrome>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { PALETTE } from '@zendeskgarden/react-theming';\r\nimport { Col, Grid, Row } from '@zendeskgarden/react-grid';\r\nimport {\r\n  Dropdown,\r\n  Trigger,\r\n  Menu,\r\n  MediaItem,\r\n  MediaFigure,\r\n  MediaBody,\r\n  ItemMeta\r\n} from '@zendeskgarden/react-dropdowns';\r\nimport { Button } from '@zendeskgarden/react-buttons';\r\nimport { Avatar } from '@zendeskgarden/react-avatars';\r\n\r\nexport const MenuStory: Story = ({ isCompact }) => {\r\n  const [highlightedItem, setHighlightedItem] = useState<number | null>();\r\n  const [isOpen, setOpen] = useState<boolean | undefined>();\r\n\r\n  return (\r\n    <Grid>\r\n      <Row style={{ height: 'calc(100vh - 80px)' }}>\r\n        <Col textAlign=\"center\" alignSelf=\"center\">\r\n          <Dropdown\r\n            onStateChange={changes => {\r\n              setHighlightedItem(changes.highlightedIndex);\r\n              Object.prototype.hasOwnProperty.call(changes, 'isOpen') && setOpen(changes.isOpen);\r\n            }}\r\n          >\r\n            <Trigger>\r\n              <Button size={isCompact && 'small'}>\r\n                Demo\r\n                <Button.EndIcon isRotated={isOpen}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"currentColor\" d=\"M12.688 5.61a.5.5 0 01.69.718l-.066.062-5 4a.5.5 0 01-.542.054l-.082-.054-5-4a.5.5 0 01.55-.83l.074.05L8 9.359l4.688-3.75z\"/>\r\n</svg>\r\n\r\n                </Button.EndIcon>\r\n              </Button>\r\n            </Trigger>\r\n            <Menu isCompact={isCompact}>\r\n              <MediaItem value=\"linden\">\r\n                <MediaFigure>\r\n                  <Avatar\r\n                    size={isCompact ? 'extraextrasmall' : 'small'}\r\n                    status=\"away\"\r\n                    surfaceColor={highlightedItem === 0 ? PALETTE.blue[100] : undefined}\r\n                  >\r\n                    <img alt=\"Linden\" src=\"images/avatars/linden.png\" />\r\n                  </Avatar>\r\n                </MediaFigure>\r\n                <MediaBody>\r\n                  Linden\r\n                  <ItemMeta>linden@zendesk.garden</ItemMeta>\r\n                </MediaBody>\r\n              </MediaItem>\r\n              <MediaItem value=\"reed\">\r\n                <MediaFigure>\r\n                  <Avatar\r\n                    size={isCompact ? 'extraextrasmall' : 'small'}\r\n                    status=\"available\"\r\n                    surfaceColor={highlightedItem === 1 ? PALETTE.blue[100] : undefined}\r\n                  >\r\n                    <img alt=\"Reed\" src=\"images/avatars/reed.png\" />\r\n                  </Avatar>\r\n                </MediaFigure>\r\n                <MediaBody>\r\n                  Reed\r\n                  <ItemMeta>reed@zendesk.garden</ItemMeta>\r\n                </MediaBody>\r\n              </MediaItem>\r\n              <MediaItem value=\"sage\">\r\n                <MediaFigure>\r\n                  <Avatar\r\n                    size={isCompact ? 'extraextrasmall' : 'small'}\r\n                    badge=\"3\"\r\n                    surfaceColor={highlightedItem === 2 ? PALETTE.blue[100] : undefined}\r\n                  >\r\n                    <img alt=\"Sage\" src=\"images/avatars/sage.png\" />\r\n                  </Avatar>\r\n                </MediaFigure>\r\n                <MediaBody>\r\n                  Sage\r\n                  <ItemMeta>sage@zendesk.garden</ItemMeta>\r\n                </MediaBody>\r\n              </MediaItem>\r\n            </Menu>\r\n          </Dropdown>\r\n        </Col>\r\n      </Row>\r\n    </Grid>\r\n  );\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { Children, HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledAvatar, StyledText } from '../styled';\r\n\r\nexport interface IAvatarProps extends HTMLAttributes<HTMLElement> {\r\n  /** Sets the avatar background color */\r\n  backgroundColor?: string;\r\n  /** Sets the color for child SVG or `Avatar.Text` components */\r\n  foregroundColor?: string;\r\n  /** Provides surface color for an avatar placed on a non-white background */\r\n  surfaceColor?: string;\r\n  /** Applies system styling for representing objects, brands, or products */\r\n  isSystem?: boolean;\r\n  /** Specifies the avatar size */\r\n  size?: 'extraextrasmall' | 'extrasmall' | 'small' | 'medium' | 'large';\r\n  /** Applies status styling */\r\n  status?: 'available' | 'away';\r\n  /** Sets the badge text and applies active styling */\r\n  badge?: string | number;\r\n}\r\n\r\nconst Avatar: React.FunctionComponent<IAvatarProps> = React.forwardRef<HTMLElement, IAvatarProps>(\r\n  (\r\n    {\r\n      isSystem,\r\n      size,\r\n      status,\r\n      children,\r\n      badge,\r\n      surfaceColor,\r\n      backgroundColor,\r\n      foregroundColor,\r\n      ...other\r\n    },\r\n    ref\r\n  ) => {\r\n    const computedStatus = badge === undefined ? status : 'active';\r\n\r\n    return (\r\n      <StyledAvatar\r\n        ref={ref}\r\n        isSystem={isSystem}\r\n        size={size}\r\n        status={computedStatus}\r\n        data-badge={badge}\r\n        surfaceColor={surfaceColor}\r\n        backgroundColor={backgroundColor}\r\n        foregroundColor={foregroundColor}\r\n        aria-atomic=\"true\"\r\n        aria-live=\"polite\"\r\n        {...other}\r\n      >\r\n        {Children.only(children)}\r\n      </StyledAvatar>\r\n    );\r\n  }\r\n);\r\n\r\nAvatar.displayName = 'Avatar';\r\n\r\nAvatar.propTypes = {\r\n  backgroundColor: PropTypes.string,\r\n  foregroundColor: PropTypes.string,\r\n  surfaceColor: PropTypes.string,\r\n  isSystem: PropTypes.bool,\r\n  badge: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  size: PropTypes.oneOf(['extraextrasmall', 'extrasmall', 'small', 'medium', 'large']),\r\n  status: PropTypes.oneOf(['available', 'away'])\r\n};\r\n\r\nAvatar.defaultProps = {\r\n  size: 'medium'\r\n};\r\n\r\n(Avatar as any).Text = StyledText;\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLElement>\r\n */\r\nexport default Avatar as React.FunctionComponent<\r\n  IAvatarProps & React.RefAttributes<HTMLElement>\r\n> & {\r\n  Text: typeof StyledText;\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, keyframes, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { math } from 'polished';\r\nimport { retrieveComponentStyles, DEFAULT_THEME, getColor } from '@zendeskgarden/react-theming';\r\nimport { StyledText } from './StyledText';\r\n\r\nconst COMPONENT_ID = 'avatars.avatar';\r\n\r\nconst TRANSITION_DURATION = 0.25;\r\n\r\nconst badgeStyles = (props: IStyledAvatarProps & ThemeProps<DefaultTheme>) => {\r\n  let content = `''`;\r\n  let position = '0';\r\n  let padding = '0';\r\n  let minWidth = '0';\r\n  let height = '0';\r\n  let fontSize = '0';\r\n  let borderWidth = props.theme.shadowWidths.sm;\r\n\r\n  if (props.status === 'active') {\r\n    position = `${props.theme.space.base * -1}px`;\r\n\r\n    if (props.size === 'small') {\r\n      fontSize = props.theme.fontSizes.xs;\r\n      height = `${props.theme.space.base * 4}px`;\r\n      minWidth = fontSize;\r\n      padding = `${props.theme.space.base - 1}px`;\r\n      content = 'attr(data-badge)';\r\n    } else if (props.size === 'extrasmall') {\r\n      height = `${props.theme.space.base * 2}px`;\r\n      minWidth = height;\r\n    } else if (props.size === 'extraextrasmall') {\r\n      position = math(`${position} + 1`);\r\n      height = `${props.theme.space.base + 1}px`;\r\n      minWidth = height;\r\n      borderWidth = math(`${borderWidth} - 1`);\r\n    } else {\r\n      fontSize = props.theme.fontSizes.xs;\r\n      height = `${props.theme.space.base * 5}px`;\r\n      minWidth = fontSize;\r\n      padding = `${props.theme.space.base + 1}px`;\r\n      content = 'attr(data-badge)';\r\n    }\r\n  } else if (props.status === 'available') {\r\n    position = `${props.theme.space.base * -1}px`;\r\n\r\n    if (props.size === 'large') {\r\n      height = `${props.theme.space.base * 3.5}px`;\r\n    } else if (props.size === 'small') {\r\n      height = `${props.theme.space.base * 2.5}px`;\r\n    } else if (props.size === 'extrasmall') {\r\n      height = `${props.theme.space.base * 2}px`;\r\n    } else if (props.size === 'extraextrasmall') {\r\n      position = math(`${position} + 1`);\r\n      height = `${props.theme.space.base + 1}px`;\r\n      borderWidth = math(`${borderWidth} - 1`);\r\n    } else {\r\n      height = `${props.theme.space.base * 3}px`;\r\n    }\r\n\r\n    minWidth = height;\r\n  } else if (props.size === 'large') {\r\n    position = math(`${props.theme.shadowWidths.sm} + 1`);\r\n  } else if (props.size === 'small') {\r\n    position = math(`${props.theme.shadowWidths.sm} - 1`);\r\n  } else if (props.size === 'medium') {\r\n    position = props.theme.shadowWidths.sm;\r\n  }\r\n\r\n  const animation = keyframes`\r\n    0% {\r\n      transform: scale(.1);\r\n    }\r\n  `;\r\n  const opacity = props.status === 'active' || props.status === 'available' ? 1 : 0;\r\n  const border = `${borderWidth} ${props.theme.borderStyles.solid}`;\r\n\r\n  return css`\r\n    display: inline-block;\r\n    position: absolute;\r\n    ${props.theme.rtl ? 'left' : 'right'}: ${position};\r\n    bottom: ${position};\r\n    transition: all ${TRANSITION_DURATION}s ease-in-out, color 0s;\r\n    opacity: ${opacity};\r\n    border: ${border};\r\n    border-radius: 100px;\r\n    padding: 0 ${padding};\r\n    min-width: ${minWidth};\r\n    max-width: 2em;\r\n    height: ${height};\r\n    box-sizing: content-box !important; /* stylelint-disable-line */\r\n    overflow: hidden;\r\n    text-align: center;\r\n    text-overflow: ellipsis;\r\n    line-height: ${height === '0' ? '1px' : height}; /* improve animation easing */\r\n    white-space: nowrap;\r\n    font-size: ${fontSize};\r\n    font-weight: ${props.theme.fontWeights.semibold};\r\n    content: ${content};\r\n\r\n    ${props.status === 'active' &&\r\n    css`\r\n      animation: ${animation} ${TRANSITION_DURATION * 1.5}s ease-in-out;\r\n    `}\r\n  `;\r\n};\r\n\r\nconst colorStyles = (props: IStyledAvatarProps & ThemeProps<DefaultTheme>) => {\r\n  let statusColor = 'transparent';\r\n  const backgroundColor = props.backgroundColor || 'transparent';\r\n  const foregroundColor = props.foregroundColor || props.theme.palette.white;\r\n  const surfaceColor = props.status\r\n    ? props.surfaceColor || props.theme.colors.background\r\n    : 'transparent';\r\n\r\n  if (props.status === 'available') {\r\n    statusColor = getColor('mint', 400, props.theme)!;\r\n  } else if (props.status === 'active') {\r\n    statusColor = getColor('crimson', 400, props.theme)!;\r\n  } else if (props.status === 'away') {\r\n    statusColor = getColor('yellow', 400, props.theme)!;\r\n  }\r\n\r\n  return css`\r\n    box-shadow: ${props.theme.shadows.sm(statusColor)};\r\n    background-color: ${backgroundColor};\r\n    color: ${surfaceColor};\r\n\r\n    & > svg,\r\n    & ${StyledText} {\r\n      color: ${foregroundColor};\r\n    }\r\n\r\n    &::after {\r\n      background-color: ${statusColor};\r\n      /* set text color without altering border */\r\n      -webkit-text-fill-color: ${props.theme.palette.white};\r\n    }\r\n\r\n    /* stylelint-disable selector-type-no-unknown, selector-no-vendor-prefix */\r\n    _:-ms-input-placeholder,\r\n    &::after {\r\n      /* fallback for IE11 (which will set border) */\r\n      color: ${props.theme.palette.white};\r\n    }\r\n    /* stylelint-enable selector-type-no-unknown, selector-no-vendor-prefix */\r\n  `;\r\n};\r\n\r\nconst sizeStyles = (props: IStyledAvatarProps & ThemeProps<DefaultTheme>) => {\r\n  let boxShadow;\r\n  let borderRadius;\r\n  let size;\r\n  let fontSize;\r\n  let svgSize;\r\n\r\n  if (props.size === 'extraextrasmall') {\r\n    boxShadow = `0 0 0 ${math(`${props.theme.shadowWidths.sm} - 1`)}`;\r\n    borderRadius = props.isSystem ? math(`${props.theme.borderRadii.md} - 1`) : '50%';\r\n    size = `${props.theme.space.base * 4}px`;\r\n    fontSize = 0;\r\n    svgSize = `${props.theme.space.base * 3}px`;\r\n  } else if (props.size === 'extrasmall') {\r\n    boxShadow = `inset 0 0 0 ${props.theme.shadowWidths.sm}`;\r\n    borderRadius = props.isSystem ? math(`${props.theme.borderRadii.md} - 1`) : '50%';\r\n    size = `${props.theme.space.base * 6}px`;\r\n    fontSize = props.theme.fontSizes.sm;\r\n    svgSize = `${props.theme.space.base * 3}px`;\r\n  } else if (props.size === 'small') {\r\n    boxShadow = `inset 0 0 0 ${props.theme.shadowWidths.sm}`;\r\n    borderRadius = props.isSystem ? math(`${props.theme.borderRadii.md} - 1`) : '50%';\r\n    size = `${props.theme.space.base * 8}px`;\r\n    fontSize = props.theme.fontSizes.md;\r\n    svgSize = `${props.theme.space.base * 3}px`;\r\n  } else if (props.size === 'large') {\r\n    boxShadow = `inset 0 0 0 ${props.theme.shadowWidths.sm}`;\r\n    borderRadius = props.isSystem ? math(`${props.theme.borderRadii.md} + 1`) : '50%';\r\n    size = `${props.theme.space.base * 12}px`;\r\n    fontSize = props.theme.fontSizes.xl;\r\n    svgSize = `${props.theme.space.base * 6}px`;\r\n  } else {\r\n    boxShadow = `inset 0 0 0 ${props.theme.shadowWidths.sm}`;\r\n    borderRadius = props.isSystem ? props.theme.borderRadii.md : '50%';\r\n    size = `${props.theme.space.base * 10}px`;\r\n    fontSize = props.theme.fontSizes.lg;\r\n    svgSize = `${props.theme.space.base * 4}px`;\r\n  }\r\n\r\n  /**\r\n   * 1. Ensure width and height are applied when used in combination with\r\n   *    Dropdown MediaFigure styling\r\n   */\r\n  return css`\r\n    border-radius: ${borderRadius};\r\n    /* stylelint-disable declaration-no-important */\r\n    width: ${size} !important; /* [1] */\r\n    height: ${size} !important; /* [1] */\r\n    /* stylelint-enable declaration-no-important */\r\n\r\n    ::before {\r\n      box-shadow: ${boxShadow};\r\n    }\r\n\r\n    & > svg {\r\n      font-size: ${svgSize};\r\n    }\r\n\r\n    & ${StyledText} {\r\n      line-height: ${size};\r\n      font-size: ${fontSize};\r\n    }\r\n  `;\r\n};\r\n\r\nexport interface IStyledAvatarProps {\r\n  backgroundColor?: string;\r\n  foregroundColor?: string;\r\n  surfaceColor?: string;\r\n  isSystem?: boolean;\r\n  size?: 'extraextrasmall' | 'extrasmall' | 'small' | 'medium' | 'large';\r\n  status?: 'available' | 'active' | 'away';\r\n}\r\n\r\n/**\r\n * Accepts all `<figure>` props\r\n */\r\nexport const StyledAvatar = styled.figure.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledAvatarProps>`\r\n  display: inline-flex;\r\n  position: relative;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: box-shadow ${TRANSITION_DURATION}s ease-in-out, color 0.1s ease-in-out;\r\n  margin: 0; /* <figure> reset */\r\n  vertical-align: middle;\r\n  box-sizing: border-box;\r\n\r\n  ${props => sizeStyles(props)};\r\n  ${props => colorStyles(props)};\r\n\r\n  /* inner ring */\r\n  &::before {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    transition: box-shadow ${TRANSITION_DURATION}s ease-in-out;\r\n    content: '';\r\n  }\r\n\r\n  &::before,\r\n  && > img {\r\n    border-radius: inherit;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  && > img {\r\n    box-sizing: inherit;\r\n    vertical-align: bottom;\r\n    object-fit: cover;\r\n  }\r\n\r\n  && > svg {\r\n    width: 1em;\r\n    height: 1em;\r\n  }\r\n\r\n  &::after {\r\n    ${props => badgeStyles(props)};\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledAvatar.defaultProps = {\r\n  size: 'medium',\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'avatars.text';\r\n\r\n/**\r\n * Accepts all `<span>` attributes\r\n */\r\nexport const StyledText = styled.span.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  overflow: hidden;\r\n  text-align: center;\r\n  white-space: nowrap;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledText.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { Anchor } from '@zendeskgarden/react-buttons';\r\nimport { Breadcrumb } from '@zendeskgarden/react-breadcrumbs';\r\nimport { BREADCRUMB_CHILDREN } from './data';\r\n\r\ninterface IArgs extends HTMLAttributes<HTMLElement> {\r\n  children: typeof BREADCRUMB_CHILDREN;\r\n}\r\n\r\nexport const BreadcrumbStory: Story<IArgs> = ({ children, ...args }) => (\r\n  <Breadcrumb {...args}>\r\n    {children.map((child, index) =>\r\n      index < children.length - 1 ? (\r\n        <Anchor key={index}>{child}</Anchor>\r\n      ) : (\r\n        <span key={index}>{child}</span>\r\n      )\r\n    )}\r\n  </Breadcrumb>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nexport const BREADCRUMB_CHILDREN = ['Garden', 'Vegetable row', 'Lettuce'];\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { Children, cloneElement, HTMLAttributes } from 'react';\r\nimport { useBreadcrumb } from '@zendeskgarden/container-breadcrumb';\r\nimport {\r\n  StyledBreadcrumb,\r\n  StyledBreadcrumbItem,\r\n  StyledCenteredBreadcrumbItem,\r\n  StyledChevronIcon\r\n} from '../styled';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLElement>\r\n */\r\nexport const Breadcrumb = React.forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>(\r\n  (props, ref) => {\r\n    const { getContainerProps, getCurrentPageProps } = useBreadcrumb();\r\n\r\n    const totalChildren = Children.count(props.children);\r\n\r\n    const mappedChildren = Children.map(props.children, (child, index) => {\r\n      const isLastItem = index === totalChildren - 1;\r\n\r\n      if (isLastItem) {\r\n        return (\r\n          <StyledBreadcrumbItem isCurrent>\r\n            {cloneElement(child as any, getCurrentPageProps())}\r\n          </StyledBreadcrumbItem>\r\n        );\r\n      }\r\n\r\n      return (\r\n        <>\r\n          <StyledBreadcrumbItem>{child}</StyledBreadcrumbItem>\r\n          <StyledCenteredBreadcrumbItem>\r\n            <StyledChevronIcon />\r\n          </StyledCenteredBreadcrumbItem>\r\n        </>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <nav {...getContainerProps({ ...props, ref, role: null } as any)}>\r\n        <StyledBreadcrumb>{mappedChildren}</StyledBreadcrumb>\r\n      </nav>\r\n    );\r\n  }\r\n);\r\n\r\nBreadcrumb.displayName = 'Breadcrumb';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'breadcrumbs.list';\r\n\r\n/**\r\n * 1. <ol> reset.\r\n */\r\nexport const StyledBreadcrumb = styled.ol.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  display: flex;\r\n  margin: 0; /* [1] */\r\n  padding: 0; /* [1] */\r\n  list-style: none; /* [1] */\r\n  font-size: ${props => props.theme.fontSizes.md};\r\n  direction: ${props => props.theme.rtl && 'rtl'};\r\n`;\r\n\r\nStyledBreadcrumb.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css } from 'styled-components';\r\nimport { getColor, getLineHeight, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'breadcrumbs.item';\r\n\r\nexport interface IStyledBreadcrumbItemProps {\r\n  isCurrent?: boolean;\r\n}\r\n\r\n/**\r\n * These CSS pseudo-classes are used to match the equivalent of :any-link, which\r\n * is not used here because it is not currently supported in Microsoft Edge.\r\n */\r\nconst linkStyles = ({ isCurrent }: IStyledBreadcrumbItemProps) => css`\r\n  & > :link,\r\n  & > :visited {\r\n    white-space: inherit;\r\n  }\r\n\r\n  ${isCurrent &&\r\n  `\r\n      & > :link,\r\n      & > :visited,\r\n      & > :link:hover,\r\n      & > :visited:hover,\r\n      & > :link:focus,\r\n      & > :visited:focus {\r\n        color: inherit;\r\n      }\r\n    `}\r\n`;\r\n\r\nexport const StyledBreadcrumbItem = styled.li.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledBreadcrumbItemProps>`\r\n  line-height: ${props => getLineHeight(props.theme.space.base * 5, props.theme.fontSizes.md)};\r\n  white-space: nowrap;\r\n  color: ${props => (props.isCurrent ? getColor(props.theme.colors.neutralHue, 600) : 'inherit')};\r\n  font-size: inherit;\r\n  ${linkStyles};\r\n`;\r\n\r\nStyledBreadcrumbItem.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledBreadcrumbItem } from './StyledBreadcrumbItem';\r\n\r\nexport const StyledCenteredBreadcrumbItem = styled(StyledBreadcrumbItem).attrs({\r\n  'aria-hidden': true\r\n})`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nStyledCenteredBreadcrumbItem.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport styled, { ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { em } from 'polished';\r\nimport { DEFAULT_THEME, getColor } from '@zendeskgarden/react-theming';\r\nimport { ChevronRightStrokeIcon } from './chevron-right';\r\n\r\n/**\r\n * styled-components injects a theme prop that is rendered as an attribute\r\n * of the SVG icon in the browser. This function removes the `theme` prop injected\r\n * by styled-components.\r\n */\r\nconst ValidChevronIcon: React.FC<HTMLAttributes<SVGElement> & ThemeProps<DefaultTheme>> = props => {\r\n  /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\r\n  const { theme, ...validProps } = props;\r\n\r\n  return <ChevronRightStrokeIcon {...validProps} />;\r\n};\r\n\r\n/**\r\n * Accepts all `<svg>` props\r\n */\r\nexport const StyledChevronIcon = styled(ValidChevronIcon).attrs({\r\n  role: 'presentation',\r\n  'aria-hidden': 'true'\r\n})`\r\n  transform: ${props => props.theme.rtl && `rotate(180deg);`};\r\n  margin: 0 ${props => em(props.theme.space.base, props.theme.fontSizes.md)};\r\n  color: ${props => getColor('neutralHue', 600, props.theme)};\r\n`;\r\n\r\nStyledChevronIcon.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nexport const ChevronRightStrokeIcon = () => {\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n      <g fill=\"none\" stroke=\"currentColor\">\r\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4 9l2.5 2.5 5-5\"/>\r\n        <circle cx=\"7.5\" cy=\"8.5\" r=\"7\"/>\r\n      </g>\r\n    </svg>\r\n  )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { Button, ButtonGroup, IButtonProps } from '@zendeskgarden/react-buttons';\r\nimport { IButtonGroupButtons } from './types';\r\n\r\ninterface IArgs extends IButtonProps {\r\n  buttons: IButtonGroupButtons[];\r\n  selectedItem: unknown;\r\n  onSelect: (item: unknown) => void;\r\n}\r\n\r\nexport const ButtonGroupStory: Story<IArgs> = ({ selectedItem, onSelect, buttons, ...args }) => (\r\n  <ButtonGroup selectedItem={selectedItem} onSelect={onSelect}>\r\n    {buttons.map((button, index) => (\r\n      <Button key={index} value={button.value} {...args}>\r\n        {button.text}\r\n      </Button>\r\n    ))}\r\n  </ButtonGroup>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport StartIcon from '@zendeskgarden/svg-icons/src/16/leaf-stroke.svg';\r\nimport EndIcon from '@zendeskgarden/svg-icons/src/16/chevron-down-stroke.svg';\r\nimport { Button, IButtonProps } from '@zendeskgarden/react-buttons';\r\n\r\ninterface IArgs extends IButtonProps {\r\n  hasStartIcon: boolean;\r\n  hasEndIcon: boolean;\r\n  isStartIconRotated: boolean;\r\n  isEndIconRotated: boolean;\r\n}\r\n\r\nexport const ButtonStory: Story<IArgs> = ({ hasStartIcon, hasEndIcon, ...args }) => (\r\n  <Button {...args}>\r\n    {hasStartIcon && (\r\n      <Button.StartIcon isRotated={args.isStartIconRotated}>\r\n        <StartIcon />\r\n      </Button.StartIcon>\r\n    )}\r\n    {args.children}\r\n    {hasEndIcon && (\r\n      <Button.EndIcon isRotated={args.isEndIconRotated}>\r\n        <EndIcon />\r\n      </Button.EndIcon>\r\n    )}\r\n  </Button>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { Button, ChevronButton, IButtonProps, SplitButton } from '@zendeskgarden/react-buttons';\r\n\r\ninterface IArgs extends IButtonProps {\r\n  isRotated?: boolean;\r\n}\r\n\r\nexport const SplitButtonStory: Story<IArgs> = ({\r\n  children,\r\n  'aria-label': ariaLabel,\r\n  isRotated,\r\n  ...args\r\n}) => (\r\n  <SplitButton>\r\n    <Button {...args}>{children}</Button>\r\n    <ChevronButton aria-label={ariaLabel} isRotated={isRotated} {...args} />\r\n  </SplitButton>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { IButtonGroupButtons } from './types';\r\n\r\nexport const BUTTON_GROUP_BUTTONS: IButtonGroupButtons[] = [\r\n  {\r\n    value: 1,\r\n    text: 'One'\r\n  },\r\n  {\r\n    value: 2,\r\n    text: 'Two'\r\n  },\r\n  {\r\n    value: 3,\r\n    text: 'Three'\r\n  }\r\n];\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { AnchorHTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledAnchor, StyledExternalIcon } from '../styled';\r\n\r\nexport interface IAnchorProps extends AnchorHTMLAttributes<HTMLAnchorElement> {\r\n  /** Applies danger styling */\r\n  isDanger?: boolean;\r\n  /**\r\n   * Attaches `target=\"_blank\"` and `rel=\"noopener noreferrer\"` to an anchor that\r\n   * navigates to an external resource. This ensures that the anchor is a\r\n   * safe [cross-origin destination link](https://web.dev/external-anchors-use-rel-noopener/).\r\n   **/\r\n  isExternal?: boolean;\r\n}\r\n\r\n/**\r\n * @extends AnchorHTMLAttributes<HTMLAnchorElement>\r\n */\r\nconst Anchor: React.FunctionComponent<IAnchorProps & React.RefAttributes<HTMLAnchorElement>> =\r\n  React.forwardRef<HTMLAnchorElement, IAnchorProps>(\r\n    ({ children, isExternal, ...otherProps }, ref) => {\r\n      let anchorProps: AnchorHTMLAttributes<HTMLAnchorElement> = otherProps;\r\n\r\n      if (isExternal) {\r\n        anchorProps = {\r\n          target: '_blank',\r\n          rel: 'noopener noreferrer',\r\n          ...anchorProps\r\n        };\r\n      }\r\n\r\n      return (\r\n        <StyledAnchor ref={ref} {...(anchorProps as any)}>\r\n          {children}\r\n          {isExternal && <StyledExternalIcon />}\r\n        </StyledAnchor>\r\n      );\r\n    }\r\n  );\r\n\r\nAnchor.displayName = 'Anchor';\r\n\r\nAnchor.propTypes = {\r\n  isExternal: PropTypes.bool,\r\n  isDanger: PropTypes.bool\r\n};\r\n\r\nexport default Anchor;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { ButtonHTMLAttributes, SVGAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledButton, StyledIcon } from '../styled';\r\nimport { useButtonGroupContext } from '../utils/useButtonGroupContext';\r\nimport { useSplitButtonContext } from '../utils/useSplitButtonContext';\r\n\r\nexport interface IButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n  /** Applies danger styling */\r\n  isDanger?: boolean;\r\n  /** Specifies the buton size */\r\n  size?: 'small' | 'medium' | 'large';\r\n  /** Stretches the button fill to its container width */\r\n  isStretched?: boolean;\r\n  /** Applies neutral button styling */\r\n  isNeutral?: boolean;\r\n  /** Applies primary button styling */\r\n  isPrimary?: boolean;\r\n  /** Applies basic button styling */\r\n  isBasic?: boolean;\r\n  /** Applies link (anchor) button styling */\r\n  isLink?: boolean;\r\n  /** Applies pill button styling */\r\n  isPill?: boolean;\r\n  /** Applies inset `box-shadow` styling on focus */\r\n  focusInset?: boolean;\r\n  /** @ignore prop used by `ButtonGroup` */\r\n  isSelected?: boolean;\r\n}\r\n\r\nconst Button: React.FunctionComponent<IButtonProps & React.RefAttributes<HTMLButtonElement>> =\r\n  React.forwardRef<HTMLButtonElement, IButtonProps>((props, ref) => {\r\n    const buttonGroupContext = useButtonGroupContext();\r\n    const splitButtonContext = useSplitButtonContext();\r\n\r\n    let computedProps = {\r\n      ...props,\r\n      focusInset: props.focusInset || buttonGroupContext !== undefined || splitButtonContext\r\n    };\r\n\r\n    if (buttonGroupContext && !props.disabled) {\r\n      if (!props.value) {\r\n        throw new Error('\"value\" prop must be provided to Button when used within a ButtonGroup');\r\n      }\r\n\r\n      computedProps = buttonGroupContext.getButtonProps({\r\n        item: props.value,\r\n        focusRef: React.createRef(),\r\n        isSelected: props.value === buttonGroupContext.selectedItem,\r\n        ...computedProps\r\n      });\r\n    }\r\n\r\n    return <StyledButton ref={ref} {...computedProps} />;\r\n  });\r\n\r\nButton.propTypes = {\r\n  isNeutral: PropTypes.bool,\r\n  isPrimary: PropTypes.bool,\r\n  isDanger: PropTypes.bool,\r\n  isPill: PropTypes.bool,\r\n  isBasic: PropTypes.bool,\r\n  focusInset: PropTypes.bool,\r\n  isLink: PropTypes.bool,\r\n  isStretched: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n  size: PropTypes.oneOf(['small', 'medium', 'large'])\r\n};\r\n\r\nButton.defaultProps = {\r\n  size: 'medium'\r\n};\r\n\r\nButton.displayName = 'Button';\r\n\r\nexport interface IIconProps extends SVGAttributes<SVGSVGElement> {\r\n  isRotated?: boolean;\r\n  children: any;\r\n}\r\n\r\nconst StartIcon = (props: IIconProps) => <StyledIcon position=\"start\" {...props} />;\r\nconst EndIcon = (props: IIconProps) => <StyledIcon position=\"end\" {...props} />;\r\n\r\n(Button as any).StartIcon = StartIcon;\r\n(Button as any).EndIcon = EndIcon;\r\n\r\n/**\r\n * @extends ButtonHTMLAttributes<HTMLButtonElement>\r\n */\r\nexport default Button as React.FunctionComponent<\r\n  IButtonProps & React.RefAttributes<HTMLButtonElement>\r\n> & {\r\n  StartIcon: typeof StartIcon;\r\n  EndIcon: typeof EndIcon;\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useButtonGroup } from '@zendeskgarden/container-buttongroup';\r\n\r\nimport { StyledButtonGroup } from '../styled';\r\nimport { ButtonGroupContext } from '../utils/useButtonGroupContext';\r\n\r\nexport interface IButtonGroupProps extends HTMLAttributes<HTMLDivElement> {\r\n  /** Defines the currently selected button in the group */\r\n  selectedItem?: any;\r\n  /**\r\n   * Handles button selection\r\n   *\r\n   * @param {any} item The selected item\r\n   */\r\n  onSelect?: (item: any) => void;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nconst ButtonGroup: React.FunctionComponent<IButtonGroupProps> = ({\r\n  children,\r\n  onSelect,\r\n  selectedItem: controlledSelectedItem,\r\n  ...otherProps\r\n}) => {\r\n  const { selectedItem, getButtonProps, getGroupProps } = useButtonGroup({\r\n    selectedItem: controlledSelectedItem,\r\n    defaultSelectedIndex: 0,\r\n    onSelect\r\n  });\r\n\r\n  const contextValue = useMemo(\r\n    () => ({ selectedItem, getButtonProps }),\r\n    [selectedItem, getButtonProps]\r\n  );\r\n\r\n  return (\r\n    <ButtonGroupContext.Provider value={contextValue}>\r\n      <StyledButtonGroup {...(getGroupProps(otherProps) as any)}>{children}</StyledButtonGroup>\r\n    </ButtonGroupContext.Provider>\r\n  );\r\n};\r\n\r\nButtonGroup.propTypes = {\r\n  selectedItem: PropTypes.any,\r\n  onSelect: PropTypes.func\r\n};\r\n\r\nexport default ButtonGroup;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport IconButton, { IIconButtonProps } from './IconButton';\r\n\r\n/**\r\n * @extends ButtonHTMLAttributes<HTMLButtonElement>\r\n */\r\nconst ChevronButton: React.FunctionComponent<\r\n  IIconButtonProps & React.RefAttributes<HTMLButtonElement>\r\n> = React.forwardRef<HTMLButtonElement, IIconButtonProps>(({ ...buttonProps }, ref) => (\r\n  <IconButton ref={ref} {...buttonProps}>\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"currentColor\" d=\"M12.688 5.61a.5.5 0 01.69.718l-.066.062-5 4a.5.5 0 01-.542.054l-.082-.054-5-4a.5.5 0 01.55-.83l.074.05L8 9.359l4.688-3.75z\"/>\r\n</svg>\r\n\r\n  </IconButton>\r\n));\r\n\r\nChevronButton.displayName = 'ChevronButton';\r\n\r\nChevronButton.propTypes = IconButton.propTypes;\r\n\r\nChevronButton.defaultProps = {\r\n  isBasic: false,\r\n  isPill: false,\r\n  size: 'medium'\r\n};\r\n\r\nexport default ChevronButton;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { ButtonHTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledIconButton, StyledIcon } from '../styled';\r\nimport { useSplitButtonContext } from '../utils/useSplitButtonContext';\r\n\r\nexport interface IIconButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n  /** Applies neutral button styling */\r\n  isNeutral?: boolean;\r\n  /** Applies primary button styling */\r\n  isPrimary?: boolean;\r\n  /** Applies danger button styling */\r\n  isDanger?: boolean;\r\n  /** Applies basic button styling */\r\n  isBasic?: boolean;\r\n  /** Applies pill button styling */\r\n  isPill?: boolean;\r\n  /** Applies inset `box-shadow` styling on focus */\r\n  focusInset?: boolean;\r\n  /** Rotates icon 180 degrees */\r\n  isRotated?: boolean;\r\n  /** Specifies icon button size */\r\n  size?: 'small' | 'medium' | 'large';\r\n}\r\n\r\n/**\r\n * @extends ButtonHTMLAttributes<HTMLButtonElement>\r\n */\r\nconst IconButton: React.FunctionComponent<\r\n  IIconButtonProps & React.RefAttributes<HTMLButtonElement>\r\n> = React.forwardRef<HTMLButtonElement, IIconButtonProps>(\r\n  ({ children, isRotated, ...otherProps }, ref) => {\r\n    const focusInset = useSplitButtonContext();\r\n\r\n    return (\r\n      <StyledIconButton ref={ref} {...otherProps} focusInset={otherProps.focusInset || focusInset}>\r\n        <StyledIcon isRotated={isRotated}>{children}</StyledIcon>\r\n      </StyledIconButton>\r\n    );\r\n  }\r\n);\r\n\r\nIconButton.displayName = 'IconButton';\r\n\r\nIconButton.propTypes = {\r\n  isDanger: PropTypes.bool,\r\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\r\n  isNeutral: PropTypes.bool,\r\n  isPrimary: PropTypes.bool,\r\n  isBasic: PropTypes.bool,\r\n  isPill: PropTypes.bool,\r\n  focusInset: PropTypes.bool,\r\n  isRotated: PropTypes.bool\r\n};\r\n\r\nIconButton.defaultProps = {\r\n  isPill: true,\r\n  isBasic: true,\r\n  size: 'medium'\r\n};\r\n\r\nexport default IconButton;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { StyledButtonGroup } from '../styled';\r\nimport { SplitButtonContext } from '../utils/useSplitButtonContext';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nconst SplitButton: React.FunctionComponent<HTMLAttributes<HTMLDivElement>> = ({\r\n  children,\r\n  ...other\r\n}) => (\r\n  <SplitButtonContext.Provider value>\r\n    <StyledButtonGroup {...other}>{children}</StyledButtonGroup>\r\n  </SplitButtonContext.Provider>\r\n);\r\n\r\nexport default SplitButton;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button, { IButtonProps } from './Button';\r\n\r\nexport interface IToggleButtonProps extends IButtonProps {\r\n  /**\r\n   * Determines if the button is pressed. Use \"mixed\" to indicate that\r\n   * the toggle controls other elements which do not share the same value.\r\n   */\r\n  isPressed?: boolean | 'mixed';\r\n}\r\n\r\n/**\r\n * @extends ButtonHTMLAttributes<HTMLButtonElement>\r\n */\r\nconst ToggleButton: React.FunctionComponent<\r\n  IToggleButtonProps & React.RefAttributes<HTMLButtonElement>\r\n> = React.forwardRef<HTMLButtonElement, IToggleButtonProps>(({ isPressed, ...otherProps }, ref) => (\r\n  <Button aria-pressed={isPressed} ref={ref} {...otherProps} />\r\n));\r\n\r\nToggleButton.displayName = 'ToggleButton';\r\n\r\nToggleButton.propTypes = {\r\n  ...Button.propTypes,\r\n  isPressed: PropTypes.oneOf([true, false, 'mixed'])\r\n};\r\n\r\nToggleButton.defaultProps = {\r\n  isPressed: false,\r\n  size: 'medium'\r\n};\r\n\r\nexport default ToggleButton;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton, { IIconButtonProps } from './IconButton';\r\n\r\nexport interface IToggleIconButtonProps extends IIconButtonProps {\r\n  /**\r\n   * Determines if the button is pressed. Use \"mixed\" to indicate that the\r\n   * toggle controls other elements which do not share the same value.\r\n   */\r\n  isPressed?: boolean | 'mixed';\r\n}\r\n\r\n/**\r\n * @extends ButtonHTMLAttributes<HTMLButtonElement>\r\n */\r\nconst ToggleIconButton: React.FunctionComponent<\r\n  IToggleIconButtonProps & React.RefAttributes<HTMLButtonElement>\r\n> = React.forwardRef<HTMLButtonElement, IToggleIconButtonProps>(\r\n  ({ isPressed, ...otherProps }, ref) => (\r\n    <IconButton aria-pressed={isPressed} ref={ref} {...otherProps} />\r\n  )\r\n);\r\n\r\nToggleIconButton.displayName = 'ToggleIconButton';\r\n\r\nToggleIconButton.propTypes = {\r\n  ...IconButton.propTypes,\r\n  isPressed: PropTypes.oneOf([true, false, 'mixed'])\r\n};\r\n\r\nToggleIconButton.defaultProps = {\r\n  isPill: true,\r\n  isBasic: true,\r\n  isPressed: false,\r\n  size: 'medium'\r\n};\r\n\r\nexport default ToggleIconButton;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledButton } from './StyledButton';\r\n\r\nconst COMPONENT_ID = 'buttons.anchor';\r\n\r\n/**\r\n * Accepts all `<a>` props\r\n */\r\nexport const StyledAnchor = styled(StyledButton).attrs(props => ({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  as: 'a',\r\n  dir: props.theme.rtl ? 'rtl' : undefined,\r\n  isLink: true,\r\n  type: undefined\r\n}))`\r\n  direction: ${props => props.theme.rtl && 'rtl'};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledAnchor.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, DefaultTheme, ThemeProps } from 'styled-components';\r\nimport { em, math, rgba } from 'polished';\r\nimport { DEFAULT_THEME, getColor, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\nimport { StyledButtonGroup } from './StyledButtonGroup';\r\nimport { StyledIcon } from './StyledIcon';\r\nimport { HTMLAttributes } from 'react';\r\n\r\nconst COMPONENT_ID = 'buttons.button';\r\n\r\nconst SIZE = {\r\n  SMALL: 'small',\r\n  MEDIUM: 'medium',\r\n  LARGE: 'large'\r\n};\r\n\r\nconst getBorderRadius = (props: IStyledButtonProps & ThemeProps<DefaultTheme>) => {\r\n  if (props.isLink) {\r\n    return 0;\r\n  } else if (props.isPill) {\r\n    return '100px';\r\n  }\r\n\r\n  return props.theme.borderRadii.md;\r\n};\r\n\r\nconst getDisabledBackgroundColor = (props: IStyledButtonProps & ThemeProps<DefaultTheme>) => {\r\n  return getColor('neutralHue', 200, props.theme);\r\n};\r\n\r\nexport const getHeight = (props: IStyledButtonProps & ThemeProps<DefaultTheme>) => {\r\n  if (props.size === SIZE.SMALL) {\r\n    return `${props.theme.space.base * 8}px`;\r\n  } else if (props.size === SIZE.LARGE) {\r\n    return `${props.theme.space.base * 12}px`;\r\n  }\r\n\r\n  return `${props.theme.space.base * 10}px`;\r\n};\r\n\r\n/**\r\n * 1. override CSS bedrock\r\n */\r\nconst colorStyles = (\r\n  props: IStyledButtonProps & ThemeProps<DefaultTheme> & HTMLAttributes<HTMLButtonElement>\r\n) => {\r\n  let retVal;\r\n  let hue;\r\n\r\n  if (\r\n    props.disabled ||\r\n    (props.isNeutral && (props.isPrimary || props.isSelected) && !props.isDanger)\r\n  ) {\r\n    hue = 'neutralHue';\r\n  } else if (props.isDanger) {\r\n    hue = 'dangerHue';\r\n  } else {\r\n    hue = 'primaryHue';\r\n  }\r\n\r\n  const shade = 600;\r\n  const baseColor = getColor(hue, shade, props.theme);\r\n  const hoverColor = getColor(hue, shade + 100, props.theme);\r\n  const activeColor = getColor(hue, shade + 200, props.theme);\r\n  const disabledBackgroundColor = getDisabledBackgroundColor(props);\r\n  const disabledForegroundColor = getColor(hue, shade - 200, props.theme);\r\n  const boxShadowColor =\r\n    props.focusInset && (props.isPrimary || props.isSelected)\r\n      ? props.theme.palette.white\r\n      : baseColor;\r\n  const boxShadow = `\r\n    ${props.focusInset ? 'inset' : ''}\r\n    ${props.theme.shadows.md(rgba(boxShadowColor as string, 0.35))}`;\r\n\r\n  if (props.isLink) {\r\n    retVal = css`\r\n      background-color: transparent;\r\n      color: ${baseColor};\r\n\r\n      &:focus {\r\n        color: ${baseColor}; /* [1] */\r\n      }\r\n\r\n      &:hover,\r\n      &[data-garden-focus-visible] {\r\n        color: ${hoverColor};\r\n      }\r\n\r\n      &:active,\r\n      &[aria-pressed='true'],\r\n      &[aria-pressed='mixed'] {\r\n        color: ${activeColor};\r\n      }\r\n\r\n      &:disabled {\r\n        color: ${disabledForegroundColor};\r\n      }\r\n    `;\r\n  } else if (props.isPrimary || props.isSelected) {\r\n    retVal = css`\r\n      background-color: ${props.isPrimary && props.isSelected ? activeColor : baseColor};\r\n      color: ${props.theme.palette.white};\r\n\r\n      &:hover {\r\n        background-color: ${hoverColor};\r\n      }\r\n\r\n      &[data-garden-focus-visible] {\r\n        box-shadow: ${boxShadow};\r\n      }\r\n\r\n      &:active {\r\n        background-color: ${activeColor};\r\n      }\r\n\r\n      &[aria-pressed='true'],\r\n      &[aria-pressed='mixed'] {\r\n        background-color: ${props.isPrimary && activeColor};\r\n      }\r\n\r\n      &:disabled {\r\n        background-color: ${disabledBackgroundColor};\r\n        color: ${disabledForegroundColor};\r\n      }\r\n    `;\r\n  } else {\r\n    const borderColor =\r\n      props.isNeutral && !props.isDanger ? getColor('neutralHue', 300, props.theme) : baseColor;\r\n    const foregroundColor = props.isNeutral ? props.theme.colors.foreground : baseColor;\r\n    const hoverBorderColor = props.isNeutral && !props.isDanger ? baseColor : hoverColor;\r\n    const hoverForegroundColor = props.isNeutral ? foregroundColor : hoverColor;\r\n\r\n    retVal = css`\r\n      border-color: ${!props.isBasic && borderColor};\r\n      background-color: transparent;\r\n      color: ${foregroundColor};\r\n\r\n      &:hover {\r\n        border-color: ${!props.isBasic && hoverBorderColor};\r\n        background-color: ${rgba(baseColor as string, 0.08)};\r\n        color: ${hoverForegroundColor};\r\n      }\r\n\r\n      &[data-garden-focus-visible] {\r\n        border-color: ${props.isNeutral && baseColor};\r\n        box-shadow: ${boxShadow};\r\n      }\r\n\r\n      &:active,\r\n      &[aria-pressed='true'],\r\n      &[aria-pressed='mixed'] {\r\n        border-color: ${!props.isBasic && activeColor};\r\n        background-color: ${rgba(baseColor as string, 0.2)};\r\n        color: ${!props.isNeutral && activeColor};\r\n      }\r\n\r\n      &:disabled {\r\n        border-color: transparent;\r\n        background-color: ${disabledBackgroundColor};\r\n        color: ${disabledForegroundColor};\r\n      }\r\n\r\n      & ${StyledIcon} {\r\n        color: ${props.isNeutral && getColor('neutralHue', shade, props.theme)};\r\n      }\r\n\r\n      /* prettier-ignore */\r\n      &:hover ${StyledIcon},\r\n      &[data-garden-focus-visible] ${StyledIcon} {\r\n        color: ${props.isNeutral && getColor('neutralHue', shade + 100, props.theme)};\r\n      }\r\n\r\n      &:active ${StyledIcon} {\r\n        color: ${props.isNeutral && foregroundColor};\r\n      }\r\n\r\n      &:disabled ${StyledIcon} {\r\n        color: ${disabledForegroundColor};\r\n      }\r\n    `;\r\n  }\r\n\r\n  return retVal;\r\n};\r\n\r\n/**\r\n * 1. Icon button override.\r\n */\r\nconst groupStyles = (props: IStyledButtonProps & ThemeProps<DefaultTheme>) => {\r\n  const isPrimary = props.isPrimary;\r\n  const rtl = props.theme.rtl;\r\n  const lightBorderColor = props.theme.colors.background;\r\n  const disabledBackgroundColor = getDisabledBackgroundColor(props);\r\n\r\n  return css`\r\n    position: relative;\r\n    /* stylelint-disable-next-line property-no-unknown */\r\n    margin-${rtl ? 'right' : 'left'}: ${math(`${props.theme.borderWidths.sm} * -1`)};\r\n    border-top-width: ${isPrimary && 0};\r\n    border-bottom-width: ${isPrimary && 0};\r\n    border-right-color: ${isPrimary && lightBorderColor};\r\n    border-left-color: ${isPrimary && lightBorderColor};\r\n\r\n    &:hover,\r\n    &[data-garden-focus-visible],\r\n    &:active {\r\n      z-index: 1;\r\n    }\r\n\r\n    &:disabled {\r\n      z-index: -1;\r\n      border-top-width: 0;\r\n      border-bottom-width: 0;\r\n      border-right-color: ${lightBorderColor};\r\n      border-left-color: ${lightBorderColor};\r\n      background-color: ${!isPrimary && disabledBackgroundColor}; /* [1] */\r\n    }\r\n\r\n    /* stylelint-disable property-no-unknown, property-case */\r\n    &:first-of-type:not(:last-of-type) {\r\n      margin-${rtl ? 'right' : 'left'}: 0;\r\n      border-top-${rtl ? 'left' : 'right'}-radius: 0;\r\n      border-bottom-${rtl ? 'left' : 'right'}-radius: 0;\r\n      border-${rtl ? 'right' : 'left'}-width: ${isPrimary && 0};\r\n    }\r\n\r\n    &:last-of-type:not(:first-of-type) {\r\n      border-top-${rtl ? 'right' : 'left'}-radius: 0;\r\n      border-bottom-${rtl ? 'right' : 'left'}-radius: 0;\r\n      border-${rtl ? 'left' : 'right'}-width: ${isPrimary && 0};\r\n    }\r\n    /* stylelint-enable property-no-unknown, property-case */\r\n\r\n    &:not(:first-of-type):not(:last-of-type) {\r\n      border-radius: 0;\r\n    }\r\n\r\n    /* stylelint-disable property-no-unknown, selector-max-specificity */\r\n    &:first-of-type:not(:last-of-type) ${StyledIcon} {\r\n      margin-${rtl ? 'left' : 'right'}: ${props.isPill && '-2px'};\r\n    }\r\n\r\n    &:last-of-type:not(:first-of-type) ${StyledIcon} {\r\n      margin-${rtl ? 'right' : 'left'}: ${props.isPill && '-2px'};\r\n    }\r\n    /* stylelint-enable property-no-unknown, selector-max-specificity */\r\n  `;\r\n};\r\n\r\nconst iconStyles = (props: IStyledButtonProps & ThemeProps<DefaultTheme>) => {\r\n  const size = props.size === 'small' ? props.theme.iconSizes.sm : props.theme.iconSizes.md;\r\n\r\n  return css`\r\n    width: ${size};\r\n    min-width: ${size};\r\n    height: ${size};\r\n    vertical-align: ${props.isLink && 'middle'};\r\n  `;\r\n};\r\n\r\nconst sizeStyles = (props: IStyledButtonProps & ThemeProps<DefaultTheme>) => {\r\n  let retVal;\r\n\r\n  if (props.isLink) {\r\n    retVal = css`\r\n      padding: 0;\r\n      font-size: inherit;\r\n    `;\r\n  } else {\r\n    const height = getHeight(props);\r\n    const lineHeight = math(`${height} - (${props.theme.borderWidths.sm} * 2)`);\r\n    let padding;\r\n    let fontSize;\r\n\r\n    if (props.size === SIZE.SMALL) {\r\n      fontSize = props.theme.fontSizes.sm;\r\n      padding = `${props.theme.space.base * 3}px`;\r\n    } else {\r\n      fontSize = props.theme.fontSizes.md;\r\n\r\n      if (props.size === SIZE.LARGE) {\r\n        padding = `${props.theme.space.base * 5}px`;\r\n      } else {\r\n        padding = `${props.theme.space.base * 4}px`;\r\n      }\r\n    }\r\n\r\n    retVal = css`\r\n      padding: 0 ${em(math(`${padding} - ${props.theme.borderWidths.sm}`), fontSize)};\r\n      height: ${height};\r\n      line-height: ${lineHeight};\r\n      font-size: ${fontSize};\r\n    `;\r\n  }\r\n\r\n  return retVal;\r\n};\r\n\r\nexport interface IStyledButtonProps {\r\n  isBasic?: boolean;\r\n  isDanger?: boolean;\r\n  focusInset?: boolean;\r\n  isLink?: boolean;\r\n  isNeutral?: boolean;\r\n  isPrimary?: boolean;\r\n  isPill?: boolean;\r\n  isSelected?: boolean;\r\n  size?: 'small' | 'medium' | 'large';\r\n  isStretched?: boolean;\r\n  disabled?: boolean;\r\n}\r\n\r\n/**\r\n * 1. FF <input type=\"submit\"> fix\r\n * 2. <a> element reset\r\n */\r\nexport const StyledButton = styled.button.attrs<IStyledButtonProps>(props => ({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  type: props.type || 'button'\r\n}))<IStyledButtonProps>`\r\n  display: ${props => (props.isLink ? 'inline' : 'inline-flex')};\r\n  align-items: ${props => !props.isLink && 'center'};\r\n  justify-content: ${props => !props.isLink && 'center'};\r\n  /* prettier-ignore */\r\n  transition:\r\n    border-color 0.25s ease-in-out,\r\n    box-shadow 0.1s ease-in-out,\r\n    background-color 0.25s ease-in-out,\r\n    color 0.25s ease-in-out,\r\n    z-index 0.25s ease-in-out;\r\n  margin: 0;\r\n  border: ${props => (props.isLink ? 'none' : `${props.theme.borders.sm} transparent`)};\r\n  border-radius: ${props => getBorderRadius(props)};\r\n  cursor: pointer;\r\n  width: ${props => (props.isStretched ? '100%' : '')};\r\n  overflow: hidden;\r\n  text-decoration: none; /* <a> element reset */\r\n  text-overflow: ellipsis;\r\n  white-space: ${props => !props.isLink && 'nowrap'};\r\n  font-family: inherit; /* <button> & <input> override */\r\n  font-weight: ${props => (props.isLink ? 'inherit' : props.theme.fontWeights.regular)};\r\n  -webkit-font-smoothing: subpixel-antialiased;\r\n  box-sizing: border-box;\r\n  user-select: ${props => !props.isLink && 'none'};\r\n  -webkit-touch-callout: none;\r\n\r\n  ${props => sizeStyles(props)};\r\n\r\n  &::-moz-focus-inner {\r\n    /* [1] */\r\n    border: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n    text-decoration: ${props => props.isLink && 'none'}; /* [2] */\r\n  }\r\n\r\n  &:hover {\r\n    text-decoration: ${props => (props.isLink ? 'underline' : 'none')}; /* [2] */\r\n  }\r\n\r\n  &[data-garden-focus-visible] {\r\n    text-decoration: ${props => (props.isLink ? 'underline' : 'none')}; /* [2] */\r\n  }\r\n\r\n  &:active,\r\n  &[aria-pressed='true'],\r\n  &[aria-pressed='mixed'] {\r\n    /* prettier-ignore */\r\n    transition:\r\n      border-color 0.1s ease-in-out,\r\n      background-color 0.1s ease-in-out,\r\n      color 0.1s ease-in-out,\r\n      z-index 0.25s ease-in-out;\r\n    text-decoration: ${props => (props.isLink ? 'underline' : 'none')}; /* [2] */\r\n  }\r\n\r\n  ${props => colorStyles(props)};\r\n\r\n  &:disabled {\r\n    cursor: default;\r\n    text-decoration: ${props => props.isLink && 'none'};\r\n  }\r\n\r\n  /* stylelint-disable */\r\n  & ${StyledIcon} {\r\n    ${props => iconStyles(props)}\r\n  }\r\n\r\n  ${StyledButtonGroup} & {\r\n    ${props => groupStyles(props)};\r\n  }\r\n  /* stylelint-enable */\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledButton.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { DEFAULT_THEME, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'buttons.button_group_view';\r\n\r\n/**\r\n * Accepts all `<div>` props\r\n */\r\nexport const StyledButtonGroup = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  display: inline-flex;\r\n  position: relative;\r\n  z-index: 0;\r\n  direction: ${props => props.theme.rtl && 'rtl'};\r\n  white-space: nowrap;\r\n\r\n  :focus {\r\n    outline: none;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledButtonGroup.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport NewWindowIcon from '@zendeskgarden/svg-icons/src/12/new-window-stroke.svg';\r\nimport { DEFAULT_THEME, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'buttons.external_icon';\r\n\r\n/**\r\n * Accepts all `<svg>` props\r\n */\r\nexport const StyledExternalIcon = styled(NewWindowIcon).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  transform: ${props => props.theme.rtl && 'scaleX(-1)'};\r\n  margin-bottom: -0.085em;\r\n  padding-left: 0.25em;\r\n  box-sizing: content-box;\r\n  width: 0.85em;\r\n  height: 0.85em;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledExternalIcon.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport React, { Children } from 'react';\r\nimport { DEFAULT_THEME, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'buttons.icon';\r\n\r\ninterface IStyledIconProps {\r\n  isRotated: boolean;\r\n  position?: 'start' | 'end';\r\n}\r\n\r\nconst sizeStyles = (props: IStyledIconProps & ThemeProps<DefaultTheme>) => {\r\n  let marginProperty;\r\n\r\n  if (props.position === 'start') {\r\n    marginProperty = `margin-${props.theme.rtl ? 'left' : 'right'}`;\r\n  } else if (props.position === 'end') {\r\n    marginProperty = `margin-${props.theme.rtl ? 'right' : 'left'}`;\r\n  }\r\n\r\n  return (\r\n    marginProperty &&\r\n    css`\r\n      ${marginProperty}: ${props.theme.space.base * 2}px;\r\n    `\r\n  );\r\n};\r\n\r\n/* eslint-disable-next-line @typescript-eslint/no-unused-vars */\r\nexport const StyledIcon = styled(({ children, isRotated, theme, ...props }) =>\r\n  React.cloneElement(Children.only(children), props)\r\n).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledIconProps>`\r\n  transform: ${props => props.isRotated && `rotate(${props.theme.rtl ? '-' : '+'}180deg)`};\r\n  transition: transform 0.25s ease-in-out, color 0.25s ease-in-out;\r\n\r\n  ${props => sizeStyles(props)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledIcon.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { retrieveComponentStyles, getColor, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledButton, getHeight, IStyledButtonProps } from './StyledButton';\r\nimport { StyledIcon } from './StyledIcon';\r\n\r\nconst COMPONENT_ID = 'buttons.icon_button';\r\n\r\nconst iconColorStyles = (props: IStyledButtonProps & ThemeProps<DefaultTheme>) => {\r\n  const shade = 600;\r\n  const baseColor = getColor('neutralHue', shade, props.theme);\r\n  const hoverColor = getColor('neutralHue', shade + 100, props.theme);\r\n  const activeColor = getColor('neutralHue', shade + 200, props.theme);\r\n\r\n  return css`\r\n    color: ${baseColor};\r\n\r\n    &:hover {\r\n      color: ${hoverColor};\r\n    }\r\n\r\n    &:active,\r\n    &[aria-pressed='true'],\r\n    &[aria-pressed='mixed'] {\r\n      color: ${activeColor};\r\n    }\r\n  `;\r\n};\r\n\r\nconst iconButtonStyles = (props: IStyledButtonProps & ThemeProps<DefaultTheme>) => {\r\n  const width = getHeight(props);\r\n\r\n  return css`\r\n    border: ${props.isBasic && 'none'};\r\n    padding: 0;\r\n    width: ${width};\r\n    min-width: ${width};\r\n\r\n    ${props.isBasic &&\r\n    !(props.isPrimary || props.isDanger || props.disabled) &&\r\n    iconColorStyles(props)};\r\n\r\n    &:disabled {\r\n      background-color: ${!props.isPrimary && 'transparent'};\r\n    }\r\n  `;\r\n};\r\n\r\n/**\r\n * 1. Ease opacity transition between embedded icons (i.e. stroke-fill).\r\n */\r\nconst iconStyles = (props: IStyledButtonProps & ThemeProps<DefaultTheme>) => {\r\n  const size = props.theme.iconSizes.md;\r\n\r\n  return css`\r\n    width: ${size};\r\n    height: ${size};\r\n\r\n    & > svg {\r\n      transition: opacity 0.15s ease-in-out; /* [1] */\r\n    }\r\n  `;\r\n};\r\n\r\nexport const StyledIconButton = styled(StyledButton as 'button').attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledButtonProps>`\r\n  ${props => iconButtonStyles(props)};\r\n\r\n  & ${StyledIcon} {\r\n    ${props => iconStyles(props)}\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledIconButton.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { createContext, useContext } from 'react';\r\n\r\ninterface IButtonGroupContext {\r\n  selectedItem: any;\r\n  getButtonProps: (props: any) => any;\r\n}\r\n\r\nexport const ButtonGroupContext = createContext<IButtonGroupContext | undefined>(undefined);\r\n\r\nexport const useButtonGroupContext = () => {\r\n  return useContext(ButtonGroupContext);\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { createContext, useContext } from 'react';\r\n\r\nexport const SplitButtonContext = createContext<boolean | undefined>(undefined);\r\n\r\nexport const useSplitButtonContext = () => {\r\n  return useContext(SplitButtonContext);\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { MouseEventHandler, ReactElement, useState } from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { ChatIcon } from './rchat';\r\nimport { ConnectIcon } from './connect';\r\nimport { ExploreIcon } from './explore';\r\nimport { GuideIcon } from './guide';\r\nimport { MessageIcon } from './message';\r\nimport { SupportIcon } from './support';\r\nimport { TalkIcon } from './relationship';\r\nimport { ProductIcon } from './garden';\r\nimport { BrandmarkIcon } from './brand';\r\nimport { NavIcon } from './app';\r\nimport { NavIcon1 } from './home';\r\nimport { NavIcon2 } from './email';\r\nimport { NavIcon3 } from './customerlist';\r\nimport { NavIcon4 } from './chat';\r\nimport { NavIcon5 } from './dashboard';\r\nimport { NavIcon6 } from './settings';\r\nimport { HeaderIcon } from './box';\r\nimport { HeaderIcon1 } from './search';\r\nimport { HeaderIcon2 } from './lifesaver';\r\nimport { HeaderIcon3 } from './chrome';\r\nimport { HeaderIcon4 } from './user-solo';\r\nimport { DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport {\r\n  Body,\r\n  Chrome,\r\n  CollapsibleSubNavItem,\r\n  Content,\r\n  Footer,\r\n  FooterItem,\r\n  Header,\r\n  HeaderItem,\r\n  HeaderItemIcon,\r\n  HeaderItemText,\r\n  HeaderItemWrapper,\r\n  IChromeProps,\r\n  INavItemProps,\r\n  Main,\r\n  Nav,\r\n  NavItem,\r\n  NavItemIcon,\r\n  NavItemText,\r\n  PRODUCT,\r\n  Sidebar,\r\n  SkipNav,\r\n  SubNav,\r\n  SubNavItem,\r\n  SubNavItemText\r\n} from '@zendeskgarden/react-chrome';\r\nimport { Button } from '@zendeskgarden/react-buttons';\r\nimport { IFooterItem, IHeaderItem, INavItem, ISubNavItem } from './types';\r\nimport { SheetComponent } from './SheetStory';\r\n\r\nconst HEADER_ICONS = [\r\n  <HeaderIcon1 key={1} />,\r\n  <HeaderIcon2 key={2} />,\r\n  <HeaderIcon3 key={3} />,\r\n  <HeaderIcon4 key={4} />\r\n];\r\n\r\nconst NAV_ICONS = [\r\n  <NavIcon1 key={1} />,\r\n  <NavIcon2 key={2} />,\r\n  <NavIcon3 key={3} />,\r\n  <NavIcon4 key={4} />,\r\n  <NavIcon5 key={5} />,\r\n  <NavIcon6 key={6} />\r\n];\r\n\r\nconst PRODUCT_ICONS: Record<PRODUCT, ReactElement<SVGElement>> = {\r\n  chat: <ChatIcon />,\r\n  connect: <ConnectIcon />,\r\n  explore: <ExploreIcon />,\r\n  guide: <GuideIcon />,\r\n  message: <MessageIcon />,\r\n  support: <SupportIcon />,\r\n  talk: <TalkIcon />\r\n};\r\n\r\ninterface IArgs extends IChromeProps {\r\n  product: INavItemProps['product'];\r\n  skipNav: string;\r\n  hasNav: boolean;\r\n  navItems: INavItem[];\r\n  onNavClick: ({ hasSubNav, hasSidebar }: Record<string, boolean | undefined>) => void;\r\n  hasLogo: boolean;\r\n  hasBrandmark: boolean;\r\n  hasSubNav: boolean;\r\n  subNavItems: ISubNavItem[];\r\n  subNavMaxWidth: number;\r\n  hasHeader: boolean;\r\n  headerItems: IHeaderItem[];\r\n  hasSidebar: boolean;\r\n  hasFooter: boolean;\r\n  footerItems: IFooterItem[];\r\n  isExpanded: boolean;\r\n  isWrapped: boolean;\r\n  sidebar: string;\r\n  main: string;\r\n  isSheetOpen: boolean;\r\n  isSheetCompact: boolean;\r\n  sheetBody: string;\r\n  sheetTitle: string;\r\n  sheetDescription: string;\r\n  onSheetClick: MouseEventHandler<HTMLButtonElement>;\r\n}\r\n\r\nexport const ChromeStory: Story<IArgs> = ({\r\n  product,\r\n  skipNav,\r\n  hasNav,\r\n  navItems,\r\n  onNavClick,\r\n  hasLogo,\r\n  hasBrandmark,\r\n  hasSubNav,\r\n  subNavItems,\r\n  subNavMaxWidth,\r\n  hasHeader,\r\n  headerItems,\r\n  hasSidebar,\r\n  hasFooter,\r\n  footerItems,\r\n  isExpanded,\r\n  isWrapped,\r\n  sidebar,\r\n  main,\r\n  isSheetOpen,\r\n  isSheetCompact,\r\n  sheetBody,\r\n  sheetTitle,\r\n  sheetDescription,\r\n  onSheetClick,\r\n  ...args\r\n}) => {\r\n  const [currentNav, setCurrentNav] = useState(0);\r\n  const [currentSubNav, setCurrentSubNav] = useState(0);\r\n\r\n  return (\r\n    <Chrome {...args} style={{ margin: `-${DEFAULT_THEME.space.xl}` }}>\r\n      <SkipNav targetId=\"main-content\">{skipNav}</SkipNav>\r\n      {hasNav && (\r\n        <Nav isExpanded={isExpanded} aria-label=\"Nav\">\r\n          {hasLogo && (\r\n            <NavItem hasLogo product={product}>\r\n              <NavItemIcon>{product ? PRODUCT_ICONS[product] : <ProductIcon />}</NavItemIcon>\r\n              <NavItemText>Nav Logo</NavItemText>\r\n            </NavItem>\r\n          )}\r\n          {navItems.map((item, index) => (\r\n            <NavItem\r\n              key={index}\r\n              isCurrent={currentNav === index}\r\n              onClick={() => {\r\n                setCurrentNav(index);\r\n                setCurrentSubNav(0);\r\n                onNavClick({ hasSubNav: item.hasSubNav, hasSidebar: item.hasSidebar });\r\n              }}\r\n            >\r\n              <NavItemIcon>{NAV_ICONS[index] || <NavIcon />}</NavItemIcon>\r\n              <NavItemText isWrapped={isWrapped}>{item.text}</NavItemText>\r\n            </NavItem>\r\n          ))}\r\n          {hasBrandmark && (\r\n            <NavItem hasBrandmark>\r\n              <NavItemIcon>\r\n                <BrandmarkIcon />\r\n              </NavItemIcon>\r\n              <NavItemText>Brandmark</NavItemText>\r\n            </NavItem>\r\n          )}\r\n        </Nav>\r\n      )}\r\n      {hasSubNav && (\r\n        <SubNav style={{ maxWidth: subNavMaxWidth }}>\r\n          {subNavItems.map((item, index) =>\r\n            item.items ? (\r\n              <CollapsibleSubNavItem key={index} header={item.text}>\r\n                {item.items.map((subItem, subIndex) => (\r\n                  <SubNavItem\r\n                    key={subIndex}\r\n                    isCurrent={currentSubNav === parseFloat(`${index}.${subIndex}`)}\r\n                    onClick={() => setCurrentSubNav(parseFloat(`${index}.${subIndex}`))}\r\n                  >\r\n                    <SubNavItemText isWrapped={isWrapped}>{subItem}</SubNavItemText>\r\n                  </SubNavItem>\r\n                ))}\r\n              </CollapsibleSubNavItem>\r\n            ) : (\r\n              <SubNavItem\r\n                key={index}\r\n                isCurrent={currentSubNav === index}\r\n                onClick={() => setCurrentSubNav(index)}\r\n              >\r\n                <SubNavItemText isWrapped={isWrapped}>{item.text}</SubNavItemText>\r\n              </SubNavItem>\r\n            )\r\n          )}\r\n        </SubNav>\r\n      )}\r\n      <Body hasFooter={hasFooter}>\r\n        {hasHeader && (\r\n          <Header isStandalone={!(hasNav || hasSubNav)}>\r\n            {hasLogo && (\r\n              <HeaderItem hasLogo product={product}>\r\n                <HeaderItemIcon>\r\n                  <SupportIcon />\r\n                </HeaderItemIcon>\r\n                <HeaderItemText>Header Logo</HeaderItemText>\r\n              </HeaderItem>\r\n            )}\r\n            {headerItems.map((item, index) =>\r\n              item.isWrapper ? (\r\n                <HeaderItemWrapper\r\n                  key={index}\r\n                  maxX={item.maxX}\r\n                  maxY={item.maxY}\r\n                  isRound={item.isRound}\r\n                >\r\n                  {item.hasIcon && (\r\n                    <HeaderItemIcon>\r\n                      {HEADER_ICONS[HEADER_ICONS.length - headerItems.length + index] || (\r\n                        <HeaderIcon />\r\n                      )}\r\n                    </HeaderItemIcon>\r\n                  )}\r\n                  <HeaderItemText isClipped={item.isClipped}>{item.text}</HeaderItemText>\r\n                </HeaderItemWrapper>\r\n              ) : (\r\n                <HeaderItem key={index} maxX={item.maxX} maxY={item.maxY} isRound={item.isRound}>\r\n                  {item.hasIcon && (\r\n                    <HeaderItemIcon>\r\n                      {HEADER_ICONS[HEADER_ICONS.length - headerItems.length + index] || (\r\n                        <HeaderIcon />\r\n                      )}\r\n                    </HeaderItemIcon>\r\n                  )}\r\n                  <HeaderItemText isClipped={item.isClipped}>{item.text}</HeaderItemText>\r\n                </HeaderItem>\r\n              )\r\n            )}\r\n          </Header>\r\n        )}\r\n        <Content id=\"main-content\">\r\n          {hasSidebar && <Sidebar>{sidebar}</Sidebar>}\r\n          <Main>{main}</Main>\r\n          <SheetComponent\r\n            hasHeader\r\n            hasBody\r\n            hasFooter\r\n            hasClose\r\n            isOpen={isSheetOpen}\r\n            isCompact={isSheetCompact}\r\n            title={sheetTitle}\r\n            description={sheetDescription}\r\n            body={sheetBody}\r\n            footerItems={[{ text: 'Close', type: hasFooter ? undefined : 'primary' }]}\r\n            onClick={onSheetClick}\r\n            {...args}\r\n          />\r\n        </Content>\r\n        {hasFooter && (\r\n          <Footer>\r\n            {footerItems &&\r\n              footerItems.map(({ text, type }, index) => (\r\n                <FooterItem key={index}>\r\n                  <Button isBasic={type === 'basic'} isPrimary={type === 'primary'}>\r\n                    {text}\r\n                  </Button>\r\n                </FooterItem>\r\n              ))}\r\n          </Footer>\r\n        )}\r\n      </Body>\r\n    </Chrome>\r\n  );\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { Col, Grid, Row } from '@zendeskgarden/react-grid';\r\nimport {\r\n  CollapsibleSubNavItem,\r\n  ICollapsibleSubNavItemProps,\r\n  SubNavItem\r\n} from '@zendeskgarden/react-chrome';\r\nimport { COLLAPSIBLE_SUB_NAV_ITEM } from './types';\r\n\r\ninterface IArgs extends ICollapsibleSubNavItemProps {\r\n  items: COLLAPSIBLE_SUB_NAV_ITEM[];\r\n}\r\n\r\nexport const CollapsibleSubNavItemStory: Story<IArgs> = ({ items, ...args }) => {\r\n  const [current, setCurrent] = useState<number | undefined>();\r\n\r\n  return (\r\n    <Grid>\r\n      <Row>\r\n        <Col sm={6}>\r\n          <CollapsibleSubNavItem {...args}>\r\n            {items.map((item, index) => (\r\n              <SubNavItem\r\n                key={index}\r\n                isCurrent={current === index}\r\n                onClick={() => setCurrent(index)}\r\n              >\r\n                {item}\r\n              </SubNavItem>\r\n            ))}\r\n          </CollapsibleSubNavItem>\r\n        </Col>\r\n      </Row>\r\n    </Grid>\r\n  );\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { ChangeEventHandler } from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { DefaultTheme } from 'styled-components';\r\nimport { ThemeProvider, IGardenTheme } from '@zendeskgarden/react-theming';\r\nimport { Field, Label, Toggle } from '@zendeskgarden/react-forms';\r\nimport { Col, Grid, Row } from '@zendeskgarden/react-grid';\r\nimport { Button } from '@zendeskgarden/react-buttons';\r\nimport { ISheetProps, Sheet } from '@zendeskgarden/react-chrome';\r\nimport { IFooterItem } from './types';\r\n\r\ninterface ISheetComponentProps extends ISheetProps {\r\n  hasBody: boolean;\r\n  body: string;\r\n  hasClose: boolean;\r\n  hasFooter: boolean;\r\n  footerItems: IFooterItem[];\r\n  hasHeader: boolean;\r\n  isCompact: boolean;\r\n  title: string;\r\n  description: string;\r\n}\r\n\r\nexport const SheetComponent = ({\r\n  hasHeader,\r\n  title,\r\n  description,\r\n  hasBody,\r\n  body,\r\n  hasFooter,\r\n  footerItems,\r\n  isCompact,\r\n  onClick,\r\n  hasClose,\r\n  ...props\r\n}: ISheetComponentProps) => (\r\n  <Sheet {...props}>\r\n    {hasHeader && (\r\n      <Sheet.Header>\r\n        <Sheet.Title>{title}</Sheet.Title>\r\n        <Sheet.Description>{description}</Sheet.Description>\r\n      </Sheet.Header>\r\n    )}\r\n    {hasBody ? <Sheet.Body>{body}</Sheet.Body> : body}\r\n    {hasFooter && (\r\n      <Sheet.Footer isCompact={isCompact}>\r\n        {footerItems &&\r\n          footerItems.map(({ text, type }, index) => (\r\n            <Sheet.FooterItem key={index}>\r\n              <Button\r\n                isLink={isCompact}\r\n                isBasic={type === 'basic'}\r\n                isPrimary={type === 'primary'}\r\n                onClick={onClick}\r\n              >\r\n                {text}\r\n              </Button>\r\n            </Sheet.FooterItem>\r\n          ))}\r\n      </Sheet.Footer>\r\n    )}\r\n    {hasClose && <Sheet.Close onClick={onClick} />}\r\n  </Sheet>\r\n);\r\n\r\ninterface IArgs extends ISheetComponentProps {\r\n  debug: boolean;\r\n  onChange: ChangeEventHandler<HTMLInputElement>;\r\n}\r\n\r\nexport const SheetStory: Story<IArgs> = ({\r\n  debug,\r\n  onClick,\r\n  onChange,\r\n  hasBody,\r\n  body,\r\n  hasClose,\r\n  hasFooter,\r\n  footerItems,\r\n  hasHeader,\r\n  title,\r\n  description,\r\n  ...args\r\n}) => (\r\n  <>\r\n    <ThemeProvider\r\n      focusVisibleRef={null}\r\n      theme={\r\n        ((parentTheme: DefaultTheme) => ({\r\n          ...parentTheme,\r\n          rtl: parentTheme.rtl ? args.placement === 'start' : args.placement !== 'start'\r\n        })) as unknown as IGardenTheme\r\n      }\r\n    >\r\n      <Field>\r\n        <Toggle checked={args.isOpen} onChange={onChange}>\r\n          <Label hidden>Sheet</Label>\r\n        </Toggle>\r\n      </Field>\r\n    </ThemeProvider>\r\n    <Grid debug={debug} gutters={false} style={{ marginTop: 20 }}>\r\n      <Row style={{ height: 'calc(100vh - 120px)' }} justifyContent={args.placement || 'end'}>\r\n        <Col size=\"auto\" style={{ maxHeight: '100%' }}>\r\n          <SheetComponent\r\n            hasHeader={hasHeader}\r\n            title={title}\r\n            description={description}\r\n            hasBody={hasBody}\r\n            body={body}\r\n            hasFooter={hasFooter}\r\n            footerItems={footerItems}\r\n            onClick={onClick}\r\n            hasClose={hasClose}\r\n            {...args}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Grid>\r\n  </>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const NavIcon = () => {\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" focusable=\"false\" viewBox=\"0 0 26 26\">\r\n  <path fill=\"none\" stroke=\"currentColor\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 8l9-5 9 5v9.7L13 23l-9-5.2zm9 5L4 8m9 5l9-5m-9 5v10\"/>\r\n</svg>\r\n\r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const HeaderIcon = () => {\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"none\" stroke=\"currentColor\" d=\"M7.76.63l-6 3.23c-.16.09-.26.25-.26.44v7.4c0 .18.1.35.26.44l6 3.23c.15.08.33.08.47 0l6-3.23c.16-.09.26-.26.26-.44V4.3c0-.18-.1-.35-.26-.44l-6-3.23a.49.49 0 00-.47 0zM1.5 4L8 7.5 14.5 4M8 7.5V15\"/>\r\n</svg>\r\n\r\n\r\n\r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const BrandmarkIcon = () => {\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" focusable=\"false\" viewBox=\"0 0 26 26\">\r\n  <path fill=\"currentColor\" d=\"M12 8.2v14.5H0zM12 3c0 3.3-2.7 6-6 6S0 6.3 0 3h12zm2 19.7c0-3.3 2.7-6 6-6s6 2.7 6 6H14zm0-5.2V3h12z\"/>\r\n</svg>\r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const NavIcon4 = () => {\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" focusable=\"false\" viewBox=\"0 0 26 26\">\r\n      <path fill=\"currentColor\" d=\"M20.95 4H5.05C4.473 4 4 4.476 4 5.059v12.536c0 .583.473 1.06 1.05 1.06h5.178v3.08c0 .212.23.34.41.223l5.134-3.304h5.178c.577 0 1.05-.476 1.05-1.059V5.06C22 4.476 21.527 4 20.95 4zM8.918 14C8.416 14 8 13.563 8 13.011v-.022c0-.552.416-.989.918-.989h8.154c.512 0 .928.448.928 1s-.416 1-.928 1H8.918zm0-4C8.416 10 8 9.563 8 9.011V8.99c0-.553.416-.99.918-.99h8.154c.512 0 .928.448.928 1s-.416 1-.928 1H8.918z\"/>\r\n    </svg>\r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const HeaderIcon3 = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"currentColor\" d=\"M1 1v5h5V1H1zm5 8a1 1 0 011 1v5a1 1 0 01-1 1H1a1 1 0 01-1-1v-5a1 1 0 011-1h5zm9 0a1 1 0 011 1v5a1 1 0 01-1 1h-5a1 1 0 01-1-1v-5a1 1 0 011-1h5zm-9 1H1v5h5v-5zm9 0h-5v5h5v-5zM6 0a1 1 0 011 1v5a1 1 0 01-1 1H1a1 1 0 01-1-1V1a1 1 0 011-1h5zm9 0a1 1 0 011 1v5a1 1 0 01-1 1h-5a1 1 0 01-1-1V1a1 1 0 011-1h5zm0 1h-5v5h5V1z\"/>\r\n</svg>\r\n\r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const ConnectIcon = () => {\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" focusable=\"false\" viewBox=\"0 0 26 26\">\r\n      <path fill=\"currentColor\" d=\"M8.1 15.5V8.1H.4V23h15.1v-7.5z\"/>\r\n      <path d=\"M23.114 13.041l-7.484-2.53 2.53-7.484 7.483 2.53z\"/>\r\n    </svg>    \r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const NavIcon3 = () => {\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" focusable=\"false\" viewBox=\"0 0 26 26\">\r\n      <path fill=\"currentColor\" d=\"M22.136 10h-5.282c-.472 0-.854-.443-.854-.989V8.99c0-.546.382-.989.854-.989h5.282c.476 0 .864.45.864 1s-.388 1-.864 1zm0 4h-5.282c-.472 0-.854-.443-.854-.989v-.022c0-.546.382-.989.854-.989h5.282c.476 0 .864.45.864 1s-.388 1-.864 1zm.022 4h-3.327c-.46 0-.831-.443-.831-.989v-.022c0-.546.372-.989.831-.989h3.327c.463 0 .842.45.842 1s-.379 1-.842 1zM10 13a4 4 0 110-8 4 4 0 010 8zm-6.03 8.073c-.583 0-1.048-.518-.96-1.093A7.072 7.072 0 0110 14a7.072 7.072 0 016.989 5.98c.09.575-.376 1.093-.958 1.093H3.97z\"/>\r\n    </svg>\r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const NavIcon5 = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" focusable=\"false\" viewBox=\"0 0 26 26\">\r\n        <path fill=\"currentColor\" d=\"M11.027 21H5.973C5.436 21 5 20.523 5 19.935v-2.87c0-.59.436-1.065.973-1.065h5.054c.537 0 .973.476.973 1.065v2.87c0 .588-.436 1.065-.973 1.065m-.003-7H5.977c-.54 0-.977-.423-.977-.945v-7.11c0-.52.438-.945.977-.945h5.047c.54 0 .976.424.976.946v7.11c0 .521-.437.944-.976.944m3.955-9h5.042c.54 0 .979.478.979 1.069v2.863c0 .59-.439 1.068-.979 1.068h-5.042c-.54 0-.979-.478-.979-1.068V6.07c0-.59.439-1.069.979-1.069M14.972 12h5.056c.537 0 .972.42.972.94v7.12c0 .519-.435.94-.972.94h-5.056c-.537 0-.972-.421-.972-.94v-7.12c0-.52.435-.94.972-.94\"/>\r\n      </svg>\r\n      \r\n\r\n\r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { COLLAPSIBLE_SUB_NAV_ITEM, IFooterItem, IHeaderItem, INavItem, ISubNavItem } from './types';\r\n\r\nexport const CHROME_FOOTER_ITEMS: IFooterItem[] = [\r\n  {\r\n    text: 'Cancel',\r\n    type: 'basic'\r\n  },\r\n  {\r\n    text: 'Save',\r\n    type: 'primary'\r\n  }\r\n];\r\n\r\nexport const CHROME_HEADER_ITEMS: IHeaderItem[] = [\r\n  {\r\n    text: 'Example maxX content',\r\n    hasIcon: false,\r\n    maxX: true,\r\n    isWrapper: true\r\n  },\r\n  {\r\n    text: 'Example maxY content',\r\n    hasIcon: true,\r\n    maxY: true\r\n  },\r\n  {\r\n    text: 'Help center',\r\n    hasIcon: true\r\n  },\r\n  {\r\n    text: 'Products',\r\n    hasIcon: true,\r\n    isClipped: true\r\n  },\r\n  {\r\n    text: 'User',\r\n    hasIcon: true,\r\n    isRound: true,\r\n    isClipped: true\r\n  }\r\n];\r\n\r\nexport const CHROME_MAIN = `Main content. Pea horseradish azuki bean lettuce\r\navocado asparagus okra. Kohlrabi radish okra azuki bean corn fava bean mustard\r\ntigernut green bean celtuce collard greens avocado quandong fennel gumbo\r\nblack-eyed pea. Grape silver beet watercress potato tigernut corn groundnut.\r\nChickweed okra pea winter purslane coriander yarrow sweet pepper radish garlic\r\nbrussels sprout groundnut summer purslane earthnut pea tomato spring onion azuki\r\nbean gourd. Gumbo kakadu plum komatsuna black-eyed pea green bean zucchini gourd\r\nwinter purslane silver beet rock melon radish asparagus spinach.  Soko radicchio\r\nbunya nuts gram dulse silver beet parsnip napa cabbage lotus root sea lettuce\r\nbrussels sprout cabbage. Catsear cauliflower garbanzo yarrow salsify chicory\r\ngarlic bell pepper napa cabbage lettuce tomato kale arugula melon sierra leone\r\nbologi rutabaga tigernut. Sea lettuce gumbo grape kale kombu cauliflower salsify\r\nkohlrabi okra sea lettuce broccoli celery lotus root carrot winter purslane\r\nturnip greens garlic. Garlic courgette coriander radicchio plantain scallion\r\ncauliflower fava bean desert raisin spring onion chicory bunya nuts.  Sea\r\nlettuce water spinach gram fava bean leek dandelion silver beet eggplant bush\r\ntomato.`;\r\n\r\nexport const CHROME_NAV_ITEMS: INavItem[] = [\r\n  {\r\n    text: 'Home'\r\n  },\r\n  {\r\n    text: 'Email'\r\n  },\r\n  {\r\n    text: 'User access control lists',\r\n    hasSidebar: true\r\n  },\r\n  {\r\n    text: 'Chat'\r\n  },\r\n  {\r\n    text: 'Dashboard'\r\n  },\r\n  {\r\n    text: 'Settings',\r\n    hasSubNav: true\r\n  }\r\n];\r\n\r\nexport const CHROME_SIDEBAR = 'Sidebar content';\r\n\r\nexport const CHROME_SKIP_NAV = 'Skip to main content';\r\n\r\nexport const CHROME_SUB_NAV_ITEMS: ISubNavItem[] = [\r\n  {\r\n    text: 'Recently viewed'\r\n  },\r\n  {\r\n    text: 'Account',\r\n    items: ['Billing', 'Security', 'Sandbox', 'Tools']\r\n  },\r\n  {\r\n    text: 'Workspaces'\r\n  },\r\n  {\r\n    text: 'Apps and integrations',\r\n    items: ['Apps', 'Integrations', 'APIs', 'Webhooks']\r\n  }\r\n];\r\n\r\nexport const COLLAPSIBLE_SUB_NAV_ITEMS: COLLAPSIBLE_SUB_NAV_ITEM[] = [\r\n  'Item 1',\r\n  'Item 2',\r\n  'Item 3',\r\n  'Item 4'\r\n];\r\n\r\nexport const SHEET_BODY = `Onion cherry bomb pepper summertime raspberry fizz\r\nspiced peppermint blast kale caesar salad hearts of palm a delicious meal\r\nseasonal mediterranean vegetables picnic salad black beans cookies springtime\r\nstrawberry banana lemongrass banh mi salad rolls dragon fruit roasted butternut\r\nsquash leek garlic sriracha noodles. Apples falafel bites sriracha pecans ultra\r\ncreamy avocado pesto Italian linguine puttanesca summer red curry tofu noodles\r\ncherry blackberries matcha dill creamy cauliflower alfredo mocha chocolate green\r\ntea red amazon pepper cayenne blood orange smash.`;\r\n\r\nexport const SHEET_DESCRIPTION = 'Description';\r\n\r\nexport const SHEET_FOOTER_ITEMS = CHROME_FOOTER_ITEMS;\r\n\r\nexport const SHEET_TITLE = 'Title';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const NavIcon2 = () => {\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" focusable=\"false\" viewBox=\"0 0 26 26\">\r\n  <path fill=\"currentColor\" d=\"M13.14 11.949a.25.25 0 01-.302 0L6.183 6.83c-.358-.275-.155-.83.303-.83h13.028c.459 0 .661.555.303.83l-6.676 5.119zM22 9.491v9.527c0 .54-.473.982-1.05.982H5.05C4.473 20 4 19.558 4 19.018V9.49c0-.413.515-.638.85-.383l7.982 5.971a.3.3 0 00.336 0l7.981-5.971c.336-.255.851-.03.851.383\"/>\r\n</svg>\r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const ExploreIcon = () => {\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" focusable=\"false\" viewBox=\"0 0 26 26\">\r\n  <path fill=\"currentColor\" d=\"M.6 22.9l8.7-15 8.7 15z\"/>\r\n  <path d=\"M16.8 13V3.1l8.6 5z\"/>\r\n</svg>\r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const ProductIcon = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" focusable=\"false\" viewBox=\"0 0 26 26\">\r\n        <path fill=\"currentColor\" d=\"M2 13.5C2 19.302 6.921 24 13 24s11-4.698 11-10.5V3c-6.079 0-11 4.698-11 10.5C13 7.698 8.079 3 2 3v10.5z\"/>\r\n      </svg>\r\n\r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const GuideIcon = () => {\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" focusable=\"false\" viewBox=\"0 0 26 26\">\r\n  <path d=\"M7 7.8l6-6 6 6z\"/>\r\n  <path fill=\"currentColor\" d=\"M.5 23L13 10.4 25.5 23z\"/>\r\n</svg>\r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const NavIcon1 = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" focusable=\"false\" viewBox=\"0 0 26 26\">\r\n        <path fill=\"currentColor\" d=\"M23.885 13.2l-1.328 1.639a.522.522 0 01-.737.084l-1.444-1.155v7.182c0 .577-.474 1.05-1.054 1.05H16.51c-.58 0-1.054-.473-1.054-1.05v-3.182a2.43 2.43 0 00-.716-1.732 2.448 2.448 0 00-1.74-.714 2.45 2.45 0 00-1.739.714 2.43 2.43 0 00-.716 1.732v3.182c0 .577-.474 1.05-1.054 1.05H6.678c-.582 0-1.054-.47-1.054-1.05v-7.182L4.18 14.923a.522.522 0 01-.737-.084L2.115 13.2a.52.52 0 01.084-.735l10.474-8.348a.51.51 0 01.654 0L23.8 12.466a.52.52 0 01.084.735\"/>\r\n      </svg>  \r\n\r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const HeaderIcon2 = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <g fill=\"none\" stroke=\"currentColor\">\r\n    <circle cx=\"8\" cy=\"8\" r=\"7.5\"/>\r\n    <circle cx=\"8\" cy=\"8\" r=\"3.5\"/>\r\n    <path d=\"M10.5 10.5l3 3m-11-11l3 3m0 5l-3 3m11-11l-3 3\"/>\r\n  </g>\r\n</svg>\r\n\r\n\r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const MessageIcon = () => {\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" focusable=\"false\" viewBox=\"0 0 26 26\">\r\n  <circle cx=\"4.9\" cy=\"7.4\" r=\"4.4\"/>\r\n  <circle cx=\"18\" cy=\"15.5\" r=\"7.5\" fill=\"currentColor\"/>\r\n</svg>\r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const ChatIcon = () => {\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" focusable=\"false\" viewBox=\"0 0 26 26\">\r\n  <path fill=\"currentColor\" d=\"M9.3 5.4c4.9 4.9 4.9 12.7 0 17.6L.5 14.2l8.8-8.8z\"/>\r\n  <path d=\"M19.2 15.4c-3.4-3.4-3.4-9 0-12.4l6.2 6.2-6.2 6.2z\"/>\r\n</svg>\r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const TalkIcon = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" focusable=\"false\" viewBox=\"0 0 26 26\">\r\n  <path d=\"M6.8 3.3C3.4 3.3.6 6.5.6 9.5H13c0-3-2.8-6.2-6.2-6.2z\"/>\r\n  <path fill=\"currentColor\" d=\"M14.9 23.2c5.8 0 10.5-4.1 10.5-10.5H4.3c0 6.4 4.8 10.5 10.6 10.5z\"/>\r\n</svg>\r\n\r\n\r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const HeaderIcon1 = () => {\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n      <circle cx=\"6\" cy=\"6\" r=\"5.5\" fill=\"none\" stroke=\"currentColor\"/>\r\n      <path stroke=\"currentColor\" strokeLinecap=\"round\" d=\"M15 15l-5-5\"/>\r\n    </svg>\r\n\r\n\r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const NavIcon6 = () => {\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" focusable=\"false\" viewBox=\"0 0 26 26\">\r\n  <path fill=\"currentColor\" d=\"M13 16.627a3.625 3.625 0 01-3.63-3.622A3.633 3.633 0 0113 9.373a3.633 3.633 0 013.63 3.632A3.625 3.625 0 0113 16.627m8.295-4.902h-.006a2.116 2.116 0 01-1.955-1.307l-.031-.075a2.117 2.117 0 01.459-2.306.693.693 0 000-.998l-.809-.809a.71.71 0 00-.997 0 2.106 2.106 0 01-2.295.457l-.08-.033a2.109 2.109 0 01-1.302-1.948.705.705 0 00-.705-.706h-1.148a.705.705 0 00-.705.706c0 .855-.514 1.628-1.306 1.95-.021.009-.043.017-.063.027a2.106 2.106 0 01-2.308-.453.72.72 0 00-1.006 0l-.81.81a.708.708 0 000 .997l.007.006a2.11 2.11 0 01.454 2.305c-.01.022-.018.045-.028.066a2.103 2.103 0 01-1.95 1.311h-.006a.706.706 0 00-.705.706v1.138c0 .39.316.706.705.706h.002a2.1 2.1 0 011.949 1.306l.029.069a2.11 2.11 0 01-.452 2.31l-.004.003a.708.708 0 000 .998l.809.809a.72.72 0 001.006 0l.005-.005a2.106 2.106 0 012.307-.452l.059.024a2.104 2.104 0 011.306 1.95v.007c0 .395.32.706.705.706h1.148c.385 0 .705-.31.705-.706v-.007c0-.855.514-1.627 1.306-1.95l.059-.024a2.106 2.106 0 012.307.452l.005.005a.71.71 0 00.997 0l.809-.81a.693.693 0 000-.997l-.004-.003a2.11 2.11 0 01-.452-2.31l.029-.069a2.102 2.102 0 011.948-1.306h.012a.706.706 0 00.705-.706v-1.138a.706.706 0 00-.705-.706\"/>\r\n</svg>\r\n\r\n\r\n\r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const SupportIcon = () => {\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" focusable=\"false\" viewBox=\"0 0 26 26\">\r\n  <path fill=\"currentColor\" d=\"M14.3 5.2L5.4 2.7l-2.5 8.9-2.5 8.9 8.9 2.4 2.5-8.8z\"/>\r\n  <path d=\"M14.223 14.131l8.853-2.503 2.503 8.853-8.853 2.503z\"/>\r\n</svg>\r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const HeaderIcon4 = () => {\r\n     return (\r\n         <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n   <circle cx=\"8\" cy=\"8\" r=\"6\" fill=\"currentColor\"/>\r\n </svg>\r\n \r\n     )\r\n }\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes, useMemo, useEffect, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeContext } from 'styled-components';\r\nimport { readableColor } from 'polished';\r\nimport { getColor, useDocument } from '@zendeskgarden/react-theming';\r\nimport { ChromeContext } from '../utils/useChromeContext';\r\nimport { StyledChrome } from '../styled';\r\n\r\nexport interface IChromeProps extends HTMLAttributes<HTMLDivElement> {\r\n  /** Applies a custom hue to the chrome navigation */\r\n  hue?: string;\r\n  /** Prevents fixed positioning from being applied to the `<html>` element */\r\n  isFluid?: boolean;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nconst Chrome = React.forwardRef<HTMLDivElement, IChromeProps>(({ hue, isFluid, ...props }, ref) => {\r\n  const theme = useContext(ThemeContext);\r\n  const isLightMemoized = useMemo(() => {\r\n    if (hue) {\r\n      const backgroundColor = getColor(hue, 600, theme);\r\n      const LIGHT_COLOR = 'white';\r\n\r\n      /* prevent this expensive computation on every render */\r\n      return (\r\n        readableColor(backgroundColor!, LIGHT_COLOR, undefined, false /* strict */) === LIGHT_COLOR\r\n      );\r\n    }\r\n\r\n    return false;\r\n  }, [hue, theme]);\r\n\r\n  const isLight = hue ? isLightMemoized : false;\r\n  const isDark = hue ? !isLightMemoized : false;\r\n  const chromeContextValue = useMemo(\r\n    () => ({ hue: hue || 'chromeHue', isLight, isDark }),\r\n    [hue, isLight, isDark]\r\n  );\r\n  const environment = useDocument(theme);\r\n\r\n  useEffect(() => {\r\n    if (environment && !isFluid) {\r\n      const htmlElement = environment.querySelector('html');\r\n\r\n      if (htmlElement) {\r\n        const defaultHtmlPosition = htmlElement.style.position;\r\n\r\n        htmlElement.style.position = 'fixed';\r\n\r\n        return () => {\r\n          htmlElement.style.position = defaultHtmlPosition;\r\n        };\r\n      }\r\n    }\r\n\r\n    return undefined;\r\n  }, [environment, isFluid]);\r\n\r\n  return (\r\n    <ChromeContext.Provider value={chromeContextValue}>\r\n      <StyledChrome ref={ref} {...props} data-test-light={isLight} data-test-dark={isDark} />\r\n    </ChromeContext.Provider>\r\n  );\r\n});\r\n\r\nChrome.displayName = 'Chrome';\r\n\r\nChrome.propTypes = {\r\n  hue: PropTypes.string\r\n};\r\n\r\nexport default Chrome;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { AnchorHTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledSkipNav, StyledSkipNavIcon } from '../styled';\r\n\r\ninterface ISkipNavProps extends AnchorHTMLAttributes<HTMLAnchorElement> {\r\n  /** Sets the ID of the element to navigate to */\r\n  targetId: string;\r\n  /** Sets the `z-index` of the element */\r\n  zIndex?: number;\r\n}\r\n\r\n/**\r\n * @extends AnchorHTMLAttributes<HTMLAnchorElement>\r\n */\r\nexport const SkipNav = React.forwardRef<HTMLAnchorElement, ISkipNavProps>(\r\n  ({ targetId, zIndex, children, ...props }, ref) => (\r\n    <StyledSkipNav href={`#${targetId}`} zIndex={zIndex} ref={ref} {...props}>\r\n      <StyledSkipNavIcon />\r\n      {children}\r\n    </StyledSkipNav>\r\n  )\r\n);\r\n\r\nSkipNav.displayName = 'SkipNav';\r\n\r\nSkipNav.propTypes = {\r\n  targetId: PropTypes.string.isRequired,\r\n  zIndex: PropTypes.number\r\n};\r\n\r\nSkipNav.defaultProps = {\r\n  zIndex: 1\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledBody } from '../../styled';\r\nimport { BodyContext } from '../../utils/useBodyContext';\r\n\r\ninterface IBodyProps {\r\n  /** Adjusts the body content height to allow space for a footer component */\r\n  hasFooter?: boolean;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Body = React.forwardRef<HTMLDivElement, IBodyProps & HTMLAttributes<HTMLDivElement>>(\r\n  ({ hasFooter, ...props }, ref) => {\r\n    const bodyContextValue = useMemo(() => ({ hasFooter: !!hasFooter }), [hasFooter]);\r\n\r\n    return (\r\n      <BodyContext.Provider value={bodyContextValue}>\r\n        <StyledBody ref={ref} {...props} />\r\n      </BodyContext.Provider>\r\n    );\r\n  }\r\n);\r\n\r\nBody.displayName = 'Body';\r\n\r\nBody.propTypes = {\r\n  hasFooter: PropTypes.bool\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { StyledContent } from '../../styled';\r\nimport { useBodyContext } from '../../utils/useBodyContext';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Content = React.forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  (props, ref) => {\r\n    const { hasFooter } = useBodyContext();\r\n\r\n    return <StyledContent ref={ref} hasFooter={hasFooter} {...props} />;\r\n  }\r\n);\r\n\r\nContent.displayName = 'Content';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { StyledMain } from '../../styled';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLElement>\r\n */\r\nexport const Main = React.forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => (\r\n  <StyledMain ref={ref} {...props} />\r\n));\r\n\r\nMain.displayName = 'Main';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { StyledSidebar } from '../../styled';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLElement>\r\n */\r\nexport const Sidebar = React.forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => (\r\n  <StyledSidebar ref={ref} {...props} />\r\n));\r\n\r\nSidebar.displayName = 'Sidebar';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { StyledFooter } from '../../styled';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLElement>\r\n */\r\nexport const Footer = React.forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => (\r\n  <StyledFooter ref={ref} {...props} />\r\n));\r\n\r\nFooter.displayName = 'Footer';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { StyledFooterItem } from '../../styled';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLElement>\r\n */\r\nexport const FooterItem = React.forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  (props, ref) => <StyledFooterItem ref={ref} {...props} />\r\n);\r\n\r\nFooterItem.displayName = 'FooterItem';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledHeader, IStyledHeaderProps } from '../../styled';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLElement>\r\n */\r\nexport const Header = React.forwardRef<\r\n  HTMLElement,\r\n  IStyledHeaderProps & HTMLAttributes<HTMLElement>\r\n>((props, ref) => <StyledHeader ref={ref} {...props} />);\r\n\r\nHeader.displayName = 'Header';\r\n\r\nHeader.propTypes = {\r\n  isStandalone: PropTypes.bool\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { ButtonHTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  StyledHeaderItem,\r\n  StyledLogoHeaderItem,\r\n  IStyledBaseHeaderItemProps,\r\n  IStyledLogoHeaderItemProps\r\n} from '../../styled';\r\nimport { PRODUCTS } from '../../utils/types';\r\n\r\ninterface IHeadItemProps\r\n  extends IStyledBaseHeaderItemProps,\r\n    IStyledLogoHeaderItemProps,\r\n    ButtonHTMLAttributes<HTMLButtonElement> {\r\n  /** Applies header logo styles to the item */\r\n  hasLogo?: boolean;\r\n}\r\n\r\n/**\r\n * @extends ButtonHTMLAttributes<HTMLButtonElement>\r\n */\r\nexport const HeaderItem = React.forwardRef<HTMLButtonElement, IHeadItemProps>(\r\n  ({ hasLogo, product, ...other }, ref) => {\r\n    if (hasLogo) {\r\n      return <StyledLogoHeaderItem ref={ref} product={product} {...other} />;\r\n    }\r\n\r\n    return <StyledHeaderItem ref={ref} {...other} />;\r\n  }\r\n);\r\n\r\nHeaderItem.displayName = 'HeaderItem';\r\n\r\nHeaderItem.propTypes = {\r\n  maxX: PropTypes.bool,\r\n  maxY: PropTypes.bool,\r\n  isRound: PropTypes.bool,\r\n  product: PropTypes.oneOf(PRODUCTS),\r\n  hasLogo: PropTypes.bool\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { Children, HTMLAttributes } from 'react';\r\nimport { StyledHeaderItemIcon } from '../../styled';\r\n\r\n/**\r\n * @extends HTMLAttributes<any>\r\n */\r\nexport const HeaderItemIcon: React.FC<HTMLAttributes<any>> = ({ children, ...props }) => {\r\n  // The `forwardRef` API is not needed in this element since we are cloning the provided child.\r\n  const Element: React.FC<unknown> = elementProps =>\r\n    React.cloneElement(Children.only(children as any), { ...elementProps, ...props });\r\n\r\n  return <StyledHeaderItemIcon as={Element as any} {...props} />;\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledHeaderItemText, IStyledHeaderItemTextProps } from '../../styled';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLSpanElement>\r\n */\r\nexport const HeaderItemText = React.forwardRef<\r\n  HTMLElement,\r\n  IStyledHeaderItemTextProps & HTMLAttributes<HTMLElement>\r\n>((props, ref) => <StyledHeaderItemText ref={ref} {...props} />);\r\n\r\nHeaderItemText.displayName = 'HeaderItemText';\r\n\r\nHeaderItemText.propTypes = {\r\n  isClipped: PropTypes.bool\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { StyledHeaderItemWrapper, IStyledBaseHeaderItemProps } from '../../styled';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const HeaderItemWrapper = React.forwardRef<\r\n  HTMLDivElement,\r\n  IStyledBaseHeaderItemProps & HTMLAttributes<HTMLDivElement>\r\n>((props, ref) => <StyledHeaderItemWrapper ref={ref} {...props} />);\r\n\r\nHeaderItemWrapper.displayName = 'HeaderItemWrapper';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useChromeContext } from '../../utils/useChromeContext';\r\nimport { NavContext } from '../../utils/useNavContext';\r\nimport { StyledNav } from '../../styled';\r\n\r\ninterface INavProps extends HTMLAttributes<HTMLElement> {\r\n  /** Expands the nav area to display the item text */\r\n  isExpanded?: boolean;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLElement>\r\n */\r\nexport const Nav = React.forwardRef<HTMLElement, INavProps>((props, ref) => {\r\n  const { hue, isLight, isDark } = useChromeContext();\r\n  const navContextValue = useMemo(() => ({ isExpanded: !!props.isExpanded }), [props.isExpanded]);\r\n\r\n  return (\r\n    <NavContext.Provider value={navContextValue}>\r\n      <StyledNav ref={ref} {...props} hue={hue} isLight={isLight} isDark={isDark} />\r\n    </NavContext.Provider>\r\n  );\r\n});\r\n\r\nNav.displayName = 'Nav';\r\n\r\nNav.propTypes = {\r\n  isExpanded: PropTypes.bool\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { ButtonHTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledNavItem, StyledLogoNavItem, StyledBrandmarkNavItem } from '../../styled';\r\nimport { PRODUCT, PRODUCTS } from '../../utils/types';\r\nimport { useNavContext } from '../../utils/useNavContext';\r\nimport { useChromeContext } from '../../utils/useChromeContext';\r\n\r\nexport interface INavItemProps extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n  /** Applies a product-specific color palette */\r\n  product?: PRODUCT;\r\n  /** Indicates that the item is current in the nav */\r\n  isCurrent?: boolean;\r\n  /** Indicates that the item contains a product logo */\r\n  hasLogo?: boolean;\r\n  /** Indicates that the item contains the company brandmark */\r\n  hasBrandmark?: boolean;\r\n}\r\n\r\n/**\r\n * @extends ButtonHTMLAttributes<HTMLButtonElement>\r\n */\r\nexport const NavItem = React.forwardRef<HTMLButtonElement, INavItemProps>(\r\n  ({ hasLogo, hasBrandmark, product, ...other }, ref) => {\r\n    const { hue, isLight, isDark } = useChromeContext();\r\n    const { isExpanded } = useNavContext();\r\n\r\n    if (hasLogo) {\r\n      return (\r\n        <StyledLogoNavItem\r\n          ref={ref}\r\n          isDark={isDark}\r\n          isLight={isLight}\r\n          product={product}\r\n          {...other}\r\n        />\r\n      );\r\n    }\r\n\r\n    if (hasBrandmark) {\r\n      return <StyledBrandmarkNavItem ref={ref} {...other} />;\r\n    }\r\n\r\n    return (\r\n      <StyledNavItem\r\n        tabIndex={0}\r\n        ref={ref}\r\n        isExpanded={isExpanded}\r\n        hue={hue}\r\n        isDark={isDark}\r\n        isLight={isLight}\r\n        {...other}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nNavItem.displayName = 'NavItem';\r\n\r\nNavItem.propTypes = {\r\n  product: PropTypes.oneOf(PRODUCTS),\r\n  hasLogo: PropTypes.bool,\r\n  hasBrandmark: PropTypes.bool,\r\n  isCurrent: PropTypes.bool\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { Children, HTMLAttributes } from 'react';\r\nimport { StyledNavItemIcon } from '../../styled';\r\n\r\n/**\r\n * @extends HTMLAttributes<any>\r\n */\r\nexport const NavItemIcon: React.FC<HTMLAttributes<any>> = ({ children, ...props }) => {\r\n  // The `forwardRef` API is not needed in this element since we are cloning the provided child.\r\n  const Element: React.FC<unknown> = elementProps =>\r\n    React.cloneElement(Children.only(children as any), { ...elementProps, ...props });\r\n\r\n  return <StyledNavItemIcon as={Element as any} {...props} />;\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledNavItemText, IStyledNavItemTextProps } from '../../styled';\r\nimport { useNavContext } from '../../utils/useNavContext';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLSpanElement>\r\n */\r\nexport const NavItemText = React.forwardRef<\r\n  HTMLElement,\r\n  Omit<IStyledNavItemTextProps, 'isExpanded'> & HTMLAttributes<HTMLSpanElement>\r\n>((props, ref) => {\r\n  const { isExpanded } = useNavContext();\r\n\r\n  return <StyledNavItemText ref={ref} isExpanded={isExpanded} {...props} />;\r\n});\r\n\r\nNavItemText.displayName = 'NavItemText';\r\n\r\nNavItemText.propTypes = {\r\n  isWrapped: PropTypes.bool\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, {\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  HTMLAttributes,\r\n  PropsWithoutRef,\r\n  RefAttributes,\r\n  ForwardRefExoticComponent\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useUIDSeed } from 'react-uid';\r\nimport mergeRefs from 'react-merge-refs';\r\n\r\nimport { StyledSheet, StyledSheetWrapper } from '../../styled';\r\nimport { SheetContext } from '../../utils/useSheetContext';\r\nimport { useFocusableMount } from '../../utils/useFocusableMount';\r\n\r\nimport { SheetTitle } from './components/Title';\r\nimport { SheetDescription } from './components/Description';\r\nimport { SheetHeader } from './components/Header';\r\nimport { SheetBody } from './components/Body';\r\nimport { SheetFooter } from './components/Footer';\r\nimport { SheetFooterItem } from './components/FooterItem';\r\nimport { SheetClose } from './components/Close';\r\n\r\ninterface IStaticSheetExport<T, P>\r\n  extends ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>> {\r\n  Title: typeof SheetTitle;\r\n  Description: typeof SheetDescription;\r\n  Header: typeof SheetHeader;\r\n  Body: typeof SheetBody;\r\n  Footer: typeof SheetFooter;\r\n  FooterItem: typeof SheetFooterItem;\r\n  Close: typeof SheetClose;\r\n}\r\n\r\nexport interface ISheetProps extends HTMLAttributes<HTMLElement> {\r\n  /** Opens the Sheet **/\r\n  isOpen?: boolean;\r\n  /** Determines whether animation for opening and closing the Sheet is used **/\r\n  isAnimated?: boolean;\r\n  /** Focuses on the Sheet when `isOpen` is true and mounted **/\r\n  focusOnMount?: boolean;\r\n  /** Directs keyboard focus to the Sheet on mount **/\r\n  restoreFocus?: boolean;\r\n  /** Returns keyboard focus to the element that triggered the Sheet **/\r\n  placement?: 'start' | 'end';\r\n  /** Sets the width in pixels, based on the placement of the Sheet */\r\n  size?: string;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLElement>\r\n */\r\nexport const Sheet = React.forwardRef<HTMLElement, ISheetProps>(\r\n  (\r\n    { id, isOpen, isAnimated, focusOnMount, restoreFocus, placement, size, children, ...props },\r\n    ref\r\n  ) => {\r\n    const sheetRef = useRef<HTMLElement>(null);\r\n\r\n    const seed = useUIDSeed();\r\n    const [idPrefix] = useState<string>(id || seed(`sheet_${PACKAGE_VERSION}`));\r\n    const titleId = `${idPrefix}--title`;\r\n    const descriptionId = `${idPrefix}--description`;\r\n\r\n    const sheetContext = useMemo(() => ({ titleId, descriptionId }), [titleId, descriptionId]);\r\n\r\n    useFocusableMount({ targetRef: sheetRef, isMounted: isOpen, focusOnMount, restoreFocus });\r\n\r\n    return (\r\n      <SheetContext.Provider value={sheetContext}>\r\n        <StyledSheet\r\n          isOpen={isOpen}\r\n          isAnimated={isAnimated}\r\n          placement={placement}\r\n          size={size}\r\n          tabIndex={-1}\r\n          id={idPrefix}\r\n          aria-labelledby={titleId}\r\n          aria-describedby={descriptionId}\r\n          ref={mergeRefs([sheetRef, ref])}\r\n          {...props}\r\n        >\r\n          <StyledSheetWrapper\r\n            isOpen={isOpen}\r\n            isAnimated={isAnimated}\r\n            placement={placement}\r\n            size={size}\r\n          >\r\n            {children}\r\n          </StyledSheetWrapper>\r\n        </StyledSheet>\r\n      </SheetContext.Provider>\r\n    );\r\n  }\r\n) as IStaticSheetExport<HTMLElement, ISheetProps>;\r\n\r\nSheet.Title = SheetTitle;\r\nSheet.Description = SheetDescription;\r\nSheet.Header = SheetHeader;\r\nSheet.Body = SheetBody;\r\nSheet.Footer = SheetFooter;\r\nSheet.FooterItem = SheetFooterItem;\r\nSheet.Close = SheetClose;\r\n\r\nSheet.displayName = 'Sheet';\r\n\r\nSheet.propTypes = {\r\n  id: PropTypes.string,\r\n  isOpen: PropTypes.bool,\r\n  isAnimated: PropTypes.bool,\r\n  focusOnMount: PropTypes.bool,\r\n  restoreFocus: PropTypes.bool,\r\n  placement: PropTypes.oneOf(['start', 'end']),\r\n  size: PropTypes.string\r\n};\r\n\r\nSheet.defaultProps = {\r\n  isAnimated: true,\r\n  placement: 'end',\r\n  size: '380px'\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { forwardRef, HTMLAttributes } from 'react';\r\nimport { StyledSheetBody } from '../../../styled';\r\n\r\nexport const SheetBody = forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  (props, ref) => {\r\n    return <StyledSheetBody ref={ref} {...props} />;\r\n  }\r\n);\r\n\r\nSheetBody.displayName = 'Sheet.Body';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { forwardRef, HTMLAttributes } from 'react';\r\nimport { StyledSheetClose } from '../../../styled';\r\n\r\nexport const SheetClose = forwardRef<HTMLButtonElement, HTMLAttributes<HTMLButtonElement>>(\r\n  (props, ref) => {\r\n    return (\r\n      <StyledSheetClose aria-label=\"Close Sheet\" ref={ref} {...props}>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path stroke=\"currentColor\" strokeLinecap=\"round\" d=\"M3 13L13 3m0 10L3 3\"/>\r\n</svg>\r\n      </StyledSheetClose>\r\n    );\r\n  }\r\n);\r\n\r\nSheetClose.displayName = 'Sheet.Close';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { forwardRef, HTMLAttributes } from 'react';\r\n\r\nimport { StyledSheetDescription } from '../../../styled';\r\nimport { useSheetContext } from '../../../utils/useSheetContext';\r\n\r\nexport const SheetDescription = forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  ({ id, ...props }, ref) => {\r\n    const { descriptionId } = useSheetContext();\r\n\r\n    return <StyledSheetDescription id={id || descriptionId} ref={ref} {...props} />;\r\n  }\r\n);\r\n\r\nSheetDescription.displayName = 'Sheet.Description';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { forwardRef, HTMLAttributes } from 'react';\r\nimport { StyledSheetFooter, IStyledSheetFooterProps } from '../../../styled';\r\n\r\nexport const SheetFooter = forwardRef<\r\n  HTMLElement,\r\n  IStyledSheetFooterProps & HTMLAttributes<HTMLElement>\r\n>((props, ref) => {\r\n  return <StyledSheetFooter ref={ref} {...props} />;\r\n});\r\n\r\nSheetFooter.displayName = 'Sheet.Footer';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { forwardRef, HTMLAttributes } from 'react';\r\nimport { StyledSheetFooterItem } from '../../../styled';\r\n\r\nexport const SheetFooterItem = forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  (props, ref) => {\r\n    return <StyledSheetFooterItem ref={ref} {...props} />;\r\n  }\r\n);\r\n\r\nSheetFooterItem.displayName = 'Sheet.FooterItem';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { forwardRef, HTMLAttributes } from 'react';\r\nimport { StyledSheetHeader } from '../../../styled';\r\n\r\nexport const SheetHeader = forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => {\r\n  return <StyledSheetHeader ref={ref} {...props} />;\r\n});\r\n\r\nSheetHeader.displayName = 'Sheet.Header';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { forwardRef, HTMLAttributes } from 'react';\r\n\r\nimport { StyledSheetTitle } from '../../../styled';\r\nimport { useSheetContext } from '../../../utils/useSheetContext';\r\n\r\nexport const SheetTitle = forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  ({ id, ...props }, ref) => {\r\n    const { titleId } = useSheetContext();\r\n\r\n    return <StyledSheetTitle id={id || titleId} ref={ref} {...props} />;\r\n  }\r\n);\r\n\r\nSheetTitle.displayName = 'Sheet.Title';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useEffect, useRef, useState, ButtonHTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useAccordion } from '@zendeskgarden/container-accordion';\r\nimport { getControlledValue } from '@zendeskgarden/container-utilities';\r\nimport {\r\n  StyledSubNavItemHeader,\r\n  StyledSubNavPanel,\r\n  StyledSubNavItemIconWrapper,\r\n  StyledSubNavItemIcon\r\n} from '../../styled';\r\n\r\nexport interface ICollapsibleSubNavItemProps\r\n  extends Omit<ButtonHTMLAttributes<HTMLButtonElement>, 'onChange'> {\r\n  /** Sets the item's section header */\r\n  header?: React.ReactNode;\r\n  /** Reveals the item's section */\r\n  isExpanded?: boolean;\r\n  /**\r\n   * Handles changes in the item's expansion state\r\n   *\r\n   * @param {boolean} isExpanded An item's expansion state\r\n   */\r\n  onChange?: (isExpanded: boolean) => void;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const CollapsibleSubNavItem = React.forwardRef<HTMLDivElement, ICollapsibleSubNavItemProps>(\r\n  ({ header, children, isExpanded: controlledExpanded, onChange, ...other }, ref) => {\r\n    const panelRef = useRef<HTMLDivElement>();\r\n    const [internalExpanded, setInternalExpanded] = useState(controlledExpanded);\r\n    const expanded = getControlledValue(controlledExpanded, internalExpanded);\r\n    const expandedSections = expanded ? [0] : [];\r\n\r\n    const { getHeaderProps, getTriggerProps, getPanelProps } = useAccordion({\r\n      expandedSections,\r\n      onChange: () => {\r\n        const isExpanded = expandedSections.length === 0;\r\n\r\n        if (onChange) {\r\n          onChange(isExpanded);\r\n        } else {\r\n          setInternalExpanded(isExpanded);\r\n        }\r\n      }\r\n    });\r\n\r\n    useEffect(() => {\r\n      if (expanded && panelRef.current) {\r\n        panelRef.current.style.maxHeight = `${panelRef.current.scrollHeight}px`;\r\n      }\r\n    }, [expanded, children]);\r\n\r\n    return (\r\n      <div ref={ref}>\r\n        <div {...getHeaderProps({ ariaLevel: 2 })}>\r\n          <StyledSubNavItemHeader\r\n            {...getTriggerProps({\r\n              isExpanded: expanded,\r\n              index: 0,\r\n              role: null,\r\n              tabIndex: null,\r\n              ...other\r\n            })}\r\n          >\r\n            <>\r\n              {header}\r\n              <StyledSubNavItemIconWrapper isExpanded={expanded}>\r\n                <StyledSubNavItemIcon />\r\n              </StyledSubNavItemIconWrapper>\r\n            </>\r\n          </StyledSubNavItemHeader>\r\n        </div>\r\n        <StyledSubNavPanel\r\n          {...getPanelProps({\r\n            index: 0,\r\n            isHidden: !expanded,\r\n            ref: panelRef\r\n          })}\r\n        >\r\n          {children}\r\n        </StyledSubNavPanel>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nCollapsibleSubNavItem.propTypes = {\r\n  header: PropTypes.any,\r\n  isExpanded: PropTypes.bool,\r\n  onChange: PropTypes.func,\r\n  children: PropTypes.node\r\n};\r\n\r\nCollapsibleSubNavItem.displayName = 'CollapsibleSubNavItem';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { StyledSubNav } from '../../styled';\r\nimport { useChromeContext } from '../../utils/useChromeContext';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLElement>\r\n */\r\nexport const SubNav = React.forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => {\r\n  const { hue, isLight, isDark } = useChromeContext();\r\n\r\n  return <StyledSubNav ref={ref} hue={hue} isLight={isLight} isDark={isDark} {...props} />;\r\n});\r\n\r\nSubNav.displayName = 'SubNav';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { ButtonHTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledSubNavItem } from '../../styled';\r\nimport { useChromeContext } from '../../utils/useChromeContext';\r\n\r\ninterface ISubNavItemProps {\r\n  /** Indicates that the item is current in the subnav */\r\n  isCurrent?: boolean;\r\n}\r\n\r\n/**\r\n * @extends ButtonHTMLAttributes<HTMLButtonElement>\r\n */\r\nexport const SubNavItem = React.forwardRef<\r\n  HTMLButtonElement,\r\n  ISubNavItemProps & ButtonHTMLAttributes<HTMLButtonElement>\r\n>((props, ref) => {\r\n  const { isDark, isLight } = useChromeContext();\r\n\r\n  return <StyledSubNavItem ref={ref} isDark={isDark} isLight={isLight} {...props} />;\r\n});\r\n\r\nSubNavItem.displayName = 'SubNavItem';\r\n\r\nSubNavItem.propTypes = {\r\n  isCurrent: PropTypes.bool\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledSubNavItemText, IStyledSubNavItemTextProps } from '../../styled';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLSpanElement>\r\n */\r\nexport const SubNavItemText = React.forwardRef<\r\n  HTMLElement,\r\n  IStyledSubNavItemTextProps & HTMLAttributes<HTMLSpanElement>\r\n>((props, ref) => <StyledSubNavItemText ref={ref} {...props} />);\r\n\r\nSubNavItemText.displayName = 'SubNavItemText';\r\n\r\nSubNavItemText.propTypes = {\r\n  isWrapped: PropTypes.bool\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'chrome.chrome';\r\n\r\n/**\r\n * 1. Prevent \"bounce\" overscroll.\r\n */\r\nexport const StyledChrome = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  display: flex;\r\n  position: relative;\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow-y: hidden; /* [1] */\r\n  font-family: ${props => props.theme.fonts.system};\r\n  direction: ${props => props.theme.rtl && 'rtl'};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledChrome.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, keyframes, DefaultTheme, ThemeProps } from 'styled-components';\r\nimport { math } from 'polished';\r\nimport {\r\n  retrieveComponentStyles,\r\n  DEFAULT_THEME,\r\n  getColor,\r\n  getLineHeight\r\n} from '@zendeskgarden/react-theming';\r\nimport { getHeaderHeight } from './header/StyledHeader';\r\n\r\nconst COMPONENT_ID = 'chrome.skipnav';\r\n\r\nconst animationStyles = () => {\r\n  const animationName = keyframes`\r\n    0% {\r\n      transform: translate(-50%, -50%);\r\n    }\r\n  `;\r\n\r\n  return css`\r\n    transition: opacity 0.2s ease-out, clip 0s linear 0.2s;\r\n    opacity: 0;\r\n    clip: rect(0, 0, 0, 0);\r\n\r\n    &:focus {\r\n      transition: opacity 0.2s ease-in-out;\r\n      animation: 0.2s cubic-bezier(0.15, 0.85, 0.35, 1.2) ${animationName};\r\n      opacity: 1;\r\n      clip: rect(0, 150vw, 100vh, -50vw);\r\n    }\r\n  `;\r\n};\r\n\r\nconst colorStyles = (theme: DefaultTheme) => {\r\n  const color = getColor('primaryHue', 600, theme);\r\n  const borderColor = getColor('neutralHue', 300, theme);\r\n  const boxShadow = theme.shadows.lg(\r\n    `${theme.space.base * 5}px`,\r\n    `${theme.space.base * 7}px`,\r\n    getColor('chromeHue', 600, theme, 0.15) as string\r\n  );\r\n\r\n  return css`\r\n    border-color: ${borderColor};\r\n    box-shadow: ${boxShadow};\r\n    background-color: ${theme.colors.background};\r\n    color: ${color};\r\n\r\n    &:hover,\r\n    &:focus {\r\n      color: ${color};\r\n    }\r\n  `;\r\n};\r\n\r\nconst sizeStyles = (props: ThemeProps<DefaultTheme>) => {\r\n  const top = math(`${getHeaderHeight(props)} / 2`);\r\n  const padding = `${props.theme.space.base * 5}px`;\r\n  const paddingStart = `${props.theme.space.base * 4}px`;\r\n  const fontSize = props.theme.fontSizes.md;\r\n  const lineHeight = getLineHeight(padding, fontSize);\r\n\r\n  return css`\r\n    top: ${top};\r\n    padding: ${padding};\r\n    /* stylelint-disable-next-line property-no-unknown */\r\n    padding-${props.theme.rtl ? 'right' : 'left'}: ${paddingStart};\r\n    line-height: ${lineHeight};\r\n    font-size: ${fontSize};\r\n  `;\r\n};\r\n\r\ninterface IStyledSkipNavProps {\r\n  zIndex?: number;\r\n}\r\n\r\nexport const StyledSkipNav = styled.a.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledSkipNavProps>`\r\n  ${animationStyles()};\r\n\r\n  display: inline-flex;\r\n  position: absolute;\r\n  left: 50%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transform: translateX(-50%);\r\n  direction: ${props => props.theme.rtl && 'rtl'};\r\n  z-index: ${props => props.zIndex};\r\n  border: ${props => props.theme.borders.sm};\r\n  border-radius: ${props => props.theme.borderRadii.md};\r\n  text-decoration: underline;\r\n  white-space: nowrap;\r\n\r\n  ${props => sizeStyles(props)};\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  ${props => colorStyles(props.theme)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledSkipNav.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { LinkIcon } from './link';\r\nimport { DEFAULT_THEME, getColor, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'chrome.skipnav_icon';\r\n\r\nconst sizeStyles = (theme: DefaultTheme) => {\r\n  const margin = `${theme.space.base * 2}px`;\r\n  const size = theme.iconSizes.md;\r\n\r\n  return css`\r\n    /* stylelint-disable-next-line property-no-unknown */\r\n    margin-${theme.rtl ? 'left' : 'right'}: ${margin};\r\n    width: ${size};\r\n    height: ${size};\r\n  `;\r\n};\r\n\r\nexport const StyledSkipNavIcon = styled(LinkIcon).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<ThemeProps<DefaultTheme>>`\r\n  transform: ${props => props.theme.rtl && 'scaleX(-1)'};\r\n  color: ${props => getColor('neutralHue', 600, props.theme)};\r\n\r\n  ${props => sizeStyles(props.theme)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledSkipNavIcon.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, getColor, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'chrome.body';\r\n\r\nexport const StyledBody = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  flex: 1;\r\n  order: 1;\r\n  background-color: ${props => getColor('neutralHue', 100, props.theme)};\r\n  min-width: 0;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledBody.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { math } from 'polished';\r\nimport {\r\n  retrieveComponentStyles,\r\n  DEFAULT_THEME,\r\n  getLineHeight\r\n} from '@zendeskgarden/react-theming';\r\nimport { getHeaderHeight } from '../header/StyledHeader';\r\nimport { getFooterHeight } from '../footer/StyledFooter';\r\n\r\nconst COMPONENT_ID = 'chrome.content';\r\n\r\ninterface IStyledContentProps {\r\n  hasFooter?: boolean;\r\n}\r\n\r\nexport const StyledContent = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledContentProps>`\r\n  display: flex;\r\n  height: ${props =>\r\n    props.hasFooter\r\n      ? `calc(100% - ${math(`${getHeaderHeight(props)} + ${getFooterHeight(props)}`)})`\r\n      : `calc(100% - ${getHeaderHeight(props)})`};\r\n  line-height: ${props => getLineHeight(props.theme.lineHeights.md, props.theme.fontSizes.md)};\r\n  color: ${props => props.theme.colors.foreground};\r\n  font-size: ${props => props.theme.fontSizes.md};\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledContent.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'chrome.main';\r\n\r\nexport const StyledMain = styled.main.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  flex: 1;\r\n  order: 1;\r\n  background-color: ${props => props.theme.colors.background};\r\n  overflow: auto;\r\n\r\n  :focus {\r\n    outline: none;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledMain.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, getColor, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'chrome.sidebar';\r\n\r\nexport const StyledSidebar = styled.aside.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  flex-shrink: 0;\r\n  order: 0;\r\n  box-sizing: border-box;\r\n  /* stylelint-disable-next-line property-no-unknown */\r\n  border-${props => (props.theme.rtl ? 'left' : 'right')}: ${props =>\r\n  `${props.theme.borders.sm} ${getColor('neutralHue', 300, props.theme)}`};\r\n  width: 330px;\r\n  overflow: auto;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledSidebar.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { retrieveComponentStyles, getColor, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'chrome.footer';\r\n\r\nexport const getFooterHeight = (props: ThemeProps<DefaultTheme>) => {\r\n  return `${props.theme.space.base * 20}px`;\r\n};\r\n\r\nexport const StyledFooter = styled.footer.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  box-sizing: border-box;\r\n  border-top: ${props => `${props.theme.borders.sm} ${getColor('neutralHue', 300, props.theme)}`};\r\n  background-color: ${props => props.theme.colors.background};\r\n  padding: 0 ${props => props.theme.space.base * 9}px;\r\n  height: ${getFooterHeight};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledFooter.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'chrome.footer_item';\r\n\r\n/**\r\n * Accepts all `<div>` props\r\n */\r\nexport const StyledFooterItem = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  margin: ${props => `0 ${props.theme.space.base}px`};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledFooterItem.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme, css } from 'styled-components';\r\nimport {\r\n  DEFAULT_THEME,\r\n  retrieveComponentStyles,\r\n  getLineHeight\r\n} from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'chrome.base_header_item';\r\n\r\nexport interface IStyledBaseHeaderItemProps {\r\n  /** Maximizes the width of a flex item in the header */\r\n  maxX?: boolean;\r\n  /** Maximizes the height of the item (i.e. contains a search input) */\r\n  maxY?: boolean;\r\n  /** Rounds the border radius of the item */\r\n  isRound?: boolean;\r\n}\r\n\r\nexport const getHeaderItemSize = (props: ThemeProps<DefaultTheme>) =>\r\n  `${props.theme.space.base * 7.5}px`;\r\n\r\nconst sizeStyles = (props: IStyledBaseHeaderItemProps & ThemeProps<DefaultTheme>) => {\r\n  const size = props.theme.space.base * 7.5;\r\n\r\n  return css`\r\n    padding: 0 3px;\r\n    min-width: ${size}px;\r\n    height: ${props.maxY ? '100%' : `${size}px`};\r\n    line-height: ${getLineHeight(size, props.theme.fontSizes.md)};\r\n  `;\r\n};\r\n\r\n/**\r\n * 1. Reset the stacking context for embedded menus\r\n * 2. Button element reset\r\n */\r\nexport const StyledBaseHeaderItem = styled.button.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledBaseHeaderItemProps>`\r\n  display: inline-flex;\r\n  position: relative;\r\n  flex: ${props => props.maxX && '1'};\r\n  align-items: center;\r\n  justify-content: ${props => (props.maxX ? 'start' : 'center')};\r\n  order: 1;\r\n  transition: box-shadow 0.1s ease-in-out, color 0.1s ease-in-out;\r\n  z-index: 0; /* [1] */\r\n  margin: ${props => `0 ${props.theme.space.base * 3}px`};\r\n  border: none; /* [2] */\r\n  border-radius: ${props => {\r\n    if (props.isRound) {\r\n      return '100%';\r\n    }\r\n\r\n    if (props.maxY) {\r\n      return '0';\r\n    }\r\n\r\n    return props.theme.borderRadii.md;\r\n  }};\r\n  background: transparent; /* [2] */\r\n  text-decoration: none;\r\n  white-space: nowrap;\r\n  color: inherit;\r\n  font-size: inherit; /* [2] */\r\n\r\n  ${sizeStyles}\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledBaseHeaderItem.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { retrieveComponentStyles, getColor, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledLogoHeaderItem } from './StyledLogoHeaderItem';\r\nimport { getNavItemHeight } from '../nav/StyledBaseNavItem';\r\n\r\nconst COMPONENT_ID = 'chrome.header';\r\n\r\nexport interface IStyledHeaderProps {\r\n  /** Displays logo for standlone usage  */\r\n  isStandalone?: boolean;\r\n}\r\n\r\nexport const getHeaderHeight = (props: ThemeProps<DefaultTheme>) => {\r\n  return getNavItemHeight(props);\r\n};\r\n\r\nexport const StyledHeader = styled.header.attrs<IStyledHeaderProps>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledHeaderProps>`\r\n  display: flex;\r\n  position: ${props => props.isStandalone && 'relative'};\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  box-sizing: border-box;\r\n  border-bottom: ${props =>\r\n    `${props.theme.borders.sm} ${getColor('neutralHue', 300, props.theme)}`};\r\n  box-shadow: ${props =>\r\n    props.isStandalone &&\r\n    props.theme.shadows.lg('0', '10px', getColor('chromeHue', 600, props.theme, 0.15)!)};\r\n  background-color: ${props => props.theme.colors.background};\r\n  padding: 0 ${props => props.theme.space.base}px;\r\n  height: ${getHeaderHeight};\r\n  color: ${props => getColor('neutralHue', 600, props.theme)};\r\n  font-size: ${props => props.theme.fontSizes.md};\r\n\r\n  ${props =>\r\n    props.isStandalone &&\r\n    `\r\n    ${StyledLogoHeaderItem} {\r\n      display: inline-flex;\r\n    }\r\n  `}\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledHeader.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { DefaultTheme, ThemeProps, css } from 'styled-components';\r\nimport { math } from 'polished';\r\nimport { retrieveComponentStyles, getColor, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledHeaderItemIcon } from './StyledHeaderItemIcon';\r\nimport {\r\n  StyledBaseHeaderItem,\r\n  IStyledBaseHeaderItemProps,\r\n  getHeaderItemSize\r\n} from './StyledBaseHeaderItem';\r\nimport { StyledHeaderItemText } from './StyledHeaderItemText';\r\n\r\nconst COMPONENT_ID = 'chrome.header_item';\r\n\r\nconst imgStyles = (props: ThemeProps<DefaultTheme>) => {\r\n  const size = math(`${getHeaderItemSize(props)} - ${props.theme.space.base * 2}`);\r\n\r\n  return css`\r\n    img {\r\n      margin: 0;\r\n      border-radius: ${math(`${props.theme.borderRadii.md} - 1`)};\r\n      width: ${size};\r\n      height: ${size};\r\n    }\r\n  `;\r\n};\r\n\r\n/**\r\n * 1. Anchor reset.\r\n */\r\nexport const StyledHeaderItem = styled(StyledBaseHeaderItem as 'button').attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledBaseHeaderItemProps>`\r\n  &:hover,\r\n  &:focus {\r\n    text-decoration: none; /* [1] */\r\n    color: inherit; /* [1] */\r\n  }\r\n\r\n  &:focus {\r\n    outline: none; /* [1] */\r\n  }\r\n\r\n  &[data-garden-focus-visible] {\r\n    box-shadow: ${props => props.theme.shadows.md(getColor('chromeHue', 400, props.theme, 0.35)!)};\r\n  }\r\n\r\n  &[data-garden-focus-visible]:active {\r\n    box-shadow: none;\r\n  }\r\n\r\n  /* prettier-ignore */\r\n  &:hover ${/* sc-selector */ StyledHeaderItemIcon},\r\n  &:hover ${/* sc-selector */ StyledHeaderItemText},\r\n  &:active ${/* sc-selector */ StyledHeaderItemIcon},\r\n  &:active ${/* sc-selector */ StyledHeaderItemText} {\r\n    color: ${props => getColor('chromeHue', 700, props.theme)};\r\n  }\r\n\r\n  ${props =>\r\n    props.maxY &&\r\n    `\r\n      &[data-garden-focus-visible] {\r\n        box-shadow: inset ${props.theme.shadows.lg(\r\n          props.theme.shadowWidths.md,\r\n          '0',\r\n          getColor('chromeHue', 400, props.theme, 0.35)!\r\n        )},\r\n        ${props.theme.shadowWidths.md} 0 0 0 ${getColor('chromeHue', 400, props.theme, 0.35)},\r\n        inset ${props.theme.shadows.lg(\r\n          `-${props.theme.shadowWidths.md}`,\r\n          '0',\r\n          getColor('chromeHue', 400, props.theme, 0.35)!\r\n        )},\r\n        -${props.theme.shadowWidths.md} 0 0 0 ${getColor('chromeHue', 400, props.theme, 0.35)};\r\n      }\r\n  `}\r\n\r\n  ${imgStyles}\r\n\r\n  ${props =>\r\n    props.isRound &&\r\n    `\r\n    ${StyledHeaderItemIcon} {\r\n      border-radius: 100px;\r\n    }\r\n  `}\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledHeaderItem.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'chrome.header_item_icon';\r\n\r\n/**\r\n * Applies styling directly to child component\r\n **/\r\nexport const StyledHeaderItemIcon = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  transition: transform 0.25s ease-in-out;\r\n  margin: 0 3px;\r\n  width: ${props => props.theme.iconSizes.md};\r\n  min-width: ${props => props.theme.iconSizes.md};\r\n  height: ${props => props.theme.iconSizes.md};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledHeaderItemIcon.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css } from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'chrome.header_item_text';\r\n\r\nexport interface IStyledHeaderItemTextProps {\r\n  /** Hides item text. Text remains accessible to screen readers. */\r\n  isClipped?: boolean;\r\n}\r\n\r\nexport const clippedStyling = css`\r\n  position: absolute;\r\n  margin: 0;\r\n  clip: rect(1px, 1px, 1px, 1px);\r\n  width: 1px;\r\n  height: 1px;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n`;\r\n\r\nexport const StyledHeaderItemText = styled.span.attrs<IStyledHeaderItemTextProps>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledHeaderItemTextProps>`\r\n  margin: 0 3px;\r\n\r\n  ${props => props.isClipped && clippedStyling}\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledHeaderItemText.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledBaseHeaderItem } from './StyledBaseHeaderItem';\r\n\r\nconst COMPONENT_ID = 'chrome.header_item_wrapper';\r\n\r\nexport const StyledHeaderItemWrapper = styled(StyledBaseHeaderItem as 'div').attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  as: 'div'\r\n})`\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledHeaderItemWrapper.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport {\r\n  retrieveComponentStyles,\r\n  getColor,\r\n  PALETTE,\r\n  DEFAULT_THEME\r\n} from '@zendeskgarden/react-theming';\r\nimport { PRODUCT } from '../../utils/types';\r\nimport { StyledHeaderItemIcon } from './StyledHeaderItemIcon';\r\nimport { StyledBaseHeaderItem } from './StyledBaseHeaderItem';\r\nimport { StyledHeaderItemText, clippedStyling } from './StyledHeaderItemText';\r\nimport { getNavWidth } from '../nav/StyledNav';\r\n\r\nconst COMPONENT_ID = 'chrome.header_item';\r\n\r\nexport interface IStyledLogoHeaderItemProps {\r\n  /**\r\n   * Applies a\r\n   * [brand color](/design/color#brand-colors)\r\n   * to the product logo\r\n   */\r\n  product?: PRODUCT;\r\n}\r\n\r\nconst retrieveProductColor = (props: IStyledLogoHeaderItemProps) => {\r\n  switch (props.product) {\r\n    case 'chat':\r\n      return PALETTE.product.chat;\r\n    case 'connect':\r\n      return PALETTE.product.connect;\r\n    case 'explore':\r\n      return PALETTE.product.explore;\r\n    case 'guide':\r\n      return PALETTE.product.guide;\r\n    case 'message':\r\n      return PALETTE.product.message;\r\n    case 'support':\r\n      return PALETTE.product.support;\r\n    case 'talk':\r\n      return PALETTE.product.talk;\r\n    default:\r\n      return 'inherit';\r\n  }\r\n};\r\n\r\n/**\r\n * 1. Anchor reset\r\n */\r\nexport const StyledLogoHeaderItem = styled(StyledBaseHeaderItem).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  as: 'div'\r\n})<IStyledLogoHeaderItemProps>`\r\n  display: none;\r\n  order: 0;\r\n  margin-right: ${props => (props.theme.rtl ? `-${props.theme.space.base}px` : 'auto')};\r\n  margin-left: ${props => (props.theme.rtl ? 'auto' : `-${props.theme.space.base}px`)};\r\n  /* stylelint-disable-next-line property-no-unknown */\r\n  border-${props => (props.theme.rtl ? 'left' : 'right')}: ${props =>\r\n  `${props.theme.borders.sm} ${getColor('neutralHue', 300, props.theme)}`};\r\n  border-radius: 0;\r\n  padding: 0;\r\n  width: ${props => getNavWidth(props)};\r\n  height: 100%;\r\n  overflow: hidden;\r\n  fill: ${props => getColor('chromeHue', 700, props.theme)};\r\n  text-decoration: none; /* [1] */\r\n  color: ${props => retrieveProductColor(props)}; /* [1] */\r\n\r\n  ${StyledHeaderItemText} {\r\n    ${clippedStyling}\r\n  }\r\n\r\n  ${StyledHeaderItemIcon} {\r\n    margin: 0;\r\n    width: ${props => props.theme.iconSizes.lg};\r\n    height: ${props => props.theme.iconSizes.lg};\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledLogoHeaderItem.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const LinkIcon = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n        <path fill=\"currentColor\" d=\"M4.441 7.38l.095.083.939.939-.708.707-.939-.939-2 2-.132.142a2.829 2.829 0 003.99 3.99l.142-.132 2-2-.939-.939.707-.708.94.94a1 1 0 01.083 1.32l-.083.094-2 2A3.828 3.828 0 01.972 9.621l.15-.158 2-2A1 1 0 014.34 7.31l.101.07zm7.413-3.234a.5.5 0 01.057.638l-.057.07-7 7a.5.5 0 01-.765-.638l.057-.07 7-7a.5.5 0 01.708 0zm3.023-3.025a3.829 3.829 0 01.15 5.257l-.15.158-2 2a1 1 0 01-1.32.083l-.094-.083-.94-.94.708-.707.939.94 2-2 .132-.142a2.829 2.829 0 00-3.99-3.99l-.142.131-2 2 .939.939-.707.708-.94-.94a1 1 0 01-.082-1.32l.083-.094 2-2a3.828 3.828 0 015.414 0z\"/>\r\n      </svg>\r\n \r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme, css } from 'styled-components';\r\nimport { math } from 'polished';\r\nimport { DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { getNavWidth } from './StyledNav';\r\n\r\nconst COMPONENT_ID = 'chrome.base_nav_item';\r\n\r\nexport const getNavItemHeight = (props: ThemeProps<DefaultTheme>) => {\r\n  return `${props.theme.space.base * 13}px`;\r\n};\r\n\r\nconst sizeStyles = (props: ThemeProps<DefaultTheme>) => {\r\n  const verticalPadding = math(`(${getNavItemHeight(props)} - ${props.theme.iconSizes.lg}) / 2`);\r\n  const horizontalPadding = math(`(${getNavWidth(props)} - ${props.theme.iconSizes.lg}) / 4`);\r\n\r\n  return css`\r\n    padding: ${verticalPadding} ${horizontalPadding};\r\n    min-height: ${getNavItemHeight};\r\n  `;\r\n};\r\n\r\n/**\r\n * 1. Button reset.\r\n * 2. Anchor reset.\r\n */\r\nexport const StyledBaseNavItem = styled.button.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  align-items: center;\r\n  justify-content: center;\r\n  /* stylelint-disable-next-line value-list-comma-newline-after */\r\n  transition: box-shadow 0.1s ease-in-out, background-color 0.1s ease-in-out,\r\n    opacity 0.1s ease-in-out;\r\n  border: none; /* [1] */\r\n  box-sizing: border-box;\r\n  background: transparent; /* [1] */\r\n  text-decoration: none; /* [2] */\r\n  color: inherit; /* [2] */\r\n  font-size: inherit; /* [1] */\r\n\r\n  ${props => sizeStyles(props)}\r\n`;\r\n\r\nStyledBaseNavItem.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledBaseNavItem } from './StyledBaseNavItem';\r\n\r\nconst COMPONENT_ID = 'chrome.brandmark_nav_item';\r\n\r\nexport const StyledBrandmarkNavItem = styled(StyledBaseNavItem).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  as: 'div'\r\n})`\r\n  order: 1;\r\n  opacity: 0.3;\r\n  margin-top: auto;\r\n`;\r\n\r\nStyledBrandmarkNavItem.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme, css } from 'styled-components';\r\nimport { PALETTE, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { PRODUCT } from '../../utils/types';\r\nimport { StyledBaseNavItem } from './StyledBaseNavItem';\r\n\r\nconst COMPONENT_ID = 'chrome.logo_nav_item';\r\n\r\nconst retrieveProductColor = (product: string | undefined) => {\r\n  switch (product) {\r\n    case 'chat':\r\n      return PALETTE.product.chat;\r\n    case 'connect':\r\n      return PALETTE.product.connect;\r\n    case 'explore':\r\n      return PALETTE.product.explore;\r\n    case 'guide':\r\n      return PALETTE.product.guide;\r\n    case 'message':\r\n      return PALETTE.product.message;\r\n    case 'support':\r\n      return PALETTE.product.support;\r\n    case 'talk':\r\n      return PALETTE.product.talk;\r\n    default:\r\n      return 'inherit';\r\n  }\r\n};\r\n\r\nconst colorStyles = (props: IStyledLogoNavItemProps) => {\r\n  const fillColor = props.isLight ? props.theme.palette.grey[800] : props.theme.palette.white;\r\n  const color = props.isLight || props.isDark ? fillColor : retrieveProductColor(props.product);\r\n\r\n  return css`\r\n    color: ${color};\r\n    fill: ${fillColor};\r\n  `;\r\n};\r\n\r\nexport interface IStyledLogoNavItemProps extends ThemeProps<DefaultTheme> {\r\n  product?: PRODUCT;\r\n  isDark?: boolean;\r\n  isLight?: boolean;\r\n}\r\n\r\nexport const StyledLogoNavItem = styled(StyledBaseNavItem).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  as: 'div'\r\n})<IStyledLogoNavItemProps>`\r\n  order: 0;\r\n  opacity: 1;\r\n  cursor: default;\r\n\r\n  ${props => colorStyles(props)};\r\n`;\r\n\r\nStyledLogoNavItem.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme, css } from 'styled-components';\r\nimport { retrieveComponentStyles, getColor, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'chrome.nav';\r\n\r\nconst colorStyles = (props: IStyledNavProps) => {\r\n  const shade = props.isDark || props.isLight ? 600 : 700;\r\n  const backgroundColor = getColor(props.hue, shade, props.theme);\r\n  const foregroundColor = props.isLight ? props.theme.palette.grey[800] : props.theme.palette.white;\r\n\r\n  return css`\r\n    background-color: ${backgroundColor};\r\n    color: ${foregroundColor};\r\n  `;\r\n};\r\n\r\ninterface IStyledNavProps extends ThemeProps<DefaultTheme> {\r\n  hue: string;\r\n  isDark?: boolean;\r\n  isLight?: boolean;\r\n  isExpanded?: boolean;\r\n}\r\n\r\nexport const getNavWidth = (props: ThemeProps<DefaultTheme>) => {\r\n  return `${props.theme.space.base * 15}px`;\r\n};\r\n\r\nexport const getExpandedNavWidth = () => {\r\n  return `200px`;\r\n};\r\n\r\nexport const StyledNav = styled.nav.attrs<IStyledNavProps>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledNavProps>`\r\n  display: flex;\r\n  position: relative;\r\n  flex-direction: column;\r\n  flex-shrink: 0;\r\n  order: -1;\r\n  width: ${props => (props.isExpanded ? getExpandedNavWidth : getNavWidth)};\r\n  font-size: ${props => props.theme.fontSizes.md};\r\n\r\n  ${props => colorStyles(props)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledNav.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { rgba, math } from 'polished';\r\nimport { retrieveComponentStyles, getColor, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledBaseNavItem } from './StyledBaseNavItem';\r\nimport { StyledNavItemIcon } from './StyledNavItemIcon';\r\nimport { getNavWidth } from './StyledNav';\r\n\r\nconst COMPONENT_ID = 'chrome.nav_item';\r\n\r\nconst colorStyles = (props: IStyledNavItemProps) => {\r\n  const BLACK = props.theme.palette.black as string;\r\n  const WHITE = props.theme.palette.white as string;\r\n  let currentColor;\r\n  let hoverColor;\r\n\r\n  if (props.isCurrent) {\r\n    if (props.isLight) {\r\n      currentColor = rgba(BLACK, 0.3);\r\n    } else if (props.isDark) {\r\n      currentColor = rgba(WHITE, 0.3);\r\n    } else {\r\n      currentColor = getColor(props.hue, 500, props.theme);\r\n    }\r\n  } else {\r\n    hoverColor = rgba(props.isLight ? WHITE : BLACK, 0.1);\r\n  }\r\n\r\n  const activeColor = rgba(props.isLight ? BLACK : WHITE, 0.1);\r\n  const focusColor = rgba(props.isLight ? BLACK : WHITE, 0.2);\r\n\r\n  return css`\r\n    opacity: ${props.isCurrent ? 1 : 0.6};\r\n    background-color: ${currentColor};\r\n\r\n    &:hover {\r\n      opacity: 1;\r\n      background-color: ${hoverColor};\r\n    }\r\n\r\n    &[data-garden-focus-visible] {\r\n      opacity: 1;\r\n      box-shadow: inset ${props.theme.shadows.md(focusColor)};\r\n    }\r\n\r\n    &:active {\r\n      background-color: ${activeColor};\r\n    }\r\n  `;\r\n};\r\n\r\ninterface IStyledNavItemProps extends ThemeProps<DefaultTheme> {\r\n  isCurrent?: boolean;\r\n  isExpanded?: boolean;\r\n  isDark?: boolean;\r\n  isLight?: boolean;\r\n  hue: string;\r\n}\r\n\r\n/**\r\n * 1. Anchor reset\r\n * 2. Button reset\r\n */\r\nexport const StyledNavItem = styled(StyledBaseNavItem as 'button').attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  as: 'button'\r\n})<IStyledNavItemProps>`\r\n  justify-content: ${props => props.isExpanded && 'start'};\r\n  order: 1;\r\n  margin: 0; /* [2] */\r\n  cursor: ${props => (props.isCurrent ? 'default' : 'pointer')};\r\n  text-align: ${props => props.isExpanded && 'inherit'};\r\n\r\n  &:hover,\r\n  &:focus {\r\n    text-decoration: none; /* [1] */\r\n    color: inherit; /* [1] */\r\n  }\r\n\r\n  &:focus {\r\n    outline: none; /* [1] */\r\n  }\r\n\r\n  ${props => colorStyles(props)};\r\n\r\n  ${props =>\r\n    props.isExpanded &&\r\n    `\r\n    ${StyledNavItemIcon} {\r\n      margin: 0 ${math(`(${getNavWidth(props)} - ${props.theme.iconSizes.lg}) / 4`)};\r\n    }\r\n  `}\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledNavItem.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'chrome.nav_item_icon';\r\n\r\n/**\r\n * Applies styling directly to child component\r\n **/\r\nexport const StyledNavItemIcon = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  align-self: flex-start;\r\n  order: 0;\r\n  border-radius: ${props => props.theme.borderRadii.md};\r\n  width: ${props => props.theme.iconSizes.lg};\r\n  height: ${props => props.theme.iconSizes.lg};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledNavItemIcon.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { math } from 'polished';\r\nimport {\r\n  retrieveComponentStyles,\r\n  DEFAULT_THEME,\r\n  getLineHeight\r\n} from '@zendeskgarden/react-theming';\r\nimport { StyledNavItem } from './StyledNavItem';\r\nimport { getNavWidth } from './StyledNav';\r\n\r\nconst COMPONENT_ID = 'chrome.nav_item_text';\r\n\r\nexport interface IStyledNavItemTextProps {\r\n  /** Wraps overflow item text instead of truncating long strings with an ellipsis **/\r\n  isWrapped?: boolean;\r\n  /** Reveals item text */\r\n  isExpanded?: boolean;\r\n}\r\n\r\nexport const StyledNavItemText = styled.span.attrs<IStyledNavItemTextProps>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledNavItemTextProps>`\r\n  position: absolute;\r\n  order: 1;\r\n  clip: rect(1px, 1px, 1px, 1px);\r\n  margin: ${props =>\r\n    props.isExpanded && `0 ${math(`(${getNavWidth(props)} - ${props.theme.iconSizes.lg}) / 4`)}`};\r\n  width: 1px;\r\n  height: 1px;\r\n  overflow: hidden;\r\n  line-height: ${props => getLineHeight(props.theme.space.base * 5, props.theme.fontSizes.md)};\r\n  white-space: ${props => (props.isWrapped ? 'normal' : 'nowrap')};\r\n\r\n  ${props =>\r\n    props.isExpanded &&\r\n    `\r\n    ${StyledNavItem} > && {\r\n      position: static;\r\n      flex: 1;\r\n      clip: auto;\r\n      width: auto;\r\n      height: auto;\r\n      text-overflow: ellipsis;\r\n    }\r\n  `}\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledNavItemText.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { getColor, retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'chrome.sheet';\r\n\r\ninterface IStyledSheetProps {\r\n  placement?: 'start' | 'end';\r\n  isOpen?: boolean;\r\n  isAnimated?: boolean;\r\n  size?: string;\r\n}\r\n\r\nconst borderStyle = ({\r\n  theme,\r\n  placement,\r\n  isOpen\r\n}: IStyledSheetProps & ThemeProps<DefaultTheme>) => {\r\n  const borderColor = isOpen ? getColor('neutralHue', 300, theme) : 'transparent';\r\n  const borderSides = ['-left', '-right'];\r\n  let borderSide = '';\r\n\r\n  if (theme.rtl) {\r\n    borderSides.reverse();\r\n  }\r\n\r\n  if (placement === 'end') {\r\n    borderSide = borderSides[0];\r\n  } else if (placement === 'start') {\r\n    borderSide = borderSides[1];\r\n  }\r\n\r\n  return `border${borderSide}: ${theme.borders.sm} ${borderColor};`;\r\n};\r\n\r\nexport const StyledSheet = styled.aside.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledSheetProps>`\r\n  display: flex;\r\n  order: 1;\r\n  transition: ${props => props.isAnimated && 'width 250ms ease-in-out'};\r\n  background-color: ${props => props.theme.colors.background};\r\n  width: ${props => (props.isOpen ? props.size : '0px')};\r\n  height: 100%;\r\n  overflow: hidden;\r\n  font-size: ${props => props.theme.fontSizes.md};\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  ${props => borderStyle(props)};\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledSheet.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'chrome.sheet_body';\r\n\r\nexport const StyledSheetBody = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: ${props => props.theme.space.base * 5}px;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledSheetBody.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme, css } from 'styled-components';\r\nimport { getColor, retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'chrome.sheet_close';\r\n\r\nconst colorStyles = (props: ThemeProps<DefaultTheme>) => {\r\n  const backgroundColor = 'primaryHue';\r\n  const foregroundColor = 'neutralHue';\r\n\r\n  return css`\r\n    background-color: transparent;\r\n    color: ${getColor(foregroundColor, 600, props.theme)};\r\n\r\n    &:hover {\r\n      background-color: ${getColor(backgroundColor, 600, props.theme, 0.08)};\r\n      color: ${getColor(foregroundColor, 700, props.theme)};\r\n    }\r\n\r\n    &[data-garden-focus-visible] {\r\n      box-shadow: ${props.theme.shadows.md(\r\n        getColor(backgroundColor, 600, props.theme, 0.35) as string\r\n      )};\r\n    }\r\n\r\n    &:active {\r\n      /* prettier-ignore */\r\n      transition:\r\n        background-color 0.1s ease-in-out,\r\n        color 0.1s ease-in-out;\r\n      background-color: ${getColor(backgroundColor, 600, props.theme, 0.2)};\r\n      color: ${getColor(foregroundColor, 800, props.theme)};\r\n    }\r\n  `;\r\n};\r\n\r\nexport const StyledSheetClose = styled.button.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<ThemeProps<DefaultTheme>>`\r\n  display: flex;\r\n  position: absolute;\r\n  top: ${props => props.theme.space.base * 2.5}px;\r\n  ${props => (props.theme.rtl ? 'left' : 'right')}: ${props => `${props.theme.space.base * 2}px`};\r\n  align-items: center;\r\n  justify-content: center;\r\n  /* prettier-ignore */\r\n  transition:\r\n    box-shadow 0.1s ease-in-out,\r\n    background-color 0.25s ease-in-out,\r\n    color 0.25s ease-in-out;\r\n  border: none;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  width: ${props => props.theme.space.base * 10}px;\r\n  height: ${props => props.theme.space.base * 10}px;\r\n  overflow: hidden;\r\n  text-decoration: none;\r\n  font-size: 0;\r\n  user-select: none;\r\n\r\n  &::-moz-focus-inner {\r\n    border: 0; /* [1] */\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  ${props => colorStyles(props)};\r\n\r\n  & > svg {\r\n    vertical-align: middle;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledSheetClose.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme } from 'styled-components';\r\nimport {\r\n  retrieveComponentStyles,\r\n  getLineHeight,\r\n  getColor,\r\n  DEFAULT_THEME\r\n} from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'chrome.sheet_description';\r\n\r\nexport const StyledSheetDescription = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<ThemeProps<DefaultTheme>>`\r\n  line-height: ${props => getLineHeight(props.theme.space.base * 4, props.theme.fontSizes.md)};\r\n  color: ${props => getColor('neutralHue', 600, props.theme)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledSheetDescription.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { getColor, retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'chrome.sheet_footer';\r\n\r\nexport interface IStyledSheetFooterProps {\r\n  /** Sets the SheetFooter padding to half the standard and centers the elements  */\r\n  isCompact?: boolean;\r\n}\r\n\r\nexport const StyledSheetFooter = styled.footer.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledSheetFooterProps & ThemeProps<DefaultTheme>>`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  align-items: center;\r\n  justify-content: ${props => (props.isCompact ? 'center' : 'flex-end')};\r\n  border-top: ${props => `${props.theme.borders.sm} ${getColor('neutralHue', 300, props.theme)}}`};\r\n  padding: ${props => props.theme.space.base * (props.isCompact ? 2.5 : 5)}px;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledSheetFooter.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'chrome.sheet_footer_item';\r\n\r\nexport const StyledSheetFooterItem = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<ThemeProps<DefaultTheme>>`\r\n  ${props => `margin-${props.theme.rtl ? 'right' : 'left'}: ${props.theme.space.base * 5}px;`}\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledSheetFooterItem.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { getColor, retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'chrome.sheet_header';\r\n\r\nexport const StyledSheetHeader = styled.header.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<ThemeProps<DefaultTheme>>`\r\n  border-bottom: ${props =>\r\n    `${props.theme.borders.sm} ${getColor('neutralHue', 300, props.theme)}}`};\r\n  padding: ${props => props.theme.space.base * 5}px;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledSheetHeader.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme } from 'styled-components';\r\nimport {\r\n  retrieveComponentStyles,\r\n  getLineHeight,\r\n  DEFAULT_THEME\r\n} from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'chrome.sheet_title';\r\n\r\nexport const StyledSheetTitle = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<ThemeProps<DefaultTheme>>`\r\n  line-height: ${props => getLineHeight(props.theme.space.base * 5, props.theme.fontSizes.md)};\r\n  color: ${props => props.theme.colors.foreground};\r\n  font-weight: ${props => props.theme.fontWeights.semibold};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledSheetTitle.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'chrome.sheet_wrapper';\r\n\r\ninterface IStyledSheetWrapperProps {\r\n  isOpen?: boolean;\r\n  isAnimated?: boolean;\r\n  placement?: 'start' | 'end';\r\n  size?: string;\r\n}\r\n\r\nexport const StyledSheetWrapper = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledSheetWrapperProps & ThemeProps<DefaultTheme>>`\r\n  display: flex;\r\n  position: relative;\r\n  flex-direction: column;\r\n  transform: ${props => {\r\n    const translateValues = [-100, 100];\r\n    let translation = 'translateX(0%)';\r\n\r\n    if (props.isOpen) {\r\n      return translation;\r\n    }\r\n\r\n    if (props.theme.rtl) {\r\n      translateValues.reverse();\r\n    }\r\n\r\n    if (props.placement === 'end') {\r\n      translation = `translateX(${translateValues[1]}%)`;\r\n    } else if (props.placement === 'start') {\r\n      translation = `translateX(${translateValues[0]}%)`;\r\n    }\r\n\r\n    return translation;\r\n  }};\r\n  transition: ${props => props.isAnimated && 'transform 250ms ease-in-out'};\r\n  min-width: ${props => props.size};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledSheetWrapper.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme, css } from 'styled-components';\r\nimport { retrieveComponentStyles, getColor, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledSubNavItem } from './StyledSubNavItem';\r\n\r\nconst COMPONENT_ID = 'chrome.subnav';\r\n\r\nconst colorStyles = (props: IStyledSubNavProps) => {\r\n  let shade;\r\n\r\n  if (props.isLight) {\r\n    shade = 500;\r\n  } else {\r\n    shade = props.isDark ? 700 : 800;\r\n  }\r\n\r\n  const backgroundColor = getColor(props.hue, shade, props.theme);\r\n  const foregroundColor = props.isLight ? props.theme.palette.grey[800] : props.theme.palette.white;\r\n\r\n  return css`\r\n    background-color: ${backgroundColor};\r\n    color: ${foregroundColor};\r\n  `;\r\n};\r\n\r\ninterface IStyledSubNavProps extends ThemeProps<DefaultTheme> {\r\n  hue: string;\r\n  isDark?: boolean;\r\n  isLight?: boolean;\r\n}\r\n\r\nexport const StyledSubNav = styled.nav.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledSubNavProps>`\r\n  flex-direction: column;\r\n  order: 0;\r\n  padding: ${props => `${props.theme.space.base * 6}px ${props.theme.space.base * 5}px`};\r\n  min-width: 220px;\r\n  font-size: ${props => props.theme.fontSizes.md};\r\n\r\n  ${props => colorStyles(props)};\r\n\r\n  & > ${StyledSubNavItem}:first-child {\r\n    margin-top: 0;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles('chrome.subnav', props)};\r\n`;\r\n\r\nStyledSubNav.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme, css } from 'styled-components';\r\nimport { rgba } from 'polished';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'chrome.subnav_item';\r\n\r\nconst colorStyles = (props: IStyledSubNavItemProps) => {\r\n  const BLACK = props.theme.palette.black as string;\r\n  const WHITE = props.theme.palette.white as string;\r\n  let currentColor;\r\n  let hoverColor;\r\n\r\n  if (props.isCurrent) {\r\n    if (props.isLight) {\r\n      currentColor = rgba(BLACK, 0.1);\r\n    } else {\r\n      currentColor = rgba(WHITE, 0.1);\r\n    }\r\n  } else {\r\n    hoverColor = rgba(props.isLight ? WHITE : BLACK, 0.1);\r\n  }\r\n\r\n  const activeColor = rgba(props.isLight ? BLACK : WHITE, 0.03);\r\n  const focusColor = rgba(props.isLight ? BLACK : WHITE, 0.2);\r\n\r\n  return css`\r\n    opacity: ${props.isCurrent ? '1' : '0.6'};\r\n    background-color: ${currentColor};\r\n\r\n    &:hover {\r\n      opacity: 1;\r\n      background-color: ${hoverColor};\r\n    }\r\n\r\n    &[data-garden-focus-visible] {\r\n      opacity: 1;\r\n      box-shadow: ${props.theme.shadows.md(focusColor)};\r\n    }\r\n\r\n    &:not([data-garden-header='true']):active {\r\n      background-color: ${activeColor};\r\n    }\r\n  `;\r\n};\r\n\r\nexport interface IStyledSubNavItemProps extends ThemeProps<DefaultTheme> {\r\n  isCurrent?: boolean;\r\n  isDark?: boolean;\r\n  isLight?: boolean;\r\n}\r\n\r\nexport const getSubNavItemHeight = (props: IStyledSubNavItemProps) => {\r\n  return `${props.theme.space.base * 7.5}px`;\r\n};\r\n\r\n/**\r\n * 1. Anchor reset\r\n * 2. Button reset\r\n */\r\nexport const StyledSubNavItem = styled.button.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledSubNavItemProps>`\r\n  display: flex;\r\n  align-items: center;\r\n  /* prettier-ignore */\r\n  transition: box-shadow 0.1s ease-in-out,\r\n    background-color 0.1s ease-in-out,\r\n    opacity 0.1s ease-in-out;\r\n  margin: ${props => props.theme.space.base * 2}px 0 0; /* [2] */\r\n  border: none; /* [2] */\r\n  border-radius: ${props => props.theme.borderRadii.md};\r\n  box-sizing: border-box;\r\n  background: transparent; /* [2] */\r\n  cursor: ${props => (props.isCurrent ? 'default' : 'pointer')}; /* [2] */\r\n  padding: ${props => `0 ${props.theme.space.base * 2}px`};\r\n  width: 100%; /* [2] */\r\n  min-height: ${getSubNavItemHeight};\r\n  text-align: inherit; /* [2] */\r\n  font-size: inherit; /* [2] */\r\n\r\n  &,\r\n  &:hover,\r\n  &:focus {\r\n    text-decoration: none; /* [1] */\r\n    color: inherit; /* [1] */\r\n  }\r\n\r\n  &:focus {\r\n    outline: none; /* [1] */\r\n  }\r\n\r\n  ${props => colorStyles(props)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledSubNavItem.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nimport { StyledSubNavItem, IStyledSubNavItemProps } from './StyledSubNavItem';\r\n\r\nconst COMPONENT_ID = 'chrome.collapsible_sub_nav_item';\r\n\r\nexport interface IStyledSubNavItemHeaderProps extends IStyledSubNavItemProps {\r\n  isExpanded?: boolean;\r\n}\r\n\r\nexport const StyledSubNavItemHeader = styled(StyledSubNavItem).attrs<IStyledSubNavItemHeaderProps>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  'data-garden-header': 'true'\r\n})<IStyledSubNavItemHeaderProps>`\r\n  position: relative;\r\n  /* stylelint-disable-next-line property-no-unknown */\r\n  padding-${props => (props.theme.rtl ? 'left' : 'right')}: ${props =>\r\n  props.theme.space.base * 7}px;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledSubNavItemHeader.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport styled, { ThemeProps, css } from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { IStyledSubNavItemHeaderProps } from './StyledSubNavItemHeader';\r\nimport { getSubNavItemHeight } from './StyledSubNavItem';\r\nimport { ChevronDownStrokeIcon } from './chevro-down';\r\n\r\nconst COMPONENT_ID = 'chrome.collapsible_sub_nav_item_icon';\r\n\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nconst FilteredChevronDownStrokeIcon = React.forwardRef<\r\n  SVGElement,\r\n  IStyledSubNavItemHeaderProps & ThemeProps<HTMLAttributes<SVGElement>>\r\n>(({ theme, isExpanded, ...validProps }, ref) => (\r\n  <ChevronDownStrokeIcon ref={ref} {...validProps} />\r\n));\r\n/* eslint-enable @typescript-eslint/no-unused-vars */\r\n\r\nFilteredChevronDownStrokeIcon.displayName = 'FilteredChevronDownStrokeIcon';\r\n\r\nexport const StyledSubNavItemIcon = styled(FilteredChevronDownStrokeIcon)`\r\n  width: ${props => props.theme.iconSizes.sm};\r\n  height: ${props => props.theme.iconSizes.sm};\r\n`;\r\n\r\nStyledSubNavItemIcon.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n\r\nexport const StyledSubNavItemIconWrapper = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledSubNavItemHeaderProps>`\r\n  display: flex;\r\n  position: absolute;\r\n  top: 0;\r\n  right: ${props => (props.theme.rtl ? 'auto' : 0)};\r\n  left: ${props => props.theme.rtl && 0};\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: ${props => props.theme.space.base * 7}px;\r\n  height: ${getSubNavItemHeight};\r\n\r\n  ${StyledSubNavItemIcon} {\r\n    transform: ${props => {\r\n      if (props.isExpanded) {\r\n        return css`rotate(${props.theme.rtl && '-'}180deg)`;\r\n      }\r\n\r\n      return undefined;\r\n    }};\r\n    transition: transform 0.25s ease-in-out;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledSubNavItemIconWrapper.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme, css } from 'styled-components';\r\nimport { math } from 'polished';\r\nimport {\r\n  retrieveComponentStyles,\r\n  getLineHeight,\r\n  DEFAULT_THEME\r\n} from '@zendeskgarden/react-theming';\r\nimport { getSubNavItemHeight } from './StyledSubNavItem';\r\n\r\nconst COMPONENT_ID = 'chrome.subnav_item_text';\r\n\r\nexport interface IStyledSubNavItemTextProps {\r\n  /**\r\n   * Wraps overflow item text instead of truncating long strings with an ellipsis.\r\n   * Use when `max-width` styling is applied to the subnav container.\r\n   **/\r\n  isWrapped?: boolean;\r\n}\r\n\r\nconst sizeStyles = (props: ThemeProps<DefaultTheme>) => {\r\n  const baseLineHeight = props.theme.space.base * 5;\r\n  const verticalMargin = math(`(${getSubNavItemHeight(props)} - ${baseLineHeight}) / 2`);\r\n  const lineHeight = getLineHeight(baseLineHeight, props.theme.fontSizes.md);\r\n\r\n  return css`\r\n    margin: ${verticalMargin} 0;\r\n    line-height: ${lineHeight};\r\n  `;\r\n};\r\n\r\nexport const StyledSubNavItemText = styled.span.attrs<IStyledSubNavItemTextProps>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledSubNavItemTextProps>`\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: ${props => (props.isWrapped ? 'normal' : 'nowrap')};\r\n\r\n  ${props => sizeStyles(props)}\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledSubNavItemText.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css } from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledSubNavItem } from './StyledSubNavItem';\r\n\r\nconst PANEL_COMPONENT_ID = 'chrome.collapsible_sub_nav_item_panel';\r\n\r\ninterface IStyledSubNavPanelProps {\r\n  isHidden?: boolean;\r\n}\r\n\r\nconst hiddenStyling = css`\r\n  visibility: hidden;\r\n  max-height: 0 !important; /* stylelint-disable-line */\r\n  overflow: hidden;\r\n`;\r\n\r\n/** Accepts all `<div>` props */\r\nexport const StyledSubNavPanel = styled.div.attrs<IStyledSubNavPanelProps>({\r\n  'data-garden-id': PANEL_COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledSubNavPanelProps>`\r\n  /* stylelint-disable-next-line max-line-length */\r\n  transition: max-height 0.25s cubic-bezier(0.15, 0.85, 0.35, 1.2), 0.25s visibility 0s linear;\r\n  height: auto;\r\n  max-height: 100%;\r\n\r\n  ${props => props.isHidden && hiddenStyling}\r\n\r\n  ${StyledSubNavItem} {\r\n    /* stylelint-disable-next-line property-no-unknown */\r\n    padding-${props => (props.theme.rtl ? 'right' : 'left')}: ${props =>\r\n  `${props.theme.space.base * 5}px`};\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(PANEL_COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledSubNavPanel.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nexport const ChevronDownStrokeIcon = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"currentColor\" d=\"M12.688 5.61a.5.5 0 01.69.718l-.066.062-5 4a.5.5 0 01-.542.054l-.082-.054-5-4a.5.5 0 01.55-.83l.074.05L8 9.359l4.688-3.75z\"/>\r\n</svg>\r\n\r\n\r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nexport type PRODUCT = 'chat' | 'connect' | 'explore' | 'guide' | 'message' | 'support' | 'talk';\r\n\r\nexport const PRODUCTS: PRODUCT[] = [\r\n  'chat',\r\n  'connect',\r\n  'explore',\r\n  'guide',\r\n  'message',\r\n  'support',\r\n  'talk'\r\n];\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useContext } from 'react';\r\n\r\ninterface IBodyContext {\r\n  hasFooter: boolean;\r\n}\r\n\r\nexport const BodyContext = React.createContext<IBodyContext>({\r\n  hasFooter: true\r\n});\r\n\r\nexport const useBodyContext = () => {\r\n  return useContext(BodyContext);\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useContext } from 'react';\r\n\r\ninterface IChromeContext {\r\n  hue: string;\r\n  isLight?: boolean;\r\n  isDark?: boolean;\r\n}\r\n\r\nexport const ChromeContext = React.createContext<IChromeContext>({\r\n  hue: 'chromeHue'\r\n});\r\n\r\nexport const useChromeContext = () => {\r\n  return useContext(ChromeContext);\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { useEffect, useRef, MutableRefObject } from 'react';\r\nimport activeElement from 'dom-helpers/activeElement';\r\n\r\nexport interface IUseFocusableMountProp {\r\n  isMounted?: boolean;\r\n  focusOnMount?: boolean;\r\n  restoreFocus?: boolean;\r\n  targetRef: MutableRefObject<HTMLElement | null>;\r\n}\r\n\r\nexport function useFocusableMount({\r\n  isMounted,\r\n  focusOnMount,\r\n  restoreFocus,\r\n  targetRef\r\n}: IUseFocusableMountProp) {\r\n  const triggerRef = useRef<HTMLElement | Element | null>();\r\n\r\n  useEffect(() => {\r\n    if (isMounted && focusOnMount && targetRef.current) {\r\n      triggerRef.current = activeElement();\r\n      targetRef.current.focus();\r\n    }\r\n  }, [isMounted, focusOnMount, targetRef]);\r\n\r\n  useEffect(() => {\r\n    if (!isMounted && restoreFocus && triggerRef.current) {\r\n      (triggerRef.current as HTMLElement).focus();\r\n    }\r\n  }, [isMounted, restoreFocus, triggerRef]);\r\n}\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useContext } from 'react';\r\n\r\ninterface INavContext {\r\n  isExpanded: boolean;\r\n}\r\n\r\nexport const NavContext = React.createContext<INavContext>({\r\n  isExpanded: false\r\n});\r\n\r\nexport const useNavContext = () => {\r\n  return useContext(NavContext);\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { createContext, useContext } from 'react';\r\n\r\nexport interface ISheetContext {\r\n  titleId?: string;\r\n  descriptionId?: string;\r\n}\r\n\r\nexport const SheetContext = createContext<ISheetContext>({});\r\n\r\nexport const useSheetContext = () => {\r\n  return useContext(SheetContext);\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { Col, Grid, Row } from '@zendeskgarden/react-grid';\r\nimport { ColorSwatchDialog, IColorSwatchDialogProps } from '@zendeskgarden/react-colorpickers';\r\n\r\nexport const ColorSwatchDialogStory: Story<IColorSwatchDialogProps> = args => (\r\n  <Grid>\r\n    <Row style={{ height: 'calc(100vh - 80px)' }}>\r\n      <Col textAlign=\"center\" alignSelf=\"center\">\r\n        <ColorSwatchDialog {...args} />\r\n      </Col>\r\n    </Row>\r\n  </Grid>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { Col, Grid, Row } from '@zendeskgarden/react-grid';\r\nimport { ColorpickerDialog, IColorpickerDialogProps } from '@zendeskgarden/react-colorpickers';\r\n\r\nexport const ColorpickerDialogStory: Story<IColorpickerDialogProps> = args => (\r\n  <Grid>\r\n    <Row style={{ height: 'calc(100vh - 80px)' }}>\r\n      <Col textAlign=\"center\" alignSelf=\"center\">\r\n        <ColorpickerDialog {...args} />\r\n      </Col>\r\n    </Row>\r\n  </Grid>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { PALETTE } from '@zendeskgarden/react-theming';\r\nimport { ILabeledColor } from '@zendeskgarden/react-colorpickers';\r\n\r\ntype HUE = 'blue' | 'green' | 'red' | 'yellow';\r\ntype SHADE = 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800;\r\n\r\nconst toLabeledValues = (hue: HUE) => {\r\n  const colors = PALETTE[hue];\r\n  const shades = Object.keys(colors) as unknown as SHADE[];\r\n\r\n  return shades.map(shade => ({ label: `${hue}-${shade}`, value: colors[shade] }));\r\n};\r\n\r\nexport const COLOR_SWATCH_COLORS: ILabeledColor[][] = [\r\n  toLabeledValues('blue'),\r\n  toLabeledValues('green'),\r\n  toLabeledValues('red'),\r\n  toLabeledValues('yellow')\r\n];\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, {\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  Children,\r\n  cloneElement,\r\n  forwardRef,\r\n  ReactElement,\r\n  HTMLAttributes\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Modifier } from 'react-popper';\r\nimport { Button } from '@zendeskgarden/react-buttons';\r\nimport { GARDEN_PLACEMENT } from '@zendeskgarden/react-modals';\r\nimport { composeEventHandlers } from '@zendeskgarden/container-utilities';\r\nimport { ColorSwatch, IColorSwatchProps } from '../ColorSwatch';\r\nimport {\r\n  StyledButton,\r\n  StyledButtonPreview,\r\n  StyledTooltipModal,\r\n  StyledTooltipBody\r\n} from '../../styled';\r\n\r\ninterface IDialogChanges {\r\n  isOpen?: boolean;\r\n}\r\n\r\nexport interface IColorSwatchDialogProps extends IColorSwatchProps {\r\n  /** Adjusts the placement of the color dialog */\r\n  placement?: GARDEN_PLACEMENT;\r\n  /** Disables the color dialog button */\r\n  disabled?: boolean;\r\n  /** Modifies [Popper instance](https://popper.js.org/docs/v2/modifiers/) to customize positioning logic */\r\n  popperModifiers?: Partial<Modifier<any, any>>[];\r\n  /** Sets the `z-index` of the color dialog */\r\n  zIndex?: number;\r\n  /** Adds an arrow to the color dialog */\r\n  hasArrow?: boolean;\r\n  /** Animates the color dialog */\r\n  isAnimated?: boolean;\r\n  /** Applies inset `box-shadow` styling on focus */\r\n  focusInset?: boolean;\r\n  /** Passes HTML attributes to the color dialog button element */\r\n  buttonProps?: HTMLAttributes<HTMLButtonElement>;\r\n  /** Opens the dialog in a controlled color swatch dialog */\r\n  isOpen?: boolean;\r\n  /**\r\n   * Handles dialog changes\r\n   *\r\n   * @param {Object} changes The changed dialog state\r\n   */\r\n  onDialogChange?: (changes: IDialogChanges) => void;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const ColorSwatchDialog = forwardRef<\r\n  HTMLDivElement,\r\n  IColorSwatchDialogProps & Omit<HTMLAttributes<HTMLDivElement>, 'onChange' | 'onSelect'>\r\n>(\r\n  (\r\n    {\r\n      colors,\r\n      rowIndex,\r\n      colIndex,\r\n      selectedRowIndex,\r\n      selectedColIndex,\r\n      defaultRowIndex,\r\n      defaultColIndex,\r\n      defaultSelectedRowIndex,\r\n      defaultSelectedColIndex,\r\n      placement,\r\n      onChange,\r\n      onSelect,\r\n      hasArrow,\r\n      isAnimated,\r\n      popperModifiers,\r\n      zIndex,\r\n      isOpen,\r\n      focusInset,\r\n      disabled,\r\n      buttonProps,\r\n      onDialogChange,\r\n      children,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const controlledFocus =\r\n      rowIndex !== null && colIndex !== null && rowIndex !== undefined && colIndex !== undefined;\r\n    const controlledSelect =\r\n      selectedRowIndex !== null &&\r\n      selectedColIndex !== null &&\r\n      selectedRowIndex !== undefined &&\r\n      selectedColIndex !== undefined;\r\n    const isControlled = controlledFocus || controlledSelect;\r\n    const isDialogControlled = isOpen !== undefined && isOpen !== null;\r\n    const buttonRef = useRef<HTMLButtonElement>(null);\r\n    const colorSwatchRef = useRef<HTMLTableElement>(null);\r\n    const [referenceElement, setReferenceElement] = useState<HTMLButtonElement | null>();\r\n    const [uncontrolledSelectedRowIndex, setUncontrolledSelectedRowIndex] = useState(\r\n      defaultSelectedRowIndex || 0\r\n    );\r\n    const [uncontrolledSelectedColIndex, setUncontrolledSelectedColIndex] = useState(\r\n      defaultSelectedColIndex || 0\r\n    );\r\n    const [uncontrolledRowIndex, setUncontrolledRowIndex] = useState(defaultRowIndex || 0);\r\n    const [uncontrolledColIndex, setUncontrolledColIndex] = useState(defaultColIndex || 0);\r\n\r\n    useEffect(() => {\r\n      if (isDialogControlled) {\r\n        if (isOpen) {\r\n          setReferenceElement(buttonRef.current);\r\n        } else {\r\n          setReferenceElement(null);\r\n        }\r\n      }\r\n    }, [isOpen, isDialogControlled]);\r\n\r\n    let uncontrolledSelectedColor;\r\n    let controlledSelectedColor;\r\n\r\n    if (uncontrolledSelectedRowIndex > -1 && uncontrolledSelectedColIndex > -1) {\r\n      uncontrolledSelectedColor =\r\n        colors[uncontrolledSelectedRowIndex][uncontrolledSelectedColIndex];\r\n    }\r\n\r\n    if (\r\n      selectedRowIndex !== undefined &&\r\n      selectedColIndex !== undefined &&\r\n      selectedRowIndex > -1 &&\r\n      selectedColIndex > -1\r\n    ) {\r\n      controlledSelectedColor = colors[selectedRowIndex][selectedColIndex];\r\n    }\r\n\r\n    const openDialog = () => {\r\n      setReferenceElement(buttonRef.current);\r\n      onDialogChange && onDialogChange({ isOpen: true });\r\n    };\r\n\r\n    const closeDialog = () => {\r\n      setUncontrolledRowIndex(uncontrolledSelectedRowIndex);\r\n      setUncontrolledColIndex(uncontrolledSelectedColIndex);\r\n      setReferenceElement(null);\r\n      onDialogChange && onDialogChange({ isOpen: false });\r\n    };\r\n\r\n    const onClick = composeEventHandlers(props.onClick, () => {\r\n      if (referenceElement) {\r\n        closeDialog();\r\n      } else {\r\n        openDialog();\r\n      }\r\n    });\r\n\r\n    useEffect(() => {\r\n      if (referenceElement && colorSwatchRef.current) {\r\n        const focusableButton =\r\n          colorSwatchRef.current.querySelector<HTMLButtonElement>('[tabindex=\"0\"]');\r\n        const selectedCell = colorSwatchRef.current.querySelector('[aria-selected=\"true\"]');\r\n\r\n        if (selectedCell) {\r\n          (selectedCell.children[0] as HTMLButtonElement).focus();\r\n        } else {\r\n          focusableButton?.focus();\r\n        }\r\n      }\r\n    }, [referenceElement]);\r\n\r\n    return (\r\n      <>\r\n        {children ? (\r\n          cloneElement(Children.only(children as ReactElement), {\r\n            onClick,\r\n            ref: buttonRef\r\n          })\r\n        ) : (\r\n          <StyledButton\r\n            disabled={disabled}\r\n            focusInset={focusInset}\r\n            ref={buttonRef}\r\n            onClick={onClick}\r\n            {...buttonProps}\r\n          >\r\n            <StyledButtonPreview\r\n              backgroundColor={\r\n                isControlled ? controlledSelectedColor?.value : uncontrolledSelectedColor?.value\r\n              }\r\n            />\r\n            {/* eslint-disable-next-line no-eq-null, eqeqeq */}\r\n            <Button.EndIcon isRotated={referenceElement != null}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"currentColor\" d=\"M12.688 5.61a.5.5 0 01.69.718l-.066.062-5 4a.5.5 0 01-.542.054l-.082-.054-5-4a.5.5 0 01.55-.83l.074.05L8 9.359l4.688-3.75z\"/>\r\n</svg>\r\n            </Button.EndIcon>\r\n          </StyledButton>\r\n        )}\r\n        <StyledTooltipModal\r\n          ref={ref}\r\n          zIndex={zIndex}\r\n          hasArrow={hasArrow}\r\n          focusOnMount={false}\r\n          placement={placement}\r\n          isAnimated={isAnimated}\r\n          popperModifiers={popperModifiers}\r\n          referenceElement={referenceElement}\r\n          onClose={closeDialog}\r\n          {...props}\r\n        >\r\n          <StyledTooltipBody>\r\n            <ColorSwatch\r\n              colors={colors}\r\n              ref={colorSwatchRef}\r\n              rowIndex={rowIndex}\r\n              colIndex={colIndex}\r\n              selectedRowIndex={selectedRowIndex}\r\n              selectedColIndex={selectedColIndex}\r\n              defaultRowIndex={uncontrolledRowIndex}\r\n              defaultColIndex={uncontrolledColIndex}\r\n              defaultSelectedRowIndex={uncontrolledSelectedRowIndex}\r\n              defaultSelectedColIndex={uncontrolledSelectedColIndex}\r\n              onChange={(rowIdx, colIdx) => {\r\n                if (isControlled === false) {\r\n                  setUncontrolledRowIndex(rowIdx);\r\n                  setUncontrolledColIndex(colIdx);\r\n                }\r\n                onChange && onChange(rowIdx, colIdx);\r\n              }}\r\n              onSelect={(rowIdx, colIdx) => {\r\n                if (isControlled === false) {\r\n                  setUncontrolledSelectedRowIndex(rowIdx);\r\n                  setUncontrolledSelectedColIndex(colIdx);\r\n                }\r\n                onSelect && onSelect(rowIdx, colIdx);\r\n              }}\r\n            />\r\n          </StyledTooltipBody>\r\n        </StyledTooltipModal>\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nColorSwatchDialog.propTypes = {\r\n  placement: PropTypes.oneOf([\r\n    'auto',\r\n    'top',\r\n    'top-start',\r\n    'top-end',\r\n    'end',\r\n    'end-top',\r\n    'end-bottom',\r\n    'bottom',\r\n    'bottom-start',\r\n    'bottom-end',\r\n    'start',\r\n    'start-top',\r\n    'start-bottom'\r\n  ]),\r\n  onChange: PropTypes.func,\r\n  onDialogChange: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n  buttonProps: PropTypes.object\r\n};\r\n\r\nColorSwatchDialog.defaultProps = {\r\n  placement: 'bottom-start',\r\n  isAnimated: true,\r\n  zIndex: 1000,\r\n  hasArrow: false /* TooltipModal override */\r\n};\r\n\r\nColorSwatchDialog.displayName = 'ColorSwatchDialog';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { forwardRef, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeContext } from 'styled-components';\r\nimport { Tooltip } from '@zendeskgarden/react-tooltips';\r\nimport { useGrid } from '@zendeskgarden/container-grid';\r\nimport { useId } from '@zendeskgarden/container-utilities';\r\nimport { StyledSwatchButton, StyledIcon, StyledCell, StyledColorSwatch } from '../../styled';\r\n\r\nexport interface ILabeledColor {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\nexport interface IColorSwatchProps {\r\n  /** Sets the two-dimension array of labeled HEX and RGB/A string colors */\r\n  colors: ILabeledColor[][];\r\n  /** Sets the focused row index in a controlled color swatch */\r\n  rowIndex?: number;\r\n  /** Sets the focused column index in a controlled color swatch.\r\n   * Can be set to `-1` to clear the row focus.\r\n   */\r\n  colIndex?: number;\r\n  /** Sets the selected row index in a controlled color swatch.\r\n   * Can be set to `-1` to clear the column focus.\r\n   */\r\n  selectedRowIndex?: number;\r\n  /** Sets the selected column index in a controlled color swatch.\r\n   * Can be set to `-1` to clear the row selection.\r\n   */\r\n  selectedColIndex?: number;\r\n  /** Sets the default focused row index in an uncontrolled color swatch.\r\n   * Can be set to `-1` to clear the column selection.\r\n   */\r\n  defaultRowIndex?: number;\r\n  /** Sets the default focused column index in an uncontrolled color swatch */\r\n  defaultColIndex?: number;\r\n  /** Sets the default selected row index in an uncontrolled color swatch */\r\n  defaultSelectedRowIndex?: number;\r\n  /** Sets the default selected column index in an uncontrolled color swatch */\r\n  defaultSelectedColIndex?: number;\r\n  /** Handles color swatch changes */\r\n  onChange?: (rowIndex: number, colIndex: number) => void;\r\n  /** Handles color swatch select event */\r\n  onSelect?: (rowIndex: number, colIndex: number) => void;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLTableElement>\r\n */\r\nexport const ColorSwatch = forwardRef<HTMLTableElement, IColorSwatchProps>(\r\n  ({ colors, ...props }, ref) => {\r\n    const { rtl } = useContext(ThemeContext);\r\n    const { getGridCellProps } = useGrid({\r\n      rtl,\r\n      matrix: colors,\r\n      selection: true,\r\n      wrap: true,\r\n      idPrefix: useId(),\r\n      ...props\r\n    });\r\n\r\n    return (\r\n      <StyledColorSwatch ref={ref}>\r\n        <tbody>\r\n          {colors.map((row: ILabeledColor[], rowIdx: number) => (\r\n            <tr key={row[0].value}>\r\n              {row.map((color: ILabeledColor, colIdx: number) => {\r\n                const { label, value } = color;\r\n                const { 'aria-selected': ariaSelected, ...other } = getGridCellProps({\r\n                  colIdx,\r\n                  rowIdx,\r\n                  type: 'button',\r\n                  role: undefined\r\n                });\r\n\r\n                return (\r\n                  <StyledCell key={value} aria-selected={ariaSelected}>\r\n                    <Tooltip content={label}>\r\n                      <StyledSwatchButton\r\n                        backgroundColor={value}\r\n                        aria-pressed={ariaSelected}\r\n                        {...other}\r\n                      >\r\n                        <StyledIcon color={value} selected={ariaSelected}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 9l3 3 7-7\"/>\r\n</svg>\r\n                        </StyledIcon>\r\n                      </StyledSwatchButton>\r\n                    </Tooltip>\r\n                  </StyledCell>\r\n                );\r\n              })}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </StyledColorSwatch>\r\n    );\r\n  }\r\n);\r\n\r\nColorSwatch.displayName = 'ColorSwatch';\r\n\r\nColorSwatch.propTypes = {\r\n  colors: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n  rowIndex: PropTypes.number,\r\n  colIndex: PropTypes.number,\r\n  selectedRowIndex: PropTypes.number,\r\n  selectedColIndex: PropTypes.number,\r\n  defaultRowIndex: PropTypes.number,\r\n  defaultColIndex: PropTypes.number,\r\n  defaultSelectedRowIndex: PropTypes.number,\r\n  defaultSelectedColIndex: PropTypes.number,\r\n  onChange: PropTypes.func,\r\n  onSelect: PropTypes.func\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, {\r\n  useState,\r\n  useRef,\r\n  useEffect,\r\n  Children,\r\n  cloneElement,\r\n  forwardRef,\r\n  ReactElement,\r\n  HTMLAttributes\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Modifier } from 'react-popper';\r\nimport { Button } from '@zendeskgarden/react-buttons';\r\nimport { GARDEN_PLACEMENT } from '@zendeskgarden/react-modals';\r\nimport { composeEventHandlers } from '@zendeskgarden/container-utilities';\r\nimport { Colorpicker, IColorpickerProps } from '../Colorpicker';\r\nimport { IColor } from '../../utils/types';\r\nimport {\r\n  StyledButton,\r\n  StyledButtonPreview,\r\n  StyledTooltipModal,\r\n  StyledTooltipBody\r\n} from '../../styled';\r\n\r\ninterface IDialogChanges {\r\n  isOpen?: boolean;\r\n}\r\n\r\nexport interface IColorpickerDialogProps extends IColorpickerProps {\r\n  /**\r\n   * Handles close actions. Can be triggered from the backdrop.\r\n   *\r\n   * @param {Object} color A color picker state\r\n   */\r\n  onClose?: (color: IColor) => void;\r\n  /** Adjusts the placement of the color dialog */\r\n  placement?: GARDEN_PLACEMENT;\r\n  /** Disables the color dialog button */\r\n  disabled?: boolean;\r\n  /**\r\n   * Modifies [Popper instance](https://popper.js.org/docs/v2/modifiers/) to customize positioning logic\r\n   */\r\n  popperModifiers?: Partial<Modifier<any, any>>[];\r\n  /**\r\n   * Sets the `z-index` of the color dialog\r\n   */\r\n  zIndex?: number;\r\n  /**\r\n   * Adds an arrow to the color dialog\r\n   */\r\n  hasArrow?: boolean;\r\n  /**\r\n   * Animates the color dialog\r\n   */\r\n  isAnimated?: boolean;\r\n  /**\r\n   * Opens the dialog in a controlled color picker dialog\r\n   */\r\n  isOpen?: boolean;\r\n  /**\r\n   * Applies inset `box-shadow` styling on focus\r\n   */\r\n  focusInset?: boolean;\r\n  /**\r\n   * Passes HTML attributes to the color dialog button element\r\n   */\r\n  buttonProps?: HTMLAttributes<HTMLButtonElement>;\r\n  /**\r\n   * Handles dialog changes\r\n   *\r\n   * @param {Object} changes The changed dialog state\r\n   */\r\n  onDialogChange?: (changes: IDialogChanges) => void;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const ColorpickerDialog = forwardRef<\r\n  HTMLDivElement,\r\n  IColorpickerDialogProps & Omit<HTMLAttributes<HTMLDivElement>, 'color' | 'onChange'>\r\n>(\r\n  (\r\n    {\r\n      color,\r\n      defaultColor,\r\n      placement,\r\n      onChange,\r\n      onClose,\r\n      labels,\r\n      hasArrow,\r\n      isAnimated,\r\n      isOpaque,\r\n      isOpen,\r\n      popperModifiers,\r\n      zIndex,\r\n      focusInset,\r\n      disabled,\r\n      buttonProps,\r\n      onDialogChange,\r\n      children,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const isControlled = color !== null && color !== undefined;\r\n    const isDialogControlled = isOpen !== undefined && isOpen !== null;\r\n    const buttonRef = useRef<HTMLButtonElement>(null);\r\n    const colorPickerRef = useRef<HTMLDivElement>(null);\r\n    const [referenceElement, setReferenceElement] = useState<HTMLButtonElement | null>();\r\n    const [uncontrolledColor, setUncontrolledColor] = useState<string | IColor | undefined>(\r\n      defaultColor\r\n    );\r\n\r\n    const openDialog = () => {\r\n      setReferenceElement(buttonRef.current);\r\n      onDialogChange && onDialogChange({ isOpen: true });\r\n    };\r\n\r\n    const closeDialog = () => {\r\n      setReferenceElement(null);\r\n      onDialogChange && onDialogChange({ isOpen: false });\r\n    };\r\n\r\n    const onClick = composeEventHandlers(props.onClick, () => {\r\n      if (referenceElement) {\r\n        closeDialog();\r\n      } else {\r\n        openDialog();\r\n      }\r\n    });\r\n\r\n    useEffect(() => {\r\n      if (isDialogControlled) {\r\n        if (isOpen) {\r\n          setReferenceElement(buttonRef.current);\r\n        } else {\r\n          setReferenceElement(null);\r\n        }\r\n      }\r\n    }, [isOpen, isDialogControlled]);\r\n\r\n    return (\r\n      <>\r\n        {children ? (\r\n          cloneElement(Children.only(children as ReactElement), {\r\n            onClick,\r\n            ref: buttonRef\r\n          })\r\n        ) : (\r\n          <StyledButton\r\n            disabled={disabled}\r\n            focusInset={focusInset}\r\n            ref={buttonRef}\r\n            onClick={onClick}\r\n            {...buttonProps}\r\n          >\r\n            <StyledButtonPreview backgroundColor={isControlled ? color : uncontrolledColor} />\r\n            {/* eslint-disable-next-line no-eq-null, eqeqeq */}\r\n            <Button.EndIcon isRotated={referenceElement != null}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"currentColor\" d=\"M12.688 5.61a.5.5 0 01.69.718l-.066.062-5 4a.5.5 0 01-.542.054l-.082-.054-5-4a.5.5 0 01.55-.83l.074.05L8 9.359l4.688-3.75z\"/>\r\n</svg>\r\n            </Button.EndIcon>\r\n          </StyledButton>\r\n        )}\r\n        <StyledTooltipModal\r\n          ref={ref}\r\n          hasArrow={hasArrow}\r\n          popperModifiers={popperModifiers}\r\n          zIndex={zIndex}\r\n          isAnimated={isAnimated}\r\n          isOpaque={isOpaque}\r\n          focusOnMount={false}\r\n          placement={placement}\r\n          referenceElement={referenceElement}\r\n          onClose={() => {\r\n            closeDialog();\r\n            onClose && onClose(isControlled ? (color as IColor) : (uncontrolledColor as IColor));\r\n          }}\r\n          {...props}\r\n        >\r\n          <StyledTooltipBody>\r\n            <Colorpicker\r\n              autofocus\r\n              color={color}\r\n              isOpaque={isOpaque}\r\n              labels={labels}\r\n              ref={colorPickerRef}\r\n              defaultColor={uncontrolledColor}\r\n              onChange={isControlled ? onChange : setUncontrolledColor}\r\n            />\r\n          </StyledTooltipBody>\r\n        </StyledTooltipModal>\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nColorpickerDialog.propTypes = {\r\n  placement: PropTypes.oneOf([\r\n    'auto',\r\n    'top',\r\n    'top-start',\r\n    'top-end',\r\n    'end',\r\n    'end-top',\r\n    'end-bottom',\r\n    'bottom',\r\n    'bottom-start',\r\n    'bottom-end',\r\n    'start',\r\n    'start-top',\r\n    'start-bottom'\r\n  ]),\r\n  onClose: PropTypes.func,\r\n  onChange: PropTypes.func,\r\n  onDialogChange: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n  labels: PropTypes.object,\r\n  color: PropTypes.oneOfType<any>([PropTypes.object, PropTypes.string]),\r\n  defaultColor: PropTypes.oneOfType<any>([PropTypes.object, PropTypes.string]),\r\n  buttonProps: PropTypes.object\r\n};\r\n\r\nColorpickerDialog.defaultProps = {\r\n  placement: 'bottom-start',\r\n  isAnimated: true,\r\n  zIndex: 1000,\r\n  hasArrow: false /* TooltipModal override */\r\n};\r\n\r\nColorpickerDialog.displayName = 'ColorpickerDialog';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useRef, useState, useCallback, useContext, useEffect, useMemo } from 'react';\r\nimport throttle from 'lodash.throttle';\r\nimport { ThemeContext } from 'styled-components';\r\nimport { IHSVColor } from '../../utils/types';\r\nimport { hslToHsv } from '../../utils/conversion';\r\nimport { getNextHsv, getThumbPosition } from '../../utils/saturation';\r\nimport { StyledColorWell, StyledColorWellThumb } from '../../styled';\r\n\r\ninterface IColorWellProps {\r\n  hue: number;\r\n  saturation: number;\r\n  lightness: number;\r\n  onChange?: (hsv: IHSVColor, event: MouseEvent) => void;\r\n}\r\n\r\nexport const ColorWell: React.FC<IColorWellProps> = React.memo(\r\n  ({ hue, saturation, lightness, onChange }) => {\r\n    const { rtl } = useContext(ThemeContext);\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const hsv = hslToHsv(hue, saturation, lightness);\r\n    const mouseActiveRef = useRef(false);\r\n\r\n    // State for thumb position when change come from mouse activity on the color well\r\n    const [x, setX] = useState(0);\r\n    const [y, setY] = useState(0);\r\n    const { topFromMouse, leftFromMouse } = getThumbPosition(x, y, rtl, containerRef);\r\n\r\n    // State for thumb position when change come from saturation and lightness props without mouse activity\r\n    const [topPosition, setTopPosition] = useState(0);\r\n    const [leftPosition, setLeftPosition] = useState(0);\r\n\r\n    useEffect(() => {\r\n      setTopPosition(100 - hsv.v);\r\n      setLeftPosition(rtl ? 100 - hsv.s : hsv.s);\r\n    }, [hsv.s, hsv.v, rtl]);\r\n\r\n    const throttledChange = useMemo(() => {\r\n      return throttle((e: MouseEvent) => {\r\n        if (containerRef.current) {\r\n          const nextHsv = getNextHsv(e, hue, containerRef.current, rtl);\r\n\r\n          onChange && onChange(nextHsv, e);\r\n        }\r\n      }, 50);\r\n    }, [hue, rtl, onChange]);\r\n\r\n    const handleMouseMove = useCallback(\r\n      (e: MouseEvent) => {\r\n        mouseActiveRef.current = true;\r\n        setX(e.pageX);\r\n        setY(e.pageY);\r\n        throttledChange(e);\r\n      },\r\n      [throttledChange]\r\n    );\r\n\r\n    const handleMouseUp = useCallback(() => {\r\n      mouseActiveRef.current = true;\r\n      setTimeout(() => {\r\n        mouseActiveRef.current = false;\r\n      });\r\n      throttledChange.cancel();\r\n      window.removeEventListener('mousemove', handleMouseMove);\r\n      window.removeEventListener('mouseup', handleMouseUp);\r\n    }, [throttledChange, handleMouseMove]);\r\n\r\n    const handleMouseDown = useCallback(\r\n      (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n        mouseActiveRef.current = true;\r\n        e.persist();\r\n        handleMouseMove(e as any);\r\n        throttledChange(e as any);\r\n        window.addEventListener('mousemove', handleMouseMove);\r\n        window.addEventListener('mouseup', handleMouseUp);\r\n      },\r\n      [throttledChange, handleMouseMove, handleMouseUp]\r\n    );\r\n\r\n    useEffect(() => {\r\n      return () => {\r\n        throttledChange.cancel();\r\n      };\r\n    }, [throttledChange]);\r\n\r\n    return (\r\n      <StyledColorWell\r\n        hue={hue}\r\n        ref={containerRef}\r\n        role=\"presentation\"\r\n        onMouseDown={handleMouseDown}\r\n      >\r\n        <StyledColorWellThumb\r\n          top={mouseActiveRef.current ? topFromMouse : topPosition}\r\n          left={mouseActiveRef.current ? leftFromMouse : leftPosition}\r\n        />\r\n      </StyledColorWell>\r\n    );\r\n  }\r\n);\r\n\r\nColorWell.displayName = 'ColorWell';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, {\r\n  useEffect,\r\n  useCallback,\r\n  useReducer,\r\n  forwardRef,\r\n  HTMLAttributes,\r\n  useMemo,\r\n  useRef\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Field, Label } from '@zendeskgarden/react-forms';\r\nimport { ColorWell } from './ColorWell';\r\nimport {\r\n  StyledHueRange,\r\n  StyledSliderGroup,\r\n  StyledLabel,\r\n  StyledInput,\r\n  StyledAlphaRange,\r\n  StyledSliders,\r\n  StyledHexField,\r\n  StyledRGBAField,\r\n  StyledInputGroup,\r\n  StyledPreview,\r\n  StyledColorPicker\r\n} from '../../styled';\r\nimport { areColorsEqual, convertStringToColor, getInitialState, reducer } from './reducer';\r\nimport { IColor, IHSVColor } from '../../utils/types';\r\n\r\nexport interface IColorpickerProps\r\n  extends Omit<HTMLAttributes<HTMLDivElement>, 'color' | 'onChange'> {\r\n  /** Sets the color for an uncontrolled color picker */\r\n  defaultColor?: string | IColor;\r\n  /** Sets the color for a controlled color picker */\r\n  color?: string | IColor;\r\n  /** Hides alpha transparency fields */\r\n  isOpaque?: boolean;\r\n  /**\r\n   * Handles color picker changes\r\n   *\r\n   * @param {Object} color A color picker state\r\n   */\r\n  onChange?: (color: IColor) => void;\r\n  /** Replaces label text within the color picker */\r\n  labels?: {\r\n    hueSlider?: string;\r\n    alphaSlider?: string;\r\n    hex?: string;\r\n    red?: string;\r\n    green?: string;\r\n    blue?: string;\r\n    alpha?: string;\r\n  };\r\n  /** @ignore */\r\n  autofocus?: boolean;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Colorpicker = forwardRef<HTMLDivElement, IColorpickerProps>(\r\n  ({ color, defaultColor, isOpaque, labels = {}, autofocus, onChange, ...props }, ref) => {\r\n    const [state, dispatch] = useReducer(reducer, getInitialState(color || defaultColor));\r\n    const previousComputedColorRef = useRef<IColor>(state.color);\r\n    const previousStateColorRef = useRef<IColor>(state.color);\r\n\r\n    const computedColor = useMemo(() => {\r\n      let retVal = state.color;\r\n\r\n      if (color) {\r\n        if (typeof color === 'string') {\r\n          const convertedColor = convertStringToColor(color);\r\n\r\n          if (convertedColor) {\r\n            retVal = convertedColor;\r\n          }\r\n        } else {\r\n          retVal = color;\r\n        }\r\n      }\r\n\r\n      if (isOpaque) {\r\n        retVal.alpha = 100;\r\n      }\r\n\r\n      return retVal;\r\n    }, [color, isOpaque, state.color]);\r\n\r\n    useEffect(() => {\r\n      if (\r\n        !areColorsEqual(previousStateColorRef.current, state.color) &&\r\n        !areColorsEqual(color, state.color)\r\n      ) {\r\n        onChange && onChange(state.color);\r\n      }\r\n\r\n      previousStateColorRef.current = state.color;\r\n    }, [color, onChange, state.color]);\r\n\r\n    useEffect(() => {\r\n      if (!areColorsEqual(computedColor, previousComputedColorRef.current)) {\r\n        dispatch({ type: 'RESET_COLOR', payload: computedColor });\r\n      }\r\n\r\n      previousComputedColorRef.current = computedColor;\r\n    }, [computedColor]);\r\n\r\n    const handleColorWellChange = useCallback((hsv: IHSVColor) => {\r\n      dispatch({\r\n        type: 'SATURATION_CHANGE',\r\n        payload: hsv\r\n      });\r\n    }, []);\r\n\r\n    const handleHueChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n      dispatch({ type: 'HUE_CHANGE', payload: e.target.value });\r\n    }, []);\r\n\r\n    const handleAlphaSliderChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n      dispatch({ type: 'ALPHA_SLIDER_CHANGE', payload: e.target.value });\r\n    }, []);\r\n\r\n    const handleHexChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n      dispatch({ type: 'HEX_CHANGE', payload: e.target.value });\r\n    }, []);\r\n\r\n    const handleRedChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n      dispatch({ type: 'RED_CHANGE', payload: e.target.value });\r\n    }, []);\r\n\r\n    const handleGreenChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n      dispatch({ type: 'GREEN_CHANGE', payload: e.target.value });\r\n    }, []);\r\n\r\n    const handleBlueChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n      dispatch({ type: 'BLUE_CHANGE', payload: e.target.value });\r\n    }, []);\r\n\r\n    const handleAlphaChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n      dispatch({ type: 'ALPHA_CHANGE', payload: e.target.value });\r\n    }, []);\r\n\r\n    const handleBlur = useCallback(() => {\r\n      dispatch({ type: 'RESET_COLOR', payload: computedColor });\r\n    }, [computedColor]);\r\n\r\n    return (\r\n      <StyledColorPicker ref={ref} isOpaque={isOpaque} {...props}>\r\n        <ColorWell\r\n          hue={computedColor.hue}\r\n          saturation={computedColor.saturation}\r\n          lightness={computedColor.lightness}\r\n          onChange={handleColorWellChange}\r\n        />\r\n        <StyledSliderGroup>\r\n          <StyledPreview\r\n            red={computedColor.red}\r\n            green={computedColor.green}\r\n            blue={computedColor.blue}\r\n            alpha={computedColor.alpha}\r\n            isOpaque={isOpaque}\r\n          />\r\n          <StyledSliders isOpaque={isOpaque}>\r\n            <Field>\r\n              <Label hidden>{labels.hueSlider || 'Hue slider'}</Label>\r\n              <StyledHueRange\r\n                step={1}\r\n                max={360}\r\n                value={computedColor.hue}\r\n                isOpaque={isOpaque}\r\n                onChange={handleHueChange}\r\n              />\r\n            </Field>\r\n            {!isOpaque && (\r\n              <Field>\r\n                <Label hidden>{labels.alphaSlider || 'Alpha slider'}</Label>\r\n                <StyledAlphaRange\r\n                  max={1}\r\n                  step={0.01}\r\n                  value={computedColor.alpha / 100}\r\n                  onChange={handleAlphaSliderChange}\r\n                  red={computedColor.red}\r\n                  green={computedColor.green}\r\n                  blue={computedColor.blue}\r\n                />\r\n              </Field>\r\n            )}\r\n          </StyledSliders>\r\n        </StyledSliderGroup>\r\n        <StyledInputGroup>\r\n          <StyledHexField>\r\n            <StyledLabel isRegular>{labels.hex || 'Hex'}</StyledLabel>\r\n            <StyledInput\r\n              isCompact\r\n              maxLength={7}\r\n              value={state.hexInput}\r\n              /* eslint-disable jsx-a11y/no-autofocus */\r\n              autoFocus={autofocus}\r\n              spellCheck={false}\r\n              onBlur={handleBlur}\r\n              onChange={handleHexChange}\r\n            />\r\n          </StyledHexField>\r\n          <StyledRGBAField>\r\n            <StyledLabel isRegular>{labels.red || 'R'}</StyledLabel>\r\n            <StyledInput\r\n              isCompact\r\n              type=\"number\"\r\n              min=\"0\"\r\n              max=\"255\"\r\n              maxLength={3}\r\n              value={state.redInput}\r\n              onBlur={handleBlur}\r\n              onChange={handleRedChange}\r\n            />\r\n          </StyledRGBAField>\r\n          <StyledRGBAField>\r\n            <StyledLabel isRegular>{labels.green || 'G'}</StyledLabel>\r\n            <StyledInput\r\n              isCompact\r\n              type=\"number\"\r\n              min=\"0\"\r\n              max=\"255\"\r\n              maxLength={3}\r\n              value={state.greenInput}\r\n              onBlur={handleBlur}\r\n              onChange={handleGreenChange}\r\n            />\r\n          </StyledRGBAField>\r\n          <StyledRGBAField>\r\n            <StyledLabel isRegular>{labels.blue || 'B'}</StyledLabel>\r\n            <StyledInput\r\n              isCompact\r\n              type=\"number\"\r\n              min=\"0\"\r\n              max=\"255\"\r\n              maxLength={3}\r\n              value={state.blueInput}\r\n              onBlur={handleBlur}\r\n              onChange={handleBlueChange}\r\n            />\r\n          </StyledRGBAField>\r\n          {!isOpaque && (\r\n            <StyledRGBAField>\r\n              <StyledLabel isRegular>{labels.alpha || 'A'}</StyledLabel>\r\n              <StyledInput\r\n                isCompact\r\n                type=\"number\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                value={state.alphaInput}\r\n                onBlur={handleBlur}\r\n                onChange={handleAlphaChange}\r\n              />\r\n            </StyledRGBAField>\r\n          )}\r\n        </StyledInputGroup>\r\n      </StyledColorPicker>\r\n    );\r\n  }\r\n);\r\n\r\nColorpicker.defaultProps = {\r\n  defaultColor: '#fff'\r\n};\r\n\r\nColorpicker.displayName = 'Colorpicker';\r\n\r\nColorpicker.propTypes = {\r\n  color: PropTypes.oneOfType<any>([PropTypes.object, PropTypes.string]),\r\n  isOpaque: PropTypes.bool,\r\n  onChange: PropTypes.func,\r\n  labels: PropTypes.object,\r\n  defaultColor: PropTypes.oneOfType<any>([PropTypes.object, PropTypes.string])\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport isEqual from 'lodash.isequal';\r\nimport { parseToHsl, parseToRgb, rgb as rgbObjectToHex, hsl as hslObjectToHex } from 'polished';\r\nimport { hsvToHsl } from '../../utils/conversion';\r\nimport { isValidHex } from '../../utils/validation';\r\nimport { IColor, IRGBColor, IHSVColor } from '../../utils/types';\r\n\r\ntype ColorPickerActionTypes =\r\n  | { type: 'SATURATION_CHANGE'; payload: IHSVColor }\r\n  | { type: 'HUE_CHANGE'; payload: string }\r\n  | { type: 'ALPHA_SLIDER_CHANGE'; payload: string }\r\n  | { type: 'HEX_CHANGE'; payload: string }\r\n  | { type: 'RED_CHANGE'; payload: string }\r\n  | { type: 'GREEN_CHANGE'; payload: string }\r\n  | { type: 'BLUE_CHANGE'; payload: string }\r\n  | { type: 'ALPHA_CHANGE'; payload: string }\r\n  | { type: 'RESET_COLOR'; payload: IColor };\r\n\r\ninterface IColorPickerState {\r\n  color: IColor;\r\n  hexInput: string;\r\n  redInput: string;\r\n  blueInput: string;\r\n  greenInput: string;\r\n  alphaInput: string;\r\n}\r\n\r\nexport function convertStringToColor(colorString: string): IColor | undefined {\r\n  if (colorString.includes('#') && !isValidHex(colorString)) {\r\n    return undefined;\r\n  }\r\n\r\n  const { hue, saturation, lightness } = parseToHsl(colorString);\r\n  const { red, green, blue, alpha } = parseToRgb(colorString) as IRGBColor;\r\n  const computedAlpha = alpha === undefined ? 100 : alpha * 100;\r\n  const computedHex = rgbObjectToHex({ red, green, blue });\r\n\r\n  return {\r\n    hue,\r\n    saturation: saturation * 100,\r\n    lightness: lightness * 100,\r\n    red,\r\n    green,\r\n    blue,\r\n    alpha: computedAlpha,\r\n    hex: computedHex\r\n  };\r\n}\r\n\r\nexport const areColorsEqual = (a: IColor | string | undefined, b: IColor | string | undefined) => {\r\n  if (a === undefined || b === undefined) {\r\n    return false;\r\n  }\r\n\r\n  const colorA = typeof a === 'string' ? convertStringToColor(a) : a;\r\n  const colorB = typeof b === 'string' ? convertStringToColor(b) : b;\r\n\r\n  if (colorA === undefined || colorB === undefined) {\r\n    return false;\r\n  }\r\n\r\n  return isEqual(colorA, colorB);\r\n};\r\n\r\nexport function getInitialState(color?: string | IColor): IColorPickerState {\r\n  const whiteColor: IColor = {\r\n    hue: 0,\r\n    saturation: 0,\r\n    lightness: 0,\r\n    red: 255,\r\n    green: 255,\r\n    blue: 255,\r\n    alpha: 100,\r\n    hex: '#ffffff'\r\n  };\r\n\r\n  if (color === undefined) {\r\n    return getInitialState(whiteColor);\r\n  }\r\n\r\n  if (typeof color === 'string') {\r\n    const computedColor = convertStringToColor(color);\r\n\r\n    return getInitialState(computedColor || whiteColor);\r\n  }\r\n\r\n  return {\r\n    color,\r\n    hexInput: color.hex,\r\n    redInput: color.red.toString(),\r\n    blueInput: color.blue.toString(),\r\n    greenInput: color.green.toString(),\r\n    alphaInput: color.alpha.toString()\r\n  };\r\n}\r\n\r\nexport const reducer = (\r\n  state: IColorPickerState,\r\n  action: ColorPickerActionTypes\r\n): IColorPickerState => {\r\n  switch (action.type) {\r\n    case 'SATURATION_CHANGE': {\r\n      const hsl = hsvToHsl(action.payload.h, action.payload.s * 100, action.payload.v * 100);\r\n      const hex = hslObjectToHex({\r\n        hue: action.payload.h,\r\n        saturation: hsl.s / 100,\r\n        lightness: hsl.l / 100\r\n      });\r\n      const rgb = parseToRgb(hex);\r\n\r\n      return {\r\n        ...state,\r\n        color: {\r\n          ...state.color,\r\n          saturation: hsl.s,\r\n          lightness: hsl.l,\r\n          hex,\r\n          red: rgb.red,\r\n          green: rgb.green,\r\n          blue: rgb.blue\r\n        }\r\n      };\r\n    }\r\n    case 'HUE_CHANGE': {\r\n      const hue = Number(action.payload);\r\n      const hex = hslObjectToHex({\r\n        hue,\r\n        saturation: state.color.saturation / 100,\r\n        lightness: state.color.lightness / 100\r\n      });\r\n      const rgb = parseToRgb(hex);\r\n\r\n      return {\r\n        ...state,\r\n        color: {\r\n          ...state.color,\r\n          hue,\r\n          hex,\r\n          red: rgb.red,\r\n          green: rgb.green,\r\n          blue: rgb.blue\r\n        }\r\n      };\r\n    }\r\n    case 'ALPHA_SLIDER_CHANGE': {\r\n      return {\r\n        ...state,\r\n        color: {\r\n          ...state.color,\r\n          alpha: Math.round(Number(action.payload) * 100)\r\n        }\r\n      };\r\n    }\r\n    case 'HEX_CHANGE': {\r\n      let color = state.color;\r\n\r\n      if (isValidHex(action.payload)) {\r\n        const rgb = parseToRgb(action.payload);\r\n        const hsl = parseToHsl(`rgb(${rgb.red}, ${rgb.green}, ${rgb.blue})`);\r\n\r\n        color = {\r\n          ...color,\r\n          hue: hsl.hue,\r\n          saturation: hsl.saturation * 100,\r\n          lightness: hsl.lightness * 100,\r\n          hex: action.payload,\r\n          red: rgb.red,\r\n          green: rgb.green,\r\n          blue: rgb.blue\r\n        };\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        hexInput: action.payload,\r\n        color\r\n      };\r\n    }\r\n    case 'RED_CHANGE': {\r\n      let red = parseInt(action.payload, 10);\r\n      let color = state.color;\r\n\r\n      if (!isNaN(red)) {\r\n        if (red >= 255) {\r\n          red = 255;\r\n        }\r\n\r\n        if (red < 0) {\r\n          red = 0;\r\n        }\r\n\r\n        const hsl = parseToHsl(`rgb(${red}, ${color.green}, ${color.blue})`);\r\n        const hex = rgbObjectToHex(red, color.green, color.blue);\r\n\r\n        color = {\r\n          ...color,\r\n          hex,\r\n          red: action.payload === '' ? color.red : red,\r\n          hue: hsl.hue,\r\n          saturation: hsl.saturation * 100,\r\n          lightness: hsl.lightness * 100\r\n        };\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        redInput: action.payload,\r\n        color\r\n      };\r\n    }\r\n    case 'GREEN_CHANGE': {\r\n      let green = parseInt(action.payload, 10);\r\n      let color = state.color;\r\n\r\n      if (!isNaN(green)) {\r\n        if (green >= 255) {\r\n          green = 255;\r\n        }\r\n\r\n        if (green < 0) {\r\n          green = 0;\r\n        }\r\n\r\n        const hsl = parseToHsl(`rgb(${color.red}, ${green}, ${color.blue})`);\r\n        const hex = rgbObjectToHex(color.red, green, color.blue);\r\n\r\n        color = {\r\n          ...color,\r\n          hex,\r\n          green: action.payload === '' ? color.green : green,\r\n          hue: hsl.hue,\r\n          saturation: hsl.saturation * 100,\r\n          lightness: hsl.lightness * 100\r\n        };\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        greenInput: action.payload,\r\n        color\r\n      };\r\n    }\r\n    case 'BLUE_CHANGE': {\r\n      let blue = parseInt(action.payload, 10);\r\n      let color = state.color;\r\n\r\n      if (!isNaN(blue)) {\r\n        if (blue >= 255) {\r\n          blue = 255;\r\n        }\r\n\r\n        if (blue < 0) {\r\n          blue = 0;\r\n        }\r\n\r\n        const hsl = parseToHsl(`rgb(${color.red}, ${color.green}, ${blue})`);\r\n        const hex = rgbObjectToHex(color.red, color.green, blue);\r\n\r\n        color = {\r\n          ...color,\r\n          hex,\r\n          blue: action.payload === '' ? color.blue : blue,\r\n          hue: hsl.hue,\r\n          saturation: hsl.saturation * 100,\r\n          lightness: hsl.lightness * 100\r\n        };\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        blueInput: action.payload,\r\n        color\r\n      };\r\n    }\r\n    case 'ALPHA_CHANGE': {\r\n      let alpha = parseInt(action.payload, 10);\r\n      let color = state.color;\r\n\r\n      if (!isNaN(alpha)) {\r\n        if (alpha > 100) {\r\n          alpha = 100;\r\n        }\r\n\r\n        if (alpha < 0) {\r\n          alpha = 0;\r\n        }\r\n\r\n        color = {\r\n          ...color,\r\n          alpha\r\n        };\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        alphaInput: action.payload,\r\n        color\r\n      };\r\n    }\r\n    case 'RESET_COLOR': {\r\n      return getInitialState(action.payload);\r\n    }\r\n    default:\r\n      throw new Error('Unknown reducer case.');\r\n  }\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'colorpickers.swatch_cell';\r\n\r\ninterface IStyledCell {\r\n  isCompact?: boolean;\r\n}\r\n\r\nexport const StyledCell = styled.td.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledCell>`\r\n  padding: ${props => props.theme.space.base}px;\r\n  font-size: 0;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledCell.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'colorpickers.color_swatch';\r\n\r\n/**\r\n * 1. Override Bedrock CSS\r\n */\r\nexport const StyledColorSwatch = styled.table.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  role: 'grid'\r\n})`\r\n  border-collapse: collapse;\r\n  line-height: normal; /* [1] */\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledColorSwatch.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { parseToRgb, readableColor } from 'polished';\r\nimport styled, { ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport React, { Children } from 'react';\r\nimport { IRGBColor } from '../../utils/types';\r\n\r\nconst COMPONENT_ID = 'colorpickers.colorswatch_check';\r\n\r\ninterface IStyledCheckIcon {\r\n  color: string;\r\n}\r\n\r\nconst colorStyles = (props: IStyledCheckIcon & ThemeProps<DefaultTheme>) => {\r\n  const { theme, color } = props;\r\n  const { alpha } = parseToRgb(color) as IRGBColor;\r\n  let checkColor = readableColor(color, theme.colors.foreground, theme.colors.background);\r\n\r\n  if (alpha !== undefined && alpha < 0.4) {\r\n    checkColor = theme.colors.foreground;\r\n  }\r\n\r\n  return `\r\n    color: ${checkColor}\r\n  `;\r\n};\r\n\r\n/* eslint-disable-next-line @typescript-eslint/no-unused-vars */\r\nexport const StyledIcon = styled(({ children, color, theme, ...props }) =>\r\n  React.cloneElement(Children.only(children), props)\r\n).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  transition: opacity 0.2s ease-in-out;\r\n  opacity: ${props => (props.selected ? 1 : 0)};\r\n  width: ${props => props.theme.space.base * 5}px;\r\n  height: ${props => props.theme.space.base * 5}px;\r\n\r\n  ${colorStyles}\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledIcon.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { getColor, retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledButtonPreview, IStyleButtonPreviewProps } from '..';\r\n\r\nconst COMPONENT_ID = 'colorpickers.swatch_button';\r\n\r\nexport const StyledSwatchButton = styled(StyledButtonPreview).attrs<IStyleButtonPreviewProps>(\r\n  props => ({\r\n    as: 'button',\r\n    'data-garden-id': COMPONENT_ID,\r\n    'data-test-id': props.backgroundColor,\r\n    'data-garden-version': PACKAGE_VERSION\r\n  })\r\n)`\r\n  outline: none;\r\n  border: none;\r\n  border-radius: ${props => props.theme.borderRadii.md};\r\n  padding: 0;\r\n\r\n  &[data-garden-focus-visible] {\r\n    box-shadow: ${props =>\r\n      props.theme.shadows.md(getColor('primaryHue', 600, props.theme, 0.35) as string)};\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledSwatchButton.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { Button } from '@zendeskgarden/react-buttons';\r\n\r\nconst COMPONENT_ID = 'colorpickers.colordialog_button';\r\n\r\n/**\r\n * 1. IE11 group width override.\r\n * 2. Input group border overrides.\r\n */\r\nexport const StyledButton = styled(Button as any).attrs({\r\n  isNeutral: true,\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  padding: 0;\r\n  width: ${props => props.theme.space.base * 17}px;\r\n  max-width: ${props => props.theme.space.base * 17}px; /* [1] */\r\n\r\n  &:last-of-type:not(:first-child) {\r\n    /* stylelint-disable */\r\n    border-top-${props => (props.theme.rtl ? 'left' : 'right')}-radius:\r\n      ${props => props.theme.borderRadii.md} !important; /* [2] */\r\n    border-bottom-${props => (props.theme.rtl ? 'left' : 'right')}-radius:\r\n      ${props => props.theme.borderRadii.md} !important; /* [2] */\r\n    /* stylelint-enable */\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledButton.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { rgba } from 'polished';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { checkeredBackground } from '../common/checkeredBackground';\r\nimport { IColor } from '../../utils/types';\r\n\r\nconst COMPONENT_ID = 'colorpickers.colordialog_preview';\r\n\r\nexport interface IStyleButtonPreviewProps extends ThemeProps<DefaultTheme> {\r\n  backgroundColor?: string | IColor;\r\n}\r\n\r\nconst background = (props: IStyleButtonPreviewProps) => {\r\n  const { backgroundColor } = props;\r\n  let color;\r\n\r\n  if (typeof backgroundColor === 'string') {\r\n    color = backgroundColor;\r\n  } else if (backgroundColor === undefined) {\r\n    color = props.theme.palette.white;\r\n  } else {\r\n    const { red, green, blue, alpha = 1 } = backgroundColor;\r\n\r\n    color = `rgba(${red}, ${green}, ${blue}, ${alpha ? alpha / 100 : 0})`;\r\n  }\r\n\r\n  return `linear-gradient(${color}, ${color})`;\r\n};\r\n\r\nexport const StyledButtonPreview = styled.span.attrs<IStyleButtonPreviewProps>(props => ({\r\n  style: {\r\n    background: `${background(props)}, ${checkeredBackground(props.theme, 8)}`\r\n  },\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  'data-test-id': 'dialog-preview'\r\n}))<IStyleButtonPreviewProps>`\r\n  display: inline-block;\r\n  bottom: ${props => props.theme.space.base}px;\r\n  border-radius: ${props => props.theme.borderRadii.sm};\r\n  /* stylelint-disable-next-line color-function-notation */\r\n  box-shadow: inset 0 0 0 ${props => props.theme.borderWidths.sm}\r\n    ${props => rgba(props.theme.palette.black as string, 0.19)};\r\n  width: ${props => props.theme.space.base * 5}px;\r\n  height: ${props => props.theme.space.base * 5}px;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledButtonPreview.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { TooltipModal } from '@zendeskgarden/react-modals';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'colorpickers.colordialog_tooltipmodal_body';\r\n\r\nexport const StyledTooltipBody = styled(TooltipModal.Body as unknown as 'div').attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  padding: 0;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledTooltipBody.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { TooltipModal } from '@zendeskgarden/react-modals';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'colorpickers.colordialog_tooltipmodal';\r\n\r\n/**\r\n * 1. Override default TooltipModal styling\r\n */\r\nexport const StyledTooltipModal = styled(TooltipModal as any).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  /* stylelint-disable declaration-no-important */\r\n  width: auto !important; /* [1] */\r\n  /* stylelint-enable declaration-no-important */\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledTooltipModal.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { DefaultTheme, ThemeProps } from 'styled-components';\r\nimport { DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { getTrackHeight, getTrackMargin, StyledRange } from '../common/StyledRange';\r\nimport { checkeredBackground } from '../common/checkeredBackground';\r\nimport { IRGBColor } from '../../utils/types';\r\n\r\nconst COMPONENT_ID = 'colorpickers.colorpicker_alpha';\r\n\r\nconst background = (props: IRGBColor & ThemeProps<DefaultTheme>) => {\r\n  const direction = `to ${props.theme.rtl ? 'left' : 'right'}`;\r\n  const fromColor = `rgba(${props.red}, ${props.green}, ${props.blue}, 0)`;\r\n  const toColor = `rgb(${props.red}, ${props.green}, ${props.blue})`;\r\n  const positionY = getTrackMargin(props);\r\n  const height = getTrackHeight(props);\r\n  const gradientBackground = `linear-gradient(${direction}, ${fromColor}, ${toColor}) 0 ${positionY}px / 100% ${height}px no-repeat`;\r\n\r\n  return `${gradientBackground}, ${checkeredBackground(\r\n    props.theme,\r\n    height,\r\n    positionY,\r\n    'repeat-x'\r\n  )}`;\r\n};\r\n\r\nexport const StyledAlphaRange = styled(StyledRange as 'input').attrs<IRGBColor>(props => ({\r\n  style: {\r\n    backgroundSize: 'auto',\r\n    background: background(props)\r\n  },\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n}))<IRGBColor>``;\r\n\r\nStyledAlphaRange.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'colorpickers.colorpicker';\r\n\r\ninterface IStyledColorPickerProps {\r\n  isOpaque?: boolean;\r\n}\r\n\r\nexport const getColorPickerWidth = (props: IStyledColorPickerProps) => {\r\n  return props.isOpaque ? 268 : 312;\r\n};\r\n\r\nexport const StyledColorPicker = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledColorPickerProps>`\r\n  width: ${getColorPickerWidth}px;\r\n  min-width: ${getColorPickerWidth}px;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledColorPicker.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { DefaultTheme, ThemeProps } from 'styled-components';\r\nimport { hsl, rgba } from 'polished';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'colorpickers.colorpicker_colorwell';\r\n\r\ninterface IStyledColorWellProps {\r\n  hue: number;\r\n}\r\n\r\nconst background = (props: IStyledColorWellProps & ThemeProps<DefaultTheme>) => {\r\n  const blackAlpha = rgba(props.theme.palette.black as string, 0.9);\r\n  const black = `linear-gradient(0deg, ${props.theme.palette.black}, ${blackAlpha} 1%, transparent 99%)`;\r\n  const whiteAngle = `${props.theme.rtl ? -90 : 90}deg`;\r\n  const white = `linear-gradient(${whiteAngle}, ${props.theme.palette.white} 1%, transparent)`;\r\n  const colorValue = hsl(props.hue, 1, 0.5);\r\n  const color = `linear-gradient(${colorValue}, ${colorValue})`;\r\n\r\n  return `${black}, ${white}, ${color}`;\r\n};\r\n\r\nexport const StyledColorWell = styled.div.attrs<IStyledColorWellProps>(props => ({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  'data-test-id': 'colorwell',\r\n  style: {\r\n    background: background(props)\r\n  }\r\n}))<IStyledColorWellProps>`\r\n  position: relative;\r\n  margin-bottom: ${props => props.theme.space.base * 2}px;\r\n  cursor: pointer;\r\n  height: 208px;\r\n  overflow: hidden;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledColorWell.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { DefaultTheme } from 'styled-components';\r\nimport { stripUnit } from 'polished';\r\nimport { getColor, retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'colorpickers.colorpicker_colorwell_thumb';\r\n\r\ninterface IStyledSaturationPointerProps {\r\n  top: number;\r\n  left: number;\r\n}\r\n\r\nconst sizeStyles = (theme: DefaultTheme) => {\r\n  const borderWidth = (stripUnit(theme.borderWidths.sm) as number) * 2;\r\n  const size = theme.space.base * 5;\r\n  const translateValue = size / -2;\r\n\r\n  return `\r\n    transform: translate(${translateValue}px, ${translateValue}px);\r\n    box-sizing: border-box;\r\n    border-width: ${borderWidth}px;\r\n    width: ${size}px;\r\n    height: ${size}px;\r\n  `;\r\n};\r\n\r\nexport const StyledColorWellThumb = styled.div.attrs<IStyledSaturationPointerProps>(props => ({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  'data-test-id': 'colorwell-thumb',\r\n  style: {\r\n    top: `${props.top}%`,\r\n    left: `${props.left}%`\r\n  }\r\n}))<IStyledSaturationPointerProps>`\r\n  position: absolute;\r\n  border: solid ${props => props.theme.palette.white};\r\n  border-radius: 50%;\r\n  box-shadow: ${props =>\r\n    props.theme.shadows.lg(\r\n      `${props.theme.space.base}px`,\r\n      `${props.theme.space.base * 2}px`,\r\n      getColor('neutralHue', 800, props.theme, 0.24)!\r\n    )};\r\n\r\n  ${props => sizeStyles(props.theme)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledColorWellThumb.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { Field } from '@zendeskgarden/react-forms';\r\n\r\nconst COMPONENT_ID = 'colorpickers.colorpicker_hex_field';\r\n\r\n/**\r\n * 1. IE11 reset.\r\n */\r\nexport const StyledHexField = styled(Field as unknown as 'div').attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  spellcheck: false\r\n})`\r\n  display: flex;\r\n  flex-basis: 0; /* [1] */\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n  width: auto;\r\n  text-align: center;\r\n\r\n  input {\r\n    direction: ltr;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledHexField.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport {\r\n  getTrackHeight,\r\n  getTrackMargin,\r\n  StyledRange,\r\n  IStyledRangeProps\r\n} from '../common/StyledRange';\r\n\r\nconst COMPONENT_ID = 'colorpickers.colorpicker_hue';\r\n\r\nexport const StyledHueRange = styled(StyledRange as 'input').attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledRangeProps>`\r\n  /* stylelint-disable */\r\n  background: linear-gradient(\r\n      to ${props => (props.theme.rtl ? 'left' : 'right')},\r\n      #f00 0%,\r\n      #ff0 17%,\r\n      #0f0 33%,\r\n      #0ff 50%,\r\n      #00f 67%,\r\n      #f0f 83%,\r\n      #f00 100%\r\n    )\r\n    no-repeat;\r\n  background-position: ${props => !props.isOpaque && `0 ${getTrackMargin(props)}px`};\r\n  background-size: 100% ${props => getTrackHeight(props)}px;\r\n`;\r\n\r\nStyledHueRange.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { Input } from '@zendeskgarden/react-forms';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'colorpickers.colorpicker_input';\r\n\r\nexport const StyledInput = styled(Input as any).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  focusInset: false\r\n})`\r\n  text-align: center;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledInput.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'colorpickers.colorpicker_input_group';\r\n\r\nexport const StyledInputGroup = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledInputGroup.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { Label } from '@zendeskgarden/react-forms';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'colorpickers.colorpicker_label';\r\n\r\nexport const StyledLabel = styled(Label as any).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledLabel.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { DefaultTheme, ThemeProps } from 'styled-components';\r\nimport { rgba } from 'polished';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { checkeredBackground } from '../common/checkeredBackground';\r\nimport { IRGBColor } from '../../utils/types';\r\n\r\nconst COMPONENT_ID = 'colorpickers.colorpicker_preview_box';\r\n\r\ninterface IStyledColorPreviewProps extends IRGBColor {\r\n  isOpaque?: boolean;\r\n}\r\n\r\nconst background = (props: IStyledColorPreviewProps & ThemeProps<DefaultTheme>) => {\r\n  const alpha = props.alpha ? props.alpha / 100 : 0;\r\n  const color = `rgba(${props.red}, ${props.green}, ${props.blue}, ${alpha})`;\r\n  let retVal = `linear-gradient(${color}, ${color})`;\r\n\r\n  if (!props.isOpaque) {\r\n    retVal = `${retVal}, ${checkeredBackground(props.theme, 13)}`;\r\n  }\r\n\r\n  return retVal;\r\n};\r\n\r\nexport const StyledPreview = styled.div.attrs<IStyledColorPreviewProps>(props => ({\r\n  style: {\r\n    background: background(props)\r\n  },\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  'data-test-id': 'preview-box'\r\n}))<IStyledColorPreviewProps>`\r\n  flex-shrink: 0;\r\n  border-radius: ${props => props.theme.borderRadii.md};\r\n  /* stylelint-disable-next-line color-function-notation */\r\n  box-shadow: inset 0 0 0 ${props => props.theme.borderWidths.sm}\r\n    ${props => rgba(props.theme.palette.black as string, 0.19)};\r\n  width: ${props => props.theme.space.base * (props.isOpaque ? 6 : 8)}px;\r\n  height: ${props => props.theme.space.base * (props.isOpaque ? 6 : 8)}px;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledPreview.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { Field } from '@zendeskgarden/react-forms';\r\nimport styled, { DefaultTheme } from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'colorpickers.colorpicker_rgb_field';\r\n\r\nconst sizeStyles = (theme: DefaultTheme) => {\r\n  const margin = `${theme.space.base * 1.5}px`;\r\n  const width = `${theme.space.base * 12.75}px`;\r\n\r\n  return `\r\n    margin-${theme.rtl ? 'right' : 'left'}: ${margin};\r\n    width: ${width};\r\n    min-width: ${width};\r\n  `;\r\n};\r\n\r\nexport const StyledRGBAField = styled(Field as unknown as 'div').attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n\r\n  ${props => sizeStyles(props.theme)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledRGBAField.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'colorpickers.colorpicker_slider_group';\r\n\r\nexport const StyledSliderGroup = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: ${props => props.theme.space.base * 2}px;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledSliderGroup.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { getTrackHeight, getTrackMargin } from '../common/StyledRange';\r\n\r\nconst COMPONENT_ID = 'colorpickers.colorpicker_sliders';\r\n\r\ninterface IStyledSlidersProps {\r\n  isOpaque?: boolean;\r\n}\r\n\r\nexport const StyledSliders = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledSlidersProps>`\r\n  position: relative;\r\n  /* stylelint-disable property-no-unknown */\r\n  margin-${props => (props.theme.rtl ? 'right' : 'left')}: ${props => props.theme.space.base * 2}px;\r\n  width: 100%;\r\n\r\n  & > * {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: ${props => getTrackMargin(props) * 2 + getTrackHeight(props)}px;\r\n  }\r\n\r\n  & > :first-child {\r\n    top: -${getTrackMargin}px;\r\n  }\r\n\r\n  & > :last-child {\r\n    bottom: -${getTrackMargin}px;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledSliders.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { Range } from '@zendeskgarden/react-forms';\r\nimport styled, { ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { math, stripUnit } from 'polished';\r\nimport { getColor, retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nexport interface IStyledRangeProps {\r\n  isOpaque?: boolean;\r\n}\r\n\r\nconst COMPONENT_ID = 'colorpickers.colorpicker_range';\r\n\r\nconst thumbStyles = (styles: string, modifier = '') => {\r\n  return `\r\n    &${modifier}::-moz-range-thumb {\r\n      ${styles}\r\n    }\r\n\r\n    &${modifier}::-ms-thumb {\r\n      ${styles}\r\n    }\r\n\r\n    &${modifier}::-webkit-slider-thumb {\r\n      ${styles}\r\n    }\r\n  `;\r\n};\r\n\r\nexport const trackStyles = (styles: string, modifier = '') => {\r\n  return `\r\n    &${modifier}::-moz-range-track {\r\n      ${styles}\r\n    }\r\n\r\n    &${modifier}::-ms-track {\r\n      ${styles}\r\n    }\r\n\r\n    &${modifier}::-webkit-slider-runnable-track {\r\n      ${styles}\r\n    }\r\n  `;\r\n};\r\n\r\nconst trackLowerStyles = (styles: string, modifier = '') => {\r\n  return `\r\n    &${modifier}::-moz-range-progress {\r\n      ${styles}\r\n    }\r\n\r\n    &${modifier}::-ms-fill-lower {\r\n      ${styles}\r\n    }\r\n  `;\r\n};\r\n\r\nconst colorStyles = (props: IStyledRangeProps & ThemeProps<DefaultTheme>) => {\r\n  const thumbBackgroundColor = getColor('neutralHue', 100, props.theme);\r\n  const thumbBorderColor = thumbBackgroundColor;\r\n  const thumbActiveBackgroundColor = getColor('neutralHue', 200, props.theme);\r\n  const thumbActiveBorderColor = getColor('primaryHue', 600, props.theme);\r\n  const thumbHoverBackgroundColor = thumbActiveBackgroundColor;\r\n  const thumbHoverBorderColor = thumbHoverBackgroundColor;\r\n\r\n  return `\r\n    border-color: ${props.isOpaque && props.theme.colors.background};\r\n\r\n    ${trackStyles(`\r\n      background-color: transparent;\r\n    `)}\r\n\r\n    ${thumbStyles(`\r\n      border-color: ${thumbBorderColor};\r\n      background-color: ${thumbBackgroundColor};\r\n    `)}\r\n\r\n    ${trackLowerStyles(`\r\n      background-color: transparent;\r\n    `)}\r\n\r\n    ${thumbStyles(\r\n      `\r\n        border-color: ${thumbHoverBorderColor};\r\n        background-color: ${thumbHoverBackgroundColor};\r\n      `,\r\n      ':hover'\r\n    )}\r\n\r\n    ${thumbStyles(\r\n      `\r\n        background-color: ${thumbBackgroundColor};\r\n        border-color: ${thumbActiveBorderColor};\r\n      `,\r\n      '[data-garden-focus-visible=\"true\"]'\r\n    )}\r\n\r\n    ${thumbStyles(\r\n      `\r\n        border-color: ${thumbActiveBorderColor};\r\n        background-color: ${thumbActiveBackgroundColor}\r\n      `,\r\n      ':active'\r\n    )}\r\n  `;\r\n};\r\n\r\nconst getThumbSize = (props: IStyledRangeProps & ThemeProps<DefaultTheme>) =>\r\n  props.theme.space.base * (props.isOpaque ? 6 : 4);\r\n\r\nexport const getTrackHeight = (props: IStyledRangeProps & ThemeProps<DefaultTheme>) =>\r\n  props.theme.space.base * (props.isOpaque ? 6 : 3);\r\n\r\nexport const getTrackMargin = (props: IStyledRangeProps & ThemeProps<DefaultTheme>) =>\r\n  (getThumbSize(props) - getTrackHeight(props)) / 2 +\r\n  (stripUnit(props.theme.shadowWidths.md) as number);\r\n\r\n/**\r\n * 1. Firefox reset.\r\n * 2. Bedrock override.\r\n */\r\nconst sizeStyles = (props: IStyledRangeProps & ThemeProps<DefaultTheme>) => {\r\n  const thumbSize = getThumbSize(props);\r\n  const trackHeight = getTrackHeight(props);\r\n  const trackMargin = getTrackMargin(props);\r\n  const thumbMargin = (trackHeight - thumbSize) / 2;\r\n  const trackOffset = props.theme.space.base * (props.isOpaque ? -2 : -1);\r\n  const height = props.isOpaque ? trackHeight : trackMargin * 2 + trackHeight;\r\n  let marginHorizontal;\r\n  let border;\r\n  let borderRadius;\r\n\r\n  if (props.isOpaque) {\r\n    marginHorizontal = `-${trackMargin}px`;\r\n    border = `${trackMargin}px ${props.theme.borderStyles.solid}`;\r\n    borderRadius = `${trackMargin + (stripUnit(props.theme.shadowWidths.md) as number)}px`;\r\n  }\r\n\r\n  return `\r\n    /* stylelint-disable-next-line declaration-no-important */\r\n    margin-top: 0 !important;\r\n    margin-${props.theme.rtl ? 'right' : 'left'}: ${marginHorizontal};\r\n    height: ${height}px; /* [1] */\r\n    box-sizing: content-box; /* [2] */\r\n    border: ${border};\r\n    border-radius: ${borderRadius};\r\n\r\n    ${trackStyles(`\r\n      margin: ${trackMargin}px ${trackOffset}px;\r\n      height: ${trackHeight}px;\r\n    `)}\r\n\r\n    ${thumbStyles(`\r\n      margin: ${thumbMargin}px 0;\r\n      border-width: ${math(`${props.theme.borderWidths.sm} * 2`)};\r\n      height: ${thumbSize}px;\r\n      width: ${thumbSize}px;\r\n    `)};\r\n  `;\r\n};\r\n\r\nexport const StyledRange = styled(Range as unknown as 'input').attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  hasLowerTrack: false\r\n})`\r\n  ${sizeStyles};\r\n\r\n  ${trackStyles(`\r\n    border-radius: 0;\r\n  `)}\r\n\r\n  ${colorStyles};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledRange.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { DefaultTheme } from 'styled-components';\r\nimport { getColor } from '@zendeskgarden/react-theming';\r\n\r\nexport const checkeredBackground = (\r\n  theme: DefaultTheme,\r\n  size: number,\r\n  positionY = 0,\r\n  repeat = 'repeat'\r\n) => {\r\n  const color = getColor('neutralHue', 400, theme);\r\n  const dimensions = `${size}px ${size}px`;\r\n  const positionX1 = theme.rtl ? '100%' : '0';\r\n  const positionX2 = theme.rtl ? `calc(100% - ${size / 2}px)` : `${size / 2}px`;\r\n  const position1 = `${positionX1} ${positionY}px`;\r\n  const position2 = `${positionX2} ${size / 2 + positionY}px`;\r\n  const position3 = `${positionX2} ${positionY}px`;\r\n  const position4 = `${positionX1} ${size / -2 + positionY}px`;\r\n\r\n  return `\r\n    linear-gradient(45deg, ${color} 25%, transparent 25%) ${position1} / ${dimensions} ${repeat},\r\n    linear-gradient(45deg, transparent 75%, ${color} 75%) ${position2} / ${dimensions} ${repeat},\r\n    linear-gradient(135deg, ${color} 25%, transparent 25%) ${position3} / ${dimensions} ${repeat},\r\n    linear-gradient(135deg, transparent 75%, ${color} 75%) ${position4} / ${dimensions} ${repeat}\r\n  `;\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nexport function hslToHsv(h: number, s: number, l: number) {\r\n  let saturation = s;\r\n\r\n  saturation *= (l < 50 ? l : 100 - l) / 100;\r\n  const v = l + saturation;\r\n\r\n  return {\r\n    h,\r\n    s: v === 0 ? 0 : ((2 * saturation) / v) * 100,\r\n    v\r\n  };\r\n}\r\n\r\nexport function hsvToHsl(h: number, s: number, v: number) {\r\n  let saturation = s;\r\n  let value = v;\r\n\r\n  saturation /= 100;\r\n  value /= 100;\r\n\r\n  let l = (2 - saturation) * value;\r\n  let sl = saturation * value;\r\n\r\n  sl /= l <= 1 ? l : 2 - l;\r\n  sl = sl || 0;\r\n  l /= 2;\r\n\r\n  return { h, s: sl * 100, l: l * 100 };\r\n}\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { IHSVColor } from '../utils/types';\r\n\r\nexport function limit(value: number, max: number, min = 0) {\r\n  if (value < min) {\r\n    return min;\r\n  } else if (value > max) {\r\n    return max;\r\n  }\r\n\r\n  return value;\r\n}\r\n\r\nconst getSaturationLightness = (element: HTMLDivElement, x: number, y: number, rtl: boolean) => {\r\n  const { width, height } = element.getBoundingClientRect();\r\n\r\n  let left = x - (element.getBoundingClientRect().left + window.pageXOffset);\r\n  let top = y - (element.getBoundingClientRect().top + window.pageYOffset);\r\n\r\n  if (left < 0) {\r\n    left = 0;\r\n  } else if (left > width) {\r\n    left = width;\r\n  }\r\n\r\n  if (top < 0) {\r\n    top = 0;\r\n  } else if (top > height) {\r\n    top = height;\r\n  }\r\n\r\n  if (rtl) {\r\n    left = width - left;\r\n  }\r\n\r\n  const saturation = left / width;\r\n  const bright = 1 - top / height;\r\n\r\n  return {\r\n    saturation,\r\n    bright\r\n  };\r\n};\r\n\r\nexport function getNextHsv(\r\n  e: MouseEvent,\r\n  hue: number,\r\n  container: HTMLDivElement,\r\n  rtl: boolean\r\n): IHSVColor {\r\n  const { saturation, bright } = getSaturationLightness(container, e.pageX, e.pageY, rtl);\r\n\r\n  return {\r\n    h: hue,\r\n    s: saturation,\r\n    v: bright\r\n  };\r\n}\r\n\r\ntype GET_THUMB_POSITION = (\r\n  x: number,\r\n  y: number,\r\n  rtl: boolean,\r\n  container: React.RefObject<HTMLDivElement>\r\n) => { topFromMouse: number; leftFromMouse: number };\r\n\r\nexport const getThumbPosition: GET_THUMB_POSITION = (\r\n  x: number,\r\n  y: number,\r\n  rtl: boolean,\r\n  container: React.RefObject<HTMLDivElement>\r\n) => {\r\n  if (container.current) {\r\n    const { saturation, bright } = getSaturationLightness(container.current, x, y, rtl);\r\n    const topFromMouse = (1 - bright) * 100;\r\n    const leftFromMouse = rtl ? 100 - saturation * 100 : saturation * 100;\r\n\r\n    return {\r\n      topFromMouse,\r\n      leftFromMouse\r\n    };\r\n  }\r\n\r\n  return {\r\n    topFromMouse: 0,\r\n    leftFromMouse: 0\r\n  };\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nexport const isValidHex = (hexString: string) => {\r\n  const regEx = /^#(?:(?:[0-9A-F]{6}(?:[0-9A-F]{2})?)|(?:[0-9A-F]{3})(?:[0-9A-F]?))$/iu;\r\n\r\n  return regEx.test(hexString);\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { Col, Grid, Row } from '@zendeskgarden/react-grid';\r\nimport { Field, Input, Label } from '@zendeskgarden/react-forms';\r\nimport { DatepickerRange, IDatepickerRangeProps } from '@zendeskgarden/react-datepickers';\r\nimport { DATE_STYLE } from './types';\r\n\r\ninterface IArgs extends IDatepickerRangeProps {\r\n  dateStyle: DATE_STYLE;\r\n}\r\n\r\nexport const DatepickerRangeStory: Story<IArgs> = ({ dateStyle, isCompact, ...args }) => {\r\n  const formatDate = (date: Date) =>\r\n    new Intl.DateTimeFormat(args.locale, { dateStyle }).format(date);\r\n\r\n  return (\r\n    <DatepickerRange {...args} formatDate={formatDate} isCompact={isCompact}>\r\n      <Grid>\r\n        <Row>\r\n          <Col size=\"auto\">\r\n            <Field>\r\n              <Label hidden>{(DatepickerRange.Start as any).displayName}</Label>\r\n              <DatepickerRange.Start>\r\n                <Input isCompact={isCompact} style={{ width: isCompact ? 224 : 280 }} />\r\n              </DatepickerRange.Start>\r\n            </Field>\r\n          </Col>\r\n          <Col size=\"auto\">\r\n            <Field>\r\n              <Label hidden>{(DatepickerRange.End as any).displayName}</Label>\r\n              <DatepickerRange.End>\r\n                <Input isCompact={isCompact} style={{ width: isCompact ? 224 : 280 }} />\r\n              </DatepickerRange.End>\r\n            </Field>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <DatepickerRange.Calendar />\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    </DatepickerRange>\r\n  );\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { Col, Grid, Row } from '@zendeskgarden/react-grid';\r\nimport { Field, Input, Label } from '@zendeskgarden/react-forms';\r\nimport { Datepicker, IDatepickerProps } from '@zendeskgarden/react-datepickers';\r\nimport { DATE_STYLE } from './types';\r\n\r\ninterface IArgs extends IDatepickerProps {\r\n  dateStyle: DATE_STYLE;\r\n}\r\n\r\nexport const DatepickerStory: Story<IArgs> = ({ dateStyle, isCompact, ...args }) => {\r\n  const formatDate = (date: Date) =>\r\n    new Intl.DateTimeFormat(args.locale, { dateStyle }).format(date);\r\n\r\n  return (\r\n    <Grid>\r\n      <Row style={{ height: 'calc(100vh - 80px)' }}>\r\n        <Col textAlign=\"center\" alignSelf=\"center\">\r\n          <Field>\r\n            <Label hidden>{Datepicker.displayName}</Label>\r\n            <Datepicker {...args} formatDate={formatDate} isCompact={isCompact}>\r\n              <Input isCompact={isCompact} style={{ width: isCompact ? 256 : 320 }} />\r\n            </Datepicker>\r\n          </Field>\r\n        </Col>\r\n      </Row>\r\n    </Grid>\r\n  );\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nexport const DATE_STYLE_OPTIONS = ['full', 'long', 'medium', 'short'] as const;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, {\r\n  PropsWithChildren,\r\n  useReducer,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useMemo\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { datepickerRangeReducer, retrieveInitialState } from './utils/datepicker-range-reducer';\r\nimport { DatepickerRangeContext } from './utils/useDatepickerRangeContext';\r\nimport Start from './components/Start';\r\nimport End from './components/End';\r\nimport Calendar from './components/Calendar';\r\n\r\nexport interface IDatepickerRangeProps {\r\n  /**\r\n   * Applies locale-based formatting.\r\n   * Accepts all valid `Intl` [locales](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#Locale_identification_and_negotiation).\r\n   */\r\n  locale?: string;\r\n  /**\r\n   * Sets the start date\r\n   */\r\n  startValue?: Date;\r\n  /**\r\n   * Sets the end date\r\n   */\r\n  endValue?: Date;\r\n  /**\r\n   * Disables dates before this value on the calendar\r\n   */\r\n  minValue?: Date;\r\n  /**\r\n   * Disables dates after this value on the calendar\r\n   */\r\n  maxValue?: Date;\r\n  /**\r\n   * Handles start and end date changes\r\n   *\r\n   * @param {Object} values The selected dates\r\n   * @param {Date} [values.startValue] Optional start date\r\n   * @param {Date} [values.endValue] Optional end date\r\n   */\r\n  onChange?: (values: { startValue?: Date; endValue?: Date }) => void;\r\n  /**\r\n   * Adjusts the input element's date formatting\r\n   *\r\n   *  @param {Date} date The selected date\r\n   *  @returns {string} a formatted date string\r\n   */\r\n  formatDate?: (date: Date) => string;\r\n  /**\r\n   * Overrides the default date parsing\r\n   *\r\n   * @param {string} inputValue A date string\r\n   * @returns {Date} the parsed date\r\n   */\r\n  customParseDate?: (inputValue?: string) => Date;\r\n  /**\r\n   * Applies compact styling\r\n   */\r\n  isCompact?: boolean;\r\n}\r\n\r\nexport const DatepickerRange = (props: PropsWithChildren<IDatepickerRangeProps>) => {\r\n  const {\r\n    startValue,\r\n    locale,\r\n    formatDate,\r\n    endValue,\r\n    onChange,\r\n    customParseDate,\r\n    isCompact,\r\n    minValue,\r\n    maxValue,\r\n    children\r\n  } = props;\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const reducer = useCallback(\r\n    datepickerRangeReducer({\r\n      startValue,\r\n      locale,\r\n      formatDate,\r\n      endValue,\r\n      onChange,\r\n      customParseDate\r\n    }),\r\n    [startValue, endValue, locale, formatDate, onChange, customParseDate]\r\n  );\r\n\r\n  const [state, dispatch] = useReducer(reducer, retrieveInitialState(props));\r\n  const previousStartValue = useRef(startValue);\r\n  const previousEndValue = useRef(endValue);\r\n  const startInputRef = useRef<HTMLInputElement>();\r\n  const endInputRef = useRef<HTMLInputElement>();\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: 'CONTROLLED_START_VALUE_CHANGE',\r\n      value: startValue\r\n    });\r\n\r\n    if (\r\n      endInputRef.current &&\r\n      previousStartValue.current !== startValue &&\r\n      startValue !== undefined\r\n    ) {\r\n      endInputRef.current.focus();\r\n    }\r\n\r\n    previousStartValue.current = startValue;\r\n  }, [props, startValue]);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: 'CONTROLLED_END_VALUE_CHANGE',\r\n      value: endValue\r\n    });\r\n\r\n    if (startInputRef.current && previousEndValue.current !== endValue && endValue !== undefined) {\r\n      startInputRef.current.focus();\r\n    }\r\n\r\n    previousEndValue.current = endValue;\r\n  }, [props, endValue]);\r\n\r\n  const value = useMemo(\r\n    () => ({\r\n      state,\r\n      dispatch,\r\n      isCompact,\r\n      locale,\r\n      minValue,\r\n      maxValue,\r\n      startValue,\r\n      endValue,\r\n      onChange,\r\n      startInputRef,\r\n      endInputRef\r\n    }),\r\n    [\r\n      state,\r\n      dispatch,\r\n      isCompact,\r\n      locale,\r\n      minValue,\r\n      maxValue,\r\n      startValue,\r\n      endValue,\r\n      onChange,\r\n      startInputRef,\r\n      endInputRef\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <DatepickerRangeContext.Provider value={value}>{children}</DatepickerRangeContext.Provider>\r\n  );\r\n};\r\n\r\nDatepickerRange.Start = Start;\r\nDatepickerRange.End = End;\r\nDatepickerRange.Calendar = Calendar;\r\n\r\nDatepickerRange.propTypes = {\r\n  locale: PropTypes.string,\r\n  startValue: PropTypes.instanceOf(Date),\r\n  endValue: PropTypes.instanceOf(Date),\r\n  minValue: PropTypes.instanceOf(Date),\r\n  maxValue: PropTypes.instanceOf(Date),\r\n  onChange: PropTypes.func,\r\n  formatDate: PropTypes.func,\r\n  customParseDate: PropTypes.func,\r\n  isCompact: PropTypes.bool\r\n};\r\n\r\nDatepickerRange.defaultProps = {\r\n  locale: 'en-US',\r\n  isCompact: false\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport addMonths from 'date-fns/addMonths';\r\n\r\nimport { StyledRangeCalendar } from '../../../styled';\r\nimport useDatepickerRangeContext from '../utils/useDatepickerRangeContext';\r\nimport Month from './Month';\r\n\r\nconst Calendar: React.FunctionComponent<HTMLAttributes<HTMLDivElement>> = props => {\r\n  const { state, dispatch, locale, isCompact, minValue, maxValue, startValue, endValue, onChange } =\r\n    useDatepickerRangeContext();\r\n\r\n  return (\r\n    <StyledRangeCalendar\r\n      data-garden-id=\"datepickers.range\"\r\n      data-garden-version={PACKAGE_VERSION}\r\n      data-test-id=\"range-calendar\"\r\n      {...(props as any)}\r\n    >\r\n      <Month\r\n        locale={locale}\r\n        displayDate={state.previewDate}\r\n        isCompact={isCompact}\r\n        isNextHidden\r\n        dispatch={dispatch}\r\n        minValue={minValue}\r\n        maxValue={maxValue}\r\n        startValue={startValue}\r\n        endValue={endValue}\r\n        onChange={onChange}\r\n        hoverDate={state.hoverDate}\r\n      />\r\n      <Month\r\n        locale={locale}\r\n        displayDate={addMonths(state.previewDate, 1)}\r\n        isCompact={isCompact}\r\n        isPreviousHidden\r\n        dispatch={dispatch}\r\n        minValue={minValue}\r\n        maxValue={maxValue}\r\n        startValue={startValue}\r\n        endValue={endValue}\r\n        onChange={onChange}\r\n        hoverDate={state.hoverDate}\r\n      />\r\n    </StyledRangeCalendar>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { PropsWithChildren, HTMLAttributes, useCallback } from 'react';\r\nimport { KEY_CODES, composeEventHandlers } from '@zendeskgarden/container-utilities';\r\nimport useDatepickerRangeContext from '../utils/useDatepickerRangeContext';\r\n\r\nconst End = (props: PropsWithChildren<HTMLAttributes<HTMLInputElement>>) => {\r\n  const { state, dispatch, endInputRef } = useDatepickerRangeContext();\r\n\r\n  const onChangeCallback = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      dispatch({ type: 'END_INPUT_ONCHANGE', value: e.target.value });\r\n\r\n      (props.children as any).props.onChange && (props.children as any).props.onChange(e);\r\n    },\r\n    [dispatch, props.children]\r\n  );\r\n\r\n  const onFocusCallback = useCallback(\r\n    (e: React.FocusEvent<HTMLInputElement>) => {\r\n      dispatch({ type: 'END_FOCUS' });\r\n\r\n      (props.children as any).props.onFocus && (props.children as any).props.onFocus(e);\r\n    },\r\n    [dispatch, props.children]\r\n  );\r\n\r\n  const onKeydownCallback = useCallback(\r\n    (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n      if (e.keyCode === KEY_CODES.ENTER) {\r\n        dispatch({ type: 'END_BLUR' });\r\n        e.preventDefault();\r\n      }\r\n\r\n      (props.children as any).props.onKeyDown && (props.children as any).props.onKeyDown(e);\r\n    },\r\n    [dispatch, props.children]\r\n  );\r\n\r\n  const onBlurCallback = useCallback(\r\n    (e: React.FocusEvent<HTMLInputElement>) => {\r\n      dispatch({ type: 'END_BLUR' });\r\n\r\n      (props.children as any).props.onBlur && (props.children as any).props.onBlur(e);\r\n    },\r\n    [dispatch, props.children]\r\n  );\r\n\r\n  const childElement = React.Children.only(props.children as React.ReactElement);\r\n\r\n  return React.cloneElement(childElement, {\r\n    value: state.endInputValue,\r\n    ref: endInputRef,\r\n    onChange: composeEventHandlers(childElement.props.onChange, onChangeCallback),\r\n    onFocus: composeEventHandlers(childElement.props.onFocus, onFocusCallback),\r\n    onKeyDown: composeEventHandlers(childElement.props.onKeyDown, onKeydownCallback),\r\n    onBlur: composeEventHandlers(childElement.props.onBlur, onBlurCallback)\r\n  });\r\n};\r\n\r\nexport default End;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useCallback } from 'react';\r\nimport startOfMonth from 'date-fns/startOfMonth';\r\nimport endOfMonth from 'date-fns/endOfMonth';\r\nimport startOfWeek from 'date-fns/startOfWeek';\r\nimport endOfWeek from 'date-fns/endOfWeek';\r\nimport eachDayOfInterval from 'date-fns/eachDayOfInterval';\r\nimport addDays from 'date-fns/addDays';\r\nimport isToday from 'date-fns/isToday';\r\nimport isSameDay from 'date-fns/isSameDay';\r\nimport isSameMonth from 'date-fns/isSameMonth';\r\nimport isBefore from 'date-fns/isBefore';\r\nimport isAfter from 'date-fns/isAfter';\r\nimport subDays from 'date-fns/subDays';\r\nimport compareAsc from 'date-fns/compareAsc';\r\n\r\nimport {\r\n  StyledDatepicker,\r\n  StyledCalendar,\r\n  StyledCalendarItem,\r\n  StyledDayLabel,\r\n  StyledDay,\r\n  StyledHeaderPaddle,\r\n  StyledHeader,\r\n  StyledHeaderLabel,\r\n  StyledHighlight\r\n} from '../../../styled';\r\nimport { getStartOfWeek } from '../../../utils/calendar-utils';\r\nimport { DatepickerRangeAction } from '../utils/datepicker-range-reducer';\r\n\r\nconst Month: React.FunctionComponent<{\r\n  locale?: string;\r\n  displayDate: Date;\r\n  isCompact?: boolean;\r\n  isPreviousHidden?: boolean;\r\n  isNextHidden?: boolean;\r\n  dispatch: React.Dispatch<DatepickerRangeAction>;\r\n  minValue?: Date;\r\n  maxValue?: Date;\r\n  startValue?: Date;\r\n  endValue?: Date;\r\n  /* eslint-disable-next-line react/no-unused-prop-types */\r\n  onChange?: (values: { startValue?: Date; endValue?: Date }) => void;\r\n  hoverDate?: Date;\r\n}> = ({\r\n  locale,\r\n  displayDate,\r\n  isCompact,\r\n  isPreviousHidden,\r\n  isNextHidden,\r\n  dispatch,\r\n  minValue,\r\n  maxValue,\r\n  startValue,\r\n  endValue,\r\n  hoverDate\r\n}) => {\r\n  const headerLabelFormatter = useCallback(\r\n    date => {\r\n      const formatter = new Intl.DateTimeFormat(locale, {\r\n        month: 'long',\r\n        year: 'numeric'\r\n      });\r\n\r\n      return formatter.format(date);\r\n    },\r\n    [locale]\r\n  );\r\n\r\n  const dayLabelFormatter = useCallback(\r\n    date => {\r\n      const formatter = new Intl.DateTimeFormat(locale, {\r\n        weekday: 'short'\r\n      });\r\n\r\n      return formatter.format(date);\r\n    },\r\n    [locale]\r\n  );\r\n\r\n  const dayFormatter = useCallback(\r\n    date => {\r\n      const formatter = new Intl.DateTimeFormat(locale, {\r\n        day: 'numeric'\r\n      });\r\n\r\n      return formatter.format(date);\r\n    },\r\n    [locale]\r\n  );\r\n\r\n  const weekStartsOn = getStartOfWeek(locale);\r\n  const monthStartDate = startOfMonth(displayDate);\r\n  const monthEndDate = endOfMonth(monthStartDate);\r\n  const startDate = startOfWeek(monthStartDate, {\r\n    weekStartsOn\r\n  });\r\n  const endDate = endOfWeek(monthEndDate, {\r\n    weekStartsOn\r\n  });\r\n\r\n  const dayLabels = eachDayOfInterval({ start: startDate, end: addDays(startDate, 6) }).map(\r\n    date => {\r\n      const formattedDayLabel = dayLabelFormatter(date);\r\n\r\n      return (\r\n        <StyledCalendarItem key={`day-label-${formattedDayLabel}`} isCompact={isCompact}>\r\n          <StyledDayLabel isCompact={isCompact!}>{formattedDayLabel}</StyledDayLabel>\r\n        </StyledCalendarItem>\r\n      );\r\n    }\r\n  );\r\n\r\n  const items = eachDayOfInterval({ start: startDate, end: endDate }).map((date, itemsIndex) => {\r\n    const formattedDayLabel = dayFormatter(date);\r\n    const isCurrentDate = isToday(date);\r\n    const isPreviousMonth = !isSameMonth(date, displayDate);\r\n\r\n    if (isPreviousMonth) {\r\n      return (\r\n        <StyledCalendarItem key={`day-${itemsIndex}`} isCompact={isCompact}>\r\n          <StyledDay\r\n            isCompact={isCompact!}\r\n            isPreviousMonth\r\n            isDisabled\r\n            data-test-id=\"day\"\r\n            data-test-hidden=\"true\"\r\n          >\r\n            &nbsp;\r\n          </StyledDay>\r\n        </StyledCalendarItem>\r\n      );\r\n    }\r\n\r\n    let isSelected = false;\r\n\r\n    if (startValue !== undefined) {\r\n      isSelected = isSameDay(date, startValue);\r\n    }\r\n\r\n    if (endValue !== undefined) {\r\n      isSelected = isSelected || isSameDay(date, endValue);\r\n    }\r\n\r\n    let isDisabled = false;\r\n\r\n    if (minValue !== undefined) {\r\n      isDisabled = isBefore(date, minValue) && !isSameDay(date, minValue);\r\n    }\r\n\r\n    if (maxValue !== undefined) {\r\n      isDisabled = isDisabled || (isAfter(date, maxValue) && !isSameDay(date, maxValue));\r\n    }\r\n\r\n    let isHighlighted = false;\r\n\r\n    if (startValue !== undefined && endValue !== undefined) {\r\n      isHighlighted =\r\n        (isAfter(date, startValue) || isSameDay(date, startValue)) &&\r\n        (isBefore(date, endValue) || isSameDay(date, endValue)) &&\r\n        !isSameDay(startValue, endValue);\r\n    } else if (startValue !== undefined && hoverDate !== undefined) {\r\n      isHighlighted =\r\n        (isAfter(date, startValue) || isSameDay(date, startValue)) &&\r\n        (isBefore(date, hoverDate) || isSameDay(date, hoverDate));\r\n    }\r\n\r\n    const isHighlightStart = (isHighlighted && startValue && isSameDay(date, startValue)) || false;\r\n\r\n    const isHighlightEnd =\r\n      (isHighlighted && endValue && isSameDay(date, endValue)) ||\r\n      (hoverDate && isSameDay(date, hoverDate) && !isBefore(date, endValue!)) ||\r\n      false;\r\n\r\n    let isInvalidDateRange =\r\n      (endValue && startValue && compareAsc(endValue, startValue) === -1) || false;\r\n\r\n    if (minValue) {\r\n      if (startValue) {\r\n        isInvalidDateRange =\r\n          isInvalidDateRange || compareAsc(startValue, subDays(minValue, 1)) === -1;\r\n      }\r\n\r\n      if (endValue) {\r\n        isInvalidDateRange =\r\n          isInvalidDateRange || compareAsc(endValue, subDays(minValue, 1)) === -1;\r\n      }\r\n    }\r\n\r\n    if (maxValue) {\r\n      if (startValue) {\r\n        isInvalidDateRange = isInvalidDateRange || compareAsc(startValue, maxValue) === 1;\r\n      }\r\n\r\n      if (endValue) {\r\n        isInvalidDateRange = isInvalidDateRange || compareAsc(endValue, maxValue) === 1;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <StyledCalendarItem key={`day-${itemsIndex}`} isCompact={isCompact}>\r\n        <StyledHighlight\r\n          isHighlighted={!isInvalidDateRange && isHighlighted && !isDisabled}\r\n          isStart={!isInvalidDateRange && isHighlightStart}\r\n          isEnd={!isInvalidDateRange && isHighlightEnd}\r\n          data-test-id=\"highlight\"\r\n          data-test-highlighted={!isInvalidDateRange && isHighlighted && !isDisabled}\r\n          data-test-start={!isInvalidDateRange && isHighlightStart}\r\n          data-test-end={!isInvalidDateRange && isHighlightEnd}\r\n        />\r\n        <StyledDay\r\n          isToday={isCurrentDate}\r\n          isPreviousMonth={isPreviousMonth}\r\n          isSelected={!isInvalidDateRange && isSelected}\r\n          isDisabled={isDisabled}\r\n          isCompact={isCompact!}\r\n          onClick={() => {\r\n            if (!isDisabled) {\r\n              dispatch({ type: 'CLICK_DATE', value: date });\r\n            }\r\n          }}\r\n          onMouseEnter={() => {\r\n            if (!isSelected) {\r\n              dispatch({ type: 'HOVER_DATE', value: date });\r\n            }\r\n          }}\r\n          data-test-id=\"day\"\r\n          data-test-previous={isPreviousMonth}\r\n          data-test-selected={!isInvalidDateRange && isSelected}\r\n          data-test-disabled={isDisabled}\r\n          data-test-today={isCurrentDate}\r\n          data-test-hidden=\"false\"\r\n        >\r\n          {formattedDayLabel}\r\n        </StyledDay>\r\n      </StyledCalendarItem>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <StyledDatepicker\r\n      isCompact={isCompact!}\r\n      data-test-id=\"calendar-wrapper\"\r\n      onMouseDown={e => {\r\n        /** Stop focus from escaping input */\r\n        /* istanbul ignore next */\r\n        e.preventDefault();\r\n      }}\r\n    >\r\n      <StyledHeader isCompact={isCompact!}>\r\n        <StyledHeaderPaddle\r\n          isCompact={isCompact!}\r\n          onClick={() => {\r\n            dispatch({\r\n              type: 'PREVIEW_PREVIOUS_MONTH'\r\n            });\r\n          }}\r\n          isHidden={isPreviousHidden}\r\n          data-test-id=\"previous-month\"\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"currentColor\" d=\"M10.39 12.688a.5.5 0 01-.718.69l-.062-.066-4-5a.5.5 0 01-.054-.542l.054-.082 4-5a.5.5 0 01.83.55l-.05.074L6.641 8l3.75 4.688z\"/>\r\n</svg>\r\n        </StyledHeaderPaddle>\r\n        <StyledHeaderLabel isCompact={isCompact!} data-test-id=\"month-display\">\r\n          {headerLabelFormatter(displayDate)}\r\n        </StyledHeaderLabel>\r\n        <StyledHeaderPaddle\r\n          isCompact={isCompact!}\r\n          isHidden={isNextHidden}\r\n          onClick={() => {\r\n            dispatch({\r\n              type: 'PREVIEW_NEXT_MONTH'\r\n            });\r\n          }}\r\n          data-test-id=\"next-month\"\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"currentColor\" d=\"M5.61 3.312a.5.5 0 01.718-.69l.062.066 4 5a.5.5 0 01.054.542l-.054.082-4 5a.5.5 0 01-.83-.55l.05-.074L9.359 8l-3.75-4.688z\"/>\r\n</svg>\r\n        </StyledHeaderPaddle>\r\n      </StyledHeader>\r\n      <StyledCalendar\r\n        isCompact={isCompact!}\r\n        data-test-id=\"calendar-internal-wrapper\"\r\n        onMouseLeave={() => {\r\n          dispatch({ type: 'HOVER_DATE', value: undefined });\r\n        }}\r\n      >\r\n        {dayLabels}\r\n        {items}\r\n      </StyledCalendar>\r\n    </StyledDatepicker>\r\n  );\r\n};\r\n\r\nexport default Month;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { PropsWithChildren, HTMLAttributes, useCallback } from 'react';\r\nimport useDatepickerRangeContext from '../utils/useDatepickerRangeContext';\r\nimport { KEY_CODES, composeEventHandlers } from '@zendeskgarden/container-utilities';\r\n\r\nconst Start = (props: PropsWithChildren<HTMLAttributes<HTMLInputElement>>) => {\r\n  const { state, dispatch, startInputRef } = useDatepickerRangeContext();\r\n\r\n  const onChangeCallback = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      dispatch({ type: 'START_INPUT_ONCHANGE', value: e.target.value });\r\n\r\n      (props.children as any).props.onChange && (props.children as any).props.onChange(e);\r\n    },\r\n    [dispatch, props.children]\r\n  );\r\n\r\n  const onFocusCallback = useCallback(\r\n    (e: React.FocusEvent<HTMLInputElement>) => {\r\n      dispatch({ type: 'START_FOCUS' });\r\n\r\n      (props.children as any).props.onFocus && (props.children as any).props.onFocus(e);\r\n    },\r\n    [dispatch, props.children]\r\n  );\r\n\r\n  const onKeyDownCallback = useCallback(\r\n    (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n      if (e.keyCode === KEY_CODES.ENTER) {\r\n        dispatch({ type: 'START_BLUR' });\r\n        e.preventDefault();\r\n      }\r\n\r\n      (props.children as any).props.onKeyDown && (props.children as any).props.onKeyDown(e);\r\n    },\r\n    [dispatch, props.children]\r\n  );\r\n\r\n  const onBlurCallback = useCallback(\r\n    (e: React.FocusEvent<HTMLInputElement>) => {\r\n      dispatch({ type: 'START_BLUR' });\r\n\r\n      (props.children as any).props.onBlur && (props.children as any).props.onBlur(e);\r\n    },\r\n    [dispatch, props.children]\r\n  );\r\n\r\n  const childElement = React.Children.only(props.children as React.ReactElement);\r\n\r\n  return React.cloneElement(childElement, {\r\n    value: state.startInputValue,\r\n    ref: startInputRef,\r\n    onChange: composeEventHandlers(childElement.props.onChange, onChangeCallback),\r\n    onFocus: composeEventHandlers(childElement.props.onFocus, onFocusCallback),\r\n    onKeyDown: composeEventHandlers(childElement.props.onKeyDown, onKeyDownCallback),\r\n    onBlur: composeEventHandlers(childElement.props.onBlur, onBlurCallback)\r\n  });\r\n};\r\n\r\nexport default Start;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport addMonths from 'date-fns/addMonths';\r\nimport subMonths from 'date-fns/subMonths';\r\nimport isBefore from 'date-fns/isBefore';\r\nimport isValid from 'date-fns/isValid';\r\nimport isSameDay from 'date-fns/isSameDay';\r\nimport endOfMonth from 'date-fns/endOfMonth';\r\nimport parse from 'date-fns/parse';\r\nimport startOfMonth from 'date-fns/startOfMonth';\r\nimport compareAsc from 'date-fns/compareAsc';\r\nimport isAfter from 'date-fns/isAfter';\r\nimport { IDatepickerRangeProps } from '../DatepickerRange';\r\n\r\nexport interface IDatepickerRangeState {\r\n  previewDate: Date;\r\n  hoverDate?: Date;\r\n  isStartFocused: boolean;\r\n  isEndFocused: boolean;\r\n  startInputValue?: string;\r\n  endInputValue?: string;\r\n}\r\n\r\n/**\r\n * Format date value to a localized string\r\n */\r\nfunction formatValue({\r\n  value,\r\n  locale,\r\n  formatDate\r\n}: {\r\n  value?: Date;\r\n  formatDate?: any;\r\n  locale?: string;\r\n}) {\r\n  let stringValue = '';\r\n\r\n  if (value !== undefined && isValid(value)) {\r\n    if (formatDate) {\r\n      stringValue = formatDate(value);\r\n    } else {\r\n      stringValue = new Intl.DateTimeFormat(locale, {\r\n        month: 'long',\r\n        day: 'numeric',\r\n        year: 'numeric'\r\n      }).format(value);\r\n    }\r\n  }\r\n\r\n  return stringValue;\r\n}\r\n\r\n/**\r\n * Parse string input value using current locale and date formats\r\n */\r\nfunction parseInputValue({ inputValue }: { inputValue?: string }): Date {\r\n  const MINIMUM_DATE = new Date(1001, 0, 0);\r\n  let tryParseDate = parse(inputValue || '', 'P', new Date());\r\n\r\n  if (isValid(tryParseDate) && !isBefore(tryParseDate, MINIMUM_DATE)) {\r\n    return tryParseDate;\r\n  }\r\n\r\n  tryParseDate = parse(inputValue || '', 'PP', new Date());\r\n\r\n  if (isValid(tryParseDate) && !isBefore(tryParseDate, MINIMUM_DATE)) {\r\n    return tryParseDate;\r\n  }\r\n\r\n  tryParseDate = parse(inputValue || '', 'PPP', new Date());\r\n\r\n  if (isValid(tryParseDate) && !isBefore(tryParseDate, MINIMUM_DATE)) {\r\n    return tryParseDate;\r\n  }\r\n\r\n  return new Date(NaN);\r\n}\r\n\r\nexport type DatepickerRangeAction =\r\n  | { type: 'HOVER_DATE'; value?: Date }\r\n  | { type: 'CLICK_DATE'; value: Date }\r\n  | { type: 'PREVIEW_NEXT_MONTH' }\r\n  | { type: 'PREVIEW_PREVIOUS_MONTH' }\r\n  | { type: 'START_INPUT_ONCHANGE'; value: string }\r\n  | { type: 'END_INPUT_ONCHANGE'; value: string }\r\n  | { type: 'START_BLUR' }\r\n  | { type: 'END_BLUR' }\r\n  | { type: 'START_FOCUS' }\r\n  | { type: 'END_FOCUS' }\r\n  | { type: 'CONTROLLED_START_VALUE_CHANGE'; value?: Date }\r\n  | { type: 'CONTROLLED_END_VALUE_CHANGE'; value?: Date };\r\n\r\nexport const datepickerRangeReducer =\r\n  ({\r\n    startValue,\r\n    endValue,\r\n    locale,\r\n    formatDate,\r\n    onChange,\r\n    customParseDate\r\n  }: {\r\n    startValue?: Date;\r\n    endValue?: Date;\r\n    locale?: string;\r\n    formatDate?: any;\r\n    onChange?: (values: { startValue?: Date; endValue?: Date }) => void;\r\n    customParseDate?: (inputValue?: string) => Date;\r\n  }) =>\r\n  (state: IDatepickerRangeState, action: DatepickerRangeAction): IDatepickerRangeState => {\r\n    switch (action.type) {\r\n      case 'START_FOCUS': {\r\n        let previewDate = state.previewDate;\r\n\r\n        if (startValue) {\r\n          if (\r\n            compareAsc(startValue, startOfMonth(state.previewDate)) === 1 &&\r\n            compareAsc(startValue, addMonths(endOfMonth(state.previewDate), 1)) === -1\r\n          ) {\r\n            previewDate = state.previewDate;\r\n          } else {\r\n            previewDate = startOfMonth(startValue);\r\n          }\r\n        }\r\n\r\n        return { ...state, previewDate, isStartFocused: true, isEndFocused: false };\r\n      }\r\n      case 'END_FOCUS': {\r\n        let previewDate = state.previewDate;\r\n\r\n        if (endValue) {\r\n          if (\r\n            compareAsc(endValue, startOfMonth(state.previewDate)) === 1 &&\r\n            compareAsc(endValue, addMonths(endOfMonth(state.previewDate), 1)) === -1\r\n          ) {\r\n            previewDate = state.previewDate;\r\n          } else {\r\n            previewDate = startOfMonth(endValue);\r\n          }\r\n        }\r\n\r\n        return { ...state, previewDate, isEndFocused: true, isStartFocused: false };\r\n      }\r\n      case 'START_BLUR': {\r\n        let parsedDate;\r\n\r\n        if (customParseDate) {\r\n          parsedDate = customParseDate(state.startInputValue);\r\n        } else {\r\n          parsedDate = parseInputValue({\r\n            inputValue: state.startInputValue\r\n          });\r\n        }\r\n\r\n        if (onChange && parsedDate && isValid(parsedDate) && !isSameDay(parsedDate, startValue!)) {\r\n          onChange({ startValue: parsedDate, endValue });\r\n        }\r\n\r\n        const startInputValue = formatValue({ value: parsedDate, locale, formatDate });\r\n\r\n        return {\r\n          ...state,\r\n          startInputValue:\r\n            startInputValue || formatValue({ value: startValue, locale, formatDate }),\r\n          isStartFocused: false\r\n        };\r\n      }\r\n      case 'END_BLUR': {\r\n        let parsedDate;\r\n\r\n        if (customParseDate) {\r\n          parsedDate = customParseDate(state.endInputValue);\r\n        } else {\r\n          parsedDate = parseInputValue({\r\n            inputValue: state.endInputValue\r\n          });\r\n        }\r\n\r\n        if (onChange && parsedDate && isValid(parsedDate) && !isSameDay(parsedDate, endValue!)) {\r\n          onChange({ startValue, endValue: parsedDate });\r\n        }\r\n\r\n        const endInputValue =\r\n          formatValue({ value: parsedDate, locale, formatDate }) ||\r\n          formatValue({ value: endValue, locale, formatDate });\r\n\r\n        return {\r\n          ...state,\r\n          endInputValue,\r\n          isEndFocused: false\r\n        };\r\n      }\r\n      case 'CONTROLLED_START_VALUE_CHANGE': {\r\n        const startInputValue = formatValue({ value: action.value, locale, formatDate });\r\n\r\n        let previewDate = state.previewDate;\r\n\r\n        if (action.value) {\r\n          if (\r\n            compareAsc(action.value, startOfMonth(state.previewDate)) === 1 &&\r\n            compareAsc(action.value, addMonths(endOfMonth(state.previewDate), 1)) === -1\r\n          ) {\r\n            previewDate = state.previewDate;\r\n          } else {\r\n            previewDate = startOfMonth(action.value);\r\n          }\r\n        }\r\n\r\n        return {\r\n          ...state,\r\n          startInputValue,\r\n          hoverDate: undefined,\r\n          previewDate\r\n        };\r\n      }\r\n      case 'CONTROLLED_END_VALUE_CHANGE': {\r\n        const endInputValue = formatValue({ value: action.value, locale, formatDate });\r\n\r\n        let previewDate = state.previewDate;\r\n\r\n        if (action.value) {\r\n          if (\r\n            compareAsc(action.value, startOfMonth(state.previewDate)) === 1 &&\r\n            compareAsc(action.value, addMonths(endOfMonth(state.previewDate), 1)) === -1\r\n          ) {\r\n            previewDate = state.previewDate;\r\n          } else {\r\n            previewDate = startOfMonth(action.value);\r\n          }\r\n        }\r\n\r\n        return {\r\n          ...state,\r\n          endInputValue,\r\n          hoverDate: undefined,\r\n          previewDate\r\n        };\r\n      }\r\n      case 'CLICK_DATE':\r\n        if (onChange) {\r\n          if (state.isStartFocused) {\r\n            if (\r\n              endValue !== undefined &&\r\n              (isBefore(action.value, endValue) || isSameDay(action.value, endValue))\r\n            ) {\r\n              onChange({ startValue: action.value, endValue });\r\n            } else {\r\n              onChange({ startValue: action.value, endValue: undefined });\r\n            }\r\n          } else if (state.isEndFocused) {\r\n            if (\r\n              startValue !== undefined &&\r\n              (isAfter(action.value, startValue) || isSameDay(action.value, startValue))\r\n            ) {\r\n              onChange({ startValue, endValue: action.value });\r\n            } else {\r\n              onChange({ startValue: action.value, endValue: undefined });\r\n            }\r\n          } else if (startValue === undefined) {\r\n            onChange({ startValue: action.value, endValue: undefined });\r\n          } else if (endValue === undefined) {\r\n            if (isBefore(action.value, startValue)) {\r\n              onChange({ startValue: action.value, endValue: undefined });\r\n            } else {\r\n              onChange({ startValue, endValue: action.value });\r\n            }\r\n          } else {\r\n            onChange({ startValue: action.value, endValue: undefined });\r\n          }\r\n        }\r\n\r\n        return state;\r\n      case 'START_INPUT_ONCHANGE': {\r\n        return { ...state, startInputValue: action.value };\r\n      }\r\n      case 'END_INPUT_ONCHANGE': {\r\n        return { ...state, endInputValue: action.value };\r\n      }\r\n      case 'HOVER_DATE':\r\n        return { ...state, hoverDate: action.value };\r\n      case 'PREVIEW_NEXT_MONTH': {\r\n        const previewDate = addMonths(state.previewDate, 1);\r\n\r\n        return { ...state, previewDate, hoverDate: undefined };\r\n      }\r\n      case 'PREVIEW_PREVIOUS_MONTH': {\r\n        const previewDate = subMonths(state.previewDate, 1);\r\n\r\n        return { ...state, previewDate, hoverDate: undefined };\r\n      }\r\n      /* istanbul ignore next */\r\n      default:\r\n        throw new Error();\r\n    }\r\n  };\r\n\r\n/**\r\n * Retrieve initial state for the Datepicker reducer\r\n */\r\nexport function retrieveInitialState(initialProps: IDatepickerRangeProps): IDatepickerRangeState {\r\n  let previewDate = initialProps.startValue!;\r\n\r\n  if (previewDate === undefined || !isValid(previewDate)) {\r\n    previewDate = new Date();\r\n  }\r\n\r\n  const startInputValue = formatValue({\r\n    value: initialProps.startValue,\r\n    locale: initialProps.locale,\r\n    formatDate: initialProps.formatDate\r\n  });\r\n\r\n  const endInputValue = formatValue({\r\n    value: initialProps.endValue,\r\n    locale: initialProps.locale,\r\n    formatDate: initialProps.formatDate\r\n  });\r\n\r\n  return {\r\n    previewDate,\r\n    startInputValue,\r\n    endInputValue,\r\n    isStartFocused: false,\r\n    isEndFocused: false\r\n  };\r\n}\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { useContext, createContext, MutableRefObject } from 'react';\r\nimport { IDatepickerRangeState, DatepickerRangeAction } from './datepicker-range-reducer';\r\n\r\nexport interface IDatepickerRangeContext {\r\n  state: IDatepickerRangeState;\r\n  dispatch: React.Dispatch<DatepickerRangeAction>;\r\n  locale?: string;\r\n  isCompact?: boolean;\r\n  minValue?: Date;\r\n  maxValue?: Date;\r\n  startValue?: Date;\r\n  endValue?: Date;\r\n  onChange?: (values: { startValue?: Date; endValue?: Date }) => void;\r\n  startInputRef: MutableRefObject<HTMLInputElement | undefined>;\r\n  endInputRef: MutableRefObject<HTMLInputElement | undefined>;\r\n}\r\n\r\nexport const DatepickerRangeContext = createContext<IDatepickerRangeContext | undefined>(undefined);\r\n\r\n/**\r\n * Retrieve Dropdown component context\r\n */\r\nconst useDatepickerContext = () => {\r\n  return useContext<IDatepickerRangeContext>(DatepickerRangeContext as any);\r\n};\r\n\r\nexport default useDatepickerContext;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, {\r\n  useRef,\r\n  useEffect,\r\n  useReducer,\r\n  useCallback,\r\n  useState,\r\n  useContext,\r\n  useMemo\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeContext } from 'styled-components';\r\nimport { Manager, Popper, Reference } from 'react-popper';\r\nimport { Modifiers } from 'popper.js';\r\nimport { KEY_CODES, composeEventHandlers } from '@zendeskgarden/container-utilities';\r\nimport {\r\n  getRtlPopperPlacement,\r\n  getPopperPlacement,\r\n  GARDEN_PLACEMENT,\r\n  POPPER_PLACEMENT\r\n} from './utils/garden-placements';\r\nimport Calendar from './components/Calendar';\r\nimport { datepickerReducer, retrieveInitialState } from './utils/datepicker-reducer';\r\nimport { DatepickerContext } from './utils/useDatepickerContext';\r\nimport { StyledMenu, StyledMenuWrapper } from '../../styled';\r\n\r\nexport interface IDatepickerProps {\r\n  /**\r\n   * Sets the selected date\r\n   */\r\n  value?: Date;\r\n  /**\r\n   * Handles date change\r\n   *\r\n   * @param {Date} date The selected date\r\n   */\r\n  onChange?: (date: Date) => void;\r\n  /**\r\n   * Customizes the input element's date formatting\r\n   *\r\n   *  @param {Date} date The selected date\r\n   *  @returns {string} a formatted date string\r\n   */\r\n  formatDate?: (date: Date) => string;\r\n  /**\r\n   * Applies locale-based formatting.\r\n   * Accepts all valid `Intl` [locales](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#Locale_identification_and_negotiation).\r\n   */\r\n  locale?: string;\r\n  /**\r\n   * Disables dates before this value on the calendar\r\n   */\r\n  minValue?: Date;\r\n  /**\r\n   * Disables dates after this value on the calendar\r\n   */\r\n  maxValue?: Date;\r\n  /**\r\n   * Applies compact styling\r\n   */\r\n  isCompact?: boolean;\r\n  /**\r\n   * Overrides default date parsing\r\n   *\r\n   * @param {string} inputValue A localized input value\r\n   * @returns {Date} the parsed date\r\n   */\r\n  customParseDate?: (inputValue: string) => Date;\r\n  /**\r\n   * Defines the ref key used to position the calendar\r\n   */\r\n  refKey?: string;\r\n  /**\r\n   * Adjusts the position of the calendar\r\n   **/\r\n  placement?: GARDEN_PLACEMENT;\r\n  /**\r\n   * Passes configuration options to the [Popper instance](https://popper.js.org/docs/v2/modifiers/)\r\n   */\r\n  popperModifiers?: Modifiers;\r\n  /**\r\n   * Animates the calendar\r\n   */\r\n  isAnimated?: boolean;\r\n  /**\r\n   * Allows the calendar to reposition during browser resize events\r\n   */\r\n  eventsEnabled?: boolean;\r\n  /**\r\n   * Sets the `z-index` of the calendar\r\n   */\r\n  zIndex?: number;\r\n}\r\n\r\nexport const Datepicker: React.FunctionComponent<IDatepickerProps> = props => {\r\n  const {\r\n    children,\r\n    placement,\r\n    popperModifiers,\r\n    eventsEnabled,\r\n    zIndex,\r\n    isAnimated,\r\n    refKey,\r\n    value,\r\n    isCompact,\r\n    onChange,\r\n    formatDate,\r\n    minValue,\r\n    maxValue,\r\n    locale,\r\n    customParseDate\r\n  } = props;\r\n  const theme = useContext(ThemeContext);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const memoizedReducer = useCallback(\r\n    datepickerReducer({ value, formatDate, locale, customParseDate, onChange }),\r\n    [value, formatDate, locale, onChange, customParseDate]\r\n  );\r\n  const [state, dispatch] = useReducer(memoizedReducer, retrieveInitialState(props));\r\n  const scheduleUpdateRef = useRef<(() => void) | undefined>(undefined);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const isInputMouseDownRef = useRef(false);\r\n\r\n  /**\r\n   * Recalculate popper placement while open to allow animations to complete.\r\n   * This must be ran every render to allow for the number of items to change\r\n   * and still be placed correctly.\r\n   **/\r\n  useEffect(() => {\r\n    if (state.isOpen && scheduleUpdateRef.current) {\r\n      scheduleUpdateRef.current();\r\n    }\r\n  });\r\n\r\n  const [isVisible, setVisible] = useState(state.isOpen);\r\n\r\n  useEffect(() => {\r\n    let timeout: any;\r\n\r\n    if (state.isOpen) {\r\n      setVisible(true);\r\n    } else if (isAnimated) {\r\n      // Match the duration of the menu fade out transition.\r\n      timeout = setTimeout(() => setVisible(false), 200);\r\n    } else {\r\n      setVisible(false);\r\n    }\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [state.isOpen, isAnimated]);\r\n\r\n  /**\r\n   * Dispatch update to reducer when controlled value is changed\r\n   */\r\n  useEffect(() => {\r\n    dispatch({ type: 'CONTROLLED_VALUE_CHANGE', value });\r\n  }, [value]);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: 'CONTROLLED_LOCALE_CHANGE' });\r\n  }, [locale]);\r\n\r\n  const popperPlacement = theme.rtl\r\n    ? getRtlPopperPlacement(placement!)\r\n    : getPopperPlacement(placement!);\r\n\r\n  const contextValue = useMemo(() => ({ state, dispatch }), [state, dispatch]);\r\n\r\n  return (\r\n    <DatepickerContext.Provider value={contextValue}>\r\n      <Manager>\r\n        <Reference>\r\n          {({ ref }) => {\r\n            const childElement = React.Children.only(children as React.ReactElement);\r\n\r\n            return React.cloneElement(childElement, {\r\n              [refKey!]: (refValue: HTMLElement) => {\r\n                (ref as any)(refValue);\r\n                (inputRef as any).current = refValue;\r\n              },\r\n              onMouseDown: composeEventHandlers(childElement.props.onMouseDown, () => {\r\n                isInputMouseDownRef.current = true;\r\n              }),\r\n              onMouseUp: composeEventHandlers(childElement.props.onMouseUp, () => {\r\n                setTimeout(() => {\r\n                  isInputMouseDownRef.current = false;\r\n                }, 0);\r\n              }),\r\n              onClick: composeEventHandlers(childElement.props.onClick, () => {\r\n                /** Ensure click/focus events from associated labels are not triggered */\r\n                if (isInputMouseDownRef.current && !state.isOpen) {\r\n                  dispatch({ type: 'OPEN' });\r\n                }\r\n              }),\r\n              onBlur: composeEventHandlers(childElement.props.onBlur, () => {\r\n                dispatch({ type: 'CLOSE' });\r\n              }),\r\n              onChange: composeEventHandlers(\r\n                childElement.props.onChange,\r\n                (e: React.ChangeEvent<HTMLInputElement>) => {\r\n                  dispatch({ type: 'MANUALLY_UPDATE_INPUT', value: e.target.value });\r\n                }\r\n              ),\r\n              onKeyDown: composeEventHandlers(\r\n                childElement.props.onKeyDown,\r\n                (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n                  switch (e.keyCode) {\r\n                    case KEY_CODES.ESCAPE:\r\n                    case KEY_CODES.ENTER:\r\n                      dispatch({ type: 'CLOSE' });\r\n                      break;\r\n                    case KEY_CODES.UP:\r\n                    case KEY_CODES.DOWN:\r\n                    case KEY_CODES.SPACE:\r\n                      dispatch({ type: 'OPEN' });\r\n                      break;\r\n                  }\r\n                }\r\n              ),\r\n              autoComplete: 'off',\r\n              value: state.inputValue\r\n            });\r\n          }}\r\n        </Reference>\r\n        <Popper\r\n          placement={popperPlacement}\r\n          modifiers={popperModifiers}\r\n          // Disable position updating on scroll events while menu is closed\r\n          eventsEnabled={state.isOpen && eventsEnabled}\r\n        >\r\n          {({ ref, style, scheduleUpdate, placement: currentPlacement }) => {\r\n            scheduleUpdateRef.current = scheduleUpdate;\r\n\r\n            return (\r\n              <StyledMenuWrapper\r\n                ref={ref}\r\n                style={style}\r\n                isHidden={!state.isOpen}\r\n                isAnimated={isAnimated && (state.isOpen || isVisible)}\r\n                placement={currentPlacement as POPPER_PLACEMENT}\r\n                zIndex={zIndex}\r\n                data-test-id=\"datepicker-menu\"\r\n                data-test-open={state.isOpen}\r\n                data-test-rtl={theme.rtl}\r\n              >\r\n                {(state.isOpen || isVisible) && (\r\n                  <StyledMenu>\r\n                    <Calendar\r\n                      isCompact={isCompact}\r\n                      value={value}\r\n                      minValue={minValue}\r\n                      maxValue={maxValue}\r\n                      locale={locale}\r\n                    />\r\n                  </StyledMenu>\r\n                )}\r\n              </StyledMenuWrapper>\r\n            );\r\n          }}\r\n        </Popper>\r\n      </Manager>\r\n    </DatepickerContext.Provider>\r\n  );\r\n};\r\n\r\nDatepicker.propTypes = {\r\n  value: PropTypes.any,\r\n  onChange: PropTypes.any,\r\n  formatDate: PropTypes.func,\r\n  locale: PropTypes.any,\r\n  minValue: PropTypes.any,\r\n  maxValue: PropTypes.any,\r\n  isCompact: PropTypes.bool,\r\n  customParseDate: PropTypes.any,\r\n  refKey: PropTypes.string,\r\n  placement: PropTypes.oneOf([\r\n    'auto',\r\n    'top',\r\n    'top-start',\r\n    'top-end',\r\n    'end',\r\n    'end-top',\r\n    'end-bottom',\r\n    'bottom',\r\n    'bottom-start',\r\n    'bottom-end',\r\n    'start',\r\n    'start-top',\r\n    'start-bottom'\r\n  ]),\r\n  popperModifiers: PropTypes.any,\r\n  isAnimated: PropTypes.bool,\r\n  eventsEnabled: PropTypes.bool,\r\n  zIndex: PropTypes.number\r\n};\r\n\r\nDatepicker.defaultProps = {\r\n  placement: 'bottom-start',\r\n  refKey: 'ref',\r\n  isAnimated: true,\r\n  eventsEnabled: true,\r\n  zIndex: 1000,\r\n  locale: 'en-US'\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useCallback } from 'react';\r\nimport startOfMonth from 'date-fns/startOfMonth';\r\nimport endOfMonth from 'date-fns/endOfMonth';\r\nimport startOfWeek from 'date-fns/startOfWeek';\r\nimport endOfWeek from 'date-fns/endOfWeek';\r\nimport eachDayOfInterval from 'date-fns/eachDayOfInterval';\r\nimport addDays from 'date-fns/addDays';\r\nimport isToday from 'date-fns/isToday';\r\nimport isSameDay from 'date-fns/isSameDay';\r\nimport isSameMonth from 'date-fns/isSameMonth';\r\nimport isBefore from 'date-fns/isBefore';\r\nimport isAfter from 'date-fns/isAfter';\r\nimport getDate from 'date-fns/getDate';\r\nimport {\r\n  StyledDatepicker,\r\n  StyledCalendar,\r\n  StyledCalendarItem,\r\n  StyledDayLabel,\r\n  StyledDay\r\n} from '../../../styled';\r\nimport useDatepickerContext from '../utils/useDatepickerContext';\r\nimport { getStartOfWeek } from '../../../utils/calendar-utils';\r\nimport MonthSelector from './MonthSelector';\r\n\r\ninterface ICalendarProps {\r\n  value?: Date;\r\n  minValue?: Date;\r\n  maxValue?: Date;\r\n  isCompact?: boolean;\r\n  locale?: string;\r\n}\r\n\r\nconst Calendar: React.FunctionComponent<ICalendarProps> = ({\r\n  value,\r\n  minValue,\r\n  maxValue,\r\n  isCompact,\r\n  locale\r\n}) => {\r\n  const { state, dispatch } = useDatepickerContext();\r\n\r\n  const weekStartsOn = getStartOfWeek(locale);\r\n  const monthStartDate = startOfMonth(state.previewDate);\r\n  const monthEndDate = endOfMonth(monthStartDate);\r\n  const startDate = startOfWeek(monthStartDate, {\r\n    weekStartsOn\r\n  });\r\n  const endDate = endOfWeek(monthEndDate, {\r\n    weekStartsOn\r\n  });\r\n\r\n  const dayLabelFormatter = useCallback(\r\n    date => {\r\n      const formatter = new Intl.DateTimeFormat(locale, {\r\n        weekday: 'short'\r\n      });\r\n\r\n      return formatter.format(date);\r\n    },\r\n    [locale]\r\n  );\r\n\r\n  const dayLabels = eachDayOfInterval({ start: startDate, end: addDays(startDate, 6) }).map(\r\n    date => {\r\n      const formattedDayLabel = dayLabelFormatter(date);\r\n\r\n      return (\r\n        <StyledCalendarItem key={`day-label-${formattedDayLabel}`} isCompact={isCompact}>\r\n          <StyledDayLabel isCompact={isCompact!}>{formattedDayLabel}</StyledDayLabel>\r\n        </StyledCalendarItem>\r\n      );\r\n    }\r\n  );\r\n\r\n  const items = eachDayOfInterval({ start: startDate, end: endDate }).map((date, itemsIndex) => {\r\n    const formattedDayLabel = getDate(date);\r\n    const isCurrentDate = isToday(date);\r\n    const isPreviousMonth = !isSameMonth(date, state.previewDate);\r\n    const isSelected = value && isSameDay(date, value);\r\n\r\n    let isDisabled = false;\r\n\r\n    if (minValue !== undefined) {\r\n      isDisabled = isBefore(date, minValue) && !isSameDay(date, minValue);\r\n    }\r\n\r\n    if (maxValue !== undefined) {\r\n      isDisabled = isDisabled || (isAfter(date, maxValue) && !isSameDay(date, maxValue));\r\n    }\r\n\r\n    return (\r\n      <StyledCalendarItem key={`day-${itemsIndex}`} isCompact={isCompact}>\r\n        <StyledDay\r\n          isToday={isCurrentDate}\r\n          isPreviousMonth={isPreviousMonth}\r\n          isSelected={isSelected}\r\n          isDisabled={isDisabled}\r\n          isCompact={isCompact!}\r\n          onClick={() => {\r\n            if (!isDisabled) {\r\n              dispatch({ type: 'SELECT_DATE', value: date });\r\n            }\r\n          }}\r\n          data-test-id=\"day\"\r\n          data-test-previous={isPreviousMonth}\r\n          data-test-selected={isSelected}\r\n          data-test-disabled={isDisabled}\r\n          data-test-today={isCurrentDate}\r\n        >\r\n          {formattedDayLabel}\r\n        </StyledDay>\r\n      </StyledCalendarItem>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <StyledDatepicker\r\n      isCompact={isCompact!}\r\n      data-test-id=\"calendar-wrapper\"\r\n      onMouseDown={e => {\r\n        /** Stop focus from escaping input */\r\n        e.preventDefault();\r\n      }}\r\n    >\r\n      <MonthSelector locale={locale} isCompact={isCompact!} />\r\n      <StyledCalendar isCompact={isCompact!}>\r\n        {dayLabels}\r\n        {items}\r\n      </StyledCalendar>\r\n    </StyledDatepicker>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useCallback } from 'react';\r\nimport { StyledHeader, StyledHeaderPaddle, StyledHeaderLabel } from '../../../styled';\r\nimport useDatepickerContext from '../utils/useDatepickerContext';\r\n\r\ninterface IMonthSelectorProps {\r\n  locale?: string;\r\n  isCompact: boolean;\r\n}\r\n\r\nconst MonthSelector: React.FunctionComponent<IMonthSelectorProps> = ({ locale, isCompact }) => {\r\n  const { state, dispatch } = useDatepickerContext();\r\n\r\n  const headerLabelFormatter = useCallback(\r\n    date => {\r\n      const formatter = new Intl.DateTimeFormat(locale, {\r\n        month: 'long',\r\n        year: 'numeric'\r\n      });\r\n\r\n      return formatter.format(date);\r\n    },\r\n    [locale]\r\n  );\r\n\r\n  return (\r\n    <StyledHeader isCompact={isCompact}>\r\n      <StyledHeaderPaddle\r\n        isCompact={isCompact}\r\n        onClick={() => {\r\n          dispatch({\r\n            type: 'PREVIEW_PREVIOUS_MONTH'\r\n          });\r\n        }}\r\n        data-test-id=\"previous-month\"\r\n      >\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"currentColor\" d=\"M10.39 12.688a.5.5 0 01-.718.69l-.062-.066-4-5a.5.5 0 01-.054-.542l.054-.082 4-5a.5.5 0 01.83.55l-.05.074L6.641 8l3.75 4.688z\"/>\r\n</svg>\r\n      </StyledHeaderPaddle>\r\n      <StyledHeaderLabel isCompact={isCompact} data-test-id=\"month-display\">\r\n        {headerLabelFormatter(state.previewDate)}\r\n      </StyledHeaderLabel>\r\n      <StyledHeaderPaddle\r\n        isCompact={isCompact}\r\n        onClick={() => {\r\n          dispatch({\r\n            type: 'PREVIEW_NEXT_MONTH'\r\n          });\r\n        }}\r\n        data-test-id=\"next-month\"\r\n      >\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"currentColor\" d=\"M5.61 3.312a.5.5 0 01.718-.69l.062.066 4 5a.5.5 0 01.054.542l-.054.082-4 5a.5.5 0 01-.83-.55l.05-.074L9.359 8l-3.75-4.688z\"/>\r\n</svg>\r\n      </StyledHeaderPaddle>\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nexport default MonthSelector;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport addMonths from 'date-fns/addMonths';\r\nimport subMonths from 'date-fns/subMonths';\r\nimport isValid from 'date-fns/isValid';\r\nimport { IDatepickerProps } from '../Datepicker';\r\nimport parse from 'date-fns/parse';\r\nimport isBefore from 'date-fns/isBefore';\r\nimport isSameDay from 'date-fns/isSameDay';\r\n\r\nexport interface IDatepickerState {\r\n  isOpen: boolean;\r\n  previewDate: Date;\r\n  inputValue: string;\r\n}\r\n\r\n/**\r\n * Parse string input value using current locale and date formats\r\n */\r\nfunction parseInputValue({\r\n  inputValue,\r\n  customParseDate\r\n}: {\r\n  inputValue: string;\r\n  customParseDate?: (value: string) => Date;\r\n}): Date {\r\n  if (customParseDate) {\r\n    return customParseDate(inputValue);\r\n  }\r\n\r\n  const MINIMUM_DATE = new Date(1001, 0, 0);\r\n  let tryParseDate = parse(inputValue, 'P', new Date());\r\n\r\n  if (isValid(tryParseDate) && !isBefore(tryParseDate, MINIMUM_DATE)) {\r\n    return tryParseDate;\r\n  }\r\n\r\n  tryParseDate = parse(inputValue, 'PP', new Date());\r\n\r\n  if (isValid(tryParseDate) && !isBefore(tryParseDate, MINIMUM_DATE)) {\r\n    return tryParseDate;\r\n  }\r\n\r\n  tryParseDate = parse(inputValue, 'PPP', new Date());\r\n\r\n  if (isValid(tryParseDate) && !isBefore(tryParseDate, MINIMUM_DATE)) {\r\n    return tryParseDate;\r\n  }\r\n\r\n  return new Date(NaN);\r\n}\r\n\r\n/**\r\n * Format inputValue with the correct locale\r\n */\r\nfunction formatInputValue({\r\n  date,\r\n  locale,\r\n  formatDate\r\n}: {\r\n  date?: Date;\r\n  locale: string;\r\n  formatDate?: (d: Date) => string;\r\n}) {\r\n  if (!date) {\r\n    return '';\r\n  }\r\n\r\n  if (formatDate) {\r\n    return formatDate(date);\r\n  }\r\n\r\n  return new Intl.DateTimeFormat(locale, {\r\n    month: 'long',\r\n    day: 'numeric',\r\n    year: 'numeric'\r\n  }).format(date);\r\n}\r\n\r\nexport type DatepickerAction =\r\n  | { type: 'OPEN' }\r\n  | { type: 'CLOSE' }\r\n  | { type: 'PREVIEW_NEXT_MONTH' }\r\n  | { type: 'PREVIEW_PREVIOUS_MONTH' }\r\n  | { type: 'MANUALLY_UPDATE_INPUT'; value: string }\r\n  | { type: 'CONTROLLED_VALUE_CHANGE'; value?: Date }\r\n  | { type: 'CONTROLLED_LOCALE_CHANGE' }\r\n  | { type: 'SELECT_DATE'; value: Date };\r\n\r\nexport const datepickerReducer =\r\n  ({\r\n    value,\r\n    formatDate,\r\n    locale,\r\n    customParseDate,\r\n    onChange\r\n  }: {\r\n    value?: Date;\r\n    formatDate?: (date: Date) => string;\r\n    locale: any;\r\n    customParseDate?: (inputValue: string) => Date;\r\n    onChange?: (date: Date) => void;\r\n  }) =>\r\n  (state: IDatepickerState, action: DatepickerAction): IDatepickerState => {\r\n    switch (action.type) {\r\n      case 'OPEN':\r\n        return { ...state, isOpen: true, previewDate: value || new Date() };\r\n      case 'CLOSE': {\r\n        const inputValue = formatInputValue({ date: value, locale, formatDate });\r\n\r\n        return { ...state, isOpen: false, inputValue };\r\n      }\r\n      case 'PREVIEW_NEXT_MONTH': {\r\n        const previewDate = addMonths(state.previewDate, 1);\r\n\r\n        return { ...state, previewDate };\r\n      }\r\n      case 'PREVIEW_PREVIOUS_MONTH': {\r\n        const previewDate = subMonths(state.previewDate, 1);\r\n\r\n        return { ...state, previewDate };\r\n      }\r\n      case 'MANUALLY_UPDATE_INPUT': {\r\n        const inputValue = action.value;\r\n        const currentDate = parseInputValue({ inputValue, customParseDate });\r\n\r\n        if (onChange && currentDate && isValid(currentDate) && !isSameDay(value!, currentDate)) {\r\n          onChange(currentDate);\r\n        }\r\n\r\n        return { ...state, isOpen: true, inputValue };\r\n      }\r\n      case 'CONTROLLED_VALUE_CHANGE': {\r\n        const previewDate = action.value || new Date();\r\n        const inputValue = formatInputValue({ date: action.value, locale, formatDate });\r\n\r\n        return { ...state, previewDate, inputValue };\r\n      }\r\n      case 'CONTROLLED_LOCALE_CHANGE': {\r\n        const inputValue = formatInputValue({ date: value, locale, formatDate });\r\n\r\n        return { ...state, inputValue };\r\n      }\r\n      case 'SELECT_DATE': {\r\n        const inputValue = formatInputValue({ date: action.value, locale, formatDate });\r\n\r\n        if (onChange && action.value && isValid(action.value) && !isSameDay(value!, action.value)) {\r\n          onChange(action.value);\r\n        }\r\n\r\n        return { ...state, isOpen: false, inputValue };\r\n      }\r\n      /* istanbul ignore next */\r\n      default:\r\n        throw new Error();\r\n    }\r\n  };\r\n\r\n/**\r\n * Retrieve initial state for the Datepicker reducer\r\n */\r\nexport function retrieveInitialState(initialProps: IDatepickerProps): IDatepickerState {\r\n  let previewDate = initialProps.value;\r\n\r\n  if (previewDate === undefined || !isValid(previewDate)) {\r\n    previewDate = new Date();\r\n  }\r\n\r\n  let inputValue = '';\r\n\r\n  if (initialProps.value !== undefined) {\r\n    if (initialProps.formatDate) {\r\n      inputValue = initialProps.formatDate(initialProps.value);\r\n    } else {\r\n      inputValue = new Intl.DateTimeFormat(initialProps.locale, {\r\n        month: 'long',\r\n        day: 'numeric',\r\n        year: 'numeric'\r\n      }).format(previewDate);\r\n    }\r\n  }\r\n\r\n  return {\r\n    isOpen: false,\r\n    previewDate,\r\n    inputValue\r\n  };\r\n}\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { MENU_POSITION } from '@zendeskgarden/react-theming';\r\n\r\ntype SHARED_PLACEMENT =\r\n  | 'auto'\r\n  | 'top'\r\n  | 'top-start'\r\n  | 'top-end'\r\n  | 'bottom'\r\n  | 'bottom-start'\r\n  | 'bottom-end';\r\n\r\nexport type GARDEN_PLACEMENT =\r\n  | SHARED_PLACEMENT\r\n  | 'end'\r\n  | 'end-top'\r\n  | 'end-bottom'\r\n  | 'start'\r\n  | 'start-top'\r\n  | 'start-bottom';\r\n\r\nexport type POPPER_PLACEMENT =\r\n  | SHARED_PLACEMENT\r\n  | 'right'\r\n  | 'right-start'\r\n  | 'right-end'\r\n  | 'left'\r\n  | 'left-start'\r\n  | 'left-end';\r\n\r\n/**\r\n * Convert Garden RTL aware placement to Popper.JS valid placement\r\n */\r\nexport function getPopperPlacement(gardenPlacement: GARDEN_PLACEMENT): POPPER_PLACEMENT {\r\n  switch (gardenPlacement) {\r\n    case 'end':\r\n      return 'right';\r\n    case 'end-top':\r\n      return 'right-start';\r\n    case 'end-bottom':\r\n      return 'right-end';\r\n    case 'start':\r\n      return 'left';\r\n    case 'start-top':\r\n      return 'left-start';\r\n    case 'start-bottom':\r\n      return 'left-end';\r\n    default:\r\n      return gardenPlacement;\r\n  }\r\n}\r\n\r\n/**\r\n * Convert Garden RTL aware placement to RTL equivalent Popper.JS placement\r\n * @param {String} gardenPlacement\r\n */\r\nexport function getRtlPopperPlacement(gardenPlacement: GARDEN_PLACEMENT): POPPER_PLACEMENT {\r\n  const popperPlacement = getPopperPlacement(gardenPlacement);\r\n\r\n  switch (popperPlacement) {\r\n    case 'left':\r\n      return 'right';\r\n    case 'left-start':\r\n      return 'right-start';\r\n    case 'left-end':\r\n      return 'right-end';\r\n    case 'top-start':\r\n      return 'top-end';\r\n    case 'top-end':\r\n      return 'top-start';\r\n    case 'right':\r\n      return 'left';\r\n    case 'right-start':\r\n      return 'left-start';\r\n    case 'right-end':\r\n      return 'left-end';\r\n    case 'bottom-start':\r\n      return 'bottom-end';\r\n    case 'bottom-end':\r\n      return 'bottom-start';\r\n    default:\r\n      return popperPlacement;\r\n  }\r\n}\r\n\r\n/**\r\n * Convert Popper.JS placement to corresponding menu position\r\n * @param {String} popperPlacement\r\n */\r\nexport function getMenuPosition(popperPlacement?: POPPER_PLACEMENT) {\r\n  return (popperPlacement ? popperPlacement.split('-')[0] : 'bottom') as MENU_POSITION;\r\n}\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { useContext, createContext } from 'react';\r\nimport { IDatepickerState, DatepickerAction } from './datepicker-reducer';\r\n\r\nexport interface IDatepickerContext {\r\n  state: IDatepickerState;\r\n  dispatch: React.Dispatch<DatepickerAction>;\r\n}\r\n\r\nexport const DatepickerContext = createContext<IDatepickerContext | undefined>(undefined);\r\n\r\n/**\r\n * Retrieve Dropdown component context\r\n */\r\nconst useDatepickerContext = () => {\r\n  return useContext<IDatepickerContext>(DatepickerContext as any);\r\n};\r\n\r\nexport default useDatepickerContext;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'datepickers.calendar';\r\n\r\ninterface IStyledCalendarProps {\r\n  isCompact?: boolean;\r\n}\r\n\r\nexport const StyledCalendar = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID\r\n})<IStyledCalendarProps>`\r\n  width: ${props =>\r\n    props.isCompact ? props.theme.space.base * 56 : props.theme.space.base * 70}px;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledCalendar.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme, css } from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'datepickers.calendar_item';\r\n\r\nexport const retrieveSize = ({\r\n  isCompact,\r\n  theme\r\n}: IStyledCalendarItemProps & ThemeProps<DefaultTheme>) => {\r\n  let size;\r\n\r\n  if (isCompact) {\r\n    size = `${theme.space.base * 8}px`;\r\n  } else {\r\n    size = `${theme.space.base * 10}px`;\r\n  }\r\n\r\n  return css`\r\n    width: ${size};\r\n    height: ${size};\r\n  `;\r\n};\r\n\r\ninterface IStyledCalendarItemProps {\r\n  isCompact?: boolean;\r\n}\r\n\r\nexport const StyledCalendarItem = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID\r\n})<IStyledCalendarItemProps>`\r\n  display: inline-block;\r\n  position: relative;\r\n  vertical-align: top;\r\n\r\n  ${retrieveSize}\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledCalendarItem.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'datepickers.datepicker';\r\n\r\nconst retrievePadding = ({\r\n  isCompact,\r\n  theme\r\n}: IStyledDatepickerProps & ThemeProps<DefaultTheme>) => {\r\n  let value = theme.space.base * 5;\r\n\r\n  if (isCompact) {\r\n    value = theme.space.base * 4;\r\n  }\r\n\r\n  return `margin: ${value}px;`;\r\n};\r\n\r\ninterface IStyledDatepickerProps {\r\n  isCompact: boolean;\r\n}\r\n\r\nexport const StyledDatepicker = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID\r\n})<IStyledDatepickerProps>`\r\n  direction: ${props => props.theme.rtl && 'rtl'};\r\n\r\n  ${retrievePadding}\r\n\r\n  background-color: ${props => props.theme.colors.background};\r\n  color: ${props => props.theme.colors.foreground};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledDatepicker.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { DefaultTheme, ThemeProps, css } from 'styled-components';\r\nimport { retrieveComponentStyles, getColor, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\ninterface IStyledDayProps extends ThemeProps<DefaultTheme> {\r\n  isPreviousMonth?: boolean;\r\n  isToday?: boolean;\r\n  isDisabled?: boolean;\r\n  isSelected?: boolean;\r\n  isCompact: boolean;\r\n}\r\n\r\nconst retrieveStyledDayColors = ({\r\n  isSelected,\r\n  isDisabled,\r\n  isToday,\r\n  isPreviousMonth,\r\n  theme\r\n}: IStyledDayProps) => {\r\n  let backgroundColor = 'inherit';\r\n  let color = getColor('primaryHue', 600, theme);\r\n\r\n  if (isSelected && !isDisabled) {\r\n    backgroundColor = getColor('primaryHue', 600, theme)!;\r\n    color = theme.colors.background;\r\n  } else if (isDisabled) {\r\n    color = getColor('neutralHue', 400, theme);\r\n  } else if (isToday) {\r\n    color = 'inherit';\r\n  } else if (isPreviousMonth) {\r\n    color = getColor('neutralHue', 600, theme);\r\n  }\r\n\r\n  return css`\r\n    background-color: ${backgroundColor};\r\n    color: ${color};\r\n\r\n    ${!isSelected &&\r\n    !isDisabled &&\r\n    `\r\n      :hover {\r\n        background-color: ${getColor('primaryHue', 600, theme, 0.08)};\r\n        color: ${getColor('primaryHue', 800, theme)};\r\n      }\r\n\r\n      :active {\r\n        background-color: ${getColor('primaryHue', 600, theme, 0.2)};\r\n        color: ${getColor('primaryHue', 800, theme)};\r\n      }\r\n  `}\r\n  `;\r\n};\r\n\r\nconst COMPONENT_ID = 'datepickers.day';\r\n\r\nexport const StyledDay = styled.div.attrs<IStyledDayProps>(props => ({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'aria-disabled': props.isDisabled ? 'true' : 'false'\r\n}))<IStyledDayProps>`\r\n  display: flex;\r\n  position: absolute;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 50%;\r\n  cursor: ${props => (props.isDisabled ? 'inherit' : 'pointer')};\r\n  width: 100%;\r\n  height: 100%;\r\n  font-size: ${props => (props.isCompact ? props.theme.fontSizes.sm : props.theme.fontSizes.md)};\r\n  font-weight: ${props =>\r\n    props.isToday && !props.isDisabled ? props.theme.fontWeights.semibold : 'inherit'};\r\n\r\n  ${retrieveStyledDayColors}\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledDay.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'datepickers.day_label';\r\n\r\nexport const StyledDayLabel = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID\r\n})<{ isCompact: boolean }>`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  font-size: ${props => (props.isCompact ? props.theme.fontSizes.sm : props.theme.fontSizes.md)};\r\n  font-weight: ${props => props.theme.fontWeights.semibold};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledDayLabel.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'datepickers.header';\r\n\r\nexport const StyledHeader = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID\r\n})<{ isCompact: boolean }>`\r\n  display: flex;\r\n  width: ${props =>\r\n    props.isCompact ? props.theme.space.base * 56 : props.theme.space.base * 70}px;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledHeader.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'datepickers.header_label';\r\n\r\nexport const StyledHeaderLabel = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID\r\n})<{ isCompact: boolean }>`\r\n  display: flex;\r\n  flex-grow: 1;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: ${props => (props.isCompact ? props.theme.fontSizes.sm : props.theme.fontSizes.md)};\r\n  font-weight: ${props => props.theme.fontWeights.semibold};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledHeaderLabel.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme, css } from 'styled-components';\r\nimport { retrieveComponentStyles, getColor, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst retrieveSizing = ({\r\n  isCompact,\r\n  theme\r\n}: { isCompact?: boolean } & ThemeProps<DefaultTheme>) => {\r\n  let size = theme.space.base * 10;\r\n\r\n  if (isCompact) {\r\n    size = theme.space.base * 8;\r\n  }\r\n\r\n  return css`\r\n    width: ${size}px;\r\n    height: ${size}px;\r\n  `;\r\n};\r\n\r\nconst retrieveColor = ({ theme }: ThemeProps<DefaultTheme>) => {\r\n  return css`\r\n    :hover {\r\n      background-color: ${getColor('primaryHue', 600, theme, 0.08)};\r\n      color: ${theme.colors.foreground};\r\n    }\r\n\r\n    :active {\r\n      background-color: ${getColor('primaryHue', 600, theme, 0.2)};\r\n      color: ${theme.colors.foreground};\r\n    }\r\n\r\n    color: ${getColor('neutralHue', 600, theme)};\r\n  `;\r\n};\r\n\r\nconst COMPONENT_ID = 'datepickers.header_paddle';\r\n\r\nexport const StyledHeaderPaddle = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID\r\n})<{\r\n  isCompact: boolean;\r\n  isHidden?: boolean;\r\n}>`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transform: ${props => props.theme.rtl && 'rotate(180deg)'};\r\n  visibility: ${props => props.isHidden && 'hidden'};\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n\r\n  ${/* sc-block */ retrieveSizing}\r\n\r\n  ${retrieveColor}\r\n\r\n  svg {\r\n    width: ${props => `${props.theme.iconSizes.md}`};\r\n    height: ${props => `${props.theme.iconSizes.md}`};\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledHeaderPaddle.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, css, DefaultTheme } from 'styled-components';\r\nimport { getColor, DEFAULT_THEME, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'datepickers.highlight';\r\n\r\nconst retrieveBorderRadius = ({\r\n  theme,\r\n  isEnd,\r\n  isStart\r\n}: IStyledHighlightProps & ThemeProps<DefaultTheme>) => {\r\n  const startValue = 'border-radius: 0 50% 50% 0;';\r\n  const endValue = 'border-radius: 50% 0 0 50%;';\r\n\r\n  if (theme.rtl) {\r\n    if (isStart) {\r\n      return startValue;\r\n    } else if (isEnd) {\r\n      return endValue;\r\n    }\r\n  }\r\n\r\n  if (isStart) {\r\n    return endValue;\r\n  } else if (isEnd) {\r\n    return startValue;\r\n  }\r\n\r\n  return '';\r\n};\r\n\r\nconst retrieveColor = ({\r\n  isHighlighted,\r\n  theme\r\n}: IStyledHighlightProps & ThemeProps<DefaultTheme>) => {\r\n  if (isHighlighted) {\r\n    return css`\r\n      background-color: ${getColor('primaryHue', 600, theme, 0.08)};\r\n    `;\r\n  }\r\n\r\n  return css``;\r\n};\r\n\r\ninterface IStyledHighlightProps {\r\n  isHighlighted: boolean;\r\n  isStart: boolean;\r\n  isEnd: boolean;\r\n}\r\n\r\nexport const StyledHighlight = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID\r\n})<IStyledHighlightProps>`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  ${retrieveBorderRadius}\r\n\r\n  ${retrieveColor}\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledHighlight.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'datepickers.menu';\r\n\r\nexport const StyledMenu = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledMenu.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { DEFAULT_THEME, menuStyles, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\nimport { POPPER_PLACEMENT, getMenuPosition } from '../elements/Datepicker/utils/garden-placements';\r\n\r\nconst COMPONENT_ID = 'datepickers.menu_wrapper';\r\n\r\ninterface IStyledMenuWrapperProps {\r\n  isHidden?: boolean;\r\n  isAnimated?: boolean;\r\n  zIndex?: number;\r\n  placement?: POPPER_PLACEMENT;\r\n}\r\n\r\nexport const StyledMenuWrapper = styled.div.attrs<IStyledMenuWrapperProps>(props => ({\r\n  className: props.isAnimated && 'is-animated'\r\n}))<IStyledMenuWrapperProps>`\r\n  ${props =>\r\n    menuStyles(getMenuPosition(props.placement), {\r\n      theme: props.theme,\r\n      hidden: props.isHidden,\r\n      margin: `${props.theme.space.base}px`,\r\n      zIndex: props.zIndex,\r\n      animationModifier: props.isAnimated ? '.is-animated' : undefined\r\n    })};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledMenuWrapper.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { StyledDatepicker } from './StyledDatepicker';\r\nimport { DEFAULT_THEME, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'datepickers.range_calendar';\r\n\r\nexport const StyledRangeCalendar = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID\r\n})`\r\n  display: flex;\r\n  overflow: auto;\r\n\r\n  ${StyledDatepicker} {\r\n    margin: 0;\r\n\r\n    ${props =>\r\n      props.theme.rtl\r\n        ? `&:last-of-type {margin-right: ${props.theme.space.base * 5}px}`\r\n        : `&:first-of-type {margin-right: ${props.theme.space.base * 5}px}`}\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledRangeCalendar.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n/**\r\n * The following mappings use the Date offests:\r\n * 0 - Sunday\r\n * 1 - Monday\r\n * 6 - Saturday\r\n */\r\n\r\n/** This type matches definition required by date-fns utilities */\r\ntype DateFnsIndex = 0 | 1 | 2 | 3 | 4 | 5 | 6 | undefined;\r\n\r\nconst REGION_MAPPINGS: Record<string, DateFnsIndex> = {\r\n  'ar-DZ': 0,\r\n  'ar-SA': 0,\r\n  'en-CA': 0,\r\n  'en-GB': 1,\r\n  'en-US': 0,\r\n  'fa-IR': 0,\r\n  'fr-CH': 1,\r\n  'nl-BE': 1,\r\n  'pt-BR': 0,\r\n  'zh-CN': 1,\r\n  'zh-TW': 1\r\n};\r\n\r\nconst LANGUAGE_MAPPINGS: Record<string, DateFnsIndex> = {\r\n  af: 0,\r\n  ar: 6,\r\n  be: 1,\r\n  bg: 1,\r\n  bn: 0,\r\n  ca: 1,\r\n  cs: 1,\r\n  da: 1,\r\n  de: 1,\r\n  el: 1,\r\n  en: 0,\r\n  eo: 1,\r\n  es: 1,\r\n  et: 1,\r\n  fa: 0,\r\n  fi: 1,\r\n  fil: 0,\r\n  fr: 1,\r\n  gl: 1,\r\n  he: 0,\r\n  hr: 1,\r\n  hu: 1,\r\n  id: 1,\r\n  is: 1,\r\n  it: 1,\r\n  ja: 1,\r\n  ka: 1,\r\n  ko: 0,\r\n  lt: 1,\r\n  lv: 1,\r\n  mk: 1,\r\n  ms: 1,\r\n  nb: 1,\r\n  nl: 1,\r\n  nn: 1,\r\n  pl: 1,\r\n  pt: 0,\r\n  ro: 1,\r\n  ru: 1,\r\n  sk: 1,\r\n  sl: 1,\r\n  sr: 1,\r\n  sv: 1,\r\n  th: 1,\r\n  tr: 1,\r\n  ug: 0,\r\n  uk: 1,\r\n  vi: 1,\r\n  zh: 1\r\n};\r\n\r\n/**\r\n * Return start day of week based on locale\r\n */\r\nexport function getStartOfWeek(locale?: string) {\r\n  if (!locale) {\r\n    return 0;\r\n  }\r\n\r\n  /** Check is explicit region is mapped */\r\n  for (const region in REGION_MAPPINGS) {\r\n    if (locale.startsWith(region)) {\r\n      return REGION_MAPPINGS[region];\r\n    }\r\n  }\r\n\r\n  /** Check is generic lanuage is mapped */\r\n  for (const language in LANGUAGE_MAPPINGS) {\r\n    if (locale.startsWith(language)) {\r\n      return LANGUAGE_MAPPINGS[language];\r\n    }\r\n  }\r\n\r\n  // Return Sunday as default\r\n  return 0;\r\n}\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport Icon from '@zendeskgarden/svg-icons/src/16/leaf-stroke.svg';\r\nimport {\r\n  Autocomplete,\r\n  IAutocompleteProps,\r\n  IDropdownProps,\r\n  IMenuProps\r\n} from '@zendeskgarden/react-dropdowns';\r\nimport { DropdownFieldStory } from './DropdownFieldStory';\r\nimport { IMenuItem } from './types';\r\n\r\ninterface IArgs extends IAutocompleteProps {\r\n  downshiftProps?: IDropdownProps['downshiftProps'];\r\n  selectedItem: IDropdownProps['selectedItem'];\r\n  inputValue: IDropdownProps['inputValue'];\r\n  onInputValueChange: IDropdownProps['onInputValueChange'];\r\n  onStateChange: IDropdownProps['onStateChange'];\r\n  isOpen?: IDropdownProps['isOpen'];\r\n  label?: string;\r\n  isLabelRegular?: boolean;\r\n  isLabelHidden?: boolean;\r\n  hasHint?: boolean;\r\n  hint?: string;\r\n  hasMessage?: boolean;\r\n  message?: string;\r\n  hasIcon: boolean;\r\n  items: IMenuItem[];\r\n  placement: IMenuProps['placement'];\r\n}\r\n\r\nexport const AutocompleteStory: Story<IArgs> = ({\r\n  label,\r\n  isLabelRegular,\r\n  isLabelHidden,\r\n  hasHint,\r\n  hint,\r\n  hasMessage,\r\n  message,\r\n  downshiftProps,\r\n  selectedItem,\r\n  onSelect,\r\n  inputValue,\r\n  onInputValueChange,\r\n  onStateChange,\r\n  isOpen,\r\n  placement,\r\n  hasIcon,\r\n  items,\r\n  ...args\r\n}) => {\r\n  const [filteredItems, setFilteredItems] = useState(items);\r\n\r\n  useEffect(\r\n    () => setFilteredItems(items.filter(item => item.text.match(new RegExp(inputValue!, 'gui')))),\r\n    [items, inputValue]\r\n  );\r\n\r\n  return (\r\n    <DropdownFieldStory\r\n      dropdownProps={{\r\n        downshiftProps,\r\n        selectedItem,\r\n        inputValue,\r\n        onSelect,\r\n        onInputValueChange,\r\n        onStateChange,\r\n        isOpen\r\n      }}\r\n      label={label}\r\n      isLabelRegular={isLabelRegular}\r\n      isLabelHidden={isLabelHidden}\r\n      hasHint={hasHint}\r\n      hint={hint}\r\n      hasMessage={hasMessage}\r\n      message={message}\r\n      validation={args.validation}\r\n      menuProps={{ isCompact: args.isCompact, placement }}\r\n      items={\r\n        filteredItems.length === 0\r\n          ? [{ text: 'No matches found', value: null, disabled: true }]\r\n          : filteredItems\r\n      }\r\n      itemProps={{ hasIcon, disabled: args.disabled }}\r\n    >\r\n      <Autocomplete {...args} start={hasIcon ? <Icon /> : undefined}>\r\n        {selectedItem.text}\r\n      </Autocomplete>\r\n    </DropdownFieldStory>\r\n  );\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport StartIcon from '@zendeskgarden/svg-icons/src/16/search-stroke.svg';\r\nimport EndIcon from '@zendeskgarden/svg-icons/src/16/leaf-stroke.svg';\r\nimport {\r\n  Combobox,\r\n  IComboboxProps,\r\n  IDropdownProps,\r\n  IMenuProps\r\n} from '@zendeskgarden/react-dropdowns';\r\nimport { DropdownFieldStory } from './DropdownFieldStory';\r\nimport { IMenuItem } from './types';\r\n\r\ninterface IArgs extends IComboboxProps {\r\n  downshiftProps?: IDropdownProps['downshiftProps'];\r\n  inputValue: IDropdownProps['inputValue'];\r\n  onInputValueChange: IDropdownProps['onInputValueChange'];\r\n  onStateChange: IDropdownProps['onStateChange'];\r\n  isOpen?: IDropdownProps['isOpen'];\r\n  label?: string;\r\n  isLabelRegular?: boolean;\r\n  isLabelHidden?: boolean;\r\n  hasHint?: boolean;\r\n  hint?: string;\r\n  hasMessage?: boolean;\r\n  message?: string;\r\n  hasStartIcon: boolean;\r\n  hasEndIcon: boolean;\r\n  items: IMenuItem[];\r\n  placement: IMenuProps['placement'];\r\n}\r\n\r\nexport const ComboboxStory: Story<IArgs> = ({\r\n  label,\r\n  isLabelRegular,\r\n  isLabelHidden,\r\n  hasHint,\r\n  hint,\r\n  hasMessage,\r\n  message,\r\n  downshiftProps,\r\n  onSelect,\r\n  inputValue,\r\n  onInputValueChange,\r\n  onStateChange,\r\n  isOpen,\r\n  placement,\r\n  hasStartIcon,\r\n  hasEndIcon,\r\n  items,\r\n  ...args\r\n}) => (\r\n  <DropdownFieldStory\r\n    dropdownProps={{\r\n      downshiftProps,\r\n      inputValue,\r\n      onSelect,\r\n      onInputValueChange,\r\n      onStateChange,\r\n      isOpen\r\n    }}\r\n    label={label}\r\n    isLabelRegular={isLabelRegular}\r\n    isLabelHidden={isLabelHidden}\r\n    hasHint={hasHint}\r\n    hint={hint}\r\n    hasMessage={hasMessage}\r\n    message={message}\r\n    validation={args.validation}\r\n    menuProps={{ isCompact: args.isCompact, placement }}\r\n    items={items}\r\n    itemProps={{ disabled: args.disabled }}\r\n  >\r\n    <Combobox\r\n      {...args}\r\n      start={hasStartIcon ? <StartIcon /> : undefined}\r\n      end={hasEndIcon ? <EndIcon /> : undefined}\r\n    />\r\n  </DropdownFieldStory>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport {\r\n  Field,\r\n  Hint,\r\n  IDropdownProps,\r\n  IMenuProps,\r\n  IMessageProps,\r\n  Label,\r\n  Message\r\n} from '@zendeskgarden/react-dropdowns';\r\nimport { DropdownStory } from './DropdownStory';\r\nimport { ITEM } from './types';\r\nimport { IMenuItemProps } from './MenuStory';\r\n\r\ninterface IArgs extends HTMLAttributes<HTMLDivElement> {\r\n  dropdownProps: IDropdownProps;\r\n  label?: string;\r\n  isLabelRegular?: boolean;\r\n  isLabelHidden?: boolean;\r\n  hasHint?: boolean;\r\n  hint?: string;\r\n  hasMessage?: boolean;\r\n  message?: string;\r\n  validation?: IMessageProps['validation'];\r\n  menuProps?: IMenuProps;\r\n  items: ITEM[];\r\n  itemProps?: IMenuItemProps;\r\n}\r\n\r\nexport const DropdownFieldStory: Story<IArgs> = ({\r\n  dropdownProps,\r\n  label = 'Label',\r\n  isLabelRegular,\r\n  isLabelHidden,\r\n  hasHint = true,\r\n  hint = 'Hint',\r\n  hasMessage = true,\r\n  message = 'Message',\r\n  validation,\r\n  menuProps,\r\n  items,\r\n  itemProps,\r\n  children,\r\n  ...args\r\n}) => (\r\n  <DropdownStory items={items} menuProps={menuProps} itemProps={itemProps} {...dropdownProps}>\r\n    <Field {...args}>\r\n      <Label hidden={isLabelHidden} isRegular={isLabelRegular}>\r\n        {label}\r\n      </Label>\r\n      {hasHint && !isLabelHidden && <Hint>{hint}</Hint>}\r\n      {children}\r\n      {hasHint && isLabelHidden && <Hint>{hint}</Hint>}\r\n      {hasMessage && <Message validation={validation}>{message}</Message>}\r\n    </Field>\r\n  </DropdownStory>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { ReactNode } from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { Col, Grid, IColProps, Row } from '@zendeskgarden/react-grid';\r\nimport { Dropdown, IDropdownProps, IMenuProps } from '@zendeskgarden/react-dropdowns';\r\nimport { IMenuItemProps, MenuStory } from './MenuStory';\r\nimport { IMenuItem, ITEM } from './types';\r\n\r\ninterface IArgs extends IDropdownProps {\r\n  colProps?: IColProps;\r\n  children: ReactNode;\r\n  menuProps?: IMenuProps;\r\n  items: ITEM[];\r\n  itemProps?: IMenuItemProps;\r\n}\r\n\r\nexport const DropdownStory: Story<IArgs> = ({\r\n  colProps,\r\n  children,\r\n  menuProps,\r\n  items,\r\n  itemProps,\r\n  ...args\r\n}) => (\r\n  <Grid>\r\n    <Row justifyContent=\"center\" style={{ height: 'calc(100vh - 80px)' }}>\r\n      <Col alignSelf=\"center\" {...colProps}>\r\n        <Dropdown\r\n          {...args}\r\n          downshiftProps={{\r\n            itemToString: (item?: IMenuItem) => item && item.value,\r\n            ...args.downshiftProps\r\n          }}\r\n        >\r\n          {children}\r\n          <MenuStory items={items} itemProps={itemProps} {...menuProps} />\r\n        </Dropdown>\r\n      </Col>\r\n    </Row>\r\n  </Grid>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport Icon from '@zendeskgarden/svg-icons/src/16/leaf-stroke.svg';\r\nimport {\r\n  AddItem,\r\n  HeaderIcon,\r\n  HeaderItem,\r\n  IItemProps,\r\n  IMenuProps,\r\n  Item,\r\n  ItemMeta,\r\n  MediaBody,\r\n  MediaFigure,\r\n  MediaItem,\r\n  Menu,\r\n  NextItem,\r\n  PreviousItem,\r\n  Separator\r\n} from '@zendeskgarden/react-dropdowns';\r\nimport { IMenuItem, ITEM } from './types';\r\n\r\nexport interface IMenuItemProps extends IItemProps, Omit<IMenuItem, 'text' | 'value'> {}\r\n\r\ninterface IProps extends IMenuItemProps {\r\n  text: IMenuItem['text'];\r\n}\r\n\r\nconst MenuItem = ({ text: children, type, hasIcon, meta, ...props }: IProps) => {\r\n  switch (type) {\r\n    case 'add':\r\n      return (\r\n        <AddItem {...props}>\r\n          {children}\r\n          {meta && <ItemMeta>{meta}</ItemMeta>}\r\n        </AddItem>\r\n      );\r\n\r\n    case 'header':\r\n      return (\r\n        <HeaderItem hasIcon={hasIcon}>\r\n          {hasIcon && (\r\n            <HeaderIcon>\r\n              <Icon />\r\n            </HeaderIcon>\r\n          )}\r\n          {children}\r\n        </HeaderItem>\r\n      );\r\n\r\n    case 'next':\r\n      return (\r\n        <NextItem {...props}>\r\n          {children}\r\n          {meta && <ItemMeta>{meta}</ItemMeta>}\r\n        </NextItem>\r\n      );\r\n\r\n    case 'previous':\r\n      return (\r\n        <PreviousItem {...props}>\r\n          {children}\r\n          {meta && <ItemMeta>{meta}</ItemMeta>}\r\n        </PreviousItem>\r\n      );\r\n\r\n    default:\r\n      return hasIcon ? (\r\n        <MediaItem {...props}>\r\n          <MediaFigure>\r\n            <Icon />\r\n          </MediaFigure>\r\n          <MediaBody>\r\n            {children}\r\n            {meta && <ItemMeta>{meta}</ItemMeta>}\r\n          </MediaBody>\r\n        </MediaItem>\r\n      ) : (\r\n        <Item {...props}>\r\n          {children}\r\n          {meta && <ItemMeta>{meta}</ItemMeta>}\r\n        </Item>\r\n      );\r\n  }\r\n};\r\n\r\ninterface IArgs extends IMenuProps {\r\n  items: ITEM[];\r\n  itemProps?: IMenuItemProps;\r\n}\r\n\r\nexport const MenuStory: Story<IArgs> = ({ items, itemProps, ...args }) => (\r\n  <Menu {...args}>\r\n    {items.map((item, index) =>\r\n      item === '---' ? (\r\n        <Separator key={index} />\r\n      ) : (\r\n        <MenuItem key={index} {...itemProps} {...item} value={item} />\r\n      )\r\n    )}\r\n  </Menu>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport Icon from '@zendeskgarden/svg-icons/src/16/leaf-stroke.svg';\r\nimport {\r\n  Multiselect,\r\n  IMultiselectProps,\r\n  IDropdownProps,\r\n  IMenuProps\r\n} from '@zendeskgarden/react-dropdowns';\r\nimport { DropdownFieldStory } from './DropdownFieldStory';\r\nimport { IMenuItem } from './types';\r\nimport { Tag } from '@zendeskgarden/react-tags';\r\n\r\ninterface IArgs extends IMultiselectProps {\r\n  downshiftProps?: IDropdownProps['downshiftProps'];\r\n  selectedItems: IDropdownProps['selectedItems'];\r\n  inputValue: IDropdownProps['inputValue'];\r\n  onInputValueChange: IDropdownProps['onInputValueChange'];\r\n  onStateChange: IDropdownProps['onStateChange'];\r\n  isOpen?: IDropdownProps['isOpen'];\r\n  label?: string;\r\n  isLabelRegular?: boolean;\r\n  isLabelHidden?: boolean;\r\n  hasHint?: boolean;\r\n  hint?: string;\r\n  hasMessage?: boolean;\r\n  message?: string;\r\n  hasIcon: boolean;\r\n  items: IMenuItem[];\r\n  showMore: string;\r\n  placement: IMenuProps['placement'];\r\n}\r\n\r\nexport const MultiselectStory: Story<IArgs> = ({\r\n  label,\r\n  isLabelRegular,\r\n  isLabelHidden,\r\n  hasHint,\r\n  hint,\r\n  hasMessage,\r\n  message,\r\n  downshiftProps,\r\n  selectedItems,\r\n  onSelect,\r\n  inputValue,\r\n  onInputValueChange,\r\n  onStateChange,\r\n  isOpen,\r\n  placement,\r\n  hasIcon,\r\n  items,\r\n  showMore,\r\n  ...args\r\n}) => {\r\n  const [filteredItems, setFilteredItems] = useState(items);\r\n\r\n  useEffect(\r\n    () => setFilteredItems(items.filter(item => item.text.match(new RegExp(inputValue!, 'gui')))),\r\n    [items, inputValue]\r\n  );\r\n\r\n  return (\r\n    <DropdownFieldStory\r\n      dropdownProps={{\r\n        downshiftProps,\r\n        selectedItems,\r\n        inputValue,\r\n        onSelect,\r\n        onInputValueChange,\r\n        onStateChange,\r\n        isOpen\r\n      }}\r\n      label={label}\r\n      isLabelRegular={isLabelRegular}\r\n      isLabelHidden={isLabelHidden}\r\n      hasHint={hasHint}\r\n      hint={hint}\r\n      hasMessage={hasMessage}\r\n      message={message}\r\n      validation={args.validation}\r\n      menuProps={{ isCompact: args.isCompact, placement }}\r\n      items={\r\n        filteredItems.length === 0\r\n          ? [{ text: 'No matches found', value: null, disabled: true }]\r\n          : filteredItems\r\n      }\r\n      itemProps={{ hasIcon, disabled: args.disabled }}\r\n    >\r\n      <Multiselect\r\n        {...args}\r\n        start={hasIcon ? <Icon /> : undefined}\r\n        renderItem={({ value, removeValue }) => (\r\n          <Tag>\r\n            <span>{value.text}</span>\r\n            <Tag.Close onClick={removeValue} />\r\n          </Tag>\r\n        )}\r\n        renderShowMore={showMore ? value => `+ ${value} ${showMore}` : undefined}\r\n      />\r\n    </DropdownFieldStory>\r\n  );\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport Icon from '@zendeskgarden/svg-icons/src/16/leaf-stroke.svg';\r\nimport { IDropdownProps, IMenuProps, ISelectProps, Select } from '@zendeskgarden/react-dropdowns';\r\nimport { DropdownFieldStory } from './DropdownFieldStory';\r\nimport { IMenuItem } from './types';\r\n\r\ninterface IArgs extends ISelectProps {\r\n  downshiftProps?: IDropdownProps['downshiftProps'];\r\n  selectedItem: IDropdownProps['selectedItem'];\r\n  onStateChange: IDropdownProps['onStateChange'];\r\n  isOpen?: IDropdownProps['isOpen'];\r\n  label?: string;\r\n  isLabelRegular?: boolean;\r\n  isLabelHidden?: boolean;\r\n  hasHint?: boolean;\r\n  hint?: string;\r\n  hasMessage?: boolean;\r\n  message?: string;\r\n  hasIcon: boolean;\r\n  items: IMenuItem[];\r\n  placement: IMenuProps['placement'];\r\n}\r\n\r\nexport const SelectStory: Story<IArgs> = ({\r\n  label,\r\n  isLabelRegular,\r\n  isLabelHidden,\r\n  hasHint,\r\n  hint,\r\n  hasMessage,\r\n  message,\r\n  downshiftProps,\r\n  selectedItem,\r\n  onSelect,\r\n  onStateChange,\r\n  isOpen,\r\n  placement,\r\n  hasIcon,\r\n  items,\r\n  ...args\r\n}) => (\r\n  <DropdownFieldStory\r\n    dropdownProps={{\r\n      downshiftProps,\r\n      selectedItem,\r\n      onSelect,\r\n      onStateChange,\r\n      isOpen\r\n    }}\r\n    label={label}\r\n    isLabelRegular={isLabelRegular}\r\n    isLabelHidden={isLabelHidden}\r\n    hasHint={hasHint}\r\n    hint={hint}\r\n    hasMessage={hasMessage}\r\n    message={message}\r\n    validation={args.validation}\r\n    menuProps={{ isCompact: args.isCompact, placement }}\r\n    items={items}\r\n    itemProps={{ hasIcon, disabled: args.disabled }}\r\n  >\r\n    <Select {...args} start={hasIcon ? <Icon /> : undefined}>\r\n      {selectedItem.text}\r\n    </Select>\r\n  </DropdownFieldStory>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport Icon from '@zendeskgarden/svg-icons/src/16/leaf-stroke.svg';\r\nimport { Button } from '@zendeskgarden/react-buttons';\r\nimport { IDropdownProps, IItemProps, IMenuProps, Trigger } from '@zendeskgarden/react-dropdowns';\r\nimport { ITEM } from './types';\r\nimport { DropdownStory } from './DropdownStory';\r\n\r\ninterface IArgs extends IMenuProps {\r\n  hasMedia?: boolean;\r\n  isDanger?: IItemProps['isDanger'];\r\n  disabled?: IItemProps['disabled'];\r\n  downshiftProps?: IDropdownProps['downshiftProps'];\r\n  highlightedIndex?: IDropdownProps['highlightedIndex'];\r\n  onStateChange: IDropdownProps['onStateChange'];\r\n  isOpen?: IDropdownProps['isOpen'];\r\n  selectedItems?: IDropdownProps['selectedItems'];\r\n  items: ITEM[];\r\n}\r\n\r\nexport const TriggerStory: Story<IArgs> = ({\r\n  onSelect,\r\n  downshiftProps,\r\n  highlightedIndex,\r\n  onStateChange,\r\n  isOpen,\r\n  selectedItems,\r\n  items,\r\n  disabled,\r\n  isDanger,\r\n  hasMedia,\r\n  ...args\r\n}) => (\r\n  <DropdownStory\r\n    isOpen={isOpen}\r\n    onSelect={onSelect}\r\n    onStateChange={onStateChange}\r\n    downshiftProps={downshiftProps}\r\n    highlightedIndex={highlightedIndex}\r\n    selectedItems={selectedItems}\r\n    colProps={{ textAlign: 'center' }}\r\n    menuProps={args}\r\n    items={items}\r\n    itemProps={{ disabled, isDanger, hasIcon: hasMedia }}\r\n  >\r\n    <Trigger>\r\n      <Button isDanger={isDanger} size={args.isCompact ? 'small' : undefined}>\r\n        {hasMedia && (\r\n          <Button.StartIcon>\r\n            <Icon />\r\n          </Button.StartIcon>\r\n        )}\r\n        Trigger\r\n        <Button.EndIcon isRotated={isOpen}>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"currentColor\" d=\"M12.688 5.61a.5.5 0 01.69.718l-.066.062-5 4a.5.5 0 01-.542.054l-.082-.054-5-4a.5.5 0 01.55-.83l.074.05L8 9.359l4.688-3.75z\"/>\r\n</svg>\r\n        </Button.EndIcon>\r\n      </Button>\r\n    </Trigger>\r\n  </DropdownStory>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { IMenuItem, ITEM } from './types';\r\n\r\nexport const AUTOCOMPLETE_ITEMS: IMenuItem[] = [\r\n  { text: 'Asparagus', value: 'auto-item-01' },\r\n  { text: 'Brussel sprouts', value: 'auto-item-02' },\r\n  { text: 'Cauliflower', value: 'auto-item-03' },\r\n  { text: 'Garlic', value: 'auto-item-04' },\r\n  { text: 'Jerusalem artichoke', value: 'auto-item-05' },\r\n  { text: 'Kale', value: 'auto-item-06' },\r\n  { text: 'Lettuce', value: 'auto-item-07' },\r\n  { text: 'Onion', value: 'auto-item-08' },\r\n  { text: 'Mushroom', value: 'auto-item-09' },\r\n  { text: 'Potato', value: 'auto-item-10' },\r\n  { text: 'Radish', value: 'auto-item-11' },\r\n  { text: 'Spinach', value: 'auto-item-12' },\r\n  { text: 'Tomato', value: 'auto-item-13' },\r\n  { text: 'Yam', value: 'auto-item-14' },\r\n  { text: 'Zucchini', value: 'auto-item-15' }\r\n];\r\n\r\nexport const DROPDOWN_PLACEMENT = ['top', 'bottom', 'auto'];\r\n\r\nexport const MENU_ITEMS: ITEM[] = [\r\n  { type: 'header', text: 'Header item', value: 'item-1' },\r\n  '---',\r\n  { text: 'Item', value: 'item-2' },\r\n  { type: 'next', text: 'Next item', value: 'item-3' },\r\n  { text: 'Item', meta: 'Meta', value: 'item-4' },\r\n  { text: 'Item', value: 'item-5' },\r\n  '---',\r\n  { type: 'add', text: 'Add item', value: 'item-6' }\r\n];\r\n\r\nexport const MULTISELECT_ITEMS: IMenuItem[] = [\r\n  { text: 'Aster', value: 'multi-item-01' },\r\n  { text: \"Bachelor's button\", value: 'multi-item-02' },\r\n  { text: 'Celosia', value: 'multi-item-03' },\r\n  { text: 'Dusty miller', value: 'multi-item-04' },\r\n  { text: 'Everlasting winged', value: 'multi-item-05' },\r\n  { text: \"Four o'clock\", value: 'multi-item-06' },\r\n  { text: 'Geranium', value: 'multi-item-07' },\r\n  { text: 'Honesty', value: 'multi-item-08' },\r\n  { text: 'Impatiens', value: 'multi-item-09' },\r\n  { text: 'Johnny jump-up', value: 'multi-item-10' },\r\n  { text: 'Lobelia', value: 'multi-item-11' },\r\n  { text: 'Marigold', value: 'multi-item-12' },\r\n  { text: 'Nastutium', value: 'multi-item-13' },\r\n  { text: 'Ocimum (basil)', value: 'multi-item-14' },\r\n  { text: 'Petunia', value: 'multi-item-15' },\r\n  { text: 'Quaking grass', value: 'multi-item-16' },\r\n  { text: 'Rose moss', value: 'multi-item-17' },\r\n  { text: 'Salvia', value: 'multi-item-18' },\r\n  { text: 'Torenia', value: 'multi-item-19' },\r\n  { text: 'Ursinia', value: 'multi-item-20' },\r\n  { text: 'Verbena', value: 'multi-item-21' },\r\n  { text: 'Wax begonia', value: 'multi-item-22' },\r\n  { text: 'Xeranthemum', value: 'multi-item-23' },\r\n  { text: 'Yellow cosmos', value: 'multi-item-24' },\r\n  { text: 'Zinnia', value: 'multi-item-25' }\r\n];\r\n\r\nexport const SELECT_ITEMS: IMenuItem[] = [\r\n  { text: 'Apple', value: 'item-1' },\r\n  { text: 'Banana', value: 'item-2' },\r\n  { text: 'Carrot', value: 'item-3' },\r\n  { text: 'Grape', value: 'item-4' },\r\n  { text: 'Kiwi', value: 'item-5' },\r\n  { text: 'Quince', value: 'item-6' }\r\n];\r\n\r\nexport const COMBOBOX_ITEMS = [...AUTOCOMPLETE_ITEMS, ...MULTISELECT_ITEMS].sort();\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useRef, useEffect, useState, HTMLAttributes, KeyboardEvent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Reference } from 'react-popper';\r\nimport { composeEventHandlers } from '@zendeskgarden/container-utilities';\r\nimport mergeRefs from 'react-merge-refs';\r\nimport { StyledFauxInput, StyledInput, StyledSelect } from '../../styled';\r\nimport { VALIDATION } from '../../utils/validation';\r\nimport useDropdownContext from '../../utils/useDropdownContext';\r\nimport useFieldContext from '../../utils/useFieldContext';\r\n\r\nexport interface IAutocompleteProps extends HTMLAttributes<HTMLDivElement> {\r\n  /** Applies compact styling */\r\n  isCompact?: boolean;\r\n  /** Removes borders and padding */\r\n  isBare?: boolean;\r\n  /** Indicates that the element is not interactive */\r\n  disabled?: boolean;\r\n  /** Applies inset `box-shadow` styling on focus */\r\n  focusInset?: boolean;\r\n  /** Defines the element's validation state */\r\n  validation?: VALIDATION;\r\n  /** Provides ref access to the underlying input element */\r\n  inputRef?: React.Ref<HTMLInputElement>;\r\n  /** Defines the icon rendered in the start position */\r\n  start?: any;\r\n}\r\n\r\nconst Autocomplete = React.forwardRef<HTMLDivElement, IAutocompleteProps>(\r\n  ({ children, inputRef: controlledInputRef, start, ...props }, ref) => {\r\n    const {\r\n      popperReferenceElementRef,\r\n      downshift: { getToggleButtonProps, getInputProps, getRootProps, isOpen },\r\n      setDropdownType\r\n    } = useDropdownContext();\r\n    const { isLabelHovered } = useFieldContext();\r\n    const inputRef = useRef<HTMLInputElement>();\r\n    const triggerRef = useRef<HTMLDivElement>();\r\n    const previousIsOpenRef = useRef<boolean | undefined>(isOpen);\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [isFocused, setIsFocused] = useState(false);\r\n\r\n    useEffect(() => {\r\n      if (inputRef.current && isOpen !== previousIsOpenRef.current) {\r\n        inputRef.current.focus();\r\n      }\r\n\r\n      previousIsOpenRef.current = isOpen;\r\n    }, [inputRef, isOpen]);\r\n\r\n    /**\r\n     * Destructure type out of props so that `type=\"button\"`\r\n     * is not spread onto the MultiSelect Dropdown `div`.\r\n     */\r\n    /* eslint-disable @typescript-eslint/no-unused-vars */\r\n    const { type, ...selectProps } = getToggleButtonProps(\r\n      getRootProps({\r\n        onKeyDown: (e: KeyboardEvent<HTMLDivElement>) => {\r\n          if (isOpen) {\r\n            (e.nativeEvent as any).preventDownshiftDefault = true;\r\n          }\r\n        },\r\n        onMouseEnter: composeEventHandlers(props.onMouseEnter, () => setIsHovered(true)),\r\n        onMouseLeave: composeEventHandlers(props.onMouseLeave, () => setIsHovered(false)),\r\n        /**\r\n         * Ensure that [role=\"combobox\"] is applied directly to the input\r\n         * for Safari screenreader support\r\n         */\r\n        role: null,\r\n        ...props\r\n      } as any)\r\n    );\r\n\r\n    const isContainerHovered = isLabelHovered && !isOpen;\r\n    const isContainerFocused = isOpen || isFocused;\r\n\r\n    useEffect(() => {\r\n      setDropdownType('autocomplete');\r\n    }, [setDropdownType]);\r\n\r\n    return (\r\n      <Reference>\r\n        {({ ref: popperReference }) => (\r\n          <StyledFauxInput\r\n            data-test-is-open={isOpen}\r\n            data-test-is-hovered={isContainerHovered}\r\n            data-test-is-focused={isContainerFocused}\r\n            isHovered={isContainerHovered}\r\n            isFocused={isContainerFocused}\r\n            tabIndex={null}\r\n            {...selectProps}\r\n            ref={selectRef => {\r\n              // Pass ref to popperJS for positioning\r\n              (popperReference as any)(selectRef);\r\n\r\n              // Store ref locally to return focus on close\r\n              mergeRefs([triggerRef, ref])(selectRef);\r\n\r\n              // Apply Select ref to global Dropdown context\r\n              popperReferenceElementRef.current = selectRef;\r\n            }}\r\n          >\r\n            {start && (\r\n              <StyledFauxInput.StartIcon\r\n                isHovered={isHovered || (isLabelHovered && !isOpen)}\r\n                isFocused={isContainerFocused}\r\n                isDisabled={props.disabled}\r\n              >\r\n                {start}\r\n              </StyledFauxInput.StartIcon>\r\n            )}\r\n            {!isOpen && <StyledSelect>{children}</StyledSelect>}\r\n            <StyledInput\r\n              {...getInputProps({\r\n                isHidden: !isOpen,\r\n                disabled: props.disabled,\r\n                onFocus: () => {\r\n                  setIsFocused(true);\r\n                },\r\n                onBlur: () => {\r\n                  setIsFocused(false);\r\n                },\r\n                onClick: (e: any) => {\r\n                  if (isOpen) {\r\n                    (e.nativeEvent as any).preventDownshiftDefault = true;\r\n                  }\r\n                },\r\n                role: 'combobox',\r\n                ref: mergeRefs([inputRef, controlledInputRef || null])\r\n              } as any)}\r\n            />\r\n            {!props.isBare && (\r\n              <StyledFauxInput.EndIcon\r\n                isHovered={isHovered || (isLabelHovered && !isOpen)}\r\n                isFocused={isContainerFocused}\r\n                isDisabled={props.disabled}\r\n                isRotated={isOpen}\r\n              >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"currentColor\" d=\"M12.688 5.61a.5.5 0 01.69.718l-.066.062-5 4a.5.5 0 01-.542.054l-.082-.054-5-4a.5.5 0 01.55-.83l.074.05L8 9.359l4.688-3.75z\"/>\r\n</svg>\r\n              </StyledFauxInput.EndIcon>\r\n            )}\r\n          </StyledFauxInput>\r\n        )}\r\n      </Reference>\r\n    );\r\n  }\r\n);\r\n\r\nAutocomplete.displayName = 'Autocomplete';\r\n\r\nAutocomplete.propTypes = {\r\n  isCompact: PropTypes.bool,\r\n  isBare: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  focusInset: PropTypes.bool,\r\n  validation: PropTypes.oneOf(['success', 'warning', 'error'])\r\n};\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport default Autocomplete as React.FunctionComponent<\r\n  IAutocompleteProps & React.RefAttributes<HTMLDivElement>\r\n>;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { ComponentPropsWithoutRef, KeyboardEvent, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Reference } from 'react-popper';\r\nimport { KEY_CODES } from '@zendeskgarden/container-utilities';\r\nimport { MediaInput } from '@zendeskgarden/react-forms';\r\nimport mergeRefs from 'react-merge-refs';\r\nimport { VALIDATION } from '../../utils/validation';\r\nimport useDropdownContext from '../../utils/useDropdownContext';\r\n\r\nexport interface IComboboxProps extends ComponentPropsWithoutRef<'div'> {\r\n  /** Applies compact styling */\r\n  isCompact?: boolean;\r\n  /** Removes borders and padding */\r\n  isBare?: boolean;\r\n  /** Indicates that the element is not interactive */\r\n  disabled?: boolean;\r\n  /** Applies inset `box-shadow` styling on focus */\r\n  focusInset?: boolean;\r\n  /** Defines text that appears in the element when no items are selected */\r\n  placeholder?: string;\r\n  /** Defines the element's validation state */\r\n  validation?: VALIDATION;\r\n  /** Provides ref access to the underlying input element */\r\n  inputRef?: React.Ref<HTMLInputElement>;\r\n  /** Defines the icon rendered in the start position */\r\n  start?: any;\r\n  /** Defines the icon rendered in the end position */\r\n  end?: any;\r\n}\r\n\r\nconst Combobox = React.forwardRef<HTMLDivElement, IComboboxProps>(\r\n  (\r\n    {\r\n      isCompact,\r\n      isBare,\r\n      disabled,\r\n      focusInset,\r\n      placeholder,\r\n      validation,\r\n      inputRef: inputRefProp = null,\r\n      start,\r\n      end,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const {\r\n      popperReferenceElementRef,\r\n      downshift: { getToggleButtonProps, getInputProps, getRootProps, isOpen },\r\n      setDropdownType\r\n    } = useDropdownContext();\r\n    const wrapperRef = useRef<HTMLDivElement>();\r\n    const inputRef = useRef<HTMLInputElement>();\r\n    const isOpenRef = useRef<boolean | undefined>(isOpen);\r\n    const wrapperProps = getToggleButtonProps(\r\n      getRootProps({\r\n        role: null, // apply role to input for Safari screenreader support\r\n        type: null, // prevent button type from being added to wrapper div\r\n        onClick: (event: MouseEvent) => {\r\n          (event as any).nativeEvent.preventDownshiftDefault = true;\r\n        },\r\n        ...props\r\n      } as any)\r\n    );\r\n    const inputProps = getInputProps({\r\n      isCompact,\r\n      isBare,\r\n      disabled,\r\n      focusInset,\r\n      placeholder,\r\n      validation,\r\n      start,\r\n      end,\r\n      role: 'combobox',\r\n      onKeyDown: (event: KeyboardEvent<HTMLDivElement>) => {\r\n        if (\r\n          event.keyCode === KEY_CODES.SPACE ||\r\n          (!isOpen && [KEY_CODES.DOWN, KEY_CODES.UP].includes(event.keyCode))\r\n        ) {\r\n          (event.nativeEvent as any).preventDownshiftDefault = true;\r\n        }\r\n      },\r\n      onClick: (event: MouseEvent) => {\r\n        (event as any).nativeEvent.preventDownshiftDefault = true;\r\n      }\r\n    });\r\n\r\n    useEffect(() => {\r\n      if (inputRef.current && isOpen !== isOpenRef.current) {\r\n        inputRef.current.focus();\r\n      }\r\n\r\n      isOpenRef.current = isOpen;\r\n    }, [inputRef, isOpen]);\r\n\r\n    useEffect(() => {\r\n      setDropdownType('combobox');\r\n    }, [setDropdownType]);\r\n\r\n    return (\r\n      <Reference>\r\n        {({ ref: popperReference }) => {\r\n          const wrapperRefProp = (element: HTMLDivElement) => {\r\n            // Pass ref to Popper for positioning\r\n            (popperReference as any)(element);\r\n\r\n            // Store ref locally\r\n            mergeRefs([wrapperRef, ref])(element);\r\n\r\n            // Apply wrapper to global Dropdown context\r\n            popperReferenceElementRef.current = element;\r\n          };\r\n\r\n          return (\r\n            <MediaInput\r\n              {...inputProps}\r\n              wrapperProps={wrapperProps}\r\n              wrapperRef={wrapperRefProp}\r\n              ref={mergeRefs([inputRef, inputRefProp])}\r\n            />\r\n          );\r\n        }}\r\n      </Reference>\r\n    );\r\n  }\r\n);\r\n\r\nCombobox.displayName = 'Combobox';\r\n\r\nCombobox.propTypes = {\r\n  isCompact: PropTypes.bool,\r\n  isBare: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  focusInset: PropTypes.bool,\r\n  placeholder: PropTypes.string,\r\n  validation: PropTypes.oneOf(['success', 'warning', 'error'])\r\n};\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport default Combobox as React.FC<IComboboxProps & React.RefAttributes<HTMLDivElement>>;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useContext, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeContext } from 'styled-components';\r\nimport Downshift, { ControllerStateAndHelpers, StateChangeOptions } from 'downshift';\r\nimport { Manager } from 'react-popper';\r\nimport { KEY_CODES, composeEventHandlers } from '@zendeskgarden/container-utilities';\r\nimport { DropdownContext, DROPDOWN_TYPE } from '../../utils/useDropdownContext';\r\n\r\nexport const REMOVE_ITEM_STATE_TYPE = 'REMOVE_ITEM';\r\n\r\nexport interface IDropdownProps {\r\n  /** Opens the dropdown */\r\n  isOpen?: boolean;\r\n  /** Identifies the currently selected item */\r\n  selectedItem?: any;\r\n  /** Identifies the currently selected items */\r\n  selectedItems?: any[];\r\n  /** Highlights an element at a selected index */\r\n  highlightedIndex?: number;\r\n  /** Sets the value of the input element*/\r\n  inputValue?: string;\r\n  /**\r\n   * Handles item selection\r\n   *\r\n   * @param {any|null} selectedItem The selected item\r\n   * @param {Object} stateAndHelpers [Downshift state and helpers](https://github.com/downshift-js/downshift#onselect)\r\n   * */\r\n  onSelect?: (selectedItem: any | null, stateAndHelpers: ControllerStateAndHelpers<any>) => void;\r\n  /**\r\n   * Handles state change\r\n   *\r\n   * @param {Object} options [Downshift internal state changes](https://github.com/downshift-js/downshift#onstatechange)\r\n   * @param {Object} stateAndHelpers [Downshift state and helpers](https://github.com/downshift-js/downshift#onstatechange)\r\n   * */\r\n  onStateChange?: (\r\n    options: StateChangeOptions<any>,\r\n    stateAndHelpers: ControllerStateAndHelpers<any>\r\n  ) => void;\r\n  /**\r\n   * Handles input value change\r\n   *\r\n   * @param {string} inputValue Value of the input element\r\n   * @param {Object} stateAndHelpers [Downshift state and helpers](https://github.com/downshift-js/downshift#oninputvaluechange)\r\n   * */\r\n  onInputValueChange?: (\r\n    inputValue: string,\r\n    stateAndHelpers: ControllerStateAndHelpers<any>\r\n  ) => void;\r\n  /** Passes customization props to the [Downshift](https://www.downshift-js.com/) component */\r\n  downshiftProps?: Record<string, any>;\r\n}\r\n\r\nexport const Dropdown: React.FunctionComponent<IDropdownProps> = props => {\r\n  const {\r\n    children,\r\n    isOpen,\r\n    selectedItem,\r\n    selectedItems,\r\n    highlightedIndex,\r\n    inputValue,\r\n    onSelect,\r\n    onStateChange,\r\n    onInputValueChange,\r\n    downshiftProps\r\n  } = props;\r\n  // Refs used to handle custom Garden keyboard nav\r\n  const itemIndexRef = useRef<number>(0);\r\n  const previousItemRef = useRef<number | undefined>(undefined);\r\n  const previousIndexRef = useRef<number | undefined>(undefined);\r\n  const nextItemsHashRef = useRef<Record<string, unknown>>({});\r\n  const containsMultiselectRef = useRef(false);\r\n  const itemSearchRegistry = useRef([]);\r\n  const [dropdownType, setDropdownType] = useState<DROPDOWN_TYPE>('');\r\n  const themeContext = useContext(ThemeContext);\r\n\r\n  // Ref used to determine ARIA attributes for menu dropdowns\r\n  const hasMenuRef = useRef(false);\r\n\r\n  // Used to inform Menu (Popper) that a full-width menu is needed\r\n  const popperReferenceElementRef = useRef<any>(null);\r\n\r\n  /**\r\n   * Add additional keyboard nav to the basics provided by Downshift\r\n   **/\r\n  const customGetInputProps = (\r\n    { onKeyDown, ...other }: any,\r\n    downshift: ControllerStateAndHelpers<any>,\r\n    rtl: any\r\n  ) => {\r\n    return {\r\n      onKeyDown: composeEventHandlers(onKeyDown, (e: KeyboardEvent) => {\r\n        const PREVIOUS_KEY = rtl ? KEY_CODES.RIGHT : KEY_CODES.LEFT;\r\n        const NEXT_KEY = rtl ? KEY_CODES.LEFT : KEY_CODES.RIGHT;\r\n\r\n        if (downshift.isOpen) {\r\n          // Select previous item if available\r\n          if (\r\n            e.keyCode === PREVIOUS_KEY &&\r\n            previousIndexRef.current !== null &&\r\n            previousIndexRef.current !== undefined &&\r\n            !downshift.inputValue\r\n          ) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            downshift.selectItemAtIndex(previousIndexRef.current);\r\n          }\r\n\r\n          // Select current next item if available\r\n          if (e.keyCode === NEXT_KEY) {\r\n            const nextItemIndexes = Object.values(nextItemsHashRef.current);\r\n\r\n            if (nextItemIndexes.includes(downshift.highlightedIndex)) {\r\n              e.preventDefault();\r\n              e.stopPropagation();\r\n\r\n              downshift.selectItemAtIndex(downshift.highlightedIndex!);\r\n            }\r\n          }\r\n        } else if (\r\n          (e.keyCode === KEY_CODES.ENTER || e.keyCode === KEY_CODES.SPACE) &&\r\n          !downshift.isOpen &&\r\n          dropdownType !== 'combobox'\r\n        ) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n\r\n          downshift.openMenu();\r\n        }\r\n      }),\r\n      ...other\r\n    };\r\n  };\r\n\r\n  const transformDownshift = ({ getInputProps, getToggleButtonProps, ...downshift }: any) => {\r\n    return {\r\n      getInputProps: (p: any) => getInputProps(customGetInputProps(p, downshift, themeContext.rtl)),\r\n      // The default aria-label provided by Downshift is invalid due to our DOM structure\r\n      getToggleButtonProps: (p: any) => getToggleButtonProps({ 'aria-label': undefined, ...p }),\r\n      ...downshift\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Manager>\r\n      <Downshift\r\n        suppressRefError // https://github.com/downshift-js/downshift/issues/529 Allows us to provide props through context\r\n        isOpen={isOpen}\r\n        highlightedIndex={highlightedIndex}\r\n        selectedItem={selectedItem || null} // Ensures that selectedItem never becomes controlled internally by Downshift\r\n        inputValue={inputValue}\r\n        onInputValueChange={(inputVal, stateAndHelpers) => {\r\n          if (onInputValueChange) {\r\n            if (stateAndHelpers.isOpen) {\r\n              onInputValueChange(inputVal, stateAndHelpers);\r\n            } else if (dropdownType === 'multiselect') {\r\n              onInputValueChange('', stateAndHelpers);\r\n            }\r\n          }\r\n        }}\r\n        onStateChange={(changes, stateAndHelpers) => {\r\n          if (\r\n            dropdownType === 'autocomplete' &&\r\n            changes.isOpen === false &&\r\n            !changes.selectedItem\r\n          ) {\r\n            onSelect && onSelect(selectedItem, stateAndHelpers);\r\n          }\r\n          if (\r\n            Object.prototype.hasOwnProperty.call(changes, 'selectedItem') &&\r\n            changes.selectedItem !== null\r\n          ) {\r\n            if (selectedItems) {\r\n              const { itemToString } = stateAndHelpers;\r\n              const existingItemIndex = selectedItems.findIndex((item: any) => {\r\n                return itemToString(item) === itemToString(changes.selectedItem);\r\n              });\r\n              const updatedSelectedItems = Array.from(selectedItems);\r\n\r\n              if (existingItemIndex === -1) {\r\n                updatedSelectedItems.splice(updatedSelectedItems.length, 0, changes.selectedItem);\r\n              } else {\r\n                updatedSelectedItems.splice(existingItemIndex, 1);\r\n              }\r\n\r\n              /**\r\n               * Customize the changes returned from `onStateChange` as\r\n               * Downshift has no concept of a \"multiselect\".\r\n               **/\r\n              (changes as any).selectedItems = updatedSelectedItems;\r\n              delete changes.selectedItem;\r\n\r\n              onSelect && onSelect(updatedSelectedItems, stateAndHelpers);\r\n            } else {\r\n              onSelect && onSelect(changes.selectedItem, stateAndHelpers);\r\n            }\r\n\r\n            // Reset input value when item is selected for multiselect - to clear input for next use\r\n            if (dropdownType === 'multiselect') {\r\n              stateAndHelpers.setState({ inputValue: '' });\r\n            }\r\n          }\r\n\r\n          onStateChange && onStateChange(changes, stateAndHelpers);\r\n        }}\r\n        stateReducer={(_state, changes) => {\r\n          /**\r\n           * Close the menu when the combobox input is cleared by the user\r\n           */\r\n          switch (changes.type) {\r\n            case Downshift.stateChangeTypes.changeInput:\r\n              if (changes.inputValue === '' && dropdownType === 'combobox') {\r\n                return { ...changes, isOpen: false };\r\n              }\r\n\r\n              return changes;\r\n            default:\r\n              return changes;\r\n          }\r\n        }}\r\n        {...downshiftProps}\r\n      >\r\n        {downshift => (\r\n          <DropdownContext.Provider\r\n            /* eslint-disable react/jsx-no-constructed-context-values */\r\n            value={{\r\n              hasMenuRef,\r\n              itemIndexRef,\r\n              previousItemRef,\r\n              previousIndexRef,\r\n              nextItemsHashRef,\r\n              popperReferenceElementRef,\r\n              selectedItems,\r\n              downshift: transformDownshift(downshift),\r\n              containsMultiselectRef,\r\n              itemSearchRegistry,\r\n              setDropdownType\r\n            }}\r\n          >\r\n            {children}\r\n          </DropdownContext.Provider>\r\n        )}\r\n      </Downshift>\r\n    </Manager>\r\n  );\r\n};\r\n\r\nDropdown.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  selectedItem: PropTypes.any,\r\n  selectedItems: PropTypes.arrayOf(PropTypes.any),\r\n  highlightedIndex: PropTypes.number,\r\n  inputValue: PropTypes.string,\r\n  onSelect: PropTypes.func,\r\n  onStateChange: PropTypes.func,\r\n  downshiftProps: PropTypes.object\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useState, HTMLAttributes, useMemo } from 'react';\r\nimport { Field as FormField } from '@zendeskgarden/react-forms';\r\nimport useDropdownContext from '../../utils/useDropdownContext';\r\nimport { FieldContext } from '../../utils/useFieldContext';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Field: React.FunctionComponent<HTMLAttributes<HTMLDivElement>> = props => {\r\n  const {\r\n    downshift: { getRootProps }\r\n  } = useDropdownContext();\r\n  const [isLabelHovered, setIsLabelHovered] = useState<boolean>(false);\r\n\r\n  /**\r\n   * Only apply `rootRef` to allow correct screen-reader navigation in Safari\r\n   */\r\n  const { ref } = getRootProps();\r\n\r\n  const value = useMemo(\r\n    () => ({ isLabelHovered, setIsLabelHovered }),\r\n    [isLabelHovered, setIsLabelHovered]\r\n  );\r\n\r\n  return (\r\n    <FieldContext.Provider value={value}>\r\n      <FormField ref={ref} {...props} />\r\n    </FieldContext.Provider>\r\n  );\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { Hint as FormHint } from '@zendeskgarden/react-forms';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Hint = React.forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  (props, ref) => <FormHint ref={ref} {...props} />\r\n);\r\n\r\nHint.displayName = 'Hint';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { LabelHTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { composeEventHandlers } from '@zendeskgarden/container-utilities';\r\nimport { Label as FormLabel } from '@zendeskgarden/react-forms';\r\nimport useDropdownContext from '../../utils/useDropdownContext';\r\nimport useFieldContext from '../../utils/useFieldContext';\r\n\r\nexport interface ILabelProps extends LabelHTMLAttributes<HTMLLabelElement> {\r\n  /** Applies regular (non-bold) font weight */\r\n  isRegular?: boolean;\r\n}\r\n\r\n/**\r\n * @extends LabelHTMLAttributes<HTMLLabelElement>\r\n */\r\nexport const Label = React.forwardRef<HTMLLabelElement, ILabelProps>(\r\n  ({ onMouseEnter, onMouseLeave, ...other }, ref) => {\r\n    const {\r\n      downshift: { getLabelProps }\r\n    } = useDropdownContext();\r\n    const { setIsLabelHovered } = useFieldContext();\r\n\r\n    const labelProps = getLabelProps({\r\n      onMouseEnter: composeEventHandlers(onMouseEnter, () => {\r\n        setIsLabelHovered(true);\r\n      }),\r\n      onMouseLeave: composeEventHandlers(onMouseLeave, () => {\r\n        setIsLabelHovered(false);\r\n      }),\r\n      ...other\r\n    });\r\n\r\n    return <FormLabel ref={ref} {...labelProps} />;\r\n  }\r\n);\r\n\r\nLabel.displayName = 'Label';\r\n\r\nLabel.propTypes = {\r\n  isRegular: PropTypes.bool\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Message as FormMessage } from '@zendeskgarden/react-forms';\r\nimport { VALIDATION } from '../../utils/validation';\r\n\r\nexport interface IMessageProps extends HTMLAttributes<HTMLDivElement> {\r\n  /** Applies styles based on validation state */\r\n  validation?: VALIDATION;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Message = React.forwardRef<HTMLDivElement, IMessageProps>((props, ref) => (\r\n  <FormMessage ref={ref} {...props} />\r\n));\r\n\r\nMessage.displayName = 'Message';\r\n\r\nMessage.propTypes = {\r\n  validation: PropTypes.oneOf(['success', 'warning', 'error'])\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Item, IItemProps } from './Item';\r\nimport { StyledAddItem, StyledItemIcon } from '../../../styled';\r\nimport useMenuContext from '../../../utils/useMenuContext';\r\n\r\n// eslint-disable-next-line react/display-name\r\nconst AddItemComponent = React.forwardRef<HTMLLIElement, IItemProps>(\r\n  ({ children, disabled, ...props }, ref) => {\r\n    const { isCompact } = useMenuContext();\r\n\r\n    return (\r\n      <StyledAddItem ref={ref} disabled={disabled} {...props}>\r\n        <StyledItemIcon isCompact={isCompact} isVisible isDisabled={disabled}>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"currentColor\" d=\"M12.854.146a.5.5 0 01.057.638l-.057.07L9.707 4 12 6.293l3.146-3.147a.5.5 0 01.765.638l-.057.07L12.707 7l1.147 1.146a.5.5 0 01-.638.765l-.07-.057-.308-.309-.06.084-.07.078-3.058 3.057c-.87.87-2.256.91-3.172.119l-.128-.119-.704-.704-4.792 4.794a.5.5 0 01-.765-.638l.057-.07 4.793-4.793-.703-.703a2.334 2.334 0 01-.119-3.172l.119-.128 3.057-3.057a.959.959 0 01.162-.131l-.309-.308a.5.5 0 01.638-.765l.07.057L9 3.293 12.146.146a.5.5 0 01.708 0zM8.146 3.853L4.943 7.057a1.334 1.334 0 00-.097 1.778l.097.108 2.114 2.114a1.334 1.334 0 001.778.097l.108-.097 3.203-3.204-4-4z\"/>\r\n</svg>\r\n\r\n        </StyledItemIcon>\r\n        {children}\r\n      </StyledAddItem>\r\n    );\r\n  }\r\n);\r\n\r\n/**\r\n * @extends LiHTMLAttributes<HTMLLIElement>\r\n */\r\nexport const AddItem = React.forwardRef<HTMLLIElement, Omit<IItemProps, 'component'>>(\r\n  (props, ref) => <Item component={AddItemComponent} ref={ref} {...props} />\r\n);\r\n\r\nAddItem.displayName = 'AddItem';\r\n\r\nAddItem.propTypes = {\r\n  value: PropTypes.any,\r\n  disabled: PropTypes.bool\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { StyledHeaderIcon } from '../../../styled';\r\nimport useMenuContext from '../../../utils/useMenuContext';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const HeaderIcon = React.forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  (props, ref) => {\r\n    const { isCompact } = useMenuContext();\r\n\r\n    return <StyledHeaderIcon ref={ref} isCompact={isCompact} {...props} />;\r\n  }\r\n);\r\n\r\nHeaderIcon.displayName = 'HeaderIcon';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { LiHTMLAttributes } from 'react';\r\nimport { StyledHeaderItem } from '../../../styled';\r\nimport useMenuContext from '../../../utils/useMenuContext';\r\n\r\nexport interface IHeaderItemProps extends LiHTMLAttributes<HTMLLIElement> {\r\n  /** Applies icon styling */\r\n  hasIcon?: boolean;\r\n}\r\n\r\n/**\r\n * @extends LiHTMLAttributes<HTMLLIElement>\r\n */\r\nexport const HeaderItem = React.forwardRef<HTMLLIElement, IHeaderItemProps>((props, ref) => {\r\n  const { isCompact } = useMenuContext();\r\n\r\n  return <StyledHeaderItem ref={ref} isCompact={isCompact} {...props} />;\r\n});\r\n\r\nHeaderItem.displayName = 'HeaderItem';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useEffect, useRef, LiHTMLAttributes, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport mergeRefs from 'react-merge-refs';\r\nimport { StyledItem, StyledItemIcon } from '../../../styled';\r\nimport useDropdownContext from '../../../utils/useDropdownContext';\r\nimport useMenuContext from '../../../utils/useMenuContext';\r\nimport { ItemContext } from '../../../utils/useItemContext';\r\n\r\nexport interface IItemProps extends LiHTMLAttributes<HTMLLIElement> {\r\n  /** Sets the value that is returned upon selection */\r\n  value?: any;\r\n  /**\r\n   * @ignore Sets the wrapping component for the item\r\n   */\r\n  component?: any;\r\n  /** Indicates that the element is not interactive */\r\n  disabled?: boolean;\r\n  /** Applies danger styling */\r\n  isDanger?: boolean;\r\n}\r\n\r\n/**\r\n * @extends LiHTMLAttributes<HTMLLIElement>\r\n */\r\nexport const Item = React.forwardRef<HTMLLIElement, IItemProps>(\r\n  ({ value, disabled, isDanger, component = StyledItem, children, ...props }, forwardRef) => {\r\n    const {\r\n      selectedItems,\r\n      hasMenuRef,\r\n      itemSearchRegistry,\r\n      downshift: {\r\n        isOpen,\r\n        selectedItem,\r\n        highlightedIndex,\r\n        getItemProps,\r\n        setHighlightedIndex,\r\n        itemToString\r\n      }\r\n    } = useDropdownContext();\r\n    const { itemIndexRef, isCompact } = useMenuContext();\r\n    const itemRef = useRef<HTMLLIElement>();\r\n    const Component = component;\r\n\r\n    if ((value === undefined || value === null) && !disabled) {\r\n      throw new Error('All Item components require a `value` prop');\r\n    }\r\n\r\n    const currentIndex = itemIndexRef.current;\r\n    const isFocused = highlightedIndex === currentIndex;\r\n    let isSelected: boolean;\r\n\r\n    useEffect(() => {\r\n      if (!disabled && itemRef.current) {\r\n        const itemTextValue = itemRef.current!.innerText;\r\n\r\n        if (itemTextValue) {\r\n          itemSearchRegistry.current[currentIndex] = itemTextValue;\r\n        }\r\n      }\r\n    });\r\n\r\n    // Calculate selection if provided value is an `object`\r\n    if (value) {\r\n      if (selectedItems) {\r\n        isSelected = selectedItems.some(item => {\r\n          return itemToString(item) === itemToString(value);\r\n        });\r\n      } else {\r\n        isSelected = itemToString(selectedItem) === itemToString(value);\r\n      }\r\n    } else {\r\n      isSelected = false;\r\n    }\r\n\r\n    useEffect(() => {\r\n      // Highlight selected item when Select/Autocomplete is open\r\n      if (isOpen && !disabled && !selectedItems && isSelected) {\r\n        setHighlightedIndex(currentIndex);\r\n      }\r\n    }, [currentIndex, disabled, isOpen, isSelected, selectedItems, setHighlightedIndex]);\r\n\r\n    const contextValue = useMemo(() => ({ isDisabled: disabled }), [disabled]);\r\n    const ref = mergeRefs([itemRef, forwardRef]);\r\n\r\n    if (disabled) {\r\n      return (\r\n        <ItemContext.Provider value={contextValue}>\r\n          <Component\r\n            ref={ref}\r\n            disabled={disabled}\r\n            isDanger={isDanger}\r\n            isCompact={isCompact}\r\n            {...props}\r\n          >\r\n            {isSelected && (\r\n              <StyledItemIcon isCompact={isCompact} isVisible={isSelected} isDisabled={disabled}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M1 9l4 4L15 3\"/>\r\n</svg>\r\n\r\n              </StyledItemIcon>\r\n            )}\r\n            {children}\r\n          </Component>\r\n        </ItemContext.Provider>\r\n      );\r\n    }\r\n\r\n    // Only increment current item index if the `Item` is not disabled\r\n    itemIndexRef.current++;\r\n\r\n    return (\r\n      <ItemContext.Provider value={contextValue}>\r\n        <Component\r\n          data-test-is-focused={isFocused}\r\n          data-test-is-selected={isSelected}\r\n          {...getItemProps({\r\n            item: value,\r\n            isFocused,\r\n            ref,\r\n            isCompact,\r\n            isDanger,\r\n            ...(hasMenuRef.current && {\r\n              role: 'menuitem',\r\n              'aria-selected': null\r\n            }),\r\n            ...props\r\n          } as any)}\r\n        >\r\n          {isSelected && (\r\n            <StyledItemIcon isCompact={isCompact} isVisible={isSelected} data-test-id=\"item-icon\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M1 9l4 4L15 3\"/>\r\n</svg>\r\n\r\n            </StyledItemIcon>\r\n          )}\r\n          {children}\r\n        </Component>\r\n      </ItemContext.Provider>\r\n    );\r\n  }\r\n);\r\n\r\nItem.displayName = 'Item';\r\n\r\nItem.propTypes = {\r\n  value: PropTypes.any,\r\n  disabled: PropTypes.bool\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { StyledItemMeta } from '../../../styled';\r\nimport useMenuContext from '../../../utils/useMenuContext';\r\nimport useItemContext from '../../../utils/useItemContext';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLSpanElement>\r\n */\r\nexport const ItemMeta = React.forwardRef<HTMLSpanElement, HTMLAttributes<HTMLSpanElement>>(\r\n  (props, ref) => {\r\n    const { isCompact } = useMenuContext();\r\n    const { isDisabled } = useItemContext();\r\n\r\n    return <StyledItemMeta ref={ref} isCompact={isCompact} isDisabled={isDisabled} {...props} />;\r\n  }\r\n);\r\n\r\nItemMeta.displayName = 'ItemMeta';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { StyledMediaBody } from '../../../styled';\r\nimport useMenuContext from '../../../utils/useMenuContext';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const MediaBody = React.forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  (props, ref) => {\r\n    const { isCompact } = useMenuContext();\r\n\r\n    return <StyledMediaBody ref={ref} isCompact={isCompact} {...props} />;\r\n  }\r\n);\r\n\r\nMediaBody.displayName = 'MediaBody';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { StyledMediaFigure } from '../../../styled';\r\nimport useMenuContext from '../../../utils/useMenuContext';\r\n\r\n/**\r\n * @extends HTMLAttributes<any>\r\n */\r\nexport const MediaFigure: React.FC<HTMLAttributes<any>> = props => {\r\n  const { isCompact } = useMenuContext();\r\n\r\n  return <StyledMediaFigure isCompact={isCompact} {...props} />;\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Item, IItemProps } from './Item';\r\nimport { StyledMediaItem } from '../../../styled';\r\n\r\n/**\r\n * @extends LiHTMLAttributes<HTMLLIElement>\r\n */\r\nexport const MediaItem = React.forwardRef<HTMLLIElement, IItemProps>((props, ref) => (\r\n  <Item component={StyledMediaItem} ref={ref} {...props} />\r\n));\r\n\r\nMediaItem.displayName = 'MediaItem';\r\n\r\nMediaItem.propTypes = {\r\n  value: PropTypes.any,\r\n  disabled: PropTypes.bool\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Item, IItemProps } from './Item';\r\nimport { StyledNextItem, StyledItemIcon, StyledNextIcon } from '../../../styled';\r\nimport useDropdownContext from '../../../utils/useDropdownContext';\r\nimport useMenuContext from '../../../utils/useMenuContext';\r\n\r\n// eslint-disable-next-line react/display-name\r\nconst NextItemComponent = React.forwardRef<HTMLLIElement, IItemProps>(\r\n  ({ children, disabled, ...props }, ref) => {\r\n    const { isCompact } = useMenuContext();\r\n\r\n    return (\r\n      <StyledNextItem ref={ref} disabled={disabled} {...props}>\r\n        <StyledItemIcon isCompact={isCompact} isDisabled={disabled} isVisible>\r\n          <StyledNextIcon isDisabled={disabled} />\r\n        </StyledItemIcon>\r\n        {children}\r\n      </StyledNextItem>\r\n    );\r\n  }\r\n);\r\n\r\n/**\r\n * @extends LiHTMLAttributes<HTMLLIElement>\r\n */\r\nexport const NextItem = React.forwardRef<HTMLLIElement, Omit<IItemProps, 'component'>>(\r\n  ({ value, disabled, ...props }, ref) => {\r\n    const {\r\n      nextItemsHashRef,\r\n      downshift: { itemToString }\r\n    } = useDropdownContext();\r\n    const { itemIndexRef } = useMenuContext();\r\n\r\n    if (!disabled) {\r\n      // Include current index in global Dropdown context\r\n      (nextItemsHashRef.current as any)[itemToString(value)] = itemIndexRef.current;\r\n    }\r\n\r\n    return (\r\n      <Item\r\n        component={NextItemComponent}\r\n        aria-expanded\r\n        disabled={disabled}\r\n        value={value}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nNextItem.displayName = 'NextItem';\r\n\r\nNextItem.propTypes = {\r\n  value: PropTypes.any,\r\n  disabled: PropTypes.bool\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Item, IItemProps } from './Item';\r\nimport { StyledPreviousItem, StyledItemIcon, StyledPreviousIcon } from '../../../styled';\r\nimport useDropdownContext from '../../../utils/useDropdownContext';\r\nimport useMenuContext from '../../../utils/useMenuContext';\r\n\r\n// eslint-disable-next-line react/display-name\r\nconst PreviousItemComponent = React.forwardRef<HTMLLIElement, IItemProps>(\r\n  ({ children, disabled, ...props }, ref) => {\r\n    const { isCompact } = useMenuContext();\r\n\r\n    return (\r\n      <StyledPreviousItem ref={ref} disabled={disabled} {...props}>\r\n        <StyledItemIcon isCompact={isCompact} isDisabled={disabled} isVisible>\r\n          <StyledPreviousIcon isDisabled={disabled} />\r\n        </StyledItemIcon>\r\n        {children}\r\n      </StyledPreviousItem>\r\n    );\r\n  }\r\n);\r\n\r\n/**\r\n * @extends LiHTMLAttributes<HTMLLIElement>\r\n */\r\nexport const PreviousItem = React.forwardRef<HTMLLIElement, Omit<IItemProps, 'component'>>(\r\n  ({ value, disabled, ...props }, ref) => {\r\n    const { previousIndexRef } = useDropdownContext();\r\n    const { itemIndexRef } = useMenuContext();\r\n\r\n    if (!disabled) {\r\n      previousIndexRef.current = itemIndexRef.current;\r\n    }\r\n\r\n    return (\r\n      <Item\r\n        component={PreviousItemComponent}\r\n        aria-expanded\r\n        value={value}\r\n        disabled={disabled}\r\n        {...props}\r\n        ref={ref}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nPreviousItem.displayName = 'PreviousItem';\r\n\r\nPreviousItem.propTypes = {\r\n  value: PropTypes.any,\r\n  disabled: PropTypes.bool\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useRef, useEffect, HTMLAttributes, useState, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeContext } from 'styled-components';\r\nimport { Popper } from 'react-popper';\r\nimport { Modifiers } from 'popper.js';\r\nimport { StyledMenu, StyledMenuWrapper } from '../../styled/index';\r\nimport useDropdownContext from '../../utils/useDropdownContext';\r\nimport {\r\n  GARDEN_PLACEMENT,\r\n  getPopperPlacement,\r\n  getRtlPopperPlacement\r\n} from '../../utils/garden-placements';\r\nimport { MenuContext } from '../../utils/useMenuContext';\r\n\r\nexport interface IMenuProps extends HTMLAttributes<HTMLUListElement> {\r\n  /**\r\n   * Passes configuration options to the [Popper instance](https://popper.js.org/docs/v2/modifiers/)\r\n   */\r\n  popperModifiers?: Modifiers;\r\n  /**\r\n   * Allows the menu to reposition during browser resize events\r\n   */\r\n  eventsEnabled?: boolean;\r\n  /**\r\n   * Sets the `z-index` of the menu\r\n   */\r\n  zIndex?: number;\r\n  /**\r\n   * Adjusts the placement of the menu\r\n   */\r\n  placement?: GARDEN_PLACEMENT;\r\n  /**\r\n   * Animates the menu\r\n   */\r\n  isAnimated?: boolean;\r\n  /**\r\n   * Applies compact styling\r\n   */\r\n  isCompact?: boolean;\r\n  /**\r\n   * Attaches an arrow that points towards the menu trigger\r\n   */\r\n  hasArrow?: boolean;\r\n  /**\r\n   * Sets the `max-height` of the menu\r\n   */\r\n  maxHeight?: string;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLUListElement>\r\n */\r\nexport const Menu: React.FunctionComponent<IMenuProps> = props => {\r\n  const {\r\n    placement,\r\n    popperModifiers,\r\n    eventsEnabled,\r\n    isAnimated,\r\n    maxHeight,\r\n    style: menuStyle,\r\n    zIndex,\r\n    isCompact,\r\n    children,\r\n    ...otherProps\r\n  } = props;\r\n  const {\r\n    hasMenuRef,\r\n    itemIndexRef,\r\n    previousIndexRef,\r\n    nextItemsHashRef,\r\n    popperReferenceElementRef,\r\n    itemSearchRegistry,\r\n    downshift: { isOpen, getMenuProps }\r\n  } = useDropdownContext();\r\n  const scheduleUpdateRef = useRef<(() => void) | undefined>(undefined);\r\n\r\n  useEffect(() => {\r\n    /**\r\n     * Recalculate popper placement while open to allow animations to complete.\r\n     * This must be ran every render to allow for the number of items to change\r\n     * and still be placed correctly.\r\n     **/\r\n    if (scheduleUpdateRef.current && isOpen) {\r\n      scheduleUpdateRef.current();\r\n    }\r\n  });\r\n\r\n  const [isVisible, setVisible] = useState(isOpen);\r\n\r\n  useEffect(() => {\r\n    let timeout: any;\r\n\r\n    if (isOpen) {\r\n      setVisible(true);\r\n    } else if (isAnimated) {\r\n      // Match the duration of the menu fade out transition.\r\n      timeout = setTimeout(() => setVisible(false), 200);\r\n    } else {\r\n      setVisible(false);\r\n    }\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [isOpen, isAnimated]);\r\n\r\n  const themeContext = useContext(ThemeContext);\r\n\r\n  // Reset Downshift refs on every render\r\n  itemIndexRef.current = 0;\r\n  nextItemsHashRef.current = {};\r\n  previousIndexRef.current = undefined;\r\n  itemSearchRegistry.current = [];\r\n\r\n  const popperPlacement = themeContext.rtl\r\n    ? getRtlPopperPlacement(placement!)\r\n    : getPopperPlacement(placement!);\r\n\r\n  return (\r\n    /* eslint-disable react/jsx-no-constructed-context-values */\r\n    <MenuContext.Provider value={{ itemIndexRef, isCompact }}>\r\n      <Popper\r\n        placement={popperPlacement as any}\r\n        modifiers={popperModifiers}\r\n        // Disable position updating on scroll events while menu is closed\r\n        eventsEnabled={isOpen && eventsEnabled}\r\n      >\r\n        {({ ref, style, scheduleUpdate, placement: currentPlacement }) => {\r\n          let computedStyle = menuStyle;\r\n\r\n          scheduleUpdateRef.current = scheduleUpdate;\r\n\r\n          // Calculate custom width if ref is provided from Select or Autocomplete\r\n          if (\r\n            (isOpen || isVisible) &&\r\n            popperReferenceElementRef.current &&\r\n            popperReferenceElementRef.current.getBoundingClientRect\r\n          ) {\r\n            computedStyle = {\r\n              width: popperReferenceElementRef.current.getBoundingClientRect().width,\r\n              ...menuStyle\r\n            };\r\n          }\r\n\r\n          const menuProps = getMenuProps({\r\n            role: hasMenuRef.current ? 'menu' : 'listbox',\r\n            placement: currentPlacement,\r\n            isAnimated: isAnimated && (isOpen || isVisible),\r\n            ...otherProps\r\n          } as any);\r\n\r\n          return (\r\n            <StyledMenuWrapper\r\n              ref={isOpen ? ref : undefined}\r\n              hasArrow={menuProps.hasArrow}\r\n              placement={menuProps.placement}\r\n              style={style}\r\n              isHidden={!isOpen}\r\n              isAnimated={menuProps.isAnimated}\r\n              zIndex={zIndex}\r\n            >\r\n              <StyledMenu\r\n                isCompact={isCompact}\r\n                maxHeight={maxHeight}\r\n                style={computedStyle}\r\n                {...menuProps}\r\n              >\r\n                {(isOpen || isVisible) && children}\r\n              </StyledMenu>\r\n            </StyledMenuWrapper>\r\n          );\r\n        }}\r\n      </Popper>\r\n    </MenuContext.Provider>\r\n  );\r\n};\r\n\r\nMenu.propTypes = {\r\n  popperModifiers: PropTypes.any,\r\n  eventsEnabled: PropTypes.bool,\r\n  zIndex: PropTypes.number,\r\n  style: PropTypes.object,\r\n  /**\r\n   * These placements differ from the default naming of Popper.JS placements to help\r\n   * assist with RTL layouts.\r\n   **/\r\n  placement: PropTypes.oneOf([\r\n    'auto',\r\n    'top',\r\n    'top-start',\r\n    'top-end',\r\n    'end',\r\n    'end-top',\r\n    'end-bottom',\r\n    'bottom',\r\n    'bottom-start',\r\n    'bottom-end',\r\n    'start',\r\n    'start-top',\r\n    'start-bottom'\r\n  ]),\r\n  isAnimated: PropTypes.bool,\r\n  isCompact: PropTypes.bool,\r\n  hasArrow: PropTypes.bool,\r\n  maxHeight: PropTypes.string\r\n};\r\n\r\nMenu.defaultProps = {\r\n  placement: 'bottom-start',\r\n  isAnimated: true,\r\n  eventsEnabled: true,\r\n  maxHeight: '400px',\r\n  zIndex: 1000\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { StyledSeparator } from '../../styled';\r\n\r\n/**\r\n * @extends LiHTMLAttributes<HTMLLIElement>\r\n */\r\nexport const Separator = React.forwardRef<HTMLLIElement, HTMLAttributes<HTMLLIElement>>(\r\n  (props, ref) => <StyledSeparator ref={ref} {...props} />\r\n);\r\n\r\nSeparator.displayName = 'Separator';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, {\r\n  useContext,\r\n  useRef,\r\n  useEffect,\r\n  useState,\r\n  useMemo,\r\n  useCallback,\r\n  HTMLAttributes\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeContext } from 'styled-components';\r\nimport { Reference } from 'react-popper';\r\nimport { useSelection } from '@zendeskgarden/container-selection';\r\nimport { KEY_CODES, composeEventHandlers } from '@zendeskgarden/container-utilities';\r\nimport mergeRefs from 'react-merge-refs';\r\nimport {\r\n  StyledFauxInput,\r\n  StyledMultiselectInput,\r\n  StyledMultiselectItemsContainer,\r\n  StyledMultiselectItemWrapper,\r\n  StyledMultiselectMoreAnchor\r\n} from '../../styled';\r\nimport { VALIDATION } from '../../utils/validation';\r\nimport useDropdownContext from '../../utils/useDropdownContext';\r\nimport useFieldContext from '../../utils/useFieldContext';\r\nimport { REMOVE_ITEM_STATE_TYPE } from '../Dropdown/Dropdown';\r\n\r\nexport interface IMultiselectProps extends HTMLAttributes<HTMLDivElement> {\r\n  /** Applies compact styling */\r\n  isCompact?: boolean;\r\n  /** Removes borders and padding */\r\n  isBare?: boolean;\r\n  /** Indicates that the element is not interactive */\r\n  disabled?: boolean;\r\n  /** Applies inset `box-shadow` styling on focus */\r\n  focusInset?: boolean;\r\n  /** Defines text that appears in the element when no items are selected */\r\n  placeholder?: string;\r\n  /** Defines the element's validation state */\r\n  validation?: VALIDATION;\r\n  /** Determines the maximum number of items displayed while collapsed */\r\n  maxItems?: number;\r\n  /**\r\n   * Overrides the \"+ N more\" text displayed when the total number of items exceeds `maxItems`\r\n   *\r\n   * @param {number} value The number of hidden items\r\n   * @returns {string} a replacement for the \"+ N more\" text\r\n   */\r\n  renderShowMore?: (value: number) => string;\r\n  /**\r\n   * Renders each item element. Designed to be used with [Tag](/components/tags).\r\n   *\r\n   * @param {Object} options Rendered item options\r\n   * @param {any} options.value The item value\r\n   * @param {Function} options.removeValue Remove item callback\r\n   * @returns {React.ReactElement} the item element\r\n   */\r\n  renderItem: (options: { value: any; removeValue: () => void }) => React.ReactElement;\r\n  /** Provides DOM access to the underlying input element */\r\n  inputRef?: React.Ref<HTMLInputElement>;\r\n  /** Defines the icon rendered before the element's content */\r\n  start?: any;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Multiselect = React.forwardRef<HTMLDivElement, IMultiselectProps>(\r\n  (\r\n    {\r\n      renderItem,\r\n      placeholder,\r\n      maxItems,\r\n      renderShowMore,\r\n      inputRef: externalInputRef = null,\r\n      start,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const {\r\n      popperReferenceElementRef,\r\n      selectedItems = [],\r\n      containsMultiselectRef,\r\n      previousIndexRef,\r\n      downshift: {\r\n        getToggleButtonProps,\r\n        getRootProps,\r\n        getInputProps,\r\n        isOpen,\r\n        closeMenu,\r\n        inputValue,\r\n        setState: setDownshiftState,\r\n        itemToString\r\n      },\r\n      setDropdownType\r\n    } = useDropdownContext();\r\n    const { isLabelHovered } = useFieldContext();\r\n    const inputRef = useRef<HTMLInputElement>();\r\n    const triggerRef = useRef<HTMLDivElement>();\r\n    const blurTimeoutRef = useRef<number | undefined>();\r\n    const previousIsOpenRef = useRef<boolean | undefined>(undefined);\r\n    const previousIsFocusedRef = useRef<boolean | undefined>(undefined);\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [isFocused, setIsFocused] = useState(false);\r\n    const [focusedItem, setFocusedItem] = useState(undefined);\r\n    const themeContext = useContext(ThemeContext);\r\n\r\n    const { getContainerProps, getItemProps } = useSelection({\r\n      rtl: themeContext.rtl,\r\n      focusedItem,\r\n      selectedItem: undefined,\r\n      onFocus: (item: any) => {\r\n        setFocusedItem(item);\r\n      }\r\n    });\r\n\r\n    useEffect(() => {\r\n      containsMultiselectRef.current = true;\r\n      const tempRef = blurTimeoutRef;\r\n\r\n      return () => {\r\n        clearTimeout(tempRef.current);\r\n      };\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      // Focus internal input when Menu is opened\r\n      if (inputRef.current) {\r\n        if (isOpen && !previousIsOpenRef.current) {\r\n          inputRef.current.focus();\r\n        } else if (isFocused && !previousIsFocusedRef.current && focusedItem === undefined) {\r\n          inputRef.current.focus();\r\n        }\r\n      }\r\n\r\n      previousIsOpenRef.current = isOpen;\r\n      previousIsFocusedRef.current = isFocused;\r\n    }, [isOpen, inputRef, isFocused, focusedItem]);\r\n\r\n    /**\r\n     * Close menu when an item becomes focused\r\n     */\r\n    useEffect(() => {\r\n      if (focusedItem !== undefined && isOpen) {\r\n        closeMenu();\r\n      }\r\n    }, [focusedItem, isOpen, closeMenu]);\r\n\r\n    /**\r\n     * Destructure type out of props so that `type=\"button\"`\r\n     * is not spread onto the MultiSelect Dropdown `div`.\r\n     */\r\n    /* eslint-disable @typescript-eslint/no-unused-vars */\r\n    const { type, ...selectProps } = getToggleButtonProps(\r\n      getRootProps({\r\n        tabIndex: props.disabled ? undefined : -1,\r\n        onKeyDown: (e: React.KeyboardEvent<HTMLElement>) => {\r\n          if (isOpen) {\r\n            (e.nativeEvent as any).preventDownshiftDefault = true;\r\n          } else if (!inputValue && e.keyCode === KEY_CODES.HOME) {\r\n            setFocusedItem(selectedItems[0]);\r\n            e.preventDefault();\r\n          }\r\n        },\r\n        onFocus: () => {\r\n          setIsFocused(true);\r\n        },\r\n        onBlur: (e: React.FocusEvent<HTMLElement>) => {\r\n          const currentTarget = e.currentTarget;\r\n\r\n          blurTimeoutRef.current = setTimeout(() => {\r\n            if (!currentTarget.contains(document.activeElement)) {\r\n              setIsFocused(false);\r\n            }\r\n          }, 0) as unknown as number;\r\n        },\r\n        onMouseEnter: composeEventHandlers(props.onMouseEnter, () => setIsHovered(true)),\r\n        onMouseLeave: composeEventHandlers(props.onMouseLeave, () => setIsHovered(false)),\r\n        /**\r\n         * Ensure that [role=\"combobox\"] is applied directly to the input\r\n         * for Safari screenreader support\r\n         */\r\n        role: null,\r\n        ...props\r\n      } as any)\r\n    );\r\n\r\n    const renderSelectableItem = useCallback(\r\n      (item, index) => {\r\n        const removeValue = () => {\r\n          (setDownshiftState as any)({\r\n            type: REMOVE_ITEM_STATE_TYPE,\r\n            selectedItem: item\r\n          });\r\n          inputRef.current && inputRef.current.focus();\r\n        };\r\n\r\n        const renderedItem = renderItem({ value: item, removeValue });\r\n        const focusRef = React.createRef();\r\n\r\n        const clonedChild = React.cloneElement(renderedItem, {\r\n          ...getItemProps({\r\n            item,\r\n            focusRef,\r\n            onKeyDown: (e: React.KeyboardEvent<any>) => {\r\n              if (e.keyCode === KEY_CODES.DELETE || e.keyCode === KEY_CODES.BACKSPACE) {\r\n                e.preventDefault();\r\n                removeValue();\r\n              }\r\n\r\n              if (e.keyCode === KEY_CODES.END && !inputValue) {\r\n                inputRef.current && inputRef.current.focus();\r\n                e.preventDefault();\r\n              }\r\n\r\n              if (themeContext.rtl) {\r\n                if (e.keyCode === KEY_CODES.RIGHT && index === 0) {\r\n                  e.preventDefault();\r\n                }\r\n\r\n                if (e.keyCode === KEY_CODES.LEFT && index === selectedItems.length - 1) {\r\n                  e.preventDefault();\r\n                  inputRef.current && inputRef.current.focus();\r\n                }\r\n              } else {\r\n                if (e.keyCode === KEY_CODES.LEFT && index === 0) {\r\n                  e.preventDefault();\r\n                }\r\n\r\n                if (e.keyCode === KEY_CODES.RIGHT && index === selectedItems.length - 1) {\r\n                  e.preventDefault();\r\n                  inputRef.current && inputRef.current.focus();\r\n                }\r\n              }\r\n            },\r\n            onClick: (e: React.MouseEvent<any>) => {\r\n              (e as any).nativeEvent.preventDownshiftDefault = true;\r\n            },\r\n            tabIndex: -1\r\n          }),\r\n          size: props.isCompact ? 'medium' : 'large'\r\n        });\r\n\r\n        const key = `${itemToString(item)}-${index}`;\r\n\r\n        return <StyledMultiselectItemWrapper key={key}>{clonedChild}</StyledMultiselectItemWrapper>;\r\n      },\r\n      [\r\n        getItemProps,\r\n        inputValue,\r\n        renderItem,\r\n        setDownshiftState,\r\n        itemToString,\r\n        selectedItems,\r\n        props,\r\n        inputRef,\r\n        themeContext.rtl\r\n      ]\r\n    );\r\n\r\n    const items = useMemo(() => {\r\n      const itemValues = selectedItems || [];\r\n      const output = [];\r\n\r\n      for (let x = 0; x < itemValues.length; x++) {\r\n        const item = itemValues[x];\r\n\r\n        if (x < maxItems!) {\r\n          if (props.disabled) {\r\n            const renderedItem = React.cloneElement(\r\n              renderItem({\r\n                value: item,\r\n                removeValue: () => {\r\n                  return undefined;\r\n                }\r\n              }),\r\n              {\r\n                size: props.isCompact ? 'medium' : 'large'\r\n              }\r\n            );\r\n\r\n            output.push(\r\n              <StyledMultiselectItemWrapper key={x}>{renderedItem}</StyledMultiselectItemWrapper>\r\n            );\r\n          } else {\r\n            output.push(renderSelectableItem(item, x));\r\n          }\r\n        } else if ((!isFocused && !inputValue) || props.disabled) {\r\n          output.push(\r\n            <StyledMultiselectItemWrapper key=\"more-anchor\">\r\n              <StyledMultiselectMoreAnchor\r\n                data-test-id=\"show-more\"\r\n                isCompact={props.isCompact}\r\n                isDisabled={props.disabled}\r\n              >\r\n                {renderShowMore\r\n                  ? renderShowMore(itemValues.length - x)\r\n                  : `+ ${itemValues.length - x} more`}\r\n              </StyledMultiselectMoreAnchor>\r\n            </StyledMultiselectItemWrapper>\r\n          );\r\n          break;\r\n        } else {\r\n          output.push(renderSelectableItem(item, x));\r\n        }\r\n      }\r\n\r\n      return output;\r\n    }, [\r\n      isFocused,\r\n      props.disabled,\r\n      renderSelectableItem,\r\n      selectedItems,\r\n      renderItem,\r\n      inputValue,\r\n      maxItems,\r\n      renderShowMore,\r\n      props.isCompact\r\n    ]);\r\n\r\n    const isContainerHovered = isLabelHovered && !isOpen;\r\n    const isContainerFocused = isOpen || isFocused;\r\n\r\n    useEffect(() => {\r\n      setDropdownType('multiselect');\r\n    }, [setDropdownType]);\r\n\r\n    return (\r\n      <Reference>\r\n        {({ ref: popperReference }) => (\r\n          <StyledFauxInput\r\n            data-test-is-open={isOpen}\r\n            data-test-is-hovered={isContainerHovered}\r\n            data-test-is-focused={isContainerFocused}\r\n            {...getContainerProps({\r\n              ...selectProps,\r\n              isHovered: isContainerHovered,\r\n              isFocused: isContainerFocused,\r\n              ref: (selectRef: any) => {\r\n                // Pass ref to popperJS for positioning\r\n                (popperReference as any)(selectRef);\r\n\r\n                // Apply Select ref to global Dropdown context\r\n                mergeRefs([triggerRef, popperReferenceElementRef, ref])(selectRef);\r\n              }\r\n            })}\r\n          >\r\n            {start && (\r\n              <StyledFauxInput.StartIcon\r\n                isHovered={isHovered || (isLabelHovered && !isOpen)}\r\n                isFocused={isContainerFocused}\r\n                isDisabled={props.disabled}\r\n              >\r\n                {start}\r\n              </StyledFauxInput.StartIcon>\r\n            )}\r\n            <StyledMultiselectItemsContainer isBare={props.isBare} isCompact={props.isCompact}>\r\n              {items}\r\n              <StyledMultiselectInput\r\n                {...(getInputProps({\r\n                  disabled: props.disabled,\r\n                  onFocus: () => {\r\n                    setFocusedItem(undefined);\r\n                  },\r\n                  onClick: (e: MouseEvent) => {\r\n                    if (inputValue && inputValue.length > 0 && isOpen) {\r\n                      (e as any).nativeEvent.preventDownshiftDefault = true;\r\n                    }\r\n                  },\r\n                  onKeyDown: (e: KeyboardEvent) => {\r\n                    if (!inputValue) {\r\n                      if (\r\n                        themeContext.rtl &&\r\n                        e.keyCode === KEY_CODES.RIGHT &&\r\n                        selectedItems.length > 0 &&\r\n                        previousIndexRef.current === undefined\r\n                      ) {\r\n                        setFocusedItem(selectedItems[selectedItems.length - 1]);\r\n                      } else if (\r\n                        !themeContext.rtl &&\r\n                        e.keyCode === KEY_CODES.LEFT &&\r\n                        selectedItems.length > 0 &&\r\n                        previousIndexRef.current === undefined\r\n                      ) {\r\n                        setFocusedItem(selectedItems[selectedItems.length - 1]);\r\n                      } else if (e.keyCode === KEY_CODES.BACKSPACE && selectedItems.length > 0) {\r\n                        (setDownshiftState as any)({\r\n                          type: REMOVE_ITEM_STATE_TYPE,\r\n                          selectedItem: selectedItems[selectedItems.length - 1]\r\n                        });\r\n                        (e as any).nativeEvent.preventDownshiftDefault = true;\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                      }\r\n                    }\r\n                  },\r\n                  isVisible: isFocused || inputValue || selectedItems.length === 0,\r\n                  isCompact: props.isCompact,\r\n                  role: 'combobox',\r\n                  ref: mergeRefs([inputRef, externalInputRef]),\r\n                  placeholder: selectedItems.length === 0 ? placeholder : undefined\r\n                }) as any)}\r\n              />\r\n            </StyledMultiselectItemsContainer>\r\n            {!props.isBare && (\r\n              <StyledFauxInput.EndIcon\r\n                isHovered={isHovered || (isLabelHovered && !isOpen)}\r\n                isFocused={isContainerFocused}\r\n                isDisabled={props.disabled}\r\n                isRotated={isOpen}\r\n              >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"currentColor\" d=\"M12.688 5.61a.5.5 0 01.69.718l-.066.062-5 4a.5.5 0 01-.542.054l-.082-.054-5-4a.5.5 0 01.55-.83l.074.05L8 9.359l4.688-3.75z\"/>\r\n</svg>\r\n              </StyledFauxInput.EndIcon>\r\n            )}\r\n          </StyledFauxInput>\r\n        )}\r\n      </Reference>\r\n    );\r\n  }\r\n);\r\n\r\nMultiselect.propTypes = {\r\n  isCompact: PropTypes.bool,\r\n  isBare: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  focusInset: PropTypes.bool,\r\n  renderItem: PropTypes.func.isRequired,\r\n  maxItems: PropTypes.number,\r\n  validation: PropTypes.oneOf(['success', 'warning', 'error'])\r\n};\r\n\r\nMultiselect.defaultProps = {\r\n  maxItems: 4\r\n};\r\n\r\nMultiselect.displayName = 'Multiselect';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useRef, useState, useEffect, useCallback, HTMLAttributes } from 'react';\r\nimport { composeEventHandlers, KEY_CODES } from '@zendeskgarden/container-utilities';\r\nimport PropTypes from 'prop-types';\r\nimport { Reference } from 'react-popper';\r\nimport mergeRefs from 'react-merge-refs';\r\nimport { StyledFauxInput, StyledInput, StyledSelect } from '../../styled';\r\nimport { VALIDATION } from '../../utils/validation';\r\nimport useDropdownContext from '../../utils/useDropdownContext';\r\nimport useFieldContext from '../../utils/useFieldContext';\r\n\r\nexport interface ISelectProps extends HTMLAttributes<HTMLDivElement> {\r\n  /** Applies compact styling */\r\n  isCompact?: boolean;\r\n  /** Removes borders and padding */\r\n  isBare?: boolean;\r\n  /** Indicates that the element is not interactive */\r\n  disabled?: boolean;\r\n  /** Applies inset `box-shadow` styling on focus */\r\n  focusInset?: boolean;\r\n  /** Defines the element's validation state */\r\n  validation?: VALIDATION;\r\n  /** Defines the icon rendered before the element's content */\r\n  start?: any;\r\n}\r\n\r\n/**\r\n * Applies state and a11y attributes to its children. Must be nested within a `<Field>` component.\r\n *\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Select = React.forwardRef<HTMLDivElement, ISelectProps>(\r\n  ({ children, start, ...props }, ref) => {\r\n    const {\r\n      popperReferenceElementRef,\r\n      itemSearchRegistry,\r\n      downshift: {\r\n        getToggleButtonProps,\r\n        getInputProps,\r\n        isOpen,\r\n        highlightedIndex,\r\n        setHighlightedIndex,\r\n        selectItemAtIndex,\r\n        closeMenu\r\n      }\r\n    } = useDropdownContext();\r\n    const { isLabelHovered } = useFieldContext();\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [isFocused, setIsFocused] = useState(false);\r\n    const hiddenInputRef = useRef<HTMLInputElement>();\r\n    const triggerRef = useRef<HTMLDivElement>();\r\n    const previousIsOpenRef = useRef<boolean | undefined>(undefined);\r\n    const [searchString, setSearchString] = useState('');\r\n    const searchTimeoutRef = useRef<number>();\r\n    const currentSearchIndexRef = useRef<number>(0);\r\n\r\n    useEffect(() => {\r\n      // Focus internal input when Menu is opened\r\n      if (hiddenInputRef.current && isOpen && !previousIsOpenRef.current) {\r\n        hiddenInputRef.current.focus();\r\n      }\r\n\r\n      // Focus trigger when Menu is closed\r\n      if (triggerRef.current && !isOpen && previousIsOpenRef.current) {\r\n        triggerRef.current.focus();\r\n      }\r\n\r\n      previousIsOpenRef.current = isOpen;\r\n    }, [isOpen, triggerRef]);\r\n\r\n    /**\r\n     * Handle timeouts for clearing search text\r\n     */\r\n    useEffect(() => {\r\n      // Cancel existing timeout if keys are pressed rapidly\r\n      if (searchTimeoutRef.current) {\r\n        clearTimeout(searchTimeoutRef.current);\r\n      }\r\n\r\n      // Reset search string after delay\r\n      searchTimeoutRef.current = window.setTimeout(() => {\r\n        setSearchString('');\r\n      }, 500);\r\n\r\n      return () => {\r\n        clearTimeout(searchTimeoutRef.current);\r\n      };\r\n    }, [searchString]);\r\n\r\n    /**\r\n     * Search item value registry based around current highlight bounds\r\n     */\r\n    const searchItems = useCallback(\r\n      (searchValue: string, startIndex: number, endIndex: number) => {\r\n        for (let index = startIndex; index < endIndex; index++) {\r\n          const itemTextValue = itemSearchRegistry.current[index];\r\n\r\n          if (\r\n            itemTextValue &&\r\n            itemTextValue.toUpperCase().indexOf(searchValue.toUpperCase()) === 0\r\n          ) {\r\n            return index;\r\n          }\r\n        }\r\n\r\n        return undefined;\r\n      },\r\n      [itemSearchRegistry]\r\n    );\r\n\r\n    const onInputKeyDown = useCallback(\r\n      (e: React.KeyboardEvent) => {\r\n        if (e.keyCode === KEY_CODES.SPACE) {\r\n          // Prevent space from closing Menu only if used with existing search value\r\n          if (searchString) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n          } else if (highlightedIndex !== null && highlightedIndex !== undefined) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            selectItemAtIndex(highlightedIndex);\r\n            closeMenu();\r\n          }\r\n        }\r\n\r\n        // Only search with alphanumeric keys\r\n        if (\r\n          (e.keyCode < 48 || e.keyCode > 57) &&\r\n          (e.keyCode < 65 || e.keyCode > 90) &&\r\n          e.keyCode !== KEY_CODES.SPACE\r\n        ) {\r\n          return;\r\n        }\r\n\r\n        const character = String.fromCharCode(e.which || e.keyCode);\r\n\r\n        if (!character || character.length === 0) {\r\n          return;\r\n        }\r\n\r\n        // Reset starting search index after delay has removed previous values\r\n        if (!searchString) {\r\n          if (highlightedIndex === null || highlightedIndex === undefined) {\r\n            currentSearchIndexRef.current = -1;\r\n          } else {\r\n            currentSearchIndexRef.current = highlightedIndex;\r\n          }\r\n        }\r\n\r\n        const newSearchString = searchString + character;\r\n\r\n        setSearchString(newSearchString);\r\n\r\n        let matchingIndex = searchItems(\r\n          newSearchString,\r\n          currentSearchIndexRef.current + 1,\r\n          itemSearchRegistry.current.length\r\n        );\r\n\r\n        if (matchingIndex === undefined) {\r\n          matchingIndex = searchItems(newSearchString, 0, currentSearchIndexRef.current);\r\n        }\r\n\r\n        if (matchingIndex !== undefined) {\r\n          setHighlightedIndex(matchingIndex);\r\n        }\r\n      },\r\n      [\r\n        searchString,\r\n        searchItems,\r\n        itemSearchRegistry,\r\n        highlightedIndex,\r\n        selectItemAtIndex,\r\n        closeMenu,\r\n        setHighlightedIndex\r\n      ]\r\n    );\r\n\r\n    /**\r\n     * Destructure type out of props so that `type=\"button\"`\r\n     * is not spread onto the Select Dropdown `div`.\r\n     */\r\n    /* eslint-disable @typescript-eslint/no-unused-vars */\r\n    const { type, ...selectProps } = getToggleButtonProps({\r\n      tabIndex: props.disabled ? undefined : 0,\r\n      onMouseEnter: composeEventHandlers(props.onMouseEnter, () => setIsHovered(true)),\r\n      onMouseLeave: composeEventHandlers(props.onMouseLeave, () => setIsHovered(false)),\r\n      onFocus: composeEventHandlers(props.onFocus, () => setIsFocused(true)),\r\n      onBlur: composeEventHandlers(props.onBlur, () => setIsFocused(false)),\r\n      ...props\r\n    } as any);\r\n\r\n    const isContainerHovered = isLabelHovered && !isOpen;\r\n    const isContainerFocused = isFocused || isOpen;\r\n\r\n    return (\r\n      <Reference>\r\n        {({ ref: popperReference }) => (\r\n          <StyledFauxInput\r\n            data-test-is-open={isOpen}\r\n            data-test-is-hovered={isContainerHovered}\r\n            data-test-is-focused={isOpen}\r\n            isHovered={isContainerHovered}\r\n            isFocused={isContainerFocused}\r\n            {...selectProps}\r\n            ref={selectRef => {\r\n              // Pass ref to popperJS for positioning\r\n              (popperReference as any)(selectRef);\r\n\r\n              // Store ref locally to return focus on close\r\n              // Apply Select ref to global Dropdown context\r\n              mergeRefs([triggerRef, ref, popperReferenceElementRef])(selectRef);\r\n            }}\r\n          >\r\n            {start && (\r\n              <StyledFauxInput.StartIcon\r\n                isHovered={isHovered || (isLabelHovered && !isOpen)}\r\n                isFocused={isContainerFocused}\r\n                isDisabled={props.disabled}\r\n              >\r\n                {start}\r\n              </StyledFauxInput.StartIcon>\r\n            )}\r\n            <StyledSelect>{children}</StyledSelect>\r\n            <StyledInput\r\n              {...getInputProps({\r\n                readOnly: true,\r\n                isHidden: true,\r\n                tabIndex: -1,\r\n                ref: hiddenInputRef,\r\n                value: '',\r\n                onClick: (e: any) => {\r\n                  if (isOpen) {\r\n                    (e.nativeEvent as any).preventDownshiftDefault = true;\r\n                  }\r\n                },\r\n                onKeyDown: onInputKeyDown\r\n              } as any)}\r\n            />\r\n            {!props.isBare && (\r\n              <StyledFauxInput.EndIcon\r\n                data-test-id=\"select-icon\"\r\n                isHovered={isHovered || (isLabelHovered && !isOpen)}\r\n                isFocused={isContainerFocused}\r\n                isDisabled={props.disabled}\r\n                isRotated={isOpen}\r\n              >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"currentColor\" d=\"M12.688 5.61a.5.5 0 01.69.718l-.066.062-5 4a.5.5 0 01-.542.054l-.082-.054-5-4a.5.5 0 01.55-.83l.074.05L8 9.359l4.688-3.75z\"/>\r\n</svg>\r\n\r\n              </StyledFauxInput.EndIcon>\r\n            )}\r\n          </StyledFauxInput>\r\n        )}\r\n      </Reference>\r\n    );\r\n  }\r\n);\r\n\r\nSelect.displayName = 'Select';\r\n\r\nSelect.propTypes = {\r\n  isCompact: PropTypes.bool,\r\n  isBare: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  focusInset: PropTypes.bool,\r\n  validation: PropTypes.oneOf(['success', 'warning', 'error'])\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useRef, useEffect, useState, useCallback, HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Reference } from 'react-popper';\r\nimport { KEY_CODES } from '@zendeskgarden/container-utilities';\r\nimport { StyledInput } from '../../styled';\r\nimport useDropdownContext from '../../utils/useDropdownContext';\r\n\r\nexport interface ITriggerProps extends HTMLAttributes<HTMLElement> {\r\n  /** Passes the ref callback to components with non-standard ref props (i.e. `innerRef`) */\r\n  refKey?: string;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLElement>\r\n */\r\nconst Trigger: React.FunctionComponent<ITriggerProps> = ({ children, refKey, ...triggerProps }) => {\r\n  const {\r\n    hasMenuRef,\r\n    itemSearchRegistry,\r\n    downshift: {\r\n      getRootProps,\r\n      getToggleButtonProps,\r\n      getInputProps,\r\n      isOpen,\r\n      highlightedIndex,\r\n      selectItemAtIndex,\r\n      setHighlightedIndex\r\n    }\r\n  } = useDropdownContext();\r\n  const hiddenInputRef = useRef<HTMLInputElement>(null);\r\n  const triggerRef = useRef<HTMLElement>(null);\r\n  const previousIsOpenRef = useRef<boolean | undefined>(undefined);\r\n  const [searchString, setSearchString] = useState('');\r\n  const searchTimeoutRef = useRef<number>();\r\n  const currentSearchIndexRef = useRef<number>(0);\r\n\r\n  useEffect(() => {\r\n    // Focus internal input when Menu is opened\r\n    if (hiddenInputRef.current && isOpen && !previousIsOpenRef.current) {\r\n      hiddenInputRef.current.focus();\r\n    }\r\n\r\n    // Focus trigger when Menu is closed\r\n    if (triggerRef.current && !isOpen && previousIsOpenRef.current) {\r\n      triggerRef.current.focus();\r\n    }\r\n\r\n    previousIsOpenRef.current = isOpen;\r\n  }, [isOpen, hasMenuRef]);\r\n\r\n  useEffect(() => {\r\n    if (hasMenuRef.current === false) {\r\n      hasMenuRef.current = true;\r\n    }\r\n  }, [hasMenuRef]);\r\n\r\n  /**\r\n   * Handle timeouts for clearing search text\r\n   */\r\n  useEffect(() => {\r\n    // Cancel existing timeout if keys are pressed rapidly\r\n    if (searchTimeoutRef.current) {\r\n      clearTimeout(searchTimeoutRef.current);\r\n    }\r\n\r\n    // Reset search string after delay\r\n    searchTimeoutRef.current = window.setTimeout(() => {\r\n      setSearchString('');\r\n    }, 500);\r\n\r\n    return () => {\r\n      clearTimeout(searchTimeoutRef.current);\r\n    };\r\n  }, [searchString]);\r\n\r\n  /**\r\n   * Search item value registry based around current highlight bounds\r\n   */\r\n  const searchItems = useCallback(\r\n    (searchValue: string, startIndex: number, endIndex: number) => {\r\n      for (let index = startIndex; index < endIndex; index++) {\r\n        const itemTextValue = itemSearchRegistry.current[index];\r\n\r\n        if (itemTextValue && itemTextValue.toUpperCase().indexOf(searchValue.toUpperCase()) === 0) {\r\n          return index;\r\n        }\r\n      }\r\n\r\n      return undefined;\r\n    },\r\n    [itemSearchRegistry]\r\n  );\r\n\r\n  const onInputKeyDown = useCallback(\r\n    (e: React.KeyboardEvent) => {\r\n      if (e.keyCode === KEY_CODES.SPACE) {\r\n        // Prevent space from closing Menu only if used with existing search value\r\n        if (searchString) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n        } else if (highlightedIndex !== null && highlightedIndex !== undefined) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n\r\n          selectItemAtIndex(highlightedIndex);\r\n        }\r\n      }\r\n\r\n      // Only search with alphanumeric keys\r\n      if (\r\n        (e.keyCode < 48 || e.keyCode > 57) &&\r\n        (e.keyCode < 65 || e.keyCode > 90) &&\r\n        e.keyCode !== KEY_CODES.SPACE\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      const character = String.fromCharCode(e.which || e.keyCode);\r\n\r\n      if (!character || character.length === 0) {\r\n        return;\r\n      }\r\n\r\n      // Reset starting search index after delay has removed previous values\r\n      if (!searchString) {\r\n        if (highlightedIndex === null || highlightedIndex === undefined) {\r\n          currentSearchIndexRef.current = -1;\r\n        } else {\r\n          currentSearchIndexRef.current = highlightedIndex;\r\n        }\r\n      }\r\n\r\n      const newSearchString = searchString + character;\r\n\r\n      setSearchString(newSearchString);\r\n\r\n      let matchingIndex = searchItems(\r\n        newSearchString,\r\n        currentSearchIndexRef.current + 1,\r\n        itemSearchRegistry.current.length\r\n      );\r\n\r\n      if (matchingIndex === undefined) {\r\n        matchingIndex = searchItems(newSearchString, 0, currentSearchIndexRef.current);\r\n      }\r\n\r\n      if (matchingIndex !== undefined) {\r\n        setHighlightedIndex(matchingIndex);\r\n      }\r\n    },\r\n    [\r\n      searchString,\r\n      searchItems,\r\n      itemSearchRegistry,\r\n      highlightedIndex,\r\n      selectItemAtIndex,\r\n      setHighlightedIndex\r\n    ]\r\n  );\r\n\r\n  const renderChildren = (popperRef: any) => {\r\n    // Destructuring the `ref` argument lets us share it with PopperJS\r\n    const { ref: rootPropsRefCallback, ...rootProps } = getRootProps();\r\n\r\n    const listboxToggleProps = getToggleButtonProps({\r\n      ...rootProps,\r\n      // Trigger usages do not include an role\r\n      role: null,\r\n      // Trigger usages do not include an associated label\r\n      'aria-labelledby': undefined,\r\n      ...triggerProps,\r\n      ...(children as any).props\r\n    });\r\n\r\n    const menuToggleProps = {\r\n      ...listboxToggleProps,\r\n      'aria-haspopup': 'true',\r\n      'aria-controls': listboxToggleProps['aria-owns'],\r\n      'aria-owns': null\r\n    };\r\n\r\n    /**\r\n     * Some ARIA attributes from Downshift's `getMenuProps` props are overwritten depending on\r\n     * whether the dropdown renders a `role=\"menu\"` or `role=\"listbox\"`. This override is intended\r\n     * to align a11y with examples demonstrated in WAI ARIA 1.1.\r\n     */\r\n\r\n    const toggleButtonProps = hasMenuRef.current ? menuToggleProps : listboxToggleProps;\r\n\r\n    /**\r\n     * Clone immediate child and provide:\r\n     * - Necessary downshift props\r\n     * - Ref collector based on `refKey` prop\r\n     */\r\n    return React.cloneElement(React.Children.only(children as any), {\r\n      ...toggleButtonProps,\r\n      [refKey!]: (childRef: HTMLElement) => {\r\n        // Pass ref to popperJS for positioning\r\n        popperRef(childRef);\r\n\r\n        // Store ref locally to return focus on close\r\n        (triggerRef as any).current = childRef;\r\n\r\n        // Pass ref to getRootProps()\r\n        rootPropsRefCallback(childRef);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Reference>\r\n      {({ ref: popperReference }) => (\r\n        <>\r\n          {renderChildren(popperReference)}\r\n          <StyledInput\r\n            {...getInputProps({\r\n              readOnly: true,\r\n              isHidden: true,\r\n              tabIndex: -1,\r\n              ref: hiddenInputRef,\r\n              value: '',\r\n              onClick: (e: any) => {\r\n                if (isOpen) {\r\n                  (e.nativeEvent as any).preventDownshiftDefault = true;\r\n                }\r\n              },\r\n              onKeyDown: onInputKeyDown\r\n            } as any)}\r\n          />\r\n        </>\r\n      )}\r\n    </Reference>\r\n  );\r\n};\r\n\r\nTrigger.propTypes = {\r\n  children: PropTypes.any,\r\n  refKey: PropTypes.string\r\n};\r\n\r\nTrigger.defaultProps = {\r\n  refKey: 'ref'\r\n};\r\n\r\nexport default Trigger;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, getColor, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nimport { StyledItem } from './StyledItem';\r\n\r\nconst COMPONENT_ID = 'dropdowns.add_item';\r\n\r\n/**\r\n * Accepts all `<li>` props\r\n */\r\nexport const StyledAddItem = styled(StyledItem).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  color: ${props => !props.disabled && getColor('primaryHue', 600, props.theme)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledAddItem.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME, getColor } from '@zendeskgarden/react-theming';\r\nimport { rgba } from 'polished';\r\n\r\nconst COMPONENT_ID = 'dropdowns.item';\r\n\r\nexport interface IStyledItemProps {\r\n  isFocused?: boolean;\r\n  isCompact?: boolean;\r\n  isDanger?: boolean;\r\n  disabled?: boolean;\r\n  checked?: boolean;\r\n}\r\n\r\nexport const getItemPaddingVertical = (props: IStyledItemProps & ThemeProps<DefaultTheme>) => {\r\n  if (props.isCompact) {\r\n    return `${props.theme.space.base}px`;\r\n  }\r\n\r\n  return `${props.theme.space.base * 2}px`;\r\n};\r\n\r\nconst getColorStyles = (props: IStyledItemProps & ThemeProps<DefaultTheme>) => {\r\n  let foregroundColor;\r\n  let backgroundColor;\r\n\r\n  if (props.disabled) {\r\n    foregroundColor = getColor('neutralHue', 400, props.theme);\r\n  } else if (props.isDanger) {\r\n    foregroundColor = getColor('dangerHue', 600, props.theme);\r\n    backgroundColor = props.isFocused ? rgba(foregroundColor as string, 0.08) : 'inherit';\r\n  } else {\r\n    foregroundColor = props.theme.colors.foreground;\r\n    backgroundColor = props.isFocused ? getColor('primaryHue', 600, props.theme, 0.08) : 'inherit';\r\n  }\r\n\r\n  return css`\r\n    background-color: ${backgroundColor};\r\n    color: ${foregroundColor};\r\n\r\n    & a,\r\n    & a:hover,\r\n    & a:focus,\r\n    & a:active {\r\n      color: inherit;\r\n    }\r\n  `;\r\n};\r\n\r\n/**\r\n * 1. Allows an item to contain a positioned sub-menu.\r\n * 2. Reset stacking context for sub-menu css-arrows.\r\n **/\r\nexport const StyledItem = styled.li.attrs<IStyledItemProps>(props => ({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  'aria-disabled': props.disabled\r\n}))<IStyledItemProps>`\r\n  display: block;\r\n  position: relative; /* [1] */\r\n  z-index: 0; /* [2] */\r\n  cursor: ${props => (props.disabled ? 'default' : 'pointer')};\r\n  padding: ${props => getItemPaddingVertical(props)} ${props => props.theme.space.base * 9}px;\r\n  text-decoration: none;\r\n  line-height: ${props => props.theme.space.base * 5}px;\r\n  word-wrap: break-word;\r\n  user-select: none;\r\n\r\n  &:first-child {\r\n    margin-top: ${props => props.theme.space.base}px;\r\n  }\r\n\r\n  &:last-child {\r\n    margin-bottom: ${props => props.theme.space.base}px;\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  /* stylelint-disable no-descending-specificity */\r\n  & a,\r\n  & a:hover,\r\n  & a:focus,\r\n  & a:active {\r\n    text-decoration: none;\r\n  }\r\n\r\n  ${props => getColorStyles(props)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledItem.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { math } from 'polished';\r\nimport { getColor, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { getItemPaddingVertical } from './StyledItem';\r\n\r\nconst COMPONENT_ID = 'dropdowns.item_icon';\r\n\r\ninterface IStyledItemIconProps {\r\n  isCompact?: boolean;\r\n  isVisible?: boolean;\r\n  isDisabled?: boolean;\r\n}\r\n\r\nconst getSizeStyles = (props: IStyledItemIconProps & ThemeProps<DefaultTheme>) => {\r\n  return css`\r\n    width: ${props.theme.iconSizes.md};\r\n    height: calc(${props.theme.space.base * 5}px + ${math(`${getItemPaddingVertical(props)} * 2`)});\r\n  `;\r\n};\r\n\r\nexport const StyledItemIcon = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledItemIconProps>`\r\n  display: flex;\r\n  position: absolute;\r\n  top: 0;\r\n  ${props => (props.theme.rtl ? 'right' : 'left')}: ${props => props.theme.space.base * 3}px;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: opacity 0.1s ease-in-out;\r\n  opacity: ${props => (props.isVisible ? '1' : '0')};\r\n  color: ${props => (props.isDisabled ? 'inherit' : getColor('primaryHue', 600, props.theme))};\r\n\r\n  ${props => getSizeStyles(props)};\r\n\r\n  & > * {\r\n    width: ${props => props.theme.iconSizes.md};\r\n    height: ${props => props.theme.iconSizes.md};\r\n  }\r\n`;\r\n\r\nStyledItemIcon.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME, getColor } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'dropdowns.item_meta';\r\n\r\ninterface IStyledItemMetaProps {\r\n  isCompact?: boolean;\r\n  isDisabled?: boolean;\r\n}\r\n\r\n/**\r\n * Accepts all `<span>` props\r\n */\r\nexport const StyledItemMeta = styled.span.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledItemMetaProps>`\r\n  display: block;\r\n  line-height: ${props => props.theme.space.base * (props.isCompact ? 3 : 4)}px;\r\n  color: ${props => getColor('neutralHue', props.isDisabled ? 400 : 600, props.theme)};\r\n  font-size: ${props => props.theme.fontSizes.sm};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledItemMeta.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport styled from 'styled-components';\r\nimport NextIconSvg from '@zendeskgarden/svg-icons/src/16/chevron-right-stroke.svg';\r\nimport { retrieveComponentStyles, DEFAULT_THEME, getColor } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'dropdowns.next_item_icon';\r\n\r\ninterface IStyledNextIconProps {\r\n  isDisabled?: boolean;\r\n}\r\n\r\nconst NextIconComponent: React.FC<HTMLAttributes<SVGSVGElement>> = ({ className }) => (\r\n  <NextIconSvg\r\n    data-garden-id={COMPONENT_ID}\r\n    data-garden-version={PACKAGE_VERSION}\r\n    className={className}\r\n  />\r\n);\r\n\r\nexport const StyledNextIcon = styled(NextIconComponent)<IStyledNextIconProps>`\r\n  transform: ${props => props.theme.rtl && 'rotate(180deg)'};\r\n  color: ${props => (props.isDisabled ? 'inherit' : getColor('neutralHue', 600, props.theme))};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledNextIcon.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nimport { StyledItem } from './StyledItem';\r\nimport { StyledItemIcon } from './StyledItemIcon';\r\n\r\nconst COMPONENT_ID = 'dropdowns.next_item';\r\n\r\n/**\r\n * Accepts all `<li>` props\r\n */\r\nexport const StyledNextItem = styled(StyledItem).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  ${StyledItemIcon} {\r\n    right: ${props => (props.theme.rtl ? 'auto' : `${props.theme.space.base * 3}px`)};\r\n    left: ${props => (props.theme.rtl ? `${props.theme.space.base * 3}px` : 'auto')};\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledNextItem.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME, getColor } from '@zendeskgarden/react-theming';\r\nimport { PreviousIconSvg } from './chevron-left';\r\n\r\nconst COMPONENT_ID = 'dropdowns.previous_item_icon';\r\n\r\ninterface IStyledPreviousIconProps {\r\n  isDisabled?: boolean;\r\n}\r\n\r\nconst PreviousIconComponent: React.FC<HTMLAttributes<SVGSVGElement>> = ({ className }) => (\r\n  <PreviousIconSvg\r\n    data-garden-id={COMPONENT_ID}\r\n    data-garden-version={PACKAGE_VERSION}\r\n    className={className}\r\n  />\r\n);\r\n\r\nexport const StyledPreviousIcon = styled(PreviousIconComponent)<IStyledPreviousIconProps>`\r\n  transform: ${props => props.theme.rtl && 'rotate(180deg)'};\r\n  color: ${props => (props.isDisabled ? 'inherit' : getColor('neutralHue', 600, props.theme))};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledPreviousIcon.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nimport { StyledItem } from './StyledItem';\r\n\r\nconst COMPONENT_ID = 'dropdowns.previous_item';\r\n\r\n/**\r\n * Accepts all `<li>` props\r\n */\r\nexport const StyledPreviousItem = styled(StyledItem).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  font-weight: ${props => props.theme.fontWeights.semibold};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledPreviousItem.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nexport const PreviousIconSvg = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"currentColor\" d=\"M10.39 12.688a.5.5 0 01-.718.69l-.062-.066-4-5a.5.5 0 01-.054-.542l.054-.082 4-5a.5.5 0 01.83.55l-.05.074L6.641 8l3.75 4.688z\"/>\r\n</svg>\r\n\r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME, getColor } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'dropdowns.header_icon';\r\n\r\ninterface IStyledHeaderIcon {\r\n  isCompact?: boolean;\r\n}\r\n\r\nexport const StyledHeaderIcon = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledHeaderIcon>`\r\n  display: flex;\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  align-items: center;\r\n  justify-content: center;\r\n  ${props => (props.theme.rtl ? 'right' : 'left')}: ${props => props.theme.space.base * 3}px;\r\n  color: ${props => getColor('neutralHue', 600, props.theme)};\r\n\r\n  & > * {\r\n    width: ${props => props.theme.iconSizes.md};\r\n    height: ${props => props.theme.iconSizes.md};\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledHeaderIcon.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nimport { StyledItem } from '../StyledItem';\r\n\r\nconst COMPONENT_ID = 'dropdowns.header_item';\r\n\r\nexport interface IStyledHeaderItemProps {\r\n  /** Applies icon styling */\r\n  hasIcon?: boolean;\r\n  isCompact?: boolean;\r\n}\r\n\r\nconst getHorizontalPadding = (props: IStyledHeaderItemProps & ThemeProps<DefaultTheme>) => {\r\n  if (props.hasIcon) {\r\n    return undefined;\r\n  }\r\n\r\n  return `${props.theme.space.base * 3}px`;\r\n};\r\n\r\n/**\r\n * Accepts all `<li>` props\r\n */\r\nexport const StyledHeaderItem = styled(StyledItem).attrs<IStyledHeaderItemProps>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledHeaderItemProps>`\r\n  cursor: default;\r\n  padding-right: ${props => getHorizontalPadding(props)};\r\n  padding-left: ${props => getHorizontalPadding(props)};\r\n  font-weight: ${props => props.theme.fontWeights.semibold};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledHeaderItem.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'dropdowns.media_body';\r\n\r\ninterface IStyledMediaBodyProps {\r\n  isCompact?: boolean;\r\n}\r\n\r\n/**\r\n * Accepts all `<div>` props\r\n */\r\nexport const StyledMediaBody = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledMediaBodyProps>`\r\n  display: block;\r\n  overflow: hidden;\r\n  /* stylelint-disable-next-line property-no-unknown */\r\n  padding-${props => (props.theme.rtl ? 'right' : 'left')}: ${props =>\r\n  props.theme.space.base * 2}px;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledMediaBody.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { Children, HTMLAttributes, PropsWithChildren } from 'react';\r\nimport styled, { ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'dropdowns.media_figure';\r\n\r\ninterface IStyledMediaFigureProps extends HTMLAttributes<HTMLDivElement> {\r\n  isCompact?: boolean;\r\n}\r\n\r\n/**\r\n * 1. Override default Avatar styling\r\n */\r\nexport const StyledMediaFigure = styled(\r\n  /* eslint-disable @typescript-eslint/no-unused-vars */\r\n  ({\r\n    children,\r\n    isCompact,\r\n    theme,\r\n    ...props\r\n  }: PropsWithChildren<IStyledMediaFigureProps & ThemeProps<DefaultTheme>>) =>\r\n    /* eslint-enable @typescript-eslint/no-unused-vars */\r\n    React.cloneElement(Children.only(children as any), props)\r\n).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledMediaFigureProps>`\r\n  float: ${props => (props.theme.rtl ? 'right' : 'left')};\r\n  /* stylelint-disable declaration-no-important */\r\n  margin-top: ${props => props.theme.space.base * 0.5}px !important; /* [1] */\r\n  /* stylelint-enable declaration-no-important */\r\n  width: ${props => props.theme.iconSizes.md};\r\n  height: ${props => props.theme.iconSizes.md};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledMediaFigure.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledItem } from '../StyledItem';\r\n\r\nconst COMPONENT_ID = 'dropdowns.media_item';\r\n\r\nexport interface IStyledMediaItem {\r\n  isCompact?: boolean;\r\n}\r\n\r\n/**\r\n * Accepts all `<li>` props\r\n */\r\nexport const StyledMediaItem = styled(StyledItem).attrs<IStyledMediaItem>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledMediaItem>`\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledMediaItem.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME, arrowStyles } from '@zendeskgarden/react-theming';\r\nimport { POPPER_PLACEMENT, getArrowPosition } from '../../utils/garden-placements';\r\n\r\nconst COMPONENT_ID = 'dropdowns.menu';\r\n\r\ninterface IStyledMenuProps {\r\n  isCompact?: boolean;\r\n  isAnimated?: boolean;\r\n  hasArrow?: boolean;\r\n  placement?: POPPER_PLACEMENT;\r\n  maxHeight?: string;\r\n}\r\n\r\n/**\r\n * 1. Override arrow parent positioning to ensure arrow is visible beyond block\r\n *    overflow boundaries.\r\n */\r\nexport const StyledMenu = styled.ul.attrs<IStyledMenuProps>(props => ({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  className: props.isAnimated && 'is-animated'\r\n}))<IStyledMenuProps>`\r\n  /* stylelint-disable-next-line declaration-no-important */\r\n  position: static !important; /* [1] */\r\n  max-height: ${props => props.maxHeight};\r\n  overflow-y: auto;\r\n\r\n  ${props =>\r\n    props.hasArrow &&\r\n    arrowStyles(getArrowPosition(props.placement), {\r\n      size: `${props.theme.space.base * 2}px`,\r\n      inset: '2px',\r\n      animationModifier: props.isAnimated ? '.is-animated' : undefined\r\n    })};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledMenu.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { DEFAULT_THEME, menuStyles, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\nimport { POPPER_PLACEMENT, getMenuPosition } from '../../utils/garden-placements';\r\n\r\nconst COMPONENT_ID = 'dropdowns.menu_wrapper';\r\n\r\ninterface IStyledMenuWrapperProps {\r\n  hasArrow?: boolean;\r\n  placement?: POPPER_PLACEMENT;\r\n  isHidden?: boolean;\r\n  zIndex?: number;\r\n  isAnimated?: boolean;\r\n}\r\n\r\nexport const StyledMenuWrapper = styled.div.attrs<IStyledMenuWrapperProps>(props => ({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  className: props.isAnimated && 'is-animated'\r\n}))<IStyledMenuWrapperProps>`\r\n  ${props =>\r\n    menuStyles(getMenuPosition(props.placement), {\r\n      theme: props.theme,\r\n      hidden: props.isHidden,\r\n      margin: `${props.theme.space.base * (props.hasArrow ? 2 : 1)}px`,\r\n      zIndex: props.zIndex,\r\n      animationModifier: props.isAnimated ? '.is-animated' : undefined\r\n    })};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledMenuWrapper.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, getColor, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'dropdowns.separator';\r\n\r\n/**\r\n * Accepts all `<li>` props\r\n */\r\nexport const StyledSeparator = styled.li.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  role: 'separator'\r\n} as any)`\r\n  display: block;\r\n  margin: ${props => props.theme.space.base}px 0;\r\n  border-bottom: ${props =>\r\n    `${props.theme.borders.sm} ${getColor('neutralHue', 200, props.theme)}`};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledSeparator.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { DEFAULT_THEME, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\nimport { StyledInput } from '../select/StyledInput';\r\n\r\nconst COMPONENT_ID = 'dropdowns.multiselect_input';\r\n\r\ninterface IStyledMultiselectInputProps {\r\n  isCompact: boolean;\r\n  isVisible: boolean;\r\n}\r\n\r\nconst visibleStyling = (props: IStyledMultiselectInputProps & ThemeProps<DefaultTheme>) => {\r\n  const margin = props.isVisible ? `${props.theme.space.base / 2}px` : 0;\r\n  const minWidth = props.isVisible ? `${props.theme.space.base * 15}px` : 0;\r\n  let height = '0';\r\n\r\n  if (props.isVisible) {\r\n    height = `${props.theme.space.base * (props.isCompact ? 5 : 8)}px`;\r\n  }\r\n\r\n  return css`\r\n    opacity: ${!props.isVisible && 0};\r\n    margin: ${margin};\r\n    width: ${!props.isVisible && 0};\r\n    min-width: ${minWidth};\r\n    height: ${height};\r\n  `;\r\n};\r\n\r\nexport const StyledMultiselectInput = styled(StyledInput).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledMultiselectInputProps>`\r\n  flex-basis: ${props => props.theme.space.base * 15}px;\r\n  flex-grow: 1;\r\n  align-self: center;\r\n  min-height: 0;\r\n\r\n  ${props => visibleStyling(props)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledMultiselectInput.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { DEFAULT_THEME, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'dropdowns.multiselect_item_wrapper';\r\n\r\nexport const StyledMultiselectItemWrapper = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  margin: ${props => props.theme.space.base / 2}px;\r\n  max-width: 100%;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledMultiselectItemWrapper.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { DEFAULT_THEME, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'dropdowns.multiselect_items_container';\r\n\r\ninterface IStyledMultiselectItemsContainerProps {\r\n  isCompact?: boolean;\r\n  isBare?: boolean;\r\n}\r\n\r\n/**\r\n * 1. Negative margin over standard input padding.\r\n * 2. Compensate for horizontal item margins.\r\n */\r\nconst sizeStyles = (props: IStyledMultiselectItemsContainerProps & ThemeProps<DefaultTheme>) => {\r\n  let margin;\r\n  let padding;\r\n\r\n  if (!props.isBare) {\r\n    const marginVertical = props.isCompact\r\n      ? `-${props.theme.space.base * 1.5}px`\r\n      : `-${props.theme.space.base * 2.5}px`;\r\n\r\n    margin = `${marginVertical} 0`; /* [1] */\r\n\r\n    const paddingVertical = props.isCompact ? '3px' : '1px';\r\n    const paddingEnd = `${props.theme.space.base}px`;\r\n\r\n    padding = `${paddingVertical} ${props.theme.rtl ? 0 : paddingEnd} ${paddingVertical} ${\r\n      props.theme.rtl ? paddingEnd : 0\r\n    }`;\r\n  }\r\n\r\n  return css`\r\n    margin: ${margin};\r\n    padding: ${padding};\r\n  `;\r\n};\r\n\r\nexport const StyledMultiselectItemsContainer = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledMultiselectItemsContainerProps>`\r\n  display: inline-flex;\r\n  flex-grow: 1;\r\n  flex-wrap: wrap;\r\n  min-width: 0;\r\n\r\n  ${props => sizeStyles(props)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledMultiselectItemsContainer.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport {\r\n  getColor,\r\n  getLineHeight,\r\n  DEFAULT_THEME,\r\n  retrieveComponentStyles\r\n} from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'dropdowns.multiselect_more_anchor';\r\n\r\ninterface IStyledMultiselectMoreAnchorProps {\r\n  isCompact?: boolean;\r\n  isDisabled?: boolean;\r\n}\r\n\r\nexport const StyledMultiselectMoreAnchor = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledMultiselectMoreAnchorProps>`\r\n  display: inline-block;\r\n  cursor: ${props => (props.isDisabled ? 'default' : 'pointer')};\r\n  padding: ${props => props.theme.space.base * (props.isCompact ? 0.75 : 1.5)}px 0;\r\n  overflow: hidden;\r\n  user-select: none;\r\n  text-overflow: ellipsis;\r\n  line-height: ${props =>\r\n    props.isCompact ? '1em' : getLineHeight(props.theme.space.base * 5, props.theme.fontSizes.md)};\r\n  white-space: nowrap;\r\n  color: ${props =>\r\n    props.isDisabled\r\n      ? getColor('neutralHue', 400, props.theme)\r\n      : getColor('primaryHue', 600, props.theme)};\r\n\r\n  :hover {\r\n    text-decoration: ${props => !props.isDisabled && 'underline'};\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledMultiselectMoreAnchor.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { DEFAULT_THEME, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\nimport { FauxInput } from '@zendeskgarden/react-forms';\r\n\r\nconst COMPONENT_ID = 'dropdowns.faux_input';\r\n\r\nexport const StyledFauxInput = styled(FauxInput).attrs(props => ({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  mediaLayout: true,\r\n  theme: props.theme\r\n}))`\r\n  cursor: ${props => !props.disabled && 'pointer'};\r\n  min-width: ${props => props.theme.space.base * (props.isCompact ? 25 : 36)}px;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledFauxInput.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css } from 'styled-components';\r\nimport { Input } from '@zendeskgarden/react-forms';\r\nimport { DEFAULT_THEME, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'dropdowns.input';\r\n\r\nconst hiddenStyling = css`\r\n  position: fixed;\r\n  border: 0;\r\n  clip: rect(1px, 1px, 1px, 1px);\r\n  padding: 0;\r\n  width: 1px;\r\n  height: 1px;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n`;\r\n\r\nexport interface IStyledInputProps {\r\n  isHidden?: boolean;\r\n}\r\n\r\nexport const StyledInput = styled(Input).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  isBare: true\r\n})<IStyledInputProps>`\r\n  ${props => props.isHidden && hiddenStyling};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledInput.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { DEFAULT_THEME, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'dropdowns.select';\r\n\r\nexport const StyledSelect = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  flex-grow: 1;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledSelect.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { ARROW_POSITION, MENU_POSITION } from '@zendeskgarden/react-theming';\r\n\r\ntype SHARED_PLACEMENT =\r\n  | 'auto'\r\n  | 'top'\r\n  | 'top-start'\r\n  | 'top-end'\r\n  | 'bottom'\r\n  | 'bottom-start'\r\n  | 'bottom-end';\r\n\r\nexport type GARDEN_PLACEMENT =\r\n  | SHARED_PLACEMENT\r\n  | 'end'\r\n  | 'end-top'\r\n  | 'end-bottom'\r\n  | 'start'\r\n  | 'start-top'\r\n  | 'start-bottom';\r\n\r\nexport type POPPER_PLACEMENT =\r\n  | SHARED_PLACEMENT\r\n  | 'right'\r\n  | 'right-start'\r\n  | 'right-end'\r\n  | 'left'\r\n  | 'left-start'\r\n  | 'left-end';\r\n\r\n/**\r\n * Convert Garden RTL aware placement to Popper.JS valid placement\r\n */\r\nexport function getPopperPlacement(gardenPlacement: GARDEN_PLACEMENT): POPPER_PLACEMENT {\r\n  switch (gardenPlacement) {\r\n    case 'end':\r\n      return 'right';\r\n    case 'end-top':\r\n      return 'right-start';\r\n    case 'end-bottom':\r\n      return 'right-end';\r\n    case 'start':\r\n      return 'left';\r\n    case 'start-top':\r\n      return 'left-start';\r\n    case 'start-bottom':\r\n      return 'left-end';\r\n    default:\r\n      return gardenPlacement;\r\n  }\r\n}\r\n\r\n/**\r\n * Convert Garden RTL aware placement to RTL equivalent Popper.JS placement\r\n * @param {String} gardenPlacement\r\n */\r\nexport function getRtlPopperPlacement(gardenPlacement: GARDEN_PLACEMENT): POPPER_PLACEMENT {\r\n  const popperPlacement = getPopperPlacement(gardenPlacement);\r\n\r\n  switch (popperPlacement) {\r\n    case 'left':\r\n      return 'right';\r\n    case 'left-start':\r\n      return 'right-start';\r\n    case 'left-end':\r\n      return 'right-end';\r\n    case 'top-start':\r\n      return 'top-end';\r\n    case 'top-end':\r\n      return 'top-start';\r\n    case 'right':\r\n      return 'left';\r\n    case 'right-start':\r\n      return 'left-start';\r\n    case 'right-end':\r\n      return 'left-end';\r\n    case 'bottom-start':\r\n      return 'bottom-end';\r\n    case 'bottom-end':\r\n      return 'bottom-start';\r\n    default:\r\n      return popperPlacement;\r\n  }\r\n}\r\n\r\n/**\r\n * Convert Popper.JS placement to corresponding arrow position\r\n * @param {String} popperPlacement\r\n */\r\nexport function getArrowPosition(popperPlacement?: POPPER_PLACEMENT) {\r\n  const arrowPositionMappings: Record<POPPER_PLACEMENT, ARROW_POSITION> = {\r\n    auto: 'top',\r\n    top: 'bottom',\r\n    'top-start': 'bottom-left',\r\n    'top-end': 'bottom-right',\r\n    right: 'left',\r\n    'right-start': 'left-top',\r\n    'right-end': 'left-bottom',\r\n    bottom: 'top',\r\n    'bottom-start': 'top-left',\r\n    'bottom-end': 'top-right',\r\n    left: 'right',\r\n    'left-start': 'right-top',\r\n    'left-end': 'right-bottom'\r\n  };\r\n\r\n  return (popperPlacement ? arrowPositionMappings[popperPlacement] : 'top') as ARROW_POSITION;\r\n}\r\n\r\n/**\r\n * Convert Popper.JS placement to corresponding menu position\r\n * @param {String} popperPlacement\r\n */\r\nexport function getMenuPosition(popperPlacement?: POPPER_PLACEMENT) {\r\n  if (popperPlacement === 'auto') {\r\n    return 'bottom' as MENU_POSITION;\r\n  }\r\n\r\n  return (popperPlacement ? popperPlacement.split('-')[0] : 'bottom') as MENU_POSITION;\r\n}\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useContext } from 'react';\r\nimport { ControllerStateAndHelpers } from 'downshift';\r\n\r\nexport type DROPDOWN_TYPE = '' | 'autocomplete' | 'combobox' | 'multiselect';\r\n\r\nexport interface IDropdownContext {\r\n  itemIndexRef: React.MutableRefObject<number>;\r\n  previousItemRef: React.MutableRefObject<any>;\r\n  previousIndexRef: React.MutableRefObject<any>;\r\n  nextItemsHashRef: React.MutableRefObject<Record<string, unknown>>;\r\n  popperReferenceElementRef: React.MutableRefObject<any>;\r\n  selectedItems?: any[];\r\n  downshift: ControllerStateAndHelpers<any>;\r\n  containsMultiselectRef: React.MutableRefObject<boolean>;\r\n  hasMenuRef: React.MutableRefObject<boolean>;\r\n  itemSearchRegistry: React.MutableRefObject<string[]>;\r\n  setDropdownType: React.Dispatch<React.SetStateAction<DROPDOWN_TYPE>>;\r\n}\r\n\r\nexport const DropdownContext = React.createContext<IDropdownContext | undefined>(undefined);\r\n\r\n/**\r\n * Retrieve Dropdown component context\r\n */\r\nconst useDropdownContext = () => {\r\n  const dropdownContext = useContext<IDropdownContext | undefined>(DropdownContext);\r\n\r\n  if (!dropdownContext) {\r\n    throw new Error('This component must be rendered within a `Dropdown` component.');\r\n  }\r\n\r\n  return dropdownContext;\r\n};\r\n\r\nexport default useDropdownContext;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useContext } from 'react';\r\n\r\nexport interface IFieldContext {\r\n  isLabelHovered: boolean;\r\n  setIsLabelHovered: (isHovered: boolean) => void;\r\n}\r\n\r\nexport const FieldContext = React.createContext<IFieldContext | undefined>(undefined);\r\n\r\n/**\r\n * Retrieve Field component context\r\n */\r\nconst useFieldContext = () => {\r\n  const fieldContext = useContext(FieldContext);\r\n\r\n  if (!fieldContext) {\r\n    throw new Error('This component must be rendered within a `Field` component.');\r\n  }\r\n\r\n  return fieldContext;\r\n};\r\n\r\nexport default useFieldContext;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useContext } from 'react';\r\n\r\nexport interface IItemContext {\r\n  isDisabled?: boolean;\r\n}\r\n\r\nexport const ItemContext = React.createContext<IItemContext | undefined>(undefined);\r\n\r\n/**\r\n * Retrieve Menu Item component context\r\n */\r\nconst useItemContext = () => {\r\n  const context = useContext(ItemContext);\r\n\r\n  if (!context) {\r\n    throw new Error('This component must be rendered within an `Item` component.');\r\n  }\r\n\r\n  return context;\r\n};\r\n\r\nexport default useItemContext;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useContext, MutableRefObject } from 'react';\r\n\r\nexport interface IMenuContext {\r\n  itemIndexRef: MutableRefObject<number>;\r\n  isCompact?: boolean;\r\n}\r\n\r\nexport const MenuContext = React.createContext<IMenuContext | undefined>(undefined);\r\n\r\n/**\r\n * Retrieve Menu component context\r\n */\r\nconst useMenuContext = () => {\r\n  const menuContext = useContext(MenuContext);\r\n\r\n  if (!menuContext) {\r\n    throw new Error('This component must be rendered within a `Menu` component.');\r\n  }\r\n\r\n  return menuContext;\r\n};\r\n\r\nexport default useMenuContext;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { Checkbox, Hint, ICheckboxProps, Label, Message } from '@zendeskgarden/react-forms';\r\nimport { FieldStory, IFieldArgs } from './FieldStory';\r\n\r\ninterface IArgs extends ICheckboxProps, IFieldArgs {}\r\n\r\nexport const CheckboxStory: Story<IArgs> = ({\r\n  label,\r\n  isLabelRegular,\r\n  isLabelHidden,\r\n  hasHint,\r\n  hint,\r\n  hasMessage,\r\n  message,\r\n  validation,\r\n  ...args\r\n}) => (\r\n  <FieldStory hasLabel={false} hasHint={false} hasMessage={false}>\r\n    <Checkbox {...args}>\r\n      <Label hidden={isLabelHidden} isRegular={isLabelRegular}>\r\n        {label}\r\n      </Label>\r\n      {hasHint && <Hint>{hint}</Hint>}\r\n      {hasMessage && <Message validation={validation}>{message}</Message>}\r\n    </Checkbox>\r\n  </FieldStory>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { FauxInput, IFauxInputProps } from '@zendeskgarden/react-forms';\r\nimport { FieldStory, IFieldArgs } from './FieldStory';\r\n\r\ninterface IArgs extends IFauxInputProps, IFieldArgs {}\r\n\r\nexport const FauxInputStory: Story<IArgs> = ({\r\n  label,\r\n  isLabelRegular,\r\n  isLabelHidden,\r\n  hasHint,\r\n  hint,\r\n  hasMessage,\r\n  message,\r\n  ...args\r\n}) => (\r\n  <FieldStory\r\n    label={label}\r\n    isLabelRegular={isLabelRegular}\r\n    isLabelHidden={isLabelHidden}\r\n    hasHint={hasHint}\r\n    hint={hint}\r\n    hasMessage={hasMessage}\r\n    message={message}\r\n    validation={args.validation}\r\n  >\r\n    <FauxInput {...args} />\r\n  </FieldStory>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport {\r\n  Field,\r\n  Hint,\r\n  IFieldProps,\r\n  IMessageProps,\r\n  Label,\r\n  Message\r\n} from '@zendeskgarden/react-forms';\r\n\r\nexport interface IFieldArgs {\r\n  hasLabel?: boolean;\r\n  label?: string;\r\n  isLabelRegular?: boolean;\r\n  isLabelHidden?: boolean;\r\n  hasHint?: boolean;\r\n  hint?: string;\r\n  hasMessage?: boolean;\r\n  message?: string;\r\n  validation?: IMessageProps['validation'];\r\n}\r\n\r\ninterface IArgs extends IFieldProps, IFieldArgs {}\r\n\r\nexport const FieldStory: Story<IArgs> = ({\r\n  hasLabel = true,\r\n  label = 'Label',\r\n  isLabelRegular,\r\n  isLabelHidden,\r\n  hasHint = true,\r\n  hint = 'Hint',\r\n  hasMessage = true,\r\n  message = 'Message',\r\n  validation,\r\n  children,\r\n  ...args\r\n}) => (\r\n  <Field {...args}>\r\n    {hasLabel && (\r\n      <Label hidden={isLabelHidden} isRegular={isLabelRegular}>\r\n        {label}\r\n      </Label>\r\n    )}\r\n    {hasHint && hasLabel && !isLabelHidden && <Hint>{hint}</Hint>}\r\n    {children}\r\n    {hasHint && (!hasLabel || isLabelHidden) && <Hint>{hint}</Hint>}\r\n    {hasMessage && <Message validation={validation}>{message}</Message>}\r\n  </Field>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport {\r\n  Checkbox,\r\n  Fieldset,\r\n  Hint,\r\n  IFieldProps,\r\n  IFieldsetProps,\r\n  Label,\r\n  Radio,\r\n  Toggle\r\n} from '@zendeskgarden/react-forms';\r\nimport { FieldStory, IFieldArgs } from './FieldStory';\r\n\r\ninterface IArgs extends IFieldsetProps, IFieldArgs {\r\n  legend: string;\r\n  isLegendHidden: boolean;\r\n  fields: IFieldProps[];\r\n  type: 'radio' | 'checkbox' | 'toggle';\r\n}\r\n\r\nexport const FieldsetStory: Story<IArgs> = ({\r\n  legend,\r\n  isLegendHidden,\r\n  hasHint,\r\n  hint,\r\n  fields,\r\n  type,\r\n  hasMessage,\r\n  message,\r\n  validation,\r\n  ...args\r\n}) => (\r\n  <Fieldset {...args}>\r\n    <Fieldset.Legend hidden={isLegendHidden}>{legend}</Fieldset.Legend>\r\n    {hasHint && <Hint>{hint}</Hint>}\r\n    {fields.map((field, index) => (\r\n      <FieldStory\r\n        key={index}\r\n        hasLabel={false}\r\n        hasHint={false}\r\n        hasMessage={hasMessage && index === fields.length - 1}\r\n        message={message}\r\n        validation={validation}\r\n      >\r\n        {\r\n          {\r\n            radio: (\r\n              <Radio name=\"name\" value={index}>\r\n                <Label isRegular>{field}</Label>\r\n              </Radio>\r\n            ),\r\n            checkbox: (\r\n              <Checkbox value={index}>\r\n                <Label isRegular>{field}</Label>\r\n              </Checkbox>\r\n            ),\r\n            toggle: (\r\n              <Toggle value={index}>\r\n                <Label isRegular>{field}</Label>\r\n              </Toggle>\r\n            )\r\n          }[type]\r\n        }\r\n      </FieldStory>\r\n    ))}\r\n  </Fieldset>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { FileList } from '@zendeskgarden/react-forms';\r\nimport { IFileListItem } from './types';\r\nimport { FileStory } from './FileStory';\r\n\r\ninterface IArgs extends HTMLAttributes<HTMLUListElement> {\r\n  items: IFileListItem[];\r\n  isCompact: boolean;\r\n}\r\n\r\nexport const FileListStory: Story<IArgs> = ({ items, isCompact, ...args }) => (\r\n  <FileList {...args}>\r\n    {items.map((item, index) => (\r\n      <FileList.Item key={index}>\r\n        <FileStory\r\n          isCompact={isCompact}\r\n          type={item.type}\r\n          hasClose={item.remove === 'close'}\r\n          hasDelete={item.remove === 'delete'}\r\n          tabIndex={item.remove ? 0 : undefined}\r\n          value={item.value}\r\n        >\r\n          {item.text}\r\n        </FileStory>\r\n      </FileList.Item>\r\n    ))}\r\n  </FileList>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { Progress } from '@zendeskgarden/react-loaders';\r\nimport { File, IFileProps } from '@zendeskgarden/react-forms';\r\n\r\ninterface IArgs extends IFileProps {\r\n  hasClose?: boolean;\r\n  hasDelete?: boolean;\r\n  value?: number;\r\n}\r\n\r\nexport const FileStory: Story<IArgs> = ({\r\n  children,\r\n  hasClose,\r\n  hasDelete,\r\n  value,\r\n  onClick,\r\n  ...args\r\n}) => (\r\n  <File {...args}>\r\n    {children}\r\n    {hasClose && <File.Close onClick={onClick} />}\r\n    {hasDelete && <File.Delete onClick={onClick} />}\r\n    {typeof value !== 'undefined' && (\r\n      <Progress value={value} size={args.isCompact ? 'small' : 'medium'} aria-label=\"progress\" />\r\n    )}\r\n  </File>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { FileUpload, IFileUploadProps } from '@zendeskgarden/react-forms';\r\nimport { FieldStory, IFieldArgs } from './FieldStory';\r\n\r\ninterface IArgs extends IFileUploadProps, IFieldArgs {}\r\n\r\nexport const FileUploadStory: Story<IArgs> = ({\r\n  label,\r\n  isLabelRegular,\r\n  isLabelHidden,\r\n  hasHint,\r\n  hint,\r\n  hasMessage,\r\n  message,\r\n  validation,\r\n  ...args\r\n}) => (\r\n  <FieldStory\r\n    label={label}\r\n    isLabelRegular={isLabelRegular}\r\n    isLabelHidden={isLabelHidden}\r\n    hasHint={hasHint}\r\n    hint={hint}\r\n    hasMessage={hasMessage}\r\n    message={message}\r\n    validation={validation}\r\n  >\r\n    <FileUpload {...args} />\r\n  </FieldStory>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { IInputGroupProps, Input, InputGroup } from '@zendeskgarden/react-forms';\r\nimport { FieldStory, IFieldArgs } from './FieldStory';\r\nimport { IInputGroupItem } from './types';\r\nimport { Button } from '@zendeskgarden/react-buttons';\r\n\r\ninterface IArgs extends IInputGroupProps, IFieldArgs {\r\n  items: IInputGroupItem[];\r\n  disabled?: boolean;\r\n  isNeutral: boolean;\r\n  isPrimary?: boolean;\r\n  isDanger?: boolean;\r\n  readOnly?: boolean;\r\n}\r\n\r\nexport const InputGroupStory: Story<IArgs> = ({\r\n  label,\r\n  isLabelRegular,\r\n  isLabelHidden,\r\n  hasHint,\r\n  hint,\r\n  hasMessage,\r\n  message,\r\n  items,\r\n  disabled,\r\n  isNeutral,\r\n  isPrimary,\r\n  isDanger,\r\n  readOnly,\r\n  ...args\r\n}) => (\r\n  <FieldStory\r\n    label={label}\r\n    isLabelRegular={isLabelRegular}\r\n    isLabelHidden={isLabelHidden}\r\n    hasHint={hasHint}\r\n    hint={hint}\r\n    hasMessage={hasMessage}\r\n    message={message}\r\n    validation={args.validation}\r\n  >\r\n    <InputGroup {...args}>\r\n      {items.map((item, index) =>\r\n        item.isButton ? (\r\n          <Button\r\n            key={index}\r\n            focusInset\r\n            disabled={disabled}\r\n            isNeutral={isNeutral}\r\n            isPrimary={isPrimary}\r\n            isDanger={isDanger}\r\n            size={args.isCompact ? 'small' : undefined}\r\n          >\r\n            {item.text}\r\n          </Button>\r\n        ) : (\r\n          <Input\r\n            key={index}\r\n            placeholder={item.text}\r\n            readOnly={readOnly}\r\n            disabled={disabled}\r\n            isCompact={args.isCompact}\r\n          />\r\n        )\r\n      )}\r\n    </InputGroup>\r\n  </FieldStory>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { IInputProps, Input } from '@zendeskgarden/react-forms';\r\nimport { FieldStory, IFieldArgs } from './FieldStory';\r\n\r\ninterface IArgs extends IInputProps, IFieldArgs {}\r\n\r\nexport const InputStory: Story<IArgs> = ({\r\n  label,\r\n  isLabelRegular,\r\n  isLabelHidden,\r\n  hasHint,\r\n  hint,\r\n  hasMessage,\r\n  message,\r\n  ...args\r\n}) => (\r\n  <FieldStory\r\n    label={label}\r\n    isLabelRegular={isLabelRegular}\r\n    isLabelHidden={isLabelHidden}\r\n    hasHint={hasHint}\r\n    hint={hint}\r\n    hasMessage={hasMessage}\r\n    message={message}\r\n    validation={args.validation}\r\n  >\r\n    <Input {...args} />\r\n  </FieldStory>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { IMediaInputProps, MediaInput } from '@zendeskgarden/react-forms';\r\nimport { FieldStory, IFieldArgs } from './FieldStory';\r\n\r\ninterface IArgs extends IMediaInputProps, IFieldArgs {}\r\n\r\nexport const MediaInputStory: Story<IArgs> = ({\r\n  start,\r\n  end,\r\n  label,\r\n  isLabelRegular,\r\n  isLabelHidden,\r\n  hasHint,\r\n  hint,\r\n  hasMessage,\r\n  message,\r\n  ...args\r\n}) => (\r\n  <FieldStory\r\n    label={label}\r\n    isLabelRegular={isLabelRegular}\r\n    isLabelHidden={isLabelHidden}\r\n    hasHint={hasHint}\r\n    hint={hint}\r\n    hasMessage={hasMessage}\r\n    message={message}\r\n    validation={args.validation}\r\n  >\r\n    <MediaInput {...args} start={start && <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <circle cx=\"6\" cy=\"6\" r=\"5.5\" fill=\"none\" stroke=\"currentColor\"/>\r\n  <path stroke=\"currentColor\" strokeLinecap=\"round\" d=\"M15 15l-5-5\"/>\r\n</svg>} end={end && <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <g fill=\"none\" stroke=\"currentColor\">\r\n    <circle cx=\"8\" cy=\"6.5\" r=\"2\"/>\r\n    <path strokeLinejoin=\"round\" d=\"M8 .5a5.9 5.9 0 00-6 5.83c0 2.17 1 3.3 2.19 4.89s2.64 3 3.8 4.28c1.17-1.31 2.62-2.76 3.81-4.28S14 8.5 14 6.33A6.19 6.19 0 008 .5z\"/>\r\n  </g>\r\n</svg>} />\r\n  </FieldStory>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { IMultiThumbRangeProps, MultiThumbRange } from '@zendeskgarden/react-forms';\r\nimport { FieldStory, IFieldArgs } from './FieldStory';\r\n\r\ninterface IArgs extends IMultiThumbRangeProps, IFieldArgs {}\r\n\r\nexport const MultiThumbRangeStory: Story<IArgs> = ({\r\n  label,\r\n  isLabelRegular,\r\n  isLabelHidden,\r\n  hasHint,\r\n  hint,\r\n  hasMessage,\r\n  message,\r\n  ...args\r\n}) => (\r\n  <FieldStory\r\n    label={label}\r\n    isLabelRegular={isLabelRegular}\r\n    isLabelHidden={isLabelHidden}\r\n    hasHint={hasHint}\r\n    hint={hint}\r\n    hasMessage={hasMessage}\r\n    message={message}\r\n    validation={args.validation}\r\n  >\r\n    <MultiThumbRange {...args} />\r\n  </FieldStory>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { Hint, IRadioProps, Label, Message, Radio } from '@zendeskgarden/react-forms';\r\nimport { FieldStory, IFieldArgs } from './FieldStory';\r\n\r\ninterface IArgs extends IRadioProps, IFieldArgs {}\r\n\r\nexport const RadioStory: Story<IArgs> = ({\r\n  label,\r\n  isLabelRegular,\r\n  isLabelHidden,\r\n  hasHint,\r\n  hint,\r\n  hasMessage,\r\n  message,\r\n  validation,\r\n  ...args\r\n}) => (\r\n  <FieldStory hasLabel={false} hasHint={false} hasMessage={false}>\r\n    <Radio {...args}>\r\n      <Label hidden={isLabelHidden} isRegular={isLabelRegular}>\r\n        {label}\r\n      </Label>\r\n      {hasHint && <Hint>{hint}</Hint>}\r\n      {hasMessage && <Message validation={validation}>{message}</Message>}\r\n    </Radio>\r\n  </FieldStory>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { IRangeProps, Range } from '@zendeskgarden/react-forms';\r\nimport { FieldStory, IFieldArgs } from './FieldStory';\r\n\r\ninterface IArgs extends IRangeProps, IFieldArgs {}\r\n\r\nexport const RangeStory: Story<IArgs> = ({\r\n  label,\r\n  isLabelRegular,\r\n  isLabelHidden,\r\n  hasHint,\r\n  hint,\r\n  hasMessage,\r\n  message,\r\n  ...args\r\n}) => (\r\n  <FieldStory\r\n    label={label}\r\n    isLabelRegular={isLabelRegular}\r\n    isLabelHidden={isLabelHidden}\r\n    hasHint={hasHint}\r\n    hint={hint}\r\n    hasMessage={hasMessage}\r\n    message={message}\r\n    validation={args.validation}\r\n  >\r\n    <Range {...args} />\r\n  </FieldStory>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { ISelectProps, Select } from '@zendeskgarden/react-forms';\r\nimport { FieldStory, IFieldArgs } from './FieldStory';\r\n\r\ninterface IArgs extends ISelectProps, IFieldArgs {\r\n  options: string[];\r\n}\r\n\r\nexport const SelectStory: Story<IArgs> = ({\r\n  options,\r\n  label,\r\n  isLabelRegular,\r\n  isLabelHidden,\r\n  hasHint,\r\n  hint,\r\n  hasMessage,\r\n  message,\r\n  ...args\r\n}) => (\r\n  <FieldStory\r\n    label={label}\r\n    isLabelRegular={isLabelRegular}\r\n    isLabelHidden={isLabelHidden}\r\n    hasHint={hasHint}\r\n    hint={hint}\r\n    hasMessage={hasMessage}\r\n    message={message}\r\n    validation={args.validation}\r\n  >\r\n    <Select {...args}>\r\n      {options.map((option, index) => (\r\n        <option key={index} value={index}>\r\n          {option}\r\n        </option>\r\n      ))}\r\n    </Select>\r\n  </FieldStory>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { ITextareaProps, Textarea } from '@zendeskgarden/react-forms';\r\nimport { FieldStory, IFieldArgs } from './FieldStory';\r\n\r\ninterface IArgs extends ITextareaProps, IFieldArgs {}\r\n\r\nexport const TextareaStory: Story<IArgs> = ({\r\n  label,\r\n  isLabelRegular,\r\n  isLabelHidden,\r\n  hasHint,\r\n  hint,\r\n  hasMessage,\r\n  message,\r\n  ...args\r\n}) => (\r\n  <FieldStory\r\n    label={label}\r\n    isLabelRegular={isLabelRegular}\r\n    isLabelHidden={isLabelHidden}\r\n    hasHint={hasHint}\r\n    hint={hint}\r\n    hasMessage={hasMessage}\r\n    message={message}\r\n    validation={args.validation}\r\n  >\r\n    <Textarea {...args} />\r\n  </FieldStory>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport {Icon} from './box3dstroke';\r\nimport {Icon01} from './chevronbox';\r\nimport {Icon02} from './checkbox';\r\nimport {Icon03} from './textstroke';\r\nimport {Icon04} from './multiline';\r\nimport {Icon05} from './checkboxlg';\r\nimport {Icon06} from './numberstroke';\r\nimport {Icon07} from './decimalstroke';\r\nimport {Icon08} from './calenderstroke';\r\nimport {Icon09} from './creditcardstroke';\r\nimport {Icon10} from './asteriskstroke';\r\nimport { ITilesProps, Tiles } from '@zendeskgarden/react-forms';\r\nimport { ITile } from './types';\r\nimport { Col, Grid, Row } from '@zendeskgarden/react-grid';\r\n\r\nconst TILE_ICONS = [\r\n  <Icon01 key={1} />,\r\n  <Icon02 key={2} />,\r\n  <Icon03 key={3} />,\r\n  <Icon04 key={4} />,\r\n  <Icon05 key={5} />,\r\n  <Icon06 key={6} />,\r\n  <Icon07 key={7} />,\r\n  <Icon08 key={8} />,\r\n  <Icon09 key={9} />,\r\n  <Icon10 key={10} />\r\n];\r\n\r\ninterface IArgs extends ITilesProps {\r\n  tiles: ITile[];\r\n  hasDescription: boolean;\r\n}\r\n\r\nexport const TilesStory: Story<IArgs> = ({ tiles, hasDescription, ...args }) => (\r\n  <Tiles {...args}>\r\n    <Grid gutters={false}>\r\n      <Row>\r\n        {tiles.map((tile, index) => (\r\n          <Col key={index} md={3}>\r\n            <Tiles.Tile value={tile.value} disabled={tile.disabled} style={{ margin: 10 }}>\r\n              <Tiles.Icon>{TILE_ICONS[index] || <Icon />}</Tiles.Icon>\r\n              <Tiles.Label>{tile.label}</Tiles.Label>\r\n              {hasDescription && tile.description && (\r\n                <Tiles.Description>{tile.description}</Tiles.Description>\r\n              )}\r\n            </Tiles.Tile>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Grid>\r\n  </Tiles>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { Hint, IToggleProps, Label, Message, Toggle } from '@zendeskgarden/react-forms';\r\nimport { FieldStory, IFieldArgs } from './FieldStory';\r\n\r\ninterface IArgs extends IToggleProps, IFieldArgs {}\r\n\r\nexport const ToggleStory: Story<IArgs> = ({\r\n  label,\r\n  isLabelRegular,\r\n  isLabelHidden,\r\n  hasHint,\r\n  hint,\r\n  hasMessage,\r\n  message,\r\n  validation,\r\n  ...args\r\n}) => (\r\n  <FieldStory hasLabel={false} hasHint={false} hasMessage={false}>\r\n    <Toggle {...args}>\r\n      <Label hidden={isLabelHidden} isRegular={isLabelRegular}>\r\n        {label}\r\n      </Label>\r\n      {hasHint && <Hint>{hint}</Hint>}\r\n      {hasMessage && <Message validation={validation}>{message}</Message>}\r\n    </Toggle>\r\n  </FieldStory>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const Icon10 = () => {\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path stroke=\"currentColor\" strokeLinecap=\"round\" d=\"M7.5 1.5v14M1.5 5l12 7m-12 0l12-7\"/>\r\n</svg>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const Icon = () => {\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"none\" stroke=\"currentColor\" d=\"M7.76.63l-6 3.23c-.16.09-.26.25-.26.44v7.4c0 .18.1.35.26.44l6 3.23c.15.08.33.08.47 0l6-3.23c.16-.09.26-.26.26-.44V4.3c0-.18-.1-.35-.26-.44l-6-3.23a.49.49 0 00-.47 0zM1.5 4L8 7.5 14.5 4M8 7.5V15\"/>\r\n</svg>\r\n\r\n\r\n    )\r\n}\r\n\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const Icon08 = () => {\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <g fill=\"none\" stroke=\"currentColor\">\r\n    <rect width=\"15\" height=\"13\" x=\".5\" y=\"2.5\" rx=\".5\" ry=\".5\"/>\r\n    <path strokeLinecap=\"round\" strokeWidth=\"2\" d=\"M4.01 1.05v3m7.99-3v3\"/>\r\n  </g>\r\n</svg>\r\n\r\n\r\n    )\r\n}\r\n\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const Icon02 = () => {\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n      <g fill=\"none\" stroke=\"currentColor\">\r\n        <rect width=\"11\" height=\"11\" x=\"1.5\" y=\"1.5\" rx=\".5\" ry=\".5\"/>\r\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3.5 6.5L6 9l4.5-4.5m-6 10H14a.5.5 0 00.5-.5V4.5\"/>\r\n      </g>\r\n    </svg>\r\n\r\n    )\r\n}\r\n\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const Icon05 = () => {\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M1 9l4 4L15 3\"/>\r\n</svg>\r\n\r\n\r\n    )\r\n}\r\n\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const Icon01 = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <g fill=\"none\" stroke=\"currentColor\">\r\n    <rect width=\"15\" height=\"13\" x=\".5\" y=\"1.5\" rx=\".5\" ry=\".5\"/>\r\n    <path strokeLinecap=\"round\" d=\"M4 6.5l3.65 3.65a.5.5 0 00.71 0L12 6.5\"/>\r\n  </g>\r\n</svg>\r\n\r\n \r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const Icon09 = () => {\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <rect width=\"15\" height=\"11\" x=\".5\" y=\"2.5\" fill=\"none\" stroke=\"currentColor\" rx=\".5\" ry=\".5\"/>\r\n  <path fill=\"currentColor\" d=\"M.5 5h15v2H.5z\"/>\r\n</svg>\r\n    )\r\n}\r\n\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { IFileProps } from '@zendeskgarden/react-forms';\r\nimport { IFileListItem, IInputGroupItem, ITile } from './types';\r\n\r\nexport const FIELDSET_FIELDS = ['Field one', 'Field two', 'Field three'];\r\n\r\nexport const FILE_TYPES: IFileProps['type'][] = [\r\n  'document',\r\n  'generic',\r\n  'image',\r\n  'pdf',\r\n  'presentation',\r\n  'spreadsheet',\r\n  'zip'\r\n];\r\n\r\nexport const FILELIST_ITEMS: IFileListItem[] = [\r\n  {\r\n    text: 'Unknown.txt'\r\n  },\r\n  {\r\n    type: 'generic',\r\n    text: 'Garden file',\r\n    remove: 'close',\r\n    value: 0\r\n  },\r\n  {\r\n    type: 'document',\r\n    text: 'Plant ecology.doc',\r\n    remove: 'close',\r\n    value: 16\r\n  },\r\n  {\r\n    type: 'image',\r\n    text: 'Rose petals.jpg',\r\n    remove: 'close',\r\n    value: 32\r\n  },\r\n  {\r\n    type: 'pdf',\r\n    text: 'Basics of gardening.pdf',\r\n    remove: 'close',\r\n    value: 48\r\n  },\r\n  {\r\n    type: 'presentation',\r\n    text: 'Presentation bouquets.ppt',\r\n    remove: 'close',\r\n    value: 64\r\n  },\r\n  {\r\n    type: 'spreadsheet',\r\n    text: 'Seed inventory.xlsx',\r\n    remove: 'close',\r\n    value: 80\r\n  },\r\n  {\r\n    type: 'zip',\r\n    text: 'Landscape.zip',\r\n    remove: 'delete',\r\n    value: 100\r\n  }\r\n];\r\n\r\nexport const INPUT_GROUP_ITEMS: IInputGroupItem[] = [\r\n  {\r\n    text: 'A',\r\n    isButton: true\r\n  },\r\n  {\r\n    text: 'B',\r\n    isButton: true\r\n  },\r\n  {\r\n    text: 'Content',\r\n    isButton: false\r\n  },\r\n  {\r\n    text: 'Copy',\r\n    isButton: true\r\n  }\r\n];\r\n\r\nexport const SELECT_OPTIONS = ['Option one', 'Option two', 'Option three', 'Option four'];\r\n\r\nexport const TILES: ITile[] = [\r\n  {\r\n    value: 'one',\r\n    label: 'Tile one',\r\n    description:\r\n      'Nori grape silver beet broccoli kombu beet greens fava bean potato quandong celery.',\r\n    disabled: false\r\n  },\r\n  {\r\n    value: 'two',\r\n    label: 'Tile two',\r\n    description: 'Bunya nuts black-eyed pea prairie turnip leek lentil turnip greens parsnip.',\r\n    disabled: false\r\n  },\r\n  {\r\n    value: 'three',\r\n    label: 'Tile three',\r\n    description: 'Sea lettuce lettuce water chestnut eggplant winter purslane fennel azuki bean.',\r\n    disabled: true\r\n  },\r\n  {\r\n    value: 'four',\r\n    label: 'Tile four',\r\n    description:\r\n      'Veggies es bonus vobis, proinde vos postulo essum magis kohlrabi welsh onion daikon.',\r\n    disabled: false\r\n  }\r\n];\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const Icon07 = () => {\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <ellipse cx=\"8.8\" cy=\"8.5\" fill=\"none\" stroke=\"currentColor\" rx=\"5.2\" ry=\"7\"/>\r\n  <circle cx=\"2\" cy=\"15\" r=\"1\" fill=\"currentColor\"/>\r\n</svg>\r\n\r\n    )\r\n}\r\n\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const Icon04 = () => {\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n      <path fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" d=\"M1.5 6.5h13m-13-4h13m-13 8h13m-13 4h6\"/>\r\n    </svg> \r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const Icon06 = () => {\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path stroke=\"currentColor\" strokeLinecap=\"round\" d=\"M2.1 5.5H15m-14.1 5h13m-1.9-9l-3 13m-2-13l-3 13\"/>\r\n</svg>\r\n    )\r\n}\r\n\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n import React from 'react';\r\n export const Icon03 = () => {\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" d=\"M2.5 1.5h10m-5 0v14\"/>\r\n</svg>\r\n\r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { FC, memo, useCallback, useEffect, useState } from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { DropzoneProps, useDropzone } from 'react-dropzone';\r\nimport { KEY_CODES } from '@zendeskgarden/container-utilities';\r\nimport {\r\n  File,\r\n  FileList,\r\n  FileUpload,\r\n  IFileProps,\r\n  IFileUploadProps,\r\n  Input\r\n} from '@zendeskgarden/react-forms';\r\nimport { FieldStory } from '../../stories/FieldStory';\r\nimport { FileStory } from '../../stories/FileStory';\r\n\r\ninterface IFileItemProps extends IFileProps {\r\n  disabled?: boolean;\r\n  onRemove: () => void;\r\n}\r\n\r\nconst FileItem: FC<IFileItemProps> = memo(({ type, disabled, isCompact, children, onRemove }) => {\r\n  const [uploadProgress, setUploadProgress] = React.useState(0);\r\n\r\n  useEffect(() => {\r\n    /* simulate file upload progress */\r\n    const interval = setInterval(() => {\r\n      setUploadProgress(value => {\r\n        if (value >= 100) {\r\n          clearInterval(interval);\r\n\r\n          return 100;\r\n        }\r\n\r\n        return value + 20;\r\n      });\r\n    }, Math.random() * 300 + 100);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent<any>) => {\r\n    if (e.keyCode === KEY_CODES.DELETE || e.keyCode === KEY_CODES.BACKSPACE) {\r\n      e.preventDefault();\r\n      onRemove();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FileStory\r\n      type={type}\r\n      isCompact={isCompact}\r\n      value={uploadProgress}\r\n      tabIndex={disabled ? undefined : 0}\r\n      hasClose={!disabled && uploadProgress < 100}\r\n      hasDelete={!disabled && uploadProgress === 100}\r\n      onKeyDown={handleKeyDown}\r\n      onClick={onRemove}\r\n    >\r\n      {children}\r\n    </FileStory>\r\n  );\r\n});\r\n\r\nFileItem.displayName = 'FileItem';\r\n\r\ninterface IArgs extends IFileUploadProps {\r\n  accept?: DropzoneProps['accept'];\r\n  maxFiles?: DropzoneProps['maxFiles'];\r\n  maxSize?: DropzoneProps['maxSize'];\r\n  minSize?: DropzoneProps['minSize'];\r\n  multiple?: DropzoneProps['multiple'];\r\n  type?: IFileProps['type'];\r\n}\r\n\r\nexport const FileUploadStory: Story<IArgs> = ({\r\n  disabled,\r\n  accept,\r\n  maxFiles,\r\n  maxSize,\r\n  minSize,\r\n  multiple,\r\n  type,\r\n  ...args\r\n}) => {\r\n  const [files, setFiles] = useState<string[]>([]);\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles: File[]) => {\r\n      if (acceptedFiles && acceptedFiles.length > 0) {\r\n        const fileNames = acceptedFiles.map(file => file.name);\r\n\r\n        setFiles([...files, ...fileNames]);\r\n      }\r\n    },\r\n    [files]\r\n  );\r\n\r\n  const handleRemove = useCallback(\r\n    fileIndex => {\r\n      setFiles(files.filter((file, i) => i !== fileIndex));\r\n    },\r\n    [files]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept,\r\n    disabled,\r\n    maxFiles,\r\n    maxSize,\r\n    minSize,\r\n    multiple\r\n  });\r\n\r\n  return (\r\n    <FieldStory\r\n      label=\"File upload\"\r\n      hint=\"With react-dropzone\"\r\n      hasMessage={files.length === 0}\r\n      message=\"Acceptable formats are JPG, PNG, and GIF\"\r\n    >\r\n      <FileUpload isDragging={isDragActive} disabled={disabled} {...getRootProps()} {...args}>\r\n        {isDragActive ? (\r\n          <span>Drop files here</span>\r\n        ) : (\r\n          <span>Drag files here or click to upload</span>\r\n        )}\r\n        <Input {...getInputProps()} disabled={disabled} />\r\n      </FileUpload>\r\n      {files.length > 0 && (\r\n        <FileList>\r\n          {files.map((file, index) => (\r\n            <FileList.Item key={index}>\r\n              <FileItem\r\n                onRemove={() => handleRemove(index)}\r\n                disabled={disabled}\r\n                isCompact={args.isCompact}\r\n                type={type}\r\n              >\r\n                {file}\r\n              </FileItem>\r\n            </FileList.Item>\r\n          ))}\r\n        </FileList>\r\n      )}\r\n    </FieldStory>\r\n  );\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { InputHTMLAttributes } from 'react';\r\nimport useFieldContext from '../utils/useFieldContext';\r\nimport { InputContext } from '../utils/useInputContext';\r\nimport { StyledCheckInput } from '../styled';\r\nimport useFieldsetContext from '../utils/useFieldsetContext';\r\n\r\nexport interface ICheckboxProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  /**\r\n   * Sets the checkbox state to\r\n   * [indeterminate](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#Indeterminate_state_checkboxes)\r\n   */\r\n  indeterminate?: boolean;\r\n  /** Applies compact styling */\r\n  isCompact?: boolean;\r\n}\r\n\r\n/**\r\n * @extends InputHTMLAttributes<HTMLInputElement>\r\n */\r\nexport const Checkbox = React.forwardRef<HTMLInputElement, ICheckboxProps>(\r\n  ({ indeterminate, children, ...props }, ref) => {\r\n    const fieldsetContext = useFieldsetContext();\r\n    const fieldContext = useFieldContext();\r\n\r\n    const inputRef = (inputElement: HTMLInputElement) => {\r\n      inputElement && ((inputElement as any).indeterminate = indeterminate);\r\n    };\r\n\r\n    const combinedRef = (inputElement: HTMLInputElement) => {\r\n      [inputRef, ref].forEach(targetRef => {\r\n        if (targetRef) {\r\n          if (typeof targetRef === 'function') {\r\n            targetRef(inputElement);\r\n          } else {\r\n            (targetRef as any).current = inputElement;\r\n          }\r\n        }\r\n      });\r\n    };\r\n\r\n    let combinedProps = {\r\n      ref: combinedRef,\r\n      ...props,\r\n      ...fieldsetContext\r\n    };\r\n\r\n    if (fieldContext) {\r\n      combinedProps = fieldContext.getInputProps(combinedProps);\r\n    }\r\n\r\n    return (\r\n      <InputContext.Provider value=\"checkbox\">\r\n        <StyledCheckInput {...(combinedProps as any)} />\r\n        {children}\r\n      </InputContext.Provider>\r\n    );\r\n  }\r\n);\r\n\r\nCheckbox.displayName = 'Checkbox';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, {\r\n  useState,\r\n  HTMLAttributes,\r\n  RefObject,\r\n  ForwardRefExoticComponent,\r\n  PropsWithoutRef,\r\n  RefAttributes,\r\n  forwardRef\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { composeEventHandlers } from '@zendeskgarden/container-utilities';\r\nimport { StyledTextFauxInput, StyledTextMediaFigure } from '../styled';\r\nimport { VALIDATION } from '../utils/validation';\r\n\r\nexport interface IIconProps extends HTMLAttributes<HTMLElement> {\r\n  isHovered?: boolean;\r\n  isFocused?: boolean;\r\n  isDisabled?: boolean;\r\n  isRotated?: boolean;\r\n  children: any;\r\n}\r\n\r\nconst StartIcon = (props: IIconProps) => <StyledTextMediaFigure position=\"start\" {...props} />;\r\nconst EndIcon = (props: IIconProps) => <StyledTextMediaFigure position=\"end\" {...props} />;\r\n\r\nexport interface IStaticFauxInputExport<T, P>\r\n  extends ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>> {\r\n  StartIcon: typeof StartIcon;\r\n  EndIcon: typeof EndIcon;\r\n}\r\n\r\nexport interface IFauxInputProps extends HTMLAttributes<HTMLDivElement> {\r\n  /** Applies compact styling */\r\n  isCompact?: boolean;\r\n  /** Removes borders and padding */\r\n  isBare?: boolean;\r\n  /** Applies inset `box-shadow` styling on focus */\r\n  focusInset?: boolean;\r\n  /** Indicates that the element is not interactive */\r\n  disabled?: boolean;\r\n  /** Applies read-only styling */\r\n  readOnly?: boolean;\r\n  /** Applies validation state styling */\r\n  validation?: VALIDATION;\r\n  /** Applies focus stying */\r\n  isFocused?: boolean;\r\n  /** Applies hover stying */\r\n  isHovered?: boolean;\r\n}\r\n\r\n/**\r\n *  @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const FauxInput = forwardRef<HTMLDivElement, IFauxInputProps>(\r\n  ({ onFocus, onBlur, disabled, readOnly, isFocused: controlledIsFocused, ...props }, ref) => {\r\n    const [isFocused, setIsFocused] = useState(false);\r\n\r\n    const onFocusHandler = composeEventHandlers(onFocus, () => {\r\n      setIsFocused(true);\r\n    });\r\n\r\n    const onBlurHandler = composeEventHandlers(onBlur, () => {\r\n      setIsFocused(false);\r\n    });\r\n\r\n    return (\r\n      <StyledTextFauxInput\r\n        onFocus={onFocusHandler}\r\n        onBlur={onBlurHandler}\r\n        isFocused={controlledIsFocused === undefined ? isFocused : controlledIsFocused}\r\n        data-test-is-focused={controlledIsFocused === undefined ? isFocused : controlledIsFocused}\r\n        isReadOnly={readOnly}\r\n        isDisabled={disabled}\r\n        tabIndex={disabled ? undefined : 0}\r\n        {...props}\r\n        ref={ref as RefObject<HTMLInputElement>}\r\n      />\r\n    );\r\n  }\r\n) as IStaticFauxInputExport<HTMLDivElement, IFauxInputProps>;\r\n\r\nFauxInput.StartIcon = StartIcon;\r\nFauxInput.EndIcon = EndIcon;\r\n\r\nFauxInput.displayName = 'FauxInput';\r\n\r\nFauxInput.propTypes = {\r\n  isCompact: PropTypes.bool,\r\n  isBare: PropTypes.bool,\r\n  focusInset: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  readOnly: PropTypes.bool,\r\n  validation: PropTypes.oneOf(['success', 'warning', 'error'])\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledFileUpload } from '../styled';\r\n\r\nexport interface IFileUploadProps extends HTMLAttributes<HTMLDivElement> {\r\n  /** Applies drag styling */\r\n  isDragging?: boolean;\r\n  /** Applies compact styling */\r\n  isCompact?: boolean;\r\n  /** Indicates that the element is not interactive */\r\n  disabled?: boolean;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const FileUpload = React.forwardRef<HTMLDivElement, IFileUploadProps>(\r\n  ({ disabled, ...props }, ref) => {\r\n    return <StyledFileUpload ref={ref} aria-disabled={disabled} {...props} />;\r\n  }\r\n);\r\n\r\nFileUpload.propTypes = {\r\n  isDragging: PropTypes.bool,\r\n  isCompact: PropTypes.bool,\r\n  disabled: PropTypes.bool\r\n};\r\n\r\nFileUpload.displayName = 'FileUpload';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { InputHTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { composeEventHandlers } from '@zendeskgarden/container-utilities';\r\nimport useFieldContext from '../utils/useFieldContext';\r\nimport { useInputGroupContext } from '../utils/useInputGroupContext';\r\nimport { StyledTextInput } from '../styled';\r\nimport { VALIDATION } from '../utils/validation';\r\n\r\nexport interface IInputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  /** Applies compact styling */\r\n  isCompact?: boolean;\r\n  /** Removes borders and padding */\r\n  isBare?: boolean;\r\n  /** Applies inset `box-shadow` styling on focus */\r\n  focusInset?: boolean;\r\n  /** Applies validation state styling */\r\n  validation?: VALIDATION;\r\n}\r\n\r\n/**\r\n * @extends InputHTMLAttributes<HTMLInputElement>\r\n */\r\nexport const Input = React.forwardRef<HTMLInputElement, IInputProps>(\r\n  ({ onSelect, ...props }, ref) => {\r\n    const fieldContext = useFieldContext();\r\n    const inputGroupContext = useInputGroupContext();\r\n\r\n    const onSelectHandler = props.readOnly\r\n      ? composeEventHandlers(onSelect, (event: React.SyntheticEvent<HTMLInputElement>) => {\r\n          event.currentTarget.select();\r\n        })\r\n      : onSelect;\r\n\r\n    let combinedProps = {\r\n      ref,\r\n      onSelect: onSelectHandler,\r\n      ...props\r\n    };\r\n\r\n    if (inputGroupContext) {\r\n      combinedProps = {\r\n        ...combinedProps,\r\n        isCompact: inputGroupContext.isCompact || combinedProps.isCompact,\r\n        focusInset: props.focusInset === undefined ? true : props.focusInset\r\n      };\r\n    }\r\n\r\n    if (fieldContext) {\r\n      combinedProps = fieldContext.getInputProps(combinedProps, { isDescribed: true });\r\n    }\r\n\r\n    return <StyledTextInput {...(combinedProps as any)} />;\r\n  }\r\n);\r\n\r\nInput.propTypes = {\r\n  isCompact: PropTypes.bool,\r\n  isBare: PropTypes.bool,\r\n  focusInset: PropTypes.bool,\r\n  validation: PropTypes.oneOf(['success', 'warning', 'error'])\r\n};\r\n\r\nInput.displayName = 'Input';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { InputHTMLAttributes, useState, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { composeEventHandlers } from '@zendeskgarden/container-utilities';\r\nimport mergeRefs from 'react-merge-refs';\r\nimport { StyledTextMediaInput } from '../styled';\r\nimport { FauxInput } from './FauxInput';\r\nimport useFieldContext from '../utils/useFieldContext';\r\nimport { VALIDATION } from '../utils/validation';\r\n\r\nexport interface IMediaInputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  /** Applies compact styling */\r\n  isCompact?: boolean;\r\n  /** Removes borders and padding */\r\n  isBare?: boolean;\r\n  /** Applies inset `box-shadow` styling on focus */\r\n  focusInset?: boolean;\r\n  /** Accepts a \"start\" icon to display */\r\n  start?: any;\r\n  /** Accepts an \"end\" icon to display */\r\n  end?: any;\r\n  /** Applies validation state styling */\r\n  validation?: VALIDATION;\r\n  /** Applies props to the wrapping [FauxInput](#fauxinput) element */\r\n  wrapperProps?: any;\r\n  /** Applies a ref to the wrapping [FauxInput](#fauxinput) element */\r\n  wrapperRef?: any;\r\n}\r\n\r\n/**\r\n * @extends InputHTMLAttributes<HTMLInputElement>\r\n */\r\nexport const MediaInput = React.forwardRef<HTMLInputElement, IMediaInputProps>(\r\n  (\r\n    {\r\n      start,\r\n      end,\r\n      disabled,\r\n      isCompact,\r\n      isBare,\r\n      focusInset,\r\n      readOnly,\r\n      validation,\r\n      wrapperProps = {},\r\n      wrapperRef,\r\n      onSelect,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const fieldContext = useFieldContext();\r\n    const inputRef = useRef<HTMLInputElement>();\r\n    const [isFocused, setIsFocused] = useState(false);\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n    const { onClick, onFocus, onBlur, onMouseOver, onMouseOut, ...otherWrapperProps } =\r\n      wrapperProps;\r\n\r\n    const onFauxInputClickHandler = composeEventHandlers(onClick, () => {\r\n      inputRef.current && inputRef.current.focus();\r\n    });\r\n\r\n    const onFauxInputFocusHandler = composeEventHandlers(onFocus, () => {\r\n      setIsFocused(true);\r\n    });\r\n\r\n    const onFauxInputBlurHandler = composeEventHandlers(onBlur, () => {\r\n      setIsFocused(false);\r\n    });\r\n\r\n    const onFauxInputMouseOverHandler = composeEventHandlers(onMouseOver, () => {\r\n      setIsHovered(true);\r\n    });\r\n\r\n    const onFauxInputMouseOutHandler = composeEventHandlers(onMouseOut, () => {\r\n      setIsHovered(false);\r\n    });\r\n\r\n    const onSelectHandler = readOnly\r\n      ? composeEventHandlers(onSelect, (event: React.SyntheticEvent<HTMLInputElement>) => {\r\n          event.currentTarget.select();\r\n        })\r\n      : onSelect;\r\n\r\n    let combinedProps = {\r\n      disabled,\r\n      readOnly,\r\n      ref: mergeRefs([inputRef, ref]),\r\n      onSelect: onSelectHandler,\r\n      ...props\r\n    };\r\n\r\n    let isLabelHovered;\r\n\r\n    if (fieldContext) {\r\n      combinedProps = fieldContext.getInputProps(combinedProps, { isDescribed: true });\r\n      isLabelHovered = fieldContext.isLabelHovered;\r\n    }\r\n\r\n    return (\r\n      <FauxInput\r\n        tabIndex={null}\r\n        onClick={onFauxInputClickHandler}\r\n        onFocus={onFauxInputFocusHandler}\r\n        onBlur={onFauxInputBlurHandler}\r\n        onMouseOver={onFauxInputMouseOverHandler}\r\n        onMouseOut={onFauxInputMouseOutHandler}\r\n        disabled={disabled}\r\n        isFocused={isFocused}\r\n        isHovered={isHovered || isLabelHovered}\r\n        isCompact={isCompact}\r\n        isBare={isBare}\r\n        focusInset={focusInset}\r\n        readOnly={readOnly}\r\n        validation={validation}\r\n        mediaLayout\r\n        {...otherWrapperProps}\r\n        ref={wrapperRef}\r\n      >\r\n        {start && (\r\n          <FauxInput.StartIcon\r\n            isDisabled={disabled}\r\n            isFocused={isFocused}\r\n            isHovered={isHovered || isLabelHovered}\r\n          >\r\n            {start}\r\n          </FauxInput.StartIcon>\r\n        )}\r\n        <StyledTextMediaInput {...(combinedProps as any)} />\r\n        {end && (\r\n          <FauxInput.EndIcon\r\n            isDisabled={disabled}\r\n            isFocused={isFocused}\r\n            isHovered={isHovered || isLabelHovered}\r\n          >\r\n            {end}\r\n          </FauxInput.EndIcon>\r\n        )}\r\n      </FauxInput>\r\n    );\r\n  }\r\n);\r\n\r\nMediaInput.propTypes = {\r\n  isCompact: PropTypes.bool,\r\n  isBare: PropTypes.bool,\r\n  focusInset: PropTypes.bool,\r\n  start: PropTypes.node,\r\n  end: PropTypes.node,\r\n  validation: PropTypes.oneOf(['success', 'warning', 'error']),\r\n  wrapperProps: PropTypes.object\r\n};\r\n\r\nMediaInput.displayName = 'MediaInput';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n  useRef,\r\n  HTMLAttributes,\r\n  KeyboardEvent,\r\n  useContext\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeContext } from 'styled-components';\r\nimport debounce from 'lodash.debounce';\r\nimport { KEY_CODES, composeEventHandlers } from '@zendeskgarden/container-utilities';\r\nimport { useDocument } from '@zendeskgarden/react-theming';\r\nimport {\r\n  StyledSlider,\r\n  StyledSliderTrack,\r\n  StyledSliderTrackRail,\r\n  StyledSliderThumb\r\n} from '../styled';\r\nimport useFieldContext from '../utils/useFieldContext';\r\n\r\nexport interface IMultiThumbRangeProps extends Omit<HTMLAttributes<HTMLDivElement>, 'onChange'> {\r\n  /** Sets the minimum permitted value */\r\n  min?: number;\r\n  /** Sets the maximum permitted value */\r\n  max?: number;\r\n  /** Sets the minimum thumb input value */\r\n  minValue?: number;\r\n  /** Sets the maximum thumb input value */\r\n  maxValue?: number;\r\n  /** Defines the stepping interval */\r\n  step?: number;\r\n  /** Indicates that the element is not interactive */\r\n  disabled?: boolean;\r\n  /**\r\n   * Handles change events\r\n   *\r\n   * @param {Object} updatedValues The values that have changed\r\n   * @param {number} [updatedValues.minValue] The optional minimum value\r\n   * @param {number} [updatedValues.maxValue] The optional maximum value\r\n   * */\r\n  onChange?: (updatedValues: { minValue?: number; maxValue?: number }) => void;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const MultiThumbRange: React.FC<IMultiThumbRangeProps> = ({\r\n  min,\r\n  max,\r\n  minValue,\r\n  maxValue,\r\n  disabled,\r\n  step,\r\n  onChange,\r\n  onMouseDown,\r\n  ...props\r\n}) => {\r\n  const theme = useContext(ThemeContext);\r\n  const themedDocument = useDocument(theme);\r\n  const [isMinThumbFocused, setIsMinThumbFocused] = useState(false);\r\n  const [railWidth, setRailWidth] = useState(0);\r\n  const [isMousedDown, setIsMousedDown] = useState(false);\r\n  const trackRailRef = useRef<HTMLDivElement>(null);\r\n  const minThumbRef = useRef<HTMLDivElement>(null);\r\n  const maxThumbRef = useRef<HTMLDivElement>(null);\r\n  const fieldContext = useFieldContext();\r\n  const { isLabelHovered, isLabelActive, multiThumbRangeRef } = fieldContext || {};\r\n\r\n  /**\r\n   * The window resize event is debounced to reduce unnecessary renders\r\n   */\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const onWindowResize = useCallback(\r\n    debounce(() => {\r\n      if (trackRailRef.current) {\r\n        setRailWidth(trackRailRef.current.getBoundingClientRect().width);\r\n      }\r\n    }, 100),\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (multiThumbRangeRef) {\r\n      multiThumbRangeRef.current = minThumbRef.current;\r\n    }\r\n  }, [multiThumbRangeRef]);\r\n\r\n  useEffect(() => {\r\n    onWindowResize();\r\n\r\n    window.addEventListener('resize', onWindowResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', onWindowResize);\r\n    };\r\n  }, [onWindowResize]);\r\n\r\n  const calculateMinPosition = useCallback(\r\n    minDistance => {\r\n      let boundedMinValue = minValue!;\r\n\r\n      if (boundedMinValue < min!) {\r\n        boundedMinValue = min!;\r\n      } else if (boundedMinValue > maxValue!) {\r\n        boundedMinValue = maxValue!;\r\n      } else if (boundedMinValue > max!) {\r\n        boundedMinValue = max!;\r\n      }\r\n\r\n      return ((boundedMinValue - min!) / (max! - min!)) * (railWidth - minDistance);\r\n    },\r\n    [max, maxValue, min, minValue, railWidth]\r\n  );\r\n\r\n  const calculateMaxPosition = useCallback(\r\n    minDistance => {\r\n      let boundedMaxValue = maxValue!;\r\n\r\n      if (boundedMaxValue > max!) {\r\n        boundedMaxValue = max!;\r\n      } else if (boundedMaxValue < minValue!) {\r\n        boundedMaxValue = minValue!;\r\n      } else if (boundedMaxValue < min!) {\r\n        boundedMaxValue = min!;\r\n      }\r\n\r\n      return ((boundedMaxValue - min!) / (max! - min!)) * (railWidth - minDistance) + minDistance;\r\n    },\r\n    [max, maxValue, min, minValue, railWidth]\r\n  );\r\n\r\n  /**\r\n   * Provides updated values to onChange prop if values have changed\r\n   */\r\n  const onRangeValuesChange = useCallback(\r\n    ({ minValue: newMinValue, maxValue: newMaxValue } = {}) => {\r\n      if (disabled) {\r\n        return;\r\n      }\r\n\r\n      if (onChange && (newMinValue !== minValue || newMaxValue !== maxValue)) {\r\n        onChange({ minValue: newMinValue, maxValue: newMaxValue });\r\n      }\r\n    },\r\n    [disabled, maxValue, minValue, onChange]\r\n  );\r\n\r\n  const updateMinThumbSlider = useCallback(\r\n    value => {\r\n      let managedValue = value;\r\n\r\n      if (value < min!) {\r\n        managedValue = min;\r\n      } else if (value > maxValue!) {\r\n        managedValue = maxValue;\r\n      }\r\n\r\n      onRangeValuesChange({ maxValue, minValue: managedValue });\r\n    },\r\n    [maxValue, min, onRangeValuesChange]\r\n  );\r\n\r\n  const updateMaxThumbSlider = useCallback(\r\n    value => {\r\n      let managedValue = value;\r\n\r\n      if (value < minValue!) {\r\n        managedValue = minValue;\r\n      } else if (value > max!) {\r\n        managedValue = max;\r\n      }\r\n\r\n      onRangeValuesChange({ maxValue: managedValue, minValue });\r\n    },\r\n    [max, minValue, onRangeValuesChange]\r\n  );\r\n\r\n  const calculateUpdatedValue = useCallback(\r\n    (e: React.MouseEvent) => {\r\n      if (!trackRailRef.current) {\r\n        return undefined;\r\n      }\r\n\r\n      const trackOffsetLeft = trackRailRef.current.getBoundingClientRect().left;\r\n      const trackOffsetRight = trackOffsetLeft + trackRailRef.current.getBoundingClientRect().width;\r\n      const trackWidth = trackRailRef.current.getBoundingClientRect().width;\r\n\r\n      let diffX = e.pageX - (theme.rtl ? trackOffsetRight : trackOffsetLeft);\r\n\r\n      if (theme.rtl) {\r\n        diffX *= -1;\r\n      }\r\n\r\n      const newValue =\r\n        min! + parseInt((((max! - min!) * diffX) / trackWidth) as unknown as string, 10);\r\n\r\n      // Reduce updated value to align with step size\r\n      return Math.floor(newValue / step!) * step!;\r\n    },\r\n    [max, min, step, theme.rtl]\r\n  );\r\n\r\n  /**\r\n   * Calculates the update thumb position based on current mouse position\r\n   */\r\n  const onDocumentMouseMove = useCallback(\r\n    e => {\r\n      const newValue = calculateUpdatedValue(e);\r\n\r\n      if (isMinThumbFocused) {\r\n        updateMinThumbSlider(newValue);\r\n      } else {\r\n        updateMaxThumbSlider(newValue);\r\n      }\r\n    },\r\n    [calculateUpdatedValue, isMinThumbFocused, updateMinThumbSlider, updateMaxThumbSlider]\r\n  );\r\n\r\n  const removeDragEvents = useCallback(() => {\r\n    if (themedDocument) {\r\n      themedDocument.removeEventListener('mousemove', onDocumentMouseMove);\r\n      themedDocument.removeEventListener('mouseup', removeDragEvents);\r\n    }\r\n\r\n    setIsMousedDown(false);\r\n  }, [onDocumentMouseMove, themedDocument]);\r\n\r\n  const onTrackMouseDown = useCallback(\r\n    (e: React.MouseEvent) => {\r\n      if (e.button !== 0 || disabled) {\r\n        return;\r\n      }\r\n\r\n      e.preventDefault();\r\n\r\n      const valueAtMouseDown = calculateUpdatedValue(e);\r\n\r\n      if (valueAtMouseDown === undefined || minValue === undefined || maxValue === undefined) {\r\n        return;\r\n      }\r\n\r\n      const distanceFromMinThumb = Math.abs(minValue - valueAtMouseDown);\r\n      const distanceFromMaxThumb = Math.abs(maxValue - valueAtMouseDown);\r\n\r\n      if (distanceFromMinThumb <= distanceFromMaxThumb) {\r\n        minThumbRef.current && minThumbRef.current.focus();\r\n        updateMinThumbSlider(valueAtMouseDown);\r\n      } else {\r\n        maxThumbRef.current && maxThumbRef.current.focus();\r\n        updateMaxThumbSlider(valueAtMouseDown);\r\n      }\r\n    },\r\n    [\r\n      calculateUpdatedValue,\r\n      disabled,\r\n      maxValue,\r\n      minValue,\r\n      updateMaxThumbSlider,\r\n      updateMinThumbSlider\r\n    ]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isMousedDown && themedDocument) {\r\n      themedDocument.addEventListener('mousemove', onDocumentMouseMove);\r\n      themedDocument.addEventListener('mouseup', removeDragEvents);\r\n    }\r\n\r\n    return () => {\r\n      if (isMousedDown && themedDocument) {\r\n        themedDocument.removeEventListener('mousemove', onDocumentMouseMove);\r\n        themedDocument.removeEventListener('mouseup', removeDragEvents);\r\n      }\r\n    };\r\n  }, [isMousedDown, onDocumentMouseMove, removeDragEvents, themedDocument]);\r\n\r\n  const onKeyDown = (type: 'min' | 'max') => (e: KeyboardEvent<HTMLDivElement>) => {\r\n    const isMinThumb = type === 'min';\r\n    let keyIntercepted = false;\r\n\r\n    const decrementThumb = () => {\r\n      if (isMinThumb) {\r\n        updateMinThumbSlider(minValue! - step!);\r\n      } else {\r\n        updateMaxThumbSlider(maxValue! - step!);\r\n      }\r\n    };\r\n\r\n    const incrementThumb = () => {\r\n      if (isMinThumb) {\r\n        updateMinThumbSlider(minValue! + step!);\r\n      } else {\r\n        updateMaxThumbSlider(maxValue! + step!);\r\n      }\r\n    };\r\n\r\n    switch (e.keyCode) {\r\n      case KEY_CODES.LEFT:\r\n        if (theme.rtl) {\r\n          incrementThumb();\r\n        } else {\r\n          decrementThumb();\r\n        }\r\n\r\n        keyIntercepted = true;\r\n        break;\r\n\r\n      case KEY_CODES.DOWN:\r\n        decrementThumb();\r\n        keyIntercepted = true;\r\n        break;\r\n\r\n      case KEY_CODES.RIGHT:\r\n        if (theme.rtl) {\r\n          decrementThumb();\r\n        } else {\r\n          incrementThumb();\r\n        }\r\n\r\n        keyIntercepted = true;\r\n        break;\r\n\r\n      case KEY_CODES.UP:\r\n        incrementThumb();\r\n        keyIntercepted = true;\r\n        break;\r\n\r\n      case KEY_CODES.HOME:\r\n        if (isMinThumb) {\r\n          updateMinThumbSlider(min);\r\n        } else {\r\n          updateMaxThumbSlider(min);\r\n        }\r\n\r\n        keyIntercepted = true;\r\n        break;\r\n\r\n      case KEY_CODES.END:\r\n        if (isMinThumb) {\r\n          updateMinThumbSlider(max);\r\n        } else {\r\n          updateMaxThumbSlider(max);\r\n        }\r\n\r\n        keyIntercepted = true;\r\n        break;\r\n    }\r\n\r\n    if (keyIntercepted) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  };\r\n\r\n  // This may be increased to enforce separation between thumbs\r\n  const MIN_DISTANCE = 0;\r\n\r\n  const minPosition = calculateMinPosition(MIN_DISTANCE);\r\n  const maxPosition = calculateMaxPosition(MIN_DISTANCE);\r\n  const sliderBackgroundSize = Math.abs(maxPosition) - Math.abs(minPosition);\r\n\r\n  const onSliderMouseDown = composeEventHandlers(onMouseDown, onTrackMouseDown);\r\n\r\n  return (\r\n    <StyledSlider\r\n      data-test-id=\"slider\"\r\n      isDisabled={disabled}\r\n      onMouseDown={onSliderMouseDown}\r\n      {...props}\r\n    >\r\n      <StyledSliderTrack\r\n        backgroundSize={sliderBackgroundSize}\r\n        backgroundPosition={theme.rtl ? railWidth - maxPosition : minPosition}\r\n        data-test-id=\"track\"\r\n        isDisabled={disabled}\r\n      >\r\n        <StyledSliderTrackRail data-test-id=\"rail\" ref={trackRailRef}>\r\n          <StyledSliderThumb\r\n            role=\"slider\"\r\n            tabIndex={disabled ? undefined : 0}\r\n            aria-valuemin={min}\r\n            aria-valuemax={maxValue}\r\n            aria-valuenow={minValue}\r\n            aria-valuetext={minValue as unknown as string}\r\n            data-test-id=\"thumb\"\r\n            isDisabled={disabled}\r\n            position={minPosition}\r\n            ref={minThumbRef}\r\n            onKeyDown={(e: KeyboardEvent<HTMLDivElement>) => onKeyDown('min')(e)}\r\n            onFocus={() => {\r\n              setIsMinThumbFocused(true);\r\n            }}\r\n            onBlur={() => {\r\n              setIsMinThumbFocused(false);\r\n            }}\r\n            onMouseDown={e => {\r\n              setIsMousedDown(true);\r\n\r\n              e.preventDefault();\r\n              e.stopPropagation();\r\n\r\n              minThumbRef.current && minThumbRef.current.focus();\r\n            }}\r\n            data-garden-active={isLabelActive}\r\n            data-garden-hover={isLabelHovered}\r\n          />\r\n          <StyledSliderThumb\r\n            role=\"slider\"\r\n            tabIndex={disabled ? undefined : 0}\r\n            aria-valuemin={minValue}\r\n            aria-valuemax={max}\r\n            aria-valuenow={maxValue}\r\n            aria-valuetext={maxValue as unknown as string}\r\n            data-test-id=\"thumb\"\r\n            isDisabled={disabled}\r\n            position={maxPosition}\r\n            onKeyDown={(e: KeyboardEvent<HTMLDivElement>) => onKeyDown('max')(e)}\r\n            ref={maxThumbRef}\r\n            onMouseDown={e => {\r\n              setIsMousedDown(true);\r\n\r\n              e.preventDefault();\r\n              e.stopPropagation();\r\n\r\n              maxThumbRef.current && maxThumbRef.current.focus();\r\n            }}\r\n          />\r\n        </StyledSliderTrackRail>\r\n      </StyledSliderTrack>\r\n    </StyledSlider>\r\n  );\r\n};\r\n\r\nMultiThumbRange.propTypes = {\r\n  min: PropTypes.number,\r\n  max: PropTypes.number,\r\n  minValue: PropTypes.number,\r\n  maxValue: PropTypes.number,\r\n  step: PropTypes.number,\r\n  disabled: PropTypes.bool,\r\n  onChange: PropTypes.func\r\n};\r\n\r\nMultiThumbRange.defaultProps = {\r\n  min: 0,\r\n  max: 100,\r\n  minValue: 0,\r\n  maxValue: 100,\r\n  step: 1\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { InputHTMLAttributes } from 'react';\r\nimport useFieldContext from '../utils/useFieldContext';\r\nimport { InputContext } from '../utils/useInputContext';\r\nimport { StyledRadioInput } from '../styled';\r\nimport useFieldsetContext from '../utils/useFieldsetContext';\r\n\r\nexport interface IRadioProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  /** Applies compact styling */\r\n  isCompact?: boolean;\r\n}\r\n\r\n/**\r\n * @extends InputHTMLAttributes<HTMLInputElement>\r\n */\r\nexport const Radio = React.forwardRef<HTMLInputElement, IRadioProps>(\r\n  ({ children, ...props }, ref) => {\r\n    const fieldsetContext = useFieldsetContext();\r\n    const fieldContext = useFieldContext();\r\n\r\n    let combinedProps = {\r\n      ref,\r\n      ...props,\r\n      ...fieldsetContext\r\n    };\r\n\r\n    if (fieldContext) {\r\n      combinedProps = fieldContext.getInputProps(combinedProps);\r\n    }\r\n\r\n    return (\r\n      <InputContext.Provider value=\"radio\">\r\n        <StyledRadioInput {...(combinedProps as any)} />\r\n        {children}\r\n      </InputContext.Provider>\r\n    );\r\n  }\r\n);\r\n\r\nRadio.displayName = 'Radio';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n  useRef,\r\n  InputHTMLAttributes,\r\n  ChangeEvent\r\n} from 'react';\r\nimport { composeEventHandlers } from '@zendeskgarden/container-utilities';\r\nimport mergeRefs from 'react-merge-refs';\r\nimport useFieldContext from '../utils/useFieldContext';\r\nimport { StyledRangeInput } from '../styled';\r\n\r\nexport interface IRangeProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  /** @ignore */\r\n  hasLowerTrack?: boolean;\r\n}\r\n\r\n/**\r\n * @extends InputHTMLAttributes<HTMLInputElement>\r\n */\r\nexport const Range = React.forwardRef<HTMLInputElement, IRangeProps>(\r\n  ({ hasLowerTrack, min, max, step, ...props }, ref) => {\r\n    const [backgroundSize, setBackgroundSize] = useState('0');\r\n    const rangeRef = useRef<HTMLInputElement>();\r\n    const fieldContext = useFieldContext();\r\n\r\n    const updateBackgroundWidthFromInput = useCallback(\r\n      (rangeTarget: HTMLInputElement) => {\r\n        let relativeMax = max as number;\r\n        const { value } = rangeTarget;\r\n\r\n        if (parseFloat(relativeMax as any) < parseFloat(min as string)) {\r\n          relativeMax = 100;\r\n        }\r\n\r\n        const percentage =\r\n          (100 * ((value as unknown as number) - (min as number))) /\r\n          (relativeMax - (min as number));\r\n\r\n        setBackgroundSize(`${percentage}%`);\r\n      },\r\n      /* eslint-disable-next-line react-hooks/exhaustive-deps */\r\n      [max, min, step]\r\n    );\r\n\r\n    useEffect(() => {\r\n      updateBackgroundWidthFromInput(rangeRef.current!);\r\n    }, [rangeRef, updateBackgroundWidthFromInput, props.value]);\r\n\r\n    const onChange = hasLowerTrack\r\n      ? composeEventHandlers(props.onChange, (event: ChangeEvent<HTMLInputElement>) => {\r\n          updateBackgroundWidthFromInput(event.target);\r\n        })\r\n      : props.onChange;\r\n\r\n    let combinedProps = {\r\n      ref: mergeRefs([rangeRef, ref]),\r\n      hasLowerTrack,\r\n      min,\r\n      max,\r\n      step,\r\n      backgroundSize,\r\n      ...props,\r\n      onChange\r\n    };\r\n\r\n    if (fieldContext) {\r\n      combinedProps = fieldContext.getInputProps(combinedProps, { isDescribed: true });\r\n    }\r\n\r\n    return <StyledRangeInput {...(combinedProps as any)} />;\r\n  }\r\n);\r\n\r\nRange.defaultProps = {\r\n  hasLowerTrack: true,\r\n  min: 0,\r\n  max: 100,\r\n  step: 1\r\n};\r\n\r\nRange.displayName = 'Range';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { SelectHTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledSelect, StyledSelectWrapper } from '../styled';\r\nimport { FauxInput } from './FauxInput';\r\nimport useFieldContext from '../utils/useFieldContext';\r\nimport { VALIDATION } from '../utils/validation';\r\n\r\nexport interface ISelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  /** Applies compact styling */\r\n  isCompact?: boolean;\r\n  /** Removes borders and padding */\r\n  isBare?: boolean;\r\n  /** Applies inset `box-shadow` styling on focus */\r\n  focusInset?: boolean;\r\n  /** Applies validation state styling */\r\n  validation?: VALIDATION;\r\n}\r\n\r\n/**\r\n * @extends SelectHTMLAttributes<HTMLSelectElement>\r\n */\r\nexport const Select = React.forwardRef<HTMLSelectElement, ISelectProps>(\r\n  ({ disabled, isCompact, ...props }, ref) => {\r\n    const fieldContext = useFieldContext();\r\n\r\n    let combinedProps = {\r\n      disabled,\r\n      isCompact,\r\n      ref,\r\n      ...props\r\n    };\r\n\r\n    if (fieldContext) {\r\n      combinedProps = fieldContext.getInputProps(combinedProps, { isDescribed: true });\r\n    }\r\n\r\n    return (\r\n      <StyledSelectWrapper isCompact={isCompact}>\r\n        <StyledSelect {...(combinedProps as any)} />\r\n        {!props.isBare && (\r\n          <FauxInput.EndIcon isDisabled={disabled}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"currentColor\" d=\"M12.688 5.61a.5.5 0 01.69.718l-.066.062-5 4a.5.5 0 01-.542.054l-.082-.054-5-4a.5.5 0 01.55-.83l.074.05L8 9.359l4.688-3.75z\"/>\r\n</svg>\r\n          </FauxInput.EndIcon>\r\n        )}\r\n      </StyledSelectWrapper>\r\n    );\r\n  }\r\n);\r\n\r\nSelect.propTypes = {\r\n  isCompact: PropTypes.bool,\r\n  isBare: PropTypes.bool,\r\n  focusInset: PropTypes.bool,\r\n  validation: PropTypes.oneOf(['success', 'warning', 'error'])\r\n};\r\n\r\nSelect.displayName = 'Select';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, {\r\n  TextareaHTMLAttributes,\r\n  useRef,\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useState\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport debounce from 'lodash.debounce';\r\nimport { composeEventHandlers } from '@zendeskgarden/container-utilities';\r\nimport mergeRefs from 'react-merge-refs';\r\nimport useFieldContext from '../utils/useFieldContext';\r\nimport { StyledTextarea } from '../styled';\r\nimport { VALIDATION } from '../utils/validation';\r\n\r\nexport interface ITextareaProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {\r\n  /** Applies compact styling */\r\n  isCompact?: boolean;\r\n  /** Removes borders and padding */\r\n  isBare?: boolean;\r\n  /** Applies inset `box-shadow` styling on focus */\r\n  focusInset?: boolean;\r\n  /** Enables manual vertical resize */\r\n  isResizable?: boolean;\r\n  /** Defines the minimum height in rows */\r\n  minRows?: number;\r\n  /** Defines the maximum height in rows */\r\n  maxRows?: number;\r\n  /** Applies validation state styling */\r\n  validation?: VALIDATION;\r\n}\r\n\r\nconst parseStyleValue = (value: string) => {\r\n  return parseInt(value, 10) || 0;\r\n};\r\n\r\n/**\r\n * @extends TextareaHTMLAttributes<HTMLTextAreaElement>\r\n */\r\nexport const Textarea = React.forwardRef<HTMLTextAreaElement, ITextareaProps>(\r\n  ({ minRows, maxRows, style, onChange, onSelect, ...props }, ref) => {\r\n    const fieldContext = useFieldContext();\r\n    const textAreaRef = useRef<HTMLTextAreaElement>();\r\n    const shadowTextAreaRef = useRef<HTMLInputElement | null>(null);\r\n    const [state, setState] = useState<{ overflow: boolean; height: number }>({\r\n      overflow: false,\r\n      height: 0\r\n    });\r\n\r\n    const isControlled = props.value !== null && props.value !== undefined;\r\n    const isAutoResizable = (minRows !== undefined || maxRows !== undefined) && !props.isResizable;\r\n\r\n    const calculateHeight = useCallback(() => {\r\n      if (!isAutoResizable) {\r\n        return;\r\n      }\r\n\r\n      const textarea = textAreaRef.current!;\r\n      const computedStyle = window.getComputedStyle(textarea);\r\n      const shadowTextArea = shadowTextAreaRef.current!;\r\n\r\n      shadowTextArea.style.width = computedStyle.width;\r\n      shadowTextArea.value = textarea.value || textarea.placeholder || ' ';\r\n\r\n      const boxSizing = computedStyle.boxSizing;\r\n      const padding =\r\n        parseStyleValue(computedStyle.paddingBottom) + parseStyleValue(computedStyle.paddingTop);\r\n      const border =\r\n        parseStyleValue(computedStyle.borderTopWidth) +\r\n        parseStyleValue(computedStyle.borderBottomWidth);\r\n\r\n      const innerHeight = shadowTextArea.scrollHeight - padding;\r\n\r\n      shadowTextArea.value = 'x';\r\n      const singleRowHeight = shadowTextArea.scrollHeight - padding;\r\n\r\n      let outerHeight = innerHeight;\r\n\r\n      if (minRows) {\r\n        outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);\r\n      }\r\n\r\n      if (maxRows) {\r\n        outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);\r\n      }\r\n\r\n      outerHeight = Math.max(outerHeight, singleRowHeight);\r\n\r\n      const updatedHeight = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);\r\n      const overflow = Math.abs(outerHeight - innerHeight) <= 1;\r\n\r\n      setState(prevState => {\r\n        if (\r\n          (updatedHeight > 0 && Math.abs((prevState.height || 0) - updatedHeight) > 1) ||\r\n          prevState.overflow !== overflow\r\n        ) {\r\n          return {\r\n            overflow,\r\n            height: updatedHeight\r\n          };\r\n        }\r\n\r\n        return prevState;\r\n      });\r\n    }, [maxRows, minRows, textAreaRef, isAutoResizable]);\r\n\r\n    const onChangeHandler = useCallback(\r\n      (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        if (!isControlled) {\r\n          calculateHeight();\r\n        }\r\n\r\n        if (onChange) {\r\n          onChange(e);\r\n        }\r\n      },\r\n      [calculateHeight, isControlled, onChange]\r\n    );\r\n\r\n    useEffect(() => {\r\n      if (!isAutoResizable) {\r\n        return undefined;\r\n      }\r\n\r\n      const resizeHandler = debounce(() => {\r\n        calculateHeight();\r\n      });\r\n\r\n      window.addEventListener('resize', resizeHandler);\r\n\r\n      return () => {\r\n        resizeHandler.cancel();\r\n        window.removeEventListener('resize', resizeHandler);\r\n      };\r\n    }, [calculateHeight, isAutoResizable]);\r\n\r\n    useLayoutEffect(() => {\r\n      calculateHeight();\r\n    });\r\n\r\n    const computedStyle: React.CSSProperties = {};\r\n\r\n    if (isAutoResizable) {\r\n      computedStyle.height = state.height;\r\n      computedStyle.overflow = state.overflow ? 'hidden' : undefined;\r\n    }\r\n\r\n    const onSelectHandler = props.readOnly\r\n      ? composeEventHandlers(onSelect, (event: React.SyntheticEvent<HTMLInputElement>) => {\r\n          event.currentTarget.select();\r\n        })\r\n      : onSelect;\r\n\r\n    let combinedProps = {\r\n      ref: mergeRefs([textAreaRef, ref]),\r\n      rows: minRows,\r\n      onChange: onChangeHandler,\r\n      onSelect: onSelectHandler,\r\n      style: {\r\n        ...computedStyle,\r\n        ...style\r\n      },\r\n      ...props\r\n    };\r\n\r\n    if (fieldContext) {\r\n      combinedProps = fieldContext.getInputProps(combinedProps, { isDescribed: true });\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <StyledTextarea {...(combinedProps as any)} />\r\n        {isAutoResizable && (\r\n          <StyledTextarea\r\n            aria-hidden\r\n            readOnly\r\n            isHidden\r\n            className={props.className}\r\n            ref={shadowTextAreaRef}\r\n            tabIndex={-1}\r\n            isBare={props.isBare}\r\n            isCompact={props.isCompact}\r\n            style={style}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nTextarea.propTypes = {\r\n  isCompact: PropTypes.bool,\r\n  isBare: PropTypes.bool,\r\n  focusInset: PropTypes.bool,\r\n  isResizable: PropTypes.bool,\r\n  minRows: PropTypes.number,\r\n  maxRows: PropTypes.number,\r\n  validation: PropTypes.oneOf(['success', 'warning', 'error'])\r\n};\r\n\r\nTextarea.displayName = 'Textarea';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { InputHTMLAttributes } from 'react';\r\nimport useFieldContext from '../utils/useFieldContext';\r\nimport { InputContext } from '../utils/useInputContext';\r\nimport { StyledToggleInput } from '../styled';\r\nimport useFieldsetContext from '../utils/useFieldsetContext';\r\n\r\nexport interface IToggleProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  /** Applies compact styling */\r\n  isCompact?: boolean;\r\n}\r\n\r\n/**\r\n * @extends InputHTMLAttributes<HTMLInputElement>\r\n */\r\nexport const Toggle = React.forwardRef<HTMLInputElement, IToggleProps>(\r\n  ({ children, ...props }, ref) => {\r\n    const fieldsetContext = useFieldsetContext();\r\n    const fieldContext = useFieldContext();\r\n\r\n    let combinedProps = {\r\n      ref,\r\n      ...props,\r\n      ...fieldsetContext\r\n    };\r\n\r\n    if (fieldContext) {\r\n      combinedProps = fieldContext.getInputProps(combinedProps);\r\n    }\r\n\r\n    return (\r\n      <InputContext.Provider value=\"toggle\">\r\n        <StyledToggleInput {...(combinedProps as any)} />\r\n        {children}\r\n      </InputContext.Provider>\r\n    );\r\n  }\r\n);\r\n\r\nToggle.displayName = 'Toggle';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useRef, useState, HTMLAttributes, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useField } from '@zendeskgarden/container-field';\r\nimport { FieldContext } from '../../utils/useFieldContext';\r\nimport { StyledField } from '../../styled';\r\n\r\nexport interface IFieldProps extends HTMLAttributes<HTMLDivElement> {\r\n  /** Sets the field ID and the prefix for the generated label, input, and hint IDs */\r\n  id?: string;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Field = React.forwardRef<HTMLDivElement, IFieldProps>((props, ref) => {\r\n  const [isLabelActive, setIsLabelActive] = useState(false);\r\n  const [isLabelHovered, setIsLabelHovered] = useState(false);\r\n  const multiThumbRangeRef = useRef<HTMLDivElement>(null);\r\n  const getMessageProps = (messageProps: any) => ({ role: 'alert', ...messageProps });\r\n  const propGetters = useField(props.id);\r\n  const fieldProps = useMemo(\r\n    () => ({\r\n      ...propGetters,\r\n      getMessageProps,\r\n      isLabelActive,\r\n      setIsLabelActive,\r\n      isLabelHovered,\r\n      setIsLabelHovered,\r\n      multiThumbRangeRef\r\n    }),\r\n    [propGetters, isLabelActive, isLabelHovered]\r\n  );\r\n\r\n  return (\r\n    <FieldContext.Provider value={fieldProps}>\r\n      <StyledField {...props} ref={ref} />\r\n    </FieldContext.Provider>\r\n  );\r\n});\r\n\r\nField.propTypes = {\r\n  id: PropTypes.string\r\n};\r\n\r\nField.displayName = 'Field';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, {\r\n  useMemo,\r\n  forwardRef,\r\n  RefAttributes,\r\n  PropsWithoutRef,\r\n  FieldsetHTMLAttributes,\r\n  ForwardRefExoticComponent\r\n} from 'react';\r\nimport { Legend } from './Legend';\r\nimport { StyledFieldset } from '../../styled';\r\nimport { FieldsetContext } from '../../utils/useFieldsetContext';\r\n\r\nexport interface IFieldsetProps extends FieldsetHTMLAttributes<HTMLFieldSetElement> {\r\n  /**\r\n   * Applies compact styling\r\n   */\r\n  isCompact?: boolean;\r\n}\r\n\r\ninterface IStaticFieldsetExport<T, P>\r\n  extends ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>> {\r\n  Legend: typeof Legend;\r\n}\r\n\r\n/**\r\n * @extends FieldsetHTMLAttributes<HTMLFieldSetElement>\r\n */\r\nexport const Fieldset = forwardRef<HTMLFieldSetElement, IFieldsetProps>((props, ref) => {\r\n  const fieldsetContext = useMemo(\r\n    () => ({\r\n      isCompact: props.isCompact\r\n    }),\r\n    [props.isCompact]\r\n  );\r\n\r\n  return (\r\n    <FieldsetContext.Provider value={fieldsetContext}>\r\n      <StyledFieldset {...props} ref={ref} />\r\n    </FieldsetContext.Provider>\r\n  );\r\n}) as IStaticFieldsetExport<HTMLFieldSetElement, IFieldsetProps>;\r\n/* eslint-enable react/display-name */\r\n\r\nFieldset.Legend = Legend;\r\n\r\nFieldset.displayName = 'Fieldset';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport useFieldContext from '../../utils/useFieldContext';\r\nimport useInputContext from '../../utils/useInputContext';\r\nimport { StyledHint, StyledCheckHint, StyledRadioHint, StyledToggleHint } from '../../styled';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Hint = React.forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  (props, ref) => {\r\n    const fieldContext = useFieldContext();\r\n    const type = useInputContext();\r\n\r\n    let HintComponent;\r\n\r\n    if (type === 'checkbox') {\r\n      HintComponent = StyledCheckHint;\r\n    } else if (type === 'radio') {\r\n      HintComponent = StyledRadioHint;\r\n    } else if (type === 'toggle') {\r\n      HintComponent = StyledToggleHint;\r\n    } else {\r\n      HintComponent = StyledHint;\r\n    }\r\n\r\n    let combinedProps = props;\r\n\r\n    if (fieldContext) {\r\n      combinedProps = fieldContext.getHintProps(combinedProps);\r\n    }\r\n\r\n    return <HintComponent ref={ref} {...(combinedProps as any)} />;\r\n  }\r\n);\r\n\r\nHint.displayName = 'Hint';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { composeEventHandlers } from '@zendeskgarden/container-utilities';\r\nimport useFieldContext from '../../utils/useFieldContext';\r\nimport useFieldsetContext from '../../utils/useFieldsetContext';\r\nimport useInputContext from '../../utils/useInputContext';\r\nimport {\r\n  StyledLabel,\r\n  StyledCheckLabel,\r\n  StyledCheckSvg,\r\n  StyledDashSvg,\r\n  StyledRadioLabel,\r\n  StyledRadioSvg,\r\n  StyledToggleLabel,\r\n  StyledToggleSvg\r\n} from '../../styled';\r\n\r\nexport interface ILabelProps extends HTMLAttributes<HTMLLabelElement> {\r\n  /** Applies regular (non-bold) font weight */\r\n  isRegular?: boolean;\r\n}\r\n\r\n/**\r\n * @extends LabelHTMLAttributes<HTMLLabelElement>\r\n */\r\nexport const Label = React.forwardRef<HTMLLabelElement, ILabelProps>((props, ref) => {\r\n  const fieldContext = useFieldContext();\r\n  const fieldsetContext = useFieldsetContext();\r\n  const type = useInputContext();\r\n\r\n  let combinedProps = props;\r\n\r\n  if (fieldContext) {\r\n    combinedProps = fieldContext.getLabelProps(combinedProps);\r\n\r\n    if (type === undefined) {\r\n      const { setIsLabelActive, setIsLabelHovered, multiThumbRangeRef } = fieldContext;\r\n\r\n      combinedProps = {\r\n        ...combinedProps,\r\n        onMouseUp: composeEventHandlers(props.onMouseUp, () => {\r\n          setIsLabelActive(false);\r\n        }),\r\n        onMouseDown: composeEventHandlers(props.onMouseDown, () => {\r\n          setIsLabelActive(true);\r\n        }),\r\n        onMouseEnter: composeEventHandlers(props.onMouseEnter, () => {\r\n          setIsLabelHovered(true);\r\n        }),\r\n        onMouseLeave: composeEventHandlers(props.onMouseLeave, () => {\r\n          setIsLabelHovered(false);\r\n        }),\r\n        onClick: composeEventHandlers(props.onClick, () => {\r\n          multiThumbRangeRef.current && multiThumbRangeRef.current.focus();\r\n        })\r\n      };\r\n    }\r\n  }\r\n\r\n  if (fieldsetContext) {\r\n    combinedProps = {\r\n      ...combinedProps,\r\n      isRegular: combinedProps.isRegular === undefined ? true : combinedProps.isRegular\r\n    };\r\n  }\r\n\r\n  if (type === 'radio') {\r\n    return (\r\n      <StyledRadioLabel ref={ref} {...(combinedProps as any)}>\r\n        <StyledRadioSvg />\r\n        {props.children}\r\n      </StyledRadioLabel>\r\n    );\r\n  } else if (type === 'checkbox') {\r\n    /**\r\n     * `onLabelSelect` is a workaround for checkbox label `shift + click` bug in Firefox\r\n     * See: https://bugzilla.mozilla.org/show_bug.cgi?id=559506\r\n     */\r\n    const onLabelSelect = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n      const isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\r\n\r\n      if (fieldContext && isFirefox && e.target instanceof Element) {\r\n        const inputId = e.target.getAttribute('for');\r\n\r\n        if (!inputId) return;\r\n\r\n        const input = document.getElementById(inputId) as HTMLInputElement | null;\r\n\r\n        if (input && input.type === 'checkbox') {\r\n          if (e.shiftKey) {\r\n            input.click();\r\n            input.checked = true;\r\n          }\r\n          input.focus();\r\n        }\r\n      }\r\n    };\r\n\r\n    combinedProps = {\r\n      ...combinedProps,\r\n      onClick: composeEventHandlers(combinedProps.onClick, onLabelSelect)\r\n    };\r\n\r\n    return (\r\n      <StyledCheckLabel ref={ref} {...(combinedProps as any)}>\r\n        <StyledCheckSvg />\r\n        <StyledDashSvg />\r\n        {props.children}\r\n      </StyledCheckLabel>\r\n    );\r\n  } else if (type === 'toggle') {\r\n    return (\r\n      <StyledToggleLabel ref={ref} {...(combinedProps as any)}>\r\n        <StyledToggleSvg />\r\n        {props.children}\r\n      </StyledToggleLabel>\r\n    );\r\n  }\r\n\r\n  return <StyledLabel ref={ref} {...(combinedProps as any)} />;\r\n});\r\n\r\nLabel.displayName = 'Label';\r\n\r\nLabel.propTypes = {\r\n  isRegular: PropTypes.bool\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { forwardRef, HTMLAttributes } from 'react';\r\nimport { StyledLegend } from '../../styled';\r\nimport useFieldsetContext from '../../utils/useFieldsetContext';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLLegendElement>\r\n */\r\nexport const Legend = forwardRef<HTMLLegendElement, HTMLAttributes<HTMLLegendElement>>(\r\n  (props, ref) => {\r\n    const fieldsetContext = useFieldsetContext();\r\n\r\n    return <StyledLegend {...props} {...fieldsetContext} ref={ref} />;\r\n  }\r\n);\r\n\r\nLegend.displayName = 'Legend';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport useFieldContext from '../../utils/useFieldContext';\r\nimport useInputContext from '../../utils/useInputContext';\r\nimport {\r\n  StyledMessage,\r\n  StyledCheckMessage,\r\n  StyledRadioMessage,\r\n  StyledToggleMessage,\r\n  StyledMessageIcon\r\n} from '../../styled';\r\nimport { VALIDATION } from '../../utils/validation';\r\n\r\nexport interface IMessageProps extends HTMLAttributes<HTMLDivElement> {\r\n  /** Applies validation state styling */\r\n  validation?: VALIDATION;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Message = React.forwardRef<HTMLDivElement, IMessageProps>(\r\n  ({ validation, children, ...props }, ref) => {\r\n    const fieldContext = useFieldContext();\r\n    const type = useInputContext();\r\n\r\n    let MessageComponent;\r\n\r\n    if (type === 'checkbox') {\r\n      MessageComponent = StyledCheckMessage;\r\n    } else if (type === 'radio') {\r\n      MessageComponent = StyledRadioMessage;\r\n    } else if (type === 'toggle') {\r\n      MessageComponent = StyledToggleMessage;\r\n    } else {\r\n      MessageComponent = StyledMessage;\r\n    }\r\n\r\n    let combinedProps = { validation, ...props };\r\n\r\n    if (fieldContext) {\r\n      combinedProps = fieldContext.getMessageProps(combinedProps);\r\n    }\r\n\r\n    return (\r\n      <MessageComponent ref={ref} {...combinedProps}>\r\n        {validation && <StyledMessageIcon validation={validation} />}\r\n        {children}\r\n      </MessageComponent>\r\n    );\r\n  }\r\n);\r\n\r\nMessage.displayName = 'Message';\r\n\r\nMessage.propTypes = {\r\n  validation: PropTypes.oneOf(['success', 'warning', 'error'])\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, {\r\n  forwardRef,\r\n  RefAttributes,\r\n  HTMLAttributes,\r\n  PropsWithoutRef,\r\n  ForwardRefExoticComponent\r\n} from 'react';\r\nimport { Item } from './components/Item';\r\nimport { StyledFileList } from '../../styled';\r\n\r\ninterface IStaticFileListExport<T, P>\r\n  extends ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>> {\r\n  Item: typeof Item;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLUListElement>\r\n */\r\nexport const FileList = forwardRef<HTMLUListElement, HTMLAttributes<HTMLUListElement>>(\r\n  ({ ...props }, ref) => <StyledFileList {...props} ref={ref} />\r\n) as IStaticFileListExport<HTMLUListElement, HTMLAttributes<HTMLUListElement>>;\r\n\r\nFileList.displayName = 'FileList';\r\n\r\nFileList.Item = Item;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { composeEventHandlers } from '@zendeskgarden/container-utilities';\r\nimport useFileContext from '../../../utils/useFileContext';\r\nimport { StyledFileClose } from '../../../styled';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Close = React.forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  (props, ref) => {\r\n    const fileContext = useFileContext();\r\n    const onMouseDown = composeEventHandlers(\r\n      props.onMouseDown,\r\n      (event: MouseEvent) => event.preventDefault() // prevent parent File focus\r\n    );\r\n\r\n    return (\r\n      <StyledFileClose ref={ref} {...props} onMouseDown={onMouseDown}>\r\n        {fileContext && fileContext.isCompact ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" focusable=\"false\" viewBox=\"0 0 12 12\">\r\n  <path stroke=\"currentColor\" strokeLinecap=\"round\" d=\"M3 9l6-6m0 6L3 3\"/>\r\n</svg>\r\n : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path stroke=\"currentColor\" strokeLinecap=\"round\" d=\"M3 13L13 3m0 10L3 3\"/>\r\n</svg>}\r\n      </StyledFileClose>\r\n    );\r\n  }\r\n);\r\n\r\nClose.displayName = 'File.Close';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { composeEventHandlers } from '@zendeskgarden/container-utilities';\r\nimport useFileContext from '../../../utils/useFileContext';\r\nimport { StyledFileDelete } from '../../../styled';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Delete = React.forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  (props, ref) => {\r\n    const fileContext = useFileContext();\r\n    const onMouseDown = composeEventHandlers(\r\n      props.onMouseDown,\r\n      (event: MouseEvent) => event.preventDefault() // prevent parent File focus\r\n    );\r\n\r\n    return (\r\n      <StyledFileDelete ref={ref} {...props} onMouseDown={onMouseDown}>\r\n        {fileContext && fileContext.isCompact ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" focusable=\"false\" viewBox=\"0 0 12 12\">\r\n  <path fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" d=\"M4.5 2.5V1c0-.3.2-.5.5-.5h2c.3 0 .5.2.5.5v1.5M2 2.5h8m-5.5 7V5m3 4.5V5m-5-.5V11c0 .3.2.5.5.5h6c.3 0 .5-.2.5-.5V4.5\"/>\r\n</svg>\r\n : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" d=\"M6.5 2.5V1c0-.3.2-.5.5-.5h2c.3 0 .5.2.5.5v1.5M3 2.5h10m-6.5 11v-8m3 8v-8m-6-1V15c0 .3.2.5.5.5h8c.3 0 .5-.2.5-.5V4.5\"/>\r\n</svg>}\r\n      </StyledFileDelete>\r\n    );\r\n  }\r\n);\r\n\r\nDelete.displayName = 'File.Delete';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, {\r\n  forwardRef,\r\n  Children,\r\n  RefAttributes,\r\n  HTMLAttributes,\r\n  PropsWithoutRef,\r\n  ForwardRefExoticComponent,\r\n  useMemo\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Close } from './Close';\r\nimport { Delete } from './Delete';\r\nimport { StyledFile, StyledFileIcon } from '../../../styled';\r\nimport { FileContext } from '../../../utils/useFileContext';\r\nimport {\r\n  FILE_TYPE,\r\n  ARRAY_FILE_TYPE,\r\n  VALIDATION_TYPE,\r\n  fileIconsDefault,\r\n  fileIconsCompact\r\n} from '../utils';\r\n\r\nexport interface IFileProps extends HTMLAttributes<HTMLDivElement> {\r\n  /** Applies compact styling */\r\n  isCompact?: boolean;\r\n  /** Determines the icon to display */\r\n  type?: FILE_TYPE;\r\n  /** Applies inset `box-shadow` styling on focus */\r\n  focusInset?: boolean;\r\n  /** Applies validation state styling */\r\n  validation?: VALIDATION_TYPE;\r\n}\r\n\r\ninterface IStaticFileExport<T, P>\r\n  extends ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>> {\r\n  Close: typeof Close;\r\n  Delete: typeof Delete;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const File = forwardRef<HTMLDivElement, IFileProps>(\r\n  ({ children, type, isCompact, focusInset, validation, ...props }, ref) => {\r\n    const fileContextValue = useMemo(() => ({ isCompact }), [isCompact]);\r\n    const validationType = validation || type;\r\n\r\n    return (\r\n      <FileContext.Provider value={fileContextValue}>\r\n        <StyledFile\r\n          {...props}\r\n          isCompact={isCompact}\r\n          focusInset={focusInset}\r\n          validation={validation}\r\n          ref={ref}\r\n        >\r\n          {validationType && (\r\n            <StyledFileIcon isCompact={isCompact}>\r\n              {isCompact ? fileIconsCompact[validationType] : fileIconsDefault[validationType]}\r\n            </StyledFileIcon>\r\n          )}\r\n          {Children.map(children, child =>\r\n            typeof child === 'string' ? <span>{child}</span> : child\r\n          )}\r\n        </StyledFile>\r\n      </FileContext.Provider>\r\n    );\r\n  }\r\n) as IStaticFileExport<HTMLDivElement, IFileProps>;\r\n\r\nFile.displayName = 'File';\r\n\r\nFile.Close = Close;\r\n\r\nFile.Delete = Delete;\r\n\r\nFile.propTypes = {\r\n  focusInset: PropTypes.bool,\r\n  isCompact: PropTypes.bool,\r\n  type: PropTypes.oneOf(ARRAY_FILE_TYPE),\r\n  validation: PropTypes.oneOf(['success', 'error'])\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { forwardRef, LiHTMLAttributes } from 'react';\r\nimport { StyledFileListItem } from '../../../styled';\r\n\r\n/**\r\n * @extends LiHTMLAttributes<HTMLLIElement>\r\n */\r\nexport const Item = forwardRef<HTMLLIElement, LiHTMLAttributes<HTMLLIElement>>(\r\n  ({ ...props }, ref) => <StyledFileListItem {...props} ref={ref} />\r\n);\r\n\r\nItem.displayName = 'FileList.Item';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nexport enum FileType {\r\n  pdf = 'pdf',\r\n  zip = 'zip',\r\n  image = 'image',\r\n  document = 'document',\r\n  spreadsheet = 'spreadsheet',\r\n  presentation = 'presentation',\r\n  generic = 'generic'\r\n}\r\n\r\nexport enum ValidationType {\r\n  success = 'success',\r\n  error = 'error'\r\n}\r\n\r\nexport type FILE_TYPE = keyof typeof FileType;\r\n\r\nexport type VALIDATION_TYPE = keyof typeof ValidationType;\r\n\r\nexport const ARRAY_FILE_TYPE: FILE_TYPE[] = [...Object.values(FileType)];\r\n\r\nexport const fileIconsDefault: Record<FILE_TYPE | VALIDATION_TYPE, React.ReactNode> = {\r\n  pdf: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" d=\"M14.5 4.2V15a.5.5 0 01-.5.5H2a.5.5 0 01-.5-.5V1A.5.5 0 012 .5h8.85a.5.5 0 01.36.15l3.15 3.2a.5.5 0 01.14.35zm-10 8.3h7m-7-2h7m-1-10V4a.5.5 0 00.5.5h3.5\"/>\r\n  <rect width=\"8\" height=\"2\" x=\"4\" y=\"7\" fill=\"currentColor\" rx=\".5\" ry=\".5\"/>\r\n</svg>,\r\n  zip: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" d=\"M6.5.5v11M5 2.5h1.5m0 1H8m-3 1h1.5m0 1H8m-3 1h1.5m0 1H8m-3 1h1.5m0 1H8m-3 1h1.5m8-6.3V15c0 .28-.22.5-.5.5H2c-.28 0-.5-.22-.5-.5V1c0-.28.22-.5.5-.5h8.85c.13 0 .26.05.36.15l3.15 3.2c.09.1.14.22.14.35zm-4-3.7V4c0 .28.22.5.5.5h3.5\"/>\r\n</svg>,\r\n  image: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" d=\"M14.5 4.2V15c0 .28-.22.5-.5.5H2c-.28 0-.5-.22-.5-.5V1c0-.28.22-.5.5-.5h8.85c.13 0 .26.05.36.15l3.15 3.2c.09.1.14.22.14.35zm-4-3.7V4c0 .28.22.5.5.5h3.5m-11 9l2.65-2.65c.2-.2.51-.2.71 0l1.79 1.79c.2.2.51.2.71 0l.79-.79c.2-.2.51-.2.71 0l1.65 1.65\"/>\r\n  <circle cx=\"10.5\" cy=\"8.5\" r=\"1.5\" fill=\"currentColor\"/>\r\n</svg>,\r\n  document: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" d=\"M4.5 7.5h7m-7 1.97h7m-7 2h7m3-7.27V15c0 .28-.22.5-.5.5H2c-.28 0-.5-.22-.5-.5V1c0-.28.22-.5.5-.5h8.85c.13 0 .26.05.36.15l3.15 3.2c.09.1.14.22.14.35zm-4-3.7V4c0 .28.22.5.5.5h3.5\"/>\r\n</svg>,\r\n  spreadsheet: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" d=\"M4.5 7.5h2m-2 2h2m-2 2h2m2-4h3m-3 2h3m-3 2h3m3-7.3V15c0 .28-.22.5-.5.5H2c-.28 0-.5-.22-.5-.5V1c0-.28.22-.5.5-.5h8.85c.13 0 .26.05.36.15l3.15 3.2c.09.1.14.22.14.35zm-4-3.7V4c0 .28.22.5.5.5h3.5\"/>\r\n</svg>,\r\n  presentation: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"none\" stroke=\"currentColor\" d=\"M14.5 4.2V15c0 .28-.22.5-.5.5H2c-.28 0-.5-.22-.5-.5V1c0-.28.22-.5.5-.5h8.85c.13 0 .26.05.36.15l3.15 3.2c.09.1.14.22.14.35zm-4-3.7V4c0 .28.22.5.5.5h3.5M7 9.5h4c.28 0 .5.22.5.5v3c0 .28-.22.5-.5.5H7c-.28 0-.5-.22-.5-.5v-3c0-.28.22-.5.5-.5zm-.5 2H5c-.28 0-.5-.22-.5-.5V8c0-.28.22-.5.5-.5h4c.28 0 .5.22.5.5v1.5\"/>\r\n</svg>,\r\n  generic: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"none\" stroke=\"currentColor\" d=\"M14.5 4.2V15c0 .28-.22.5-.5.5H2c-.28 0-.5-.22-.5-.5V1c0-.28.22-.5.5-.5h8.85c.13 0 .26.05.36.15l3.15 3.2c.09.1.14.22.14.35zm-4-3.7V4c0 .28.22.5.5.5h3.5\"/>\r\n</svg>,\r\n  success: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <g fill=\"none\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4 9l2.5 2.5 5-5\"/>\r\n    <circle cx=\"7.5\" cy=\"8.5\" r=\"7\"/>\r\n  </g>\r\n</svg>,\r\n  error: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" d=\"M14.5 4.205V15a.5.5 0 01-.5.5H2a.5.5 0 01-.5-.5V1A.5.5 0 012 .5h8.853a.5.5 0 01.356.15l3.148 3.204a.5.5 0 01.143.35zM10.5.5V4a.5.5 0 00.5.5h3.5m-9 8l5-5m0 5l-5-5\"/>\r\n</svg>\r\n};\r\n\r\nexport const fileIconsCompact: Record<FILE_TYPE | VALIDATION_TYPE, React.ReactNode> = {\r\n  pdf: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" d=\"M14.5 4.2V15a.5.5 0 01-.5.5H2a.5.5 0 01-.5-.5V1A.5.5 0 012 .5h8.85a.5.5 0 01.36.15l3.15 3.2a.5.5 0 01.14.35zm-10 8.3h7m-7-2h7m-1-10V4a.5.5 0 00.5.5h3.5\"/>\r\n  <rect width=\"8\" height=\"2\" x=\"4\" y=\"7\" fill=\"currentColor\" rx=\".5\" ry=\".5\"/>\r\n</svg>,\r\n  zip: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" d=\"M6.5.5v11M5 2.5h1.5m0 1H8m-3 1h1.5m0 1H8m-3 1h1.5m0 1H8m-3 1h1.5m0 1H8m-3 1h1.5m8-6.3V15c0 .28-.22.5-.5.5H2c-.28 0-.5-.22-.5-.5V1c0-.28.22-.5.5-.5h8.85c.13 0 .26.05.36.15l3.15 3.2c.09.1.14.22.14.35zm-4-3.7V4c0 .28.22.5.5.5h3.5\"/>\r\n</svg>,\r\n  image: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" d=\"M14.5 4.2V15c0 .28-.22.5-.5.5H2c-.28 0-.5-.22-.5-.5V1c0-.28.22-.5.5-.5h8.85c.13 0 .26.05.36.15l3.15 3.2c.09.1.14.22.14.35zm-4-3.7V4c0 .28.22.5.5.5h3.5m-11 9l2.65-2.65c.2-.2.51-.2.71 0l1.79 1.79c.2.2.51.2.71 0l.79-.79c.2-.2.51-.2.71 0l1.65 1.65\"/>\r\n  <circle cx=\"10.5\" cy=\"8.5\" r=\"1.5\" fill=\"currentColor\"/>\r\n</svg>,\r\n  document: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" d=\"M4.5 7.5h7m-7 1.97h7m-7 2h7m3-7.27V15c0 .28-.22.5-.5.5H2c-.28 0-.5-.22-.5-.5V1c0-.28.22-.5.5-.5h8.85c.13 0 .26.05.36.15l3.15 3.2c.09.1.14.22.14.35zm-4-3.7V4c0 .28.22.5.5.5h3.5\"/>\r\n</svg>,\r\n  spreadsheet: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" d=\"M4.5 7.5h2m-2 2h2m-2 2h2m2-4h3m-3 2h3m-3 2h3m3-7.3V15c0 .28-.22.5-.5.5H2c-.28 0-.5-.22-.5-.5V1c0-.28.22-.5.5-.5h8.85c.13 0 .26.05.36.15l3.15 3.2c.09.1.14.22.14.35zm-4-3.7V4c0 .28.22.5.5.5h3.5\"/>\r\n</svg>,\r\n  presentation: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"none\" stroke=\"currentColor\" d=\"M14.5 4.2V15c0 .28-.22.5-.5.5H2c-.28 0-.5-.22-.5-.5V1c0-.28.22-.5.5-.5h8.85c.13 0 .26.05.36.15l3.15 3.2c.09.1.14.22.14.35zm-4-3.7V4c0 .28.22.5.5.5h3.5M7 9.5h4c.28 0 .5.22.5.5v3c0 .28-.22.5-.5.5H7c-.28 0-.5-.22-.5-.5v-3c0-.28.22-.5.5-.5zm-.5 2H5c-.28 0-.5-.22-.5-.5V8c0-.28.22-.5.5-.5h4c.28 0 .5.22.5.5v1.5\"/>\r\n</svg>,\r\n  generic: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"none\" stroke=\"currentColor\" d=\"M14.5 4.2V15c0 .28-.22.5-.5.5H2c-.28 0-.5-.22-.5-.5V1c0-.28.22-.5.5-.5h8.85c.13 0 .26.05.36.15l3.15 3.2c.09.1.14.22.14.35zm-4-3.7V4c0 .28.22.5.5.5h3.5\"/>\r\n</svg>,\r\n  success: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <g fill=\"none\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4 9l2.5 2.5 5-5\"/>\r\n    <circle cx=\"7.5\" cy=\"8.5\" r=\"7\"/>\r\n  </g>\r\n</svg>,\r\n  error: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" d=\"M14.5 4.205V15a.5.5 0 01-.5.5H2a.5.5 0 01-.5-.5V1A.5.5 0 012 .5h8.853a.5.5 0 01.356.15l3.148 3.204a.5.5 0 01.143.35zM10.5.5V4a.5.5 0 00.5.5h3.5m-9 8l5-5m0 5l-5-5\"/>\r\n</svg>\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { InputGroupContext } from '../../utils/useInputGroupContext';\r\nimport { StyledInputGroup } from '../../styled';\r\n\r\nexport interface IInputGroupProps extends HTMLAttributes<HTMLDivElement> {\r\n  /** Applies compact styling */\r\n  isCompact?: boolean;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const InputGroup = React.forwardRef<HTMLDivElement, IInputGroupProps>(\r\n  ({ isCompact, ...props }, ref) => {\r\n    const contextValue = useMemo(() => ({ isCompact }), [isCompact]);\r\n\r\n    return (\r\n      <InputGroupContext.Provider value={contextValue}>\r\n        <StyledInputGroup ref={ref} isCompact={isCompact} {...props} />\r\n      </InputGroupContext.Provider>\r\n    );\r\n  }\r\n);\r\n\r\nInputGroup.displayName = 'InputGroup';\r\n\r\nInputGroup.propTypes = {\r\n  isCompact: PropTypes.bool\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, {\r\n  HTMLAttributes,\r\n  ChangeEventHandler,\r\n  useCallback,\r\n  useState,\r\n  ForwardRefExoticComponent,\r\n  PropsWithoutRef,\r\n  RefAttributes,\r\n  useMemo\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getControlledValue } from '@zendeskgarden/container-utilities';\r\nimport { TilesContext } from '../../utils/useTilesContext';\r\nimport { Tile } from './components/Tile';\r\nimport { Description } from './components/Description';\r\nimport { Icon } from './components/Icon';\r\nimport { Label } from './components/Label';\r\n\r\nexport interface ITilesProps extends HTMLAttributes<HTMLDivElement> {\r\n  /** Sets the value of the selected radio button */\r\n  value?: string;\r\n  /** Handles radio selection */\r\n  onChange?: ChangeEventHandler<HTMLInputElement>;\r\n  /** Sets the name used to reference the value of the control */\r\n  name: string;\r\n  /** Centers tile content */\r\n  isCentered?: boolean;\r\n}\r\n\r\ninterface IStaticTilesExport<T, P>\r\n  extends ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>> {\r\n  Tile: typeof Tile;\r\n  Description: typeof Description;\r\n  Icon: typeof Icon;\r\n  Label: typeof Label;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Tiles = React.forwardRef<HTMLDivElement, ITilesProps>(\r\n  ({ onChange, value: controlledValue, name, isCentered, ...props }, ref) => {\r\n    const [value, setValue] = useState(controlledValue);\r\n\r\n    const handleOnChange = useCallback<ChangeEventHandler<HTMLInputElement>>(\r\n      (...args) => {\r\n        setValue(args[0].target.value);\r\n\r\n        if (onChange) {\r\n          onChange(...args);\r\n        }\r\n      },\r\n      [onChange]\r\n    );\r\n\r\n    const selectedValue = getControlledValue(controlledValue, value);\r\n    const tileContext = useMemo(\r\n      () => ({ onChange: handleOnChange, value: selectedValue, name, isCentered }),\r\n      [handleOnChange, selectedValue, name, isCentered]\r\n    );\r\n\r\n    return (\r\n      <TilesContext.Provider value={tileContext}>\r\n        <div ref={ref} role=\"radiogroup\" {...props} />\r\n      </TilesContext.Provider>\r\n    );\r\n  }\r\n) as IStaticTilesExport<HTMLDivElement, ITilesProps>;\r\n/* eslint-enable react/display-name */\r\n\r\nTiles.displayName = 'Tiles';\r\n\r\nTiles.Tile = Tile;\r\nTiles.Icon = Icon;\r\nTiles.Label = Label;\r\nTiles.Description = Description;\r\n\r\nTiles.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  name: PropTypes.string.isRequired,\r\n  isCentered: PropTypes.bool\r\n};\r\n\r\nTiles.defaultProps = {\r\n  isCentered: true\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { StyledTileDescription } from '../../../styled';\r\nimport { useTilesContext } from '../../../utils/useTilesContext';\r\n\r\n/**\r\n * Accepts all `<span>` attributes\r\n */\r\nexport const Description = React.forwardRef<HTMLSpanElement, HTMLAttributes<HTMLSpanElement>>(\r\n  (props, ref) => {\r\n    const tilesContext = useTilesContext();\r\n\r\n    return (\r\n      <StyledTileDescription\r\n        ref={ref}\r\n        isCentered={tilesContext && tilesContext.isCentered}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nDescription.displayName = 'TileDescription';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { useTilesContext } from '../../../utils/useTilesContext';\r\nimport { StyledTileIcon } from '../../../styled';\r\n\r\n/**\r\n * Accepts all `<span>` attributes\r\n */\r\nexport const Icon = React.forwardRef<HTMLSpanElement, HTMLAttributes<HTMLSpanElement>>(\r\n  (props, ref) => {\r\n    const tileContext = useTilesContext();\r\n\r\n    return (\r\n      <StyledTileIcon ref={ref} isCentered={tileContext && tileContext.isCentered} {...props} />\r\n    );\r\n  }\r\n);\r\n\r\nIcon.displayName = 'TileIcon';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes, useState, useEffect, useRef } from 'react';\r\nimport mergeRefs from 'react-merge-refs';\r\nimport { StyledTileLabel } from '../../../styled';\r\nimport { useTilesContext } from '../../../utils/useTilesContext';\r\n\r\n/**\r\n * Accepts all `<span>` attributes\r\n */\r\nexport const Label = React.forwardRef<HTMLSpanElement, HTMLAttributes<HTMLSpanElement>>(\r\n  (props, forwardedRef) => {\r\n    const [title, setTitle] = useState<string | undefined>('');\r\n    const ref = useRef<HTMLSpanElement>();\r\n    const tilesContext = useTilesContext();\r\n\r\n    useEffect(() => {\r\n      if (ref.current) {\r\n        setTitle(ref.current.textContent || undefined);\r\n      }\r\n    }, [ref]);\r\n\r\n    return (\r\n      <StyledTileLabel\r\n        ref={mergeRefs([ref, forwardedRef])}\r\n        title={title}\r\n        isCentered={tilesContext && tilesContext.isCentered}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nLabel.displayName = 'TileLabel';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTilesContext } from '../../../utils/useTilesContext';\r\nimport { StyledTile, StyledTileInput } from '../../../styled';\r\n\r\ninterface ITileProps {\r\n  /** Sets the value of the input */\r\n  value?: string;\r\n  /** Indicates that the element is not interactive */\r\n  disabled?: boolean;\r\n}\r\n\r\n/**\r\n * Accepts all `<label>` attributes\r\n */\r\nexport const Tile = React.forwardRef<\r\n  HTMLLabelElement,\r\n  ITileProps & HTMLAttributes<HTMLLabelElement>\r\n>(({ children, value, disabled, ...props }, ref) => {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const tilesContext = useTilesContext();\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  let inputProps;\r\n\r\n  if (tilesContext) {\r\n    inputProps = {\r\n      name: tilesContext.name,\r\n      checked: tilesContext.value === value,\r\n      onChange: tilesContext.onChange\r\n    };\r\n  }\r\n\r\n  return (\r\n    <StyledTile\r\n      ref={ref}\r\n      aria-disabled={disabled}\r\n      isDisabled={disabled}\r\n      isFocused={isFocused}\r\n      data-test-is-focused={isFocused}\r\n      isSelected={tilesContext && tilesContext.value === value}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <StyledTileInput\r\n        {...inputProps}\r\n        disabled={disabled}\r\n        value={value}\r\n        onBlur={() => setIsFocused(false)}\r\n        onFocus={e => {\r\n          e.persist();\r\n\r\n          /**\r\n           * The focus-visible attribute provided by `react-theming` is\r\n           * unable to persist to the `<label>`. This manually applies focus\r\n           * after the data attribute has been set.\r\n           */\r\n          setTimeout(() => {\r\n            if (e.target.getAttribute('data-garden-focus-visible')) {\r\n              setIsFocused(true);\r\n            }\r\n          }, 1);\r\n        }}\r\n        type=\"radio\"\r\n        ref={inputRef}\r\n      />\r\n    </StyledTile>\r\n  );\r\n});\r\n\r\nTile.displayName = 'Tile';\r\n\r\nTile.propTypes = {\r\n  value: PropTypes.string,\r\n  disabled: PropTypes.bool\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledRadioHint } from '../radio/StyledRadioHint';\r\n\r\nconst COMPONENT_ID = 'forms.checkbox_hint';\r\n\r\nexport const StyledCheckHint = styled(StyledRadioHint).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledCheckHint.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, DefaultTheme, ThemeProps } from 'styled-components';\r\nimport { getColor, retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledRadioInput } from '../radio/StyledRadioInput';\r\nimport { StyledCheckLabel } from './StyledCheckLabel';\r\n\r\nconst COMPONENT_ID = 'forms.checkbox';\r\n\r\nconst colorStyles = (props: ThemeProps<DefaultTheme>) => {\r\n  const SHADE = 600;\r\n\r\n  const indeterminateBorderColor = getColor('primaryHue', SHADE, props.theme);\r\n  const indeterminateBackgroundColor = indeterminateBorderColor;\r\n  const indeterminateActiveBorderColor = getColor('primaryHue', SHADE + 100, props.theme);\r\n  const indeterminateActiveBackgroundColor = indeterminateActiveBorderColor;\r\n  const indeterminateDisabledBackgroundColor = getColor('neutralHue', SHADE - 400, props.theme);\r\n\r\n  return css`\r\n    &:indeterminate ~ ${StyledCheckLabel}::before {\r\n      border-color: ${indeterminateBorderColor};\r\n      background-color: ${indeterminateBackgroundColor};\r\n    }\r\n\r\n    /* stylelint-disable selector-max-specificity */\r\n    &:enabled:indeterminate ~ ${StyledCheckLabel}:active::before {\r\n      border-color: ${indeterminateActiveBorderColor};\r\n      background-color: ${indeterminateActiveBackgroundColor};\r\n    }\r\n\r\n    &:disabled:indeterminate ~ ${StyledCheckLabel}::before {\r\n      border-color: transparent;\r\n      background-color: ${indeterminateDisabledBackgroundColor};\r\n    }\r\n    /* stylelint-enable selector-max-specificity */\r\n  `;\r\n};\r\n\r\nexport const StyledCheckInput = styled(StyledRadioInput).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  type: 'checkbox' as string\r\n})`\r\n  /* stylelint-disable-next-line */\r\n  & ~ ${StyledCheckLabel}::before {\r\n    border-radius: ${props => props.theme.borderRadii.md};\r\n  }\r\n\r\n  ${props => colorStyles(props)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledCheckInput.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledRadioLabel } from '../radio/StyledRadioLabel';\r\n\r\nconst COMPONENT_ID = 'forms.checkbox_label';\r\n\r\nexport const StyledCheckLabel = styled(StyledRadioLabel).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledCheckLabel.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledRadioMessage } from '../radio/StyledRadioMessage';\r\n\r\nconst COMPONENT_ID = 'forms.checkbox_message';\r\n\r\nexport const StyledCheckMessage = styled(StyledRadioMessage).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledCheckMessage.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledCheckInput } from './StyledCheckInput';\r\nimport { StyledCheckLabel } from './StyledCheckLabel';\r\nimport { CheckIcon } from './check-sm';\r\n\r\nconst COMPONENT_ID = 'forms.check_svg';\r\n\r\nexport const StyledCheckSvg = styled(CheckIcon).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  transition: opacity 0.25 ease-in-out;\r\n  opacity: 0;\r\n  pointer-events: none;\r\n\r\n  ${StyledCheckInput}:checked ~ ${StyledCheckLabel} > & {\r\n    opacity: 1;\r\n  }\r\n\r\n  ${StyledCheckInput}:indeterminate ~ ${StyledCheckLabel} > & {\r\n    opacity: 0;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledCheckSvg.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledCheckInput } from './StyledCheckInput';\r\nimport { StyledCheckLabel } from './StyledCheckLabel';\r\nimport { DashIcon } from './dash-fill';\r\n\r\nconst COMPONENT_ID = 'forms.dash_svg';\r\nexport const StyledDashSvg = styled(DashIcon).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  transition: opacity 0.25 ease-in-out;\r\n  opacity: 0;\r\n  pointer-events: none;\r\n\r\n  ${StyledCheckInput}:indeterminate ~ ${StyledCheckLabel} > & {\r\n    opacity: 1;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledDashSvg.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nexport const CheckIcon = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 9l3 3 7-7\"/>\r\n</svg>\r\n\r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nexport const DashIcon = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path stroke=\"currentColor\" strokeLinecap=\"round\" strokeWidth=\"2\" d=\"M3 8h10\"/>\r\n</svg>\r\n\r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'forms.field';\r\n\r\n/**\r\n * 1. Set positioning context for absolute contents (Checkbox, Radio, Toggle).\r\n * 2. Resets for <fieldset>.\r\n * 3. Normalize block / line-height treatment for consistent height\r\n */\r\nexport const StyledField = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  position: relative; /* [1] */\r\n  direction: ${props => props.theme.rtl && 'rtl'};\r\n  margin: 0; /* [2] */\r\n  border: 0; /* [2] */\r\n  padding: 0; /* [2] */\r\n  font-size: 0; /* [3] */\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledField.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledField } from './StyledField';\r\n\r\nconst COMPONENT_ID = 'forms.fieldset';\r\n\r\ninterface IStyledFieldsetProps {\r\n  isCompact?: boolean;\r\n}\r\n\r\nexport const StyledFieldset = styled(StyledField as 'fieldset').attrs({\r\n  as: 'fieldset',\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledFieldsetProps>`\r\n  ${StyledField} {\r\n    margin-top: ${props => props.theme.space.base * (props.isCompact ? 1 : 2)}px;\r\n  }\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledFieldset.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport {\r\n  getColor,\r\n  getLineHeight,\r\n  retrieveComponentStyles,\r\n  DEFAULT_THEME\r\n} from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'forms.input_hint';\r\n\r\nexport const StyledHint = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  direction: ${props => props.theme.rtl && 'rtl'};\r\n  display: block;\r\n  vertical-align: middle; /* support hint inline with input layout */\r\n  line-height: ${props => getLineHeight(props.theme.space.base * 5, props.theme.fontSizes.md)};\r\n  color: ${props => getColor('neutralHue', 600, props.theme)};\r\n  font-size: ${props => props.theme.fontSizes.md};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledHint.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { hideVisually } from 'polished';\r\nimport {\r\n  retrieveComponentStyles,\r\n  DEFAULT_THEME,\r\n  getLineHeight\r\n} from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'forms.input_label';\r\n\r\nexport interface IStyledLabelProps {\r\n  isRegular?: boolean;\r\n  isRadio?: boolean;\r\n}\r\n\r\n/**\r\n * 1. CSS Bedrock override.\r\n */\r\nexport const StyledLabel = styled.label.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledLabelProps>`\r\n  direction: ${props => props.theme.rtl && 'rtl'};\r\n  vertical-align: middle; /* support label inline with input layout */\r\n  line-height: ${props => getLineHeight(props.theme.space.base * 5, props.theme.fontSizes.md)};\r\n  color: ${props => props.theme.colors.foreground};\r\n  font-size: ${props => props.theme.fontSizes.md};\r\n  font-weight: ${props =>\r\n    props.isRegular ? props.theme.fontWeights.regular : props.theme.fontWeights.semibold};\r\n\r\n  &[hidden] {\r\n    display: ${props => (props.isRadio ? 'inline-block' : 'inline')}; /* [1] */\r\n    vertical-align: ${props => props.isRadio && 'top'};\r\n    text-indent: ${props => props.isRadio && '-100%'};\r\n    font-size: ${props => props.isRadio && '0'};\r\n\r\n    ${props => !props.isRadio && hideVisually()};\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledLabel.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledLabel } from './StyledLabel';\r\n\r\nconst COMPONENT_ID = 'forms.fieldset_legend';\r\n\r\ninterface IStyledLegend {\r\n  isCompact?: boolean;\r\n}\r\n\r\n/**\r\n * 1. Reset for <legend>.\r\n */\r\nexport const StyledLegend = styled(StyledLabel as 'legend').attrs({\r\n  as: 'legend',\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledLegend>`\r\n  padding: 0; /* [1] */\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledLegend.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, DefaultTheme, ThemeProps } from 'styled-components';\r\nimport { math } from 'polished';\r\nimport {\r\n  retrieveComponentStyles,\r\n  DEFAULT_THEME,\r\n  getColor,\r\n  getLineHeight\r\n} from '@zendeskgarden/react-theming';\r\nimport { VALIDATION } from '../../utils/validation';\r\nimport { StyledMessageIcon } from './StyledMessageIcon';\r\nimport { StyledLabel } from './StyledLabel';\r\n\r\nexport interface IStyledMessageProps {\r\n  validation?: VALIDATION;\r\n}\r\n\r\nconst validationStyles = (props: IStyledMessageProps & ThemeProps<DefaultTheme>) => {\r\n  const rtl = props.theme.rtl;\r\n  const padding = math(`${props.theme.space.base} * 2px + ${props.theme.iconSizes.md}`);\r\n  let color;\r\n\r\n  if (props.validation === 'error') {\r\n    color = getColor('dangerHue', 600, props.theme);\r\n  } else if (props.validation === 'success') {\r\n    color = getColor('successHue', 600, props.theme);\r\n  } else if (props.validation === 'warning') {\r\n    color = getColor('warningHue', 700, props.theme);\r\n  } else {\r\n    color = getColor('neutralHue', 700, props.theme);\r\n  }\r\n\r\n  return css`\r\n    /* stylelint-disable-next-line property-no-unknown */\r\n    padding-${rtl ? 'right' : 'left'}: ${props.validation && padding};\r\n    color: ${color};\r\n  `;\r\n};\r\n\r\nconst COMPONENT_ID = 'forms.input_message';\r\n\r\nexport const StyledMessage = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledMessageProps>`\r\n  direction: ${props => props.theme.rtl && 'rtl'};\r\n  display: inline-block;\r\n  position: relative;\r\n  vertical-align: middle; /* support message inline with input layout */\r\n  line-height: ${props => getLineHeight(props.theme.iconSizes.md, props.theme.fontSizes.sm)};\r\n  font-size: ${props => props.theme.fontSizes.sm};\r\n\r\n  ${props => validationStyles(props)};\r\n\r\n  & ${StyledMessageIcon} {\r\n    position: absolute;\r\n    top: -1px;\r\n    ${props => (props.theme.rtl ? 'right' : 'left')}: 0;\r\n  }\r\n\r\n  /* stylelint-disable-next-line */\r\n  ${StyledLabel}:not([hidden]) + & {\r\n    display: block;\r\n    margin-top: ${props => math(`${props.theme.space.base} * 1px`)};\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledMessage.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport React, { Children } from 'react';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport AlertError from '@zendeskgarden/svg-icons/src/16/alert-error-stroke.svg';\r\nimport AlertWarning from '@zendeskgarden/svg-icons/src/16/alert-warning-stroke.svg';\r\nimport CheckCircle from '@zendeskgarden/svg-icons/src/16/check-circle-stroke.svg';\r\nimport { VALIDATION } from '../../utils/validation';\r\n\r\nconst MessageIcon: React.FC<IStyledMessageIconProps> = ({ children, validation, ...props }) => {\r\n  let retVal;\r\n\r\n  if (validation === 'error') {\r\n    retVal = React.createElement(AlertError, props);\r\n  } else if (validation === 'success') {\r\n    retVal = React.createElement(CheckCircle, props);\r\n  } else if (validation === 'warning') {\r\n    retVal = React.createElement(AlertWarning, props);\r\n  } else {\r\n    retVal = React.cloneElement(Children.only(children as any));\r\n  }\r\n\r\n  return retVal;\r\n};\r\n\r\nconst COMPONENT_ID = 'forms.input_message_icon';\r\n\r\ninterface IStyledMessageIconProps {\r\n  validation?: VALIDATION;\r\n}\r\n\r\nexport const StyledMessageIcon = styled(MessageIcon).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledMessageIconProps>`\r\n  width: ${props => props.theme.iconSizes.md};\r\n  height: ${props => props.theme.iconSizes.md};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledMessageIcon.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { rgba } from 'polished';\r\nimport {\r\n  retrieveComponentStyles,\r\n  DEFAULT_THEME,\r\n  getColor,\r\n  getLineHeight\r\n} from '@zendeskgarden/react-theming';\r\nimport { StyledFileClose } from './StyledFileClose';\r\n\r\nconst COMPONENT_ID = 'forms.file';\r\n\r\nconst colorStyles = (props: IStyledFileProps & ThemeProps<DefaultTheme>) => {\r\n  let borderColor;\r\n  let focusBorderColor;\r\n  let foregroundColor;\r\n\r\n  if (props.validation === 'success') {\r\n    borderColor = getColor('successHue', 600, props.theme);\r\n    focusBorderColor = borderColor;\r\n    foregroundColor = borderColor;\r\n  } else if (props.validation === 'error') {\r\n    borderColor = getColor('dangerHue', 600, props.theme);\r\n    focusBorderColor = borderColor;\r\n    foregroundColor = borderColor;\r\n  } else {\r\n    borderColor = getColor('neutralHue', 300, props.theme);\r\n    focusBorderColor = getColor('primaryHue', 600, props.theme);\r\n    foregroundColor = props.theme.colors.foreground;\r\n  }\r\n\r\n  const boxShadow = `\r\n    ${props.focusInset ? 'inset' : ''}\r\n    ${props.theme.shadows.md(rgba(focusBorderColor!, 0.35))}`;\r\n\r\n  return `\r\n    border-color: ${borderColor};\r\n    color: ${foregroundColor};\r\n\r\n    &:focus {\r\n      box-shadow: ${boxShadow};\r\n      border-color: ${focusBorderColor};\r\n    }\r\n  `;\r\n};\r\n\r\nconst sizeStyles = (props: IStyledFileProps & ThemeProps<DefaultTheme>) => {\r\n  const size = `${props.theme.space.base * (props.isCompact ? 7 : 10)}px`;\r\n  const spacing = `${props.theme.space.base * (props.isCompact ? 2 : 3)}px`;\r\n  const fontSize = props.theme.fontSizes.md;\r\n  const lineHeight = getLineHeight(props.theme.space.base * 5, fontSize);\r\n\r\n  return `\r\n    box-sizing: border-box;\r\n    border: ${props.theme.borders.sm};\r\n    border-radius: ${props.theme.borderRadii.md};\r\n    padding: 0 ${spacing};\r\n    height: ${size};\r\n    line-height: ${lineHeight};\r\n    font-size: ${fontSize};\r\n\r\n    & > span {\r\n      width: 100%;\r\n    }\r\n\r\n    & > ${StyledFileClose} {\r\n      width: ${size};\r\n      height: ${size};\r\n      margin-${props.theme.rtl ? 'left' : 'right'}: -${spacing};\r\n    }\r\n  `;\r\n};\r\n\r\ninterface IStyledFileProps {\r\n  isCompact?: boolean;\r\n  focusInset?: boolean;\r\n  validation?: 'success' | 'error';\r\n}\r\n\r\nexport const StyledFile = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledFileProps>`\r\n  display: flex;\r\n  position: relative;\r\n  flex-wrap: nowrap;\r\n  align-items: center;\r\n\r\n  ${sizeStyles};\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  ${colorStyles};\r\n\r\n  & > span {\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n  }\r\n\r\n  & > [role='progressbar'] {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    transition: opacity 0.2s ease-in-out;\r\n    margin: 0;\r\n    border-top-left-radius: 0;\r\n    border-top-right-radius: 0;\r\n    width: 100%;\r\n\r\n    & > div {\r\n      /* stylelint-disable-next-line property-no-unknown, property-case */\r\n      border-top-${props => (props.theme.rtl ? 'right' : 'left')}-radius: 0;\r\n    }\r\n  }\r\n\r\n  & > [role='progressbar'][aria-valuenow='0'],\r\n  & > [role='progressbar'][aria-valuenow='100'] {\r\n    opacity: 0;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledFile.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'forms.file.close';\r\n\r\nexport const StyledFileClose = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: opacity 0.25s ease-in-out;\r\n  opacity: 0.8;\r\n  cursor: pointer;\r\n  color: ${props => props.theme.colors.foreground};\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledFileClose.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME, getColor } from '@zendeskgarden/react-theming';\r\nimport { StyledFileClose } from './StyledFileClose';\r\n\r\nconst COMPONENT_ID = 'forms.file.delete';\r\n\r\nexport const StyledFileDelete = styled(StyledFileClose).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  color: ${props => getColor('dangerHue', 600, props.theme)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledFileDelete.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { Children } from 'react';\r\nimport styled from 'styled-components';\r\nimport { DEFAULT_THEME, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'forms.file.icon';\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nexport const StyledFileIcon = styled(({ children, isCompact, theme, ...props }) =>\r\n  React.cloneElement(Children.only(children), props)\r\n).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  flex-shrink: 0;\r\n  width: ${props => (props.isCompact ? props.theme.iconSizes.sm : props.theme.iconSizes.md)};\r\n  /* stylelint-disable-next-line property-no-unknown */\r\n  margin-${props => (props.theme.rtl ? 'left' : 'right')}: ${props => props.theme.space.base * 2}px;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledFileIcon.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'forms.file_list';\r\n\r\n/**\r\n * 1. <ul> reset.\r\n */\r\nexport const StyledFileList = styled.ul.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  margin: 0; /* [1] */\r\n  padding: 0; /* [1] */\r\n  list-style: none; /* [1] */\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledFileList.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledFileList } from './StyledFileList';\r\nimport { StyledFileUpload } from '../file-upload/StyledFileUpload';\r\n\r\nconst COMPONENT_ID = 'forms.file_list.item';\r\n\r\nexport const StyledFileListItem = styled.li.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  &:not(:first-child),\r\n  ${StyledFileUpload} ~ ${StyledFileList} > &:first-child {\r\n    margin-top: ${props => props.theme.space.base * 2}px;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledFileListItem.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { math, rgba } from 'polished';\r\nimport {\r\n  retrieveComponentStyles,\r\n  DEFAULT_THEME,\r\n  getColor,\r\n  getLineHeight\r\n} from '@zendeskgarden/react-theming';\r\nimport { StyledLabel } from '../common/StyledLabel';\r\nimport { StyledHint } from '../common/StyledHint';\r\nimport { StyledMessage } from '../common/StyledMessage';\r\n\r\nconst COMPONENT_ID = 'forms.file_upload';\r\n\r\ninterface IStyledFileUploadProps {\r\n  isDragging?: boolean;\r\n  isCompact?: boolean;\r\n}\r\n\r\nconst colorStyles = (props: ThemeProps<DefaultTheme> & IStyledFileUploadProps) => {\r\n  const baseColor = getColor('primaryHue', 600, props.theme);\r\n  const hoverColor = getColor('primaryHue', 700, props.theme);\r\n  const activeColor = getColor('primaryHue', 800, props.theme);\r\n  const disabledBackgroundColor = getColor('neutralHue', 200, props.theme);\r\n  const disabledForegroundColor = getColor('neutralHue', 400, props.theme);\r\n  const boxShadow = `inset ${props.theme.shadows.md(rgba(baseColor as string, 0.35))}`;\r\n\r\n  return css`\r\n    border-color: ${props.isDragging ? activeColor : getColor('neutralHue', 600, props.theme)};\r\n    background-color: ${props.isDragging && rgba(baseColor as string, 0.2)};\r\n    color: ${props.isDragging ? activeColor : baseColor};\r\n\r\n    &:hover {\r\n      border-color: ${hoverColor};\r\n      background-color: ${rgba(baseColor as string, 0.08)};\r\n      color: ${hoverColor};\r\n    }\r\n\r\n    &[data-garden-focus-visible] {\r\n      box-shadow: ${boxShadow};\r\n    }\r\n\r\n    &:active {\r\n      border-color: ${activeColor};\r\n      background-color: ${rgba(baseColor as string, 0.2)};\r\n      color: ${activeColor};\r\n    }\r\n\r\n    &[aria-disabled='true'] {\r\n      border-color: ${disabledForegroundColor};\r\n      background-color: ${disabledBackgroundColor};\r\n      color: ${disabledForegroundColor};\r\n    }\r\n  `;\r\n};\r\n\r\nconst sizeStyles = (props: ThemeProps<DefaultTheme> & IStyledFileUploadProps) => {\r\n  const marginTop = `${props.theme.space.base * (props.isCompact ? 1 : 2)}px`;\r\n  const paddingHorizontal = `${props.isCompact ? 2 : 4}em`;\r\n  const paddingVertical = math(\r\n    `${props.theme.space.base * (props.isCompact ? 2.5 : 5)} - ${props.theme.borderWidths.sm}`\r\n  );\r\n  const fontSize = props.theme.fontSizes.md;\r\n  const lineHeight = getLineHeight(props.theme.space.base * 5, fontSize);\r\n\r\n  return css`\r\n    padding: ${paddingVertical} ${paddingHorizontal};\r\n    min-width: 4em;\r\n    line-height: ${lineHeight};\r\n    font-size: ${fontSize};\r\n\r\n    /* stylelint-disable */\r\n    ${StyledLabel}:not([hidden]) + &&,\r\n    ${StyledHint} + &&,\r\n    ${StyledMessage} + &&,\r\n    && + ${StyledHint},\r\n    && + ${StyledMessage} {\r\n      margin-top: ${marginTop};\r\n    }\r\n    /* stylelint-enable */\r\n  `;\r\n};\r\n\r\nexport const StyledFileUpload = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledFileUploadProps>`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n  direction: ${props => (props.theme.rtl ? 'rtl' : 'ltr')};\r\n  /* prettier-ignore */\r\n  transition:\r\n    border-color 0.25s ease-in-out,\r\n    box-shadow 0.1s ease-in-out,\r\n    background-color 0.25s ease-in-out,\r\n    color 0.25s ease-in-out;\r\n  border: dashed ${props => props.theme.borderWidths.sm};\r\n  border-radius: ${props => props.theme.borderRadii.md};\r\n  cursor: pointer;\r\n  text-align: center;\r\n  user-select: none;\r\n\r\n  ${sizeStyles};\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &[aria-disabled='true'] {\r\n    cursor: default;\r\n  }\r\n\r\n  ${colorStyles};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledFileUpload.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledTextInput } from '../text/StyledTextInput';\r\nimport { StyledLabel } from '../common/StyledLabel';\r\nimport { StyledHint } from '../common/StyledHint';\r\nimport { StyledMessage } from '../common/StyledMessage';\r\n\r\nconst COMPONENT_ID = 'forms.input_group';\r\n\r\ninterface IStyledInputGroupProps {\r\n  isCompact?: boolean;\r\n}\r\n\r\n/**\r\n * [1] - Override the default `width: 100%` style\r\n */\r\nconst positionStyles = (props: ThemeProps<DefaultTheme> & IStyledInputGroupProps) => {\r\n  const topMargin = `${props.theme.space.base * (props.isCompact ? 1 : 2)}px`;\r\n  const startDirection = props.theme.rtl ? 'right' : 'left';\r\n  const endDirection = props.theme.rtl ? 'left' : 'right';\r\n\r\n  return css`\r\n    /* stylelint-disable */\r\n    ${StyledLabel}:not([hidden]) + &&,\r\n    ${StyledHint} + &&,\r\n    ${StyledMessage} + &&,\r\n    && + ${StyledHint},\r\n    && + ${StyledMessage} {\r\n      margin-top: ${topMargin};\r\n    }\r\n    /* stylelint-enable */\r\n\r\n    & > ${StyledTextInput} {\r\n      position: relative;\r\n      flex: 1 1 auto;\r\n      margin-top: 0;\r\n      margin-bottom: 0;\r\n      width: auto; /* [1] */\r\n      min-width: 0;\r\n    }\r\n\r\n    & > ${StyledTextInput}:not(:first-child) {\r\n      /* stylelint-disable */\r\n      border-top-${startDirection}-radius: 0;\r\n      border-bottom-${startDirection}-radius: 0;\r\n      /* stylelint-enable */\r\n    }\r\n\r\n    & > ${StyledTextInput}:not(:last-child) {\r\n      /* stylelint-disable */\r\n      border-top-${endDirection}-radius: 0;\r\n      border-bottom-${endDirection}-radius: 0;\r\n      /* stylelint-enable */\r\n    }\r\n  `;\r\n};\r\n\r\n/**\r\n * 1. Garden <Button> override.\r\n */\r\nconst itemStyles = (props: ThemeProps<DefaultTheme>) => {\r\n  const horizontal = props.theme.rtl ? 'right' : 'left';\r\n\r\n  return css`\r\n    /* stylelint-disable\r\n      declaration-no-important,\r\n      property-no-unknown,\r\n      property-case,\r\n      selector-no-qualifying-type */\r\n    & > * {\r\n      margin-${horizontal}: -${props.theme.borderWidths.sm} !important; /* [1] */\r\n      z-index: -1;\r\n    }\r\n\r\n    & > ${StyledTextInput}:hover,\r\n    & > button:hover,\r\n    & > ${StyledTextInput}[data-garden-focus-visible],\r\n    & > button[data-garden-focus-visible],\r\n    & > ${StyledTextInput}:active,\r\n    & > button:active {\r\n      z-index: 1;\r\n    }\r\n\r\n    & > button:disabled {\r\n      border-top-width: 0;\r\n      border-bottom-width: 0;\r\n    }\r\n\r\n    & > ${StyledTextInput}:disabled {\r\n      z-index: -2;\r\n    }\r\n\r\n    & > *:first-child:not(:last-child) {\r\n      margin-${props.theme.rtl ? 'right' : 'left'}: 0;\r\n      border-top-${props.theme.rtl ? 'left' : 'right'}-radius: 0;\r\n      border-bottom-${props.theme.rtl ? 'left' : 'right'}-radius: 0;\r\n    }\r\n\r\n    & > *:last-child:not(:first-child) {\r\n      border-top-${props.theme.rtl ? 'right' : 'left'}-radius: 0;\r\n      border-bottom-${props.theme.rtl ? 'right' : 'left'}-radius: 0;\r\n    }\r\n\r\n    & > *:not(:first-child):not(:last-child) {\r\n      border-radius: 0;\r\n    }\r\n    /* stylelint-enable\r\n      property-no-unknown,\r\n      property-case,\r\n      selector-no-qualifying-type */\r\n  `;\r\n};\r\n\r\nexport const StyledInputGroup = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledInputGroupProps>`\r\n  display: inline-flex;\r\n  position: relative;\r\n  flex-wrap: nowrap;\r\n  align-items: stretch;\r\n  z-index: 0;\r\n  width: 100%;\r\n\r\n  ${props => positionStyles(props)};\r\n  ${props => itemStyles(props)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledInputGroup.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { math } from 'polished';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledHint } from '../common/StyledHint';\r\n\r\nconst COMPONENT_ID = 'forms.radio_hint';\r\n\r\nexport const StyledRadioHint = styled(StyledHint).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  /* stylelint-disable-next-line */\r\n  padding-${props => (props.theme.rtl ? 'right' : 'left')}:\r\n    ${props => math(`${props.theme.space.base} * 6px`)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledRadioHint.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { math, rgba } from 'polished';\r\nimport { getColor, retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledRadioLabel } from './StyledRadioLabel';\r\nimport { StyledMessage } from '../common/StyledMessage';\r\n\r\nconst COMPONENT_ID = 'forms.radio';\r\n\r\nconst colorStyles = (props: ThemeProps<DefaultTheme>) => {\r\n  const SHADE = 600;\r\n\r\n  const borderColor = getColor('neutralHue', SHADE - 300, props.theme);\r\n  const backgroundColor = props.theme.colors.background;\r\n  const iconColor = backgroundColor;\r\n  const hoverBackgroundColor = getColor('primaryHue', SHADE, props.theme, 0.08);\r\n  const hoverBorderColor = getColor('primaryHue', SHADE, props.theme);\r\n  const focusBorderColor = hoverBorderColor;\r\n  const activeBackgroundColor = getColor('primaryHue', SHADE, props.theme, 0.2);\r\n  const activeBorderColor = focusBorderColor;\r\n  const boxShadow = props.theme.shadows.md(rgba(focusBorderColor!, 0.35));\r\n  const checkedBorderColor = focusBorderColor;\r\n  const checkedBackgroundColor = checkedBorderColor;\r\n  const checkedHoverBorderColor = getColor('primaryHue', SHADE + 100, props.theme);\r\n  const checkedHoverBackgroundColor = checkedHoverBorderColor;\r\n  const checkedActiveBorderColor = getColor('primaryHue', SHADE + 200, props.theme);\r\n  const checkedActiveBackgroundColor = checkedActiveBorderColor;\r\n  const disabledBackgroundColor = getColor('neutralHue', SHADE - 400, props.theme);\r\n\r\n  return css`\r\n    & ~ ${StyledRadioLabel}::before {\r\n      border-color: ${borderColor};\r\n      background-color: ${backgroundColor};\r\n    }\r\n\r\n    & ~ ${StyledRadioLabel} > svg {\r\n      color: ${iconColor};\r\n    }\r\n\r\n    & ~ ${StyledRadioLabel}:hover::before {\r\n      border-color: ${hoverBorderColor};\r\n      background-color: ${hoverBackgroundColor};\r\n    }\r\n\r\n    &[data-garden-focus-visible='true'] ~ ${StyledRadioLabel}::before {\r\n      border-color: ${focusBorderColor};\r\n      box-shadow: ${boxShadow};\r\n    }\r\n\r\n    & ~ ${StyledRadioLabel}:active::before {\r\n      border-color: ${activeBorderColor};\r\n      background-color: ${activeBackgroundColor};\r\n    }\r\n\r\n    &:checked ~ ${StyledRadioLabel}::before {\r\n      border-color: ${checkedBorderColor};\r\n      background-color: ${checkedBackgroundColor};\r\n    }\r\n\r\n    /* stylelint-disable selector-max-specificity */\r\n    &:enabled:checked ~ ${StyledRadioLabel}:hover::before {\r\n      border-color: ${checkedHoverBorderColor};\r\n      background-color: ${checkedHoverBackgroundColor};\r\n    }\r\n\r\n    &:enabled:checked ~ ${StyledRadioLabel}:active::before {\r\n      border-color: ${checkedActiveBorderColor};\r\n      background-color: ${checkedActiveBackgroundColor};\r\n    }\r\n    /* stylelint-enable selector-max-specificity */\r\n\r\n    &:disabled ~ ${StyledRadioLabel}::before {\r\n      border-color: transparent;\r\n      background-color: ${disabledBackgroundColor};\r\n    }\r\n  `;\r\n};\r\n\r\nconst sizeStyles = (props: IStyledRadioInputProps & ThemeProps<DefaultTheme>) => {\r\n  const lineHeight = `${props.theme.space.base * 5}px`; /* from StyledLabel */\r\n  const size = `${props.theme.space.base * 4}px`;\r\n  const top = math(`(${lineHeight} - ${size}) / 2`);\r\n  const iconSize = props.theme.iconSizes.sm;\r\n  const iconPosition = math(`(${size} - ${iconSize}) / 2`);\r\n  const iconTop = math(`${iconPosition} + ${top}`);\r\n  const marginTop = `${props.theme.space.base * (props.isCompact ? 1 : 2)}px`;\r\n\r\n  return css`\r\n    & ~ ${StyledRadioLabel}::before {\r\n      top: ${top};\r\n      background-size: ${props.theme.iconSizes.sm};\r\n      width: ${size};\r\n      height: ${size};\r\n      box-sizing: border-box;\r\n    }\r\n\r\n    & ~ ${StyledRadioLabel} > svg {\r\n      top: ${iconTop};\r\n      ${props.theme.rtl ? 'right' : 'left'}: ${iconPosition};\r\n      width: ${iconSize};\r\n      height: ${iconSize};\r\n    }\r\n\r\n    && ~ ${StyledRadioLabel} ~ ${StyledMessage} {\r\n      margin-top: ${marginTop};\r\n    }\r\n  `;\r\n};\r\n\r\nexport interface IStyledRadioInputProps {\r\n  isCompact?: boolean;\r\n}\r\n\r\nexport const StyledRadioInput = styled.input.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  type: 'radio'\r\n})<IStyledRadioInputProps>`\r\n  /* hide <input> but retain accessiblity */\r\n  position: absolute;\r\n  clip: rect(1px, 1px, 1px, 1px);\r\n\r\n  & ~ ${StyledRadioLabel}::before {\r\n    position: absolute;\r\n    ${props => (props.theme.rtl ? 'right' : 'left')}: 0;\r\n    /* prettier-ignore */\r\n    transition:\r\n      border-color .25s ease-in-out,\r\n      box-shadow .1s ease-in-out,\r\n      background-color .25s ease-in-out,\r\n      color .25s ease-in-out;\r\n    border: ${props => props.theme.borders.sm};\r\n    border-radius: 50%;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    content: '';\r\n  }\r\n\r\n  & ~ ${StyledRadioLabel} > svg {\r\n    position: absolute;\r\n  }\r\n\r\n  ${props => sizeStyles(props)};\r\n\r\n  &:focus ~ ${StyledRadioLabel}::before {\r\n    outline: none;\r\n  }\r\n\r\n  & ~ ${StyledRadioLabel}:active::before {\r\n    /* prettier-ignore */\r\n    transition:\r\n      border-color 0.1s ease-in-out,\r\n      background-color 0.1s ease-in-out,\r\n      color 0.1s ease-in-out;\r\n  }\r\n\r\n  ${props => colorStyles(props)};\r\n\r\n  &:disabled ~ ${StyledRadioLabel} {\r\n    cursor: default;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledRadioInput.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledLabel } from '../common/StyledLabel';\r\n\r\nconst COMPONENT_ID = 'forms.radio_label';\r\n\r\nconst sizeStyles = (props: ThemeProps<DefaultTheme>) => {\r\n  const size = props.theme.space.base * 4; /* from StyledRadioInput */\r\n  const padding = size + props.theme.space.base * 2;\r\n  const lineHeight = props.theme.space.base * 5;\r\n\r\n  return css`\r\n    /* stylelint-disable property-no-unknown */\r\n    padding-${props.theme.rtl ? 'right' : 'left'}: ${padding}px;\r\n\r\n    &[hidden] {\r\n      padding-${props.theme.rtl ? 'right' : 'left'}: ${size}px;\r\n      line-height: ${lineHeight}px;\r\n    }\r\n    /* stylelint-enable property-no-unknown */\r\n  `;\r\n};\r\n\r\n/**\r\n * 1. Vertical alignment.\r\n */\r\nexport const StyledRadioLabel = styled(StyledLabel).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  isRadio: true\r\n})`\r\n  display: inline-block; /* [1] */\r\n  position: relative;\r\n  cursor: pointer;\r\n  user-select: none;\r\n\r\n  ${props => sizeStyles(props)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledRadioLabel.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { math } from 'polished';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledMessage } from '../common/StyledMessage';\r\n\r\nconst COMPONENT_ID = 'forms.radio_message';\r\n\r\nexport const StyledRadioMessage = styled(StyledMessage).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  /* stylelint-disable-next-line */\r\n  padding-${props => (props.theme.rtl ? 'right' : 'left')}:\r\n    ${props => math(`${props.theme.space.base} * 6px`)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledRadioMessage.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledRadioInput } from './StyledRadioInput';\r\nimport { StyledRadioLabel } from './StyledRadioLabel';\r\nimport { CircleIcon } from './circle-sm';\r\n\r\nconst COMPONENT_ID = 'forms.radio_svg';\r\n\r\nexport const StyledRadioSvg = styled(CircleIcon).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  transition: opacity 0.25 ease-in-out;\r\n  opacity: 0;\r\n\r\n  ${StyledRadioInput}:checked ~ ${StyledRadioLabel} > & {\r\n    opacity: 1;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledRadioSvg.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nexport const CircleIcon = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <circle cx=\"8\" cy=\"8\" r=\"6\" fill=\"currentColor\"/>\r\n</svg>\r\n\r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { math } from 'polished';\r\nimport { getColor, retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledHint } from '../common/StyledHint';\r\nimport { StyledLabel } from '../common/StyledLabel';\r\nimport { StyledMessage } from '../common/StyledMessage';\r\n\r\nconst COMPONENT_ID = 'forms.range';\r\n\r\nconst thumbStyles = (styles: string, modifier = '') => {\r\n  return `\r\n    &${modifier}::-moz-range-thumb {\r\n      ${styles}\r\n    }\r\n\r\n    &${modifier}::-ms-thumb {\r\n      ${styles}\r\n    }\r\n\r\n    &${modifier}::-webkit-slider-thumb {\r\n      ${styles}\r\n    }\r\n  `;\r\n};\r\n\r\nconst trackStyles = (styles: string, modifier = '') => {\r\n  return `\r\n    &${modifier}::-moz-range-track {\r\n      ${styles}\r\n    }\r\n\r\n    &${modifier}::-ms-track {\r\n      ${styles}\r\n    }\r\n\r\n    &${modifier}::-webkit-slider-runnable-track {\r\n      ${styles}\r\n    }\r\n  `;\r\n};\r\n\r\nconst trackLowerStyles = (styles: string, modifier = '') => {\r\n  return `\r\n    &${modifier}::-moz-range-progress {\r\n      ${styles}\r\n    }\r\n\r\n    &${modifier}::-ms-fill-lower {\r\n      ${styles}\r\n    }\r\n  `;\r\n};\r\n\r\nconst colorStyles = (props: ThemeProps<DefaultTheme> & IStyledRangeInputProps) => {\r\n  const SHADE = 600;\r\n  const thumbBackgroundColor = getColor('primaryHue', SHADE, props.theme);\r\n  const thumbBorderColor = thumbBackgroundColor;\r\n  const thumbBoxShadow = props.theme.shadows.lg(\r\n    math(`${props.theme.space.base} * 1px`),\r\n    math(`${props.theme.space.base} * 2px`),\r\n    getColor('neutralHue', SHADE + 200, props.theme, 0.24)!\r\n  );\r\n  const thumbActiveBackgroundColor = getColor('primaryHue', SHADE + 100, props.theme);\r\n  const thumbActiveBorderColor = thumbBorderColor;\r\n  const thumbDisabledBackgroundColor = getColor('neutralHue', SHADE - 300, props.theme);\r\n  const thumbDisabledBorderColor = thumbDisabledBackgroundColor;\r\n  const thumbFocusBoxShadow = props.theme.shadows.md(\r\n    getColor('primaryHue', SHADE, props.theme, 0.35)!\r\n  );\r\n  const thumbHoverBackgroundColor = thumbActiveBackgroundColor;\r\n  const thumbHoverBorderColor = thumbHoverBackgroundColor;\r\n  const trackBackgroundColor = getColor('neutralHue', SHADE - 400, props.theme);\r\n  const trackLowerBackgroundColor = props.hasLowerTrack ? thumbBackgroundColor : '';\r\n  const trackBackgroundImage = props.hasLowerTrack\r\n    ? `linear-gradient(${trackLowerBackgroundColor}, ${trackLowerBackgroundColor})`\r\n    : '';\r\n  const trackDisabledLowerBackgroundColor = props.hasLowerTrack ? thumbDisabledBackgroundColor : '';\r\n  const trackDisabledBackgroundImage = props.hasLowerTrack\r\n    ? `linear-gradient(${trackDisabledLowerBackgroundColor}, ${trackDisabledLowerBackgroundColor})`\r\n    : '';\r\n\r\n  return css`\r\n    ${trackStyles(`\r\n      background-color: ${trackBackgroundColor};\r\n      background-image: ${trackBackgroundImage}; /* provide means for styling lower range on WebKit */\r\n    `)}\r\n\r\n    ${thumbStyles(`\r\n      border-color: ${thumbBorderColor};\r\n      box-shadow: ${thumbBoxShadow};\r\n      background-color: ${thumbBackgroundColor};\r\n    `)}\r\n\r\n    ${trackLowerStyles(`\r\n      background-color: ${trackLowerBackgroundColor};\r\n    `)}\r\n\r\n    ${thumbStyles(\r\n      `\r\n        transition:\r\n          border-color .25s ease-in-out,\r\n          background-color .25s ease-in-out;\r\n        border-color: ${thumbHoverBorderColor};\r\n        background-color: ${thumbHoverBackgroundColor};\r\n      `,\r\n      ':hover'\r\n    )}\r\n\r\n    ${thumbStyles(\r\n      `\r\n        box-shadow: ${thumbFocusBoxShadow};\r\n      `,\r\n      '[data-garden-focus-visible=\"true\"]'\r\n    )}\r\n\r\n    ${thumbStyles(\r\n      `\r\n        border-color: ${thumbActiveBorderColor};\r\n        background-color: ${thumbActiveBackgroundColor}\r\n      `,\r\n      ':active'\r\n    )}\r\n\r\n    ${trackStyles(\r\n      `\r\n        background-image: ${trackDisabledBackgroundImage};\r\n      `,\r\n      ':disabled'\r\n    )}\r\n\r\n    ${thumbStyles(\r\n      `\r\n        border-color: ${thumbDisabledBorderColor};\r\n        box-shadow: none;\r\n        background-color: ${thumbDisabledBackgroundColor};\r\n      `,\r\n      ':disabled'\r\n    )}\r\n\r\n    ${trackLowerStyles(\r\n      `\r\n        background-color: ${trackDisabledLowerBackgroundColor}\r\n      `,\r\n      ':disabled'\r\n    )}\r\n  `;\r\n};\r\n\r\nconst sizeStyles = (props: ThemeProps<DefaultTheme>) => {\r\n  const thumbSize = math(`${props.theme.space.base} * 5px`);\r\n  const trackHeight = math(`${props.theme.space.base} * 1.5px`);\r\n  const trackBorderRadius = trackHeight;\r\n  const trackMargin = math(`(${thumbSize} - ${trackHeight}) / 2 + ${props.theme.shadowWidths.md}`);\r\n  const thumbMargin = math(`(${trackHeight} - ${thumbSize}) / 2`);\r\n\r\n  return css`\r\n    /* stylelint-disable */\r\n    ${StyledLabel}:not([hidden]) + &,\r\n    ${StyledHint} + &,\r\n    ${StyledMessage} + &,\r\n    & + ${StyledHint},\r\n    & + ${StyledMessage} {\r\n      margin-top: ${math(`${props.theme.space.base} * 2px`)};\r\n    }\r\n    /* stylelint-enable */\r\n\r\n    ${trackStyles(`\r\n      margin: ${trackMargin} 0;\r\n      border-radius: ${trackBorderRadius};\r\n      height: ${trackHeight};\r\n    `)};\r\n\r\n    ${thumbStyles(`\r\n      margin: ${thumbMargin} 0; /* reset for IE */\r\n      width: ${thumbSize};\r\n      height: ${thumbSize};\r\n    `)}\r\n\r\n    ${trackLowerStyles(`\r\n      border-top-${props.theme.rtl ? 'right' : 'left'}-radius: ${trackBorderRadius};\r\n      border-bottom-${props.theme.rtl ? 'right' : 'left'}-radius: ${trackBorderRadius};\r\n      height: ${trackHeight};\r\n    `)}\r\n  `;\r\n};\r\n\r\ninterface IStyledRangeInputProps {\r\n  backgroundSize?: number | string;\r\n  hasLowerTrack?: boolean;\r\n}\r\n\r\nexport const StyledRangeInput = styled.input.attrs<IStyledRangeInputProps>(props => ({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  type: 'range',\r\n  style: {\r\n    backgroundSize: props.hasLowerTrack && props.backgroundSize\r\n  }\r\n}))<IStyledRangeInputProps>`\r\n  appearance: none;\r\n  direction: ${props => props.theme.rtl && 'rtl'};\r\n  margin: 0; /* reset for WebKit & Firefox */\r\n  background-color: inherit; /* reset for Firefox (disabled) */\r\n  cursor: pointer;\r\n  padding: 0; /* reset for IE */\r\n  width: 100%;\r\n  vertical-align: middle;\r\n\r\n  ${props =>\r\n    trackStyles(`\r\n      appearance: none;\r\n      border-color: transparent; /* reset for IE */\r\n      background-repeat: repeat-y;\r\n      background-size: 0;\r\n      background-position: ${props.theme.rtl ? '100% 100%' : '0% 0%'};\r\n      width: 99.8%; /* fix for IE which cuts off the upper track's border radius */\r\n      color: transparent; /* reset for IE */\r\n      box-sizing: border-box; /* reset for IE */\r\n    `)}\r\n\r\n  &::-webkit-slider-container,\r\n  &::-webkit-slider-runnable-track {\r\n    background-size: inherit; /* provide means for styling WebKit lower range */\r\n  }\r\n\r\n  ${props => sizeStyles(props)};\r\n\r\n  ${props =>\r\n    thumbStyles(`\r\n      appearance: none;\r\n      transition: box-shadow .1s ease-in-out;\r\n      border: ${props.theme.borders.md};\r\n      border-radius: 100%;\r\n      box-sizing: border-box;\r\n    `)}\r\n\r\n  ${props => colorStyles(props)};\r\n\r\n  &::-moz-focus-outer {\r\n    border: 0; /* remove dotted outline from Firefox on focus */\r\n  }\r\n\r\n  &::-ms-tooltip {\r\n    display: none; /* reset for IE */\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:disabled {\r\n    cursor: default;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledRangeInput.defaultProps = {\r\n  backgroundSize: '0%',\r\n  hasLowerTrack: true,\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { math } from 'polished';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledHint } from '../common/StyledHint';\r\nimport { StyledLabel } from '../common/StyledLabel';\r\nimport { StyledMessage } from '../common/StyledMessage';\r\n\r\nconst COMPONENT_ID = 'forms.slider';\r\n\r\ninterface IStyledSliderProps {\r\n  isDisabled?: boolean;\r\n}\r\n\r\nexport const StyledSlider = styled.div.attrs<IStyledSliderProps>(props => ({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  'aria-disabled': props.isDisabled\r\n}))<IStyledSliderProps>`\r\n  display: block;\r\n  position: relative;\r\n  z-index: 0;\r\n  cursor: pointer;\r\n  /* thumb height + focused shadow widths */\r\n  height: ${props =>\r\n    math(`(${props.theme.space.base} * 5px) + (${props.theme.shadowWidths.md} * 2)`)};\r\n\r\n  &[aria-disabled='true'] {\r\n    cursor: default;\r\n  }\r\n\r\n  /* stylelint-disable */\r\n  ${StyledLabel}:not([hidden]) + &,\r\n  ${StyledHint} + &,\r\n  ${StyledMessage} + &,\r\n  & + ${StyledHint},\r\n  & + ${StyledMessage} {\r\n    margin-top: ${props => math(`${props.theme.space.base} * 2px`)};\r\n  }\r\n  /* stylelint-enable */\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledSlider.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { math } from 'polished';\r\nimport { getColor, retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'forms.slider_thumb';\r\n\r\ninterface IStyledSliderThumbProps {\r\n  position?: number;\r\n  isDisabled?: boolean;\r\n}\r\n\r\nconst colorStyles = (props: ThemeProps<DefaultTheme>) => {\r\n  const SHADE = 600;\r\n  const backgroundColor = getColor('primaryHue', SHADE, props.theme);\r\n  const borderColor = backgroundColor;\r\n  const boxShadow = props.theme.shadows.lg(\r\n    math(`${props.theme.space.base} * 1px`),\r\n    math(`${props.theme.space.base} * 2px`),\r\n    getColor('neutralHue', SHADE + 200, props.theme, 0.24)!\r\n  );\r\n  const activeBackgroundColor = getColor('primaryHue', SHADE + 100, props.theme);\r\n  const activeBorderColor = borderColor;\r\n  const hoverBackgroundColor = activeBackgroundColor;\r\n  const hoverBorderColor = hoverBackgroundColor;\r\n  const focusBoxShadow = props.theme.shadows.md(getColor('primaryHue', SHADE, props.theme, 0.35)!);\r\n  const disabledBackgroundColor = getColor('neutralHue', SHADE - 300, props.theme);\r\n  const disabledBorderColor = disabledBackgroundColor;\r\n\r\n  return css`\r\n    border-color: ${borderColor};\r\n    box-shadow: ${boxShadow};\r\n    background-color: ${backgroundColor};\r\n\r\n    &[data-garden-focus-visible='true'] {\r\n      box-shadow: ${focusBoxShadow};\r\n    }\r\n\r\n    &:hover,\r\n    &[data-garden-hover='true'] {\r\n      border-color: ${hoverBorderColor};\r\n      background-color: ${hoverBackgroundColor};\r\n    }\r\n\r\n    &:active,\r\n    &[data-garden-active='true'] {\r\n      border-color: ${activeBorderColor};\r\n      background-color: ${activeBackgroundColor};\r\n    }\r\n\r\n    &[aria-disabled='true'] {\r\n      border-color: ${disabledBorderColor};\r\n      box-shadow: none;\r\n      background-color: ${disabledBackgroundColor};\r\n    }\r\n  `;\r\n};\r\n\r\nconst sizeStyles = (props: ThemeProps<DefaultTheme>) => {\r\n  const size = math(`${props.theme.space.base} * 5px`);\r\n  const marginTop = math(`${size} / -2`);\r\n\r\n  return css`\r\n    margin-top: ${marginTop};\r\n    width: ${size};\r\n    height: ${size};\r\n  `;\r\n};\r\n\r\nexport const StyledSliderThumb = styled.div.attrs<IStyledSliderThumbProps>(props => ({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  'aria-disabled': props.isDisabled\r\n}))<IStyledSliderThumbProps>`\r\n  appearance: none;\r\n  position: absolute;\r\n  top: 50%;\r\n  ${props => (props.theme.rtl ? 'right' : 'left')}: ${props => math(`${props.position} * 1px`)};\r\n  /* prettier-ignore */\r\n  transition:\r\n    border-color 0.25s ease-in-out,\r\n    box-shadow 0.1s ease-in-out,\r\n    background-color 0.25s ease-in-out;\r\n  z-index: 1;\r\n  border: ${props => props.theme.borders.md};\r\n  border-radius: 100%;\r\n  cursor: inherit;\r\n  box-sizing: border-box;\r\n  font-size: 0;\r\n\r\n  ${props => sizeStyles(props)};\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  ${props => colorStyles(props)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledSliderThumb.defaultProps = {\r\n  position: 0,\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { math } from 'polished';\r\nimport { getColor, retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'forms.slider_track';\r\n\r\ninterface IStyledSliderTrackProps {\r\n  backgroundSize?: number;\r\n  backgroundPosition?: number;\r\n  isDisabled?: boolean;\r\n}\r\n\r\nconst colorStyles = (props: IStyledSliderTrackProps & ThemeProps<DefaultTheme>) => {\r\n  const SHADE = 600;\r\n  const backgroundColor = getColor('neutralHue', SHADE - 400, props.theme);\r\n  const backgroundImageColor = getColor('primaryHue', SHADE, props.theme);\r\n  const disabledBackgroundColor = getColor('neutralHue', SHADE - 300, props.theme);\r\n\r\n  return css`\r\n    background-color: ${backgroundColor};\r\n    background-image: linear-gradient(${backgroundImageColor}, ${backgroundImageColor});\r\n\r\n    &[aria-disabled='true'] {\r\n      background-image: linear-gradient(${disabledBackgroundColor}, ${disabledBackgroundColor});\r\n    }\r\n  `;\r\n};\r\n\r\nconst sizeStyles = (props: IStyledSliderTrackProps & ThemeProps<DefaultTheme>) => {\r\n  const height = math(`${props.theme.space.base} * 1.5px`);\r\n  const backgroundPosition = math(`${props.backgroundPosition} * 1px`);\r\n  const backgroundSize = math(`${props.backgroundSize} * 1px`);\r\n  const borderRadius = height;\r\n  const marginTop = math(`${height} / -2`);\r\n  const padding = math(`${props.theme.space.base} * 2.5px`);\r\n\r\n  return css`\r\n    margin-top: ${marginTop};\r\n    border-radius: ${borderRadius};\r\n    background-position: ${backgroundPosition};\r\n    background-size: ${backgroundSize};\r\n    padding: 0 ${padding};\r\n  `;\r\n};\r\n\r\nexport const StyledSliderTrack = styled.div.attrs<IStyledSliderTrackProps>(props => ({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  'aria-disabled': props.isDisabled\r\n}))<IStyledSliderTrackProps>`\r\n  position: absolute;\r\n  top: 50%;\r\n  box-sizing: border-box;\r\n  background-origin: content-box;\r\n  background-repeat: repeat-y;\r\n  width: 100%;\r\n\r\n  ${props => sizeStyles(props)};\r\n\r\n  ${props => colorStyles(props)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledSliderTrack.defaultProps = {\r\n  backgroundSize: 0,\r\n  backgroundPosition: 0,\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { math } from 'polished';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'forms.slider_track_rail';\r\n\r\nconst sizeStyles = (props: ThemeProps<DefaultTheme>) => {\r\n  const height = math(`${props.theme.space.base} * 1.5px`);\r\n  const margin = math(`${props.theme.space.base} * 2.5px`);\r\n\r\n  return css`\r\n    margin: 0 ${props.theme.rtl ? `-${margin}` : margin} 0\r\n      ${props.theme.rtl ? margin : `-${margin}`};\r\n    height: ${height};\r\n  `;\r\n};\r\n\r\nexport const StyledSliderTrackRail = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  position: relative;\r\n\r\n  ${props => sizeStyles(props)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledSliderTrackRail.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { math } from 'polished';\r\nimport { getColor, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledTextInput, IStyledTextInputProps } from '../text/StyledTextInput';\r\nimport { StyledTextMediaFigure } from '../text/StyledTextMediaFigure';\r\n\r\nconst COMPONENT_ID = 'forms.select';\r\n\r\nconst colorStyles = (props: IStyledTextInputProps & ThemeProps<DefaultTheme>) => {\r\n  const color = getColor('neutralHue', 700, props.theme);\r\n\r\n  /* prettier-ignore */\r\n  return css`\r\n    &:hover + ${StyledTextMediaFigure},\r\n    &:focus + ${StyledTextMediaFigure},\r\n    &[data-garden-focus-visible='true'] + ${StyledTextMediaFigure} {\r\n      color: ${color};\r\n    }\r\n  `;\r\n};\r\n\r\nconst sizeStyles = (props: IStyledTextInputProps & ThemeProps<DefaultTheme>) => {\r\n  const padding = math(`${props.theme.iconSizes.md} + ${props.theme.space.base * 5}`);\r\n  const iconVerticalPosition = `${props.theme.space.base * (props.isCompact ? 1.5 : 2.5) + 1}px`;\r\n  const iconHorizontalPosition = `${props.theme.space.base * 3}px`;\r\n\r\n  return css`\r\n    /* stylelint-disable-next-line property-no-unknown */\r\n    padding-${props.theme.rtl ? 'left' : 'right'}: ${!props.isBare && padding};\r\n\r\n    & + ${StyledTextMediaFigure} {\r\n      top: ${iconVerticalPosition};\r\n      ${props.theme.rtl ? 'left' : 'right'}: ${iconHorizontalPosition};\r\n    }\r\n  `;\r\n};\r\n\r\n/**\r\n * 1. Select reset.\r\n */\r\nexport const StyledSelect = styled(StyledTextInput).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  as: 'select'\r\n})`\r\n  cursor: pointer;\r\n  text-overflow: ellipsis;\r\n\r\n  ${props => sizeStyles(props)};\r\n  ${props => colorStyles(props)};\r\n\r\n  &::-ms-expand {\r\n    display: none; /* [1] */\r\n  }\r\n\r\n  &::-ms-value {\r\n    background-color: transparent; /* [1] */\r\n    color: inherit; /* [1] */\r\n  }\r\n\r\n  &:-moz-focusring {\r\n    transition: none;\r\n    text-shadow: 0 0 0 ${props => props.theme.colors.foreground}; /* [1] */\r\n    color: transparent; /* [1] */\r\n  }\r\n\r\n  & + ${StyledTextMediaFigure} {\r\n    position: absolute;\r\n    pointer-events: none;\r\n  }\r\n`;\r\n\r\nStyledSelect.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledTextFauxInput } from '../text/StyledTextFauxInput';\r\n\r\nconst COMPONENT_ID = 'forms.select_wrapper';\r\n\r\nexport const StyledSelectWrapper = styled(StyledTextFauxInput).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  isBare: true\r\n})`\r\n  position: relative;\r\n  overflow: visible;\r\n`;\r\n\r\nStyledSelectWrapper.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledTextInput, IStyledTextInputProps } from './StyledTextInput';\r\nimport { StyledTextMediaFigure } from './StyledTextMediaFigure';\r\n\r\nconst COMPONENT_ID = 'forms.faux_input';\r\n\r\nexport interface IStyledTextFauxInputProps extends IStyledTextInputProps {\r\n  mediaLayout?: boolean;\r\n  isDisabled?: boolean;\r\n  isReadOnly?: boolean;\r\n}\r\n\r\nexport const StyledTextFauxInput = styled(\r\n  StyledTextInput as 'div'\r\n).attrs<IStyledTextFauxInputProps>(props => ({\r\n  as: 'div',\r\n  'aria-readonly': props.isReadOnly,\r\n  'aria-disabled': props.isDisabled,\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n}))<IStyledTextFauxInputProps>`\r\n  display: ${props => (props.mediaLayout ? 'inline-flex' : 'inline-block')};\r\n  align-items: ${props => props.mediaLayout && 'baseline'};\r\n  cursor: ${props => (props.mediaLayout && !props.isDisabled ? 'text' : 'default')};\r\n  overflow: hidden;\r\n\r\n  & > ${StyledTextInput} {\r\n    vertical-align: ${props => !props.mediaLayout && 'baseline'};\r\n  }\r\n\r\n  & > ${StyledTextMediaFigure} {\r\n    flex-shrink: ${props => props.mediaLayout && '0'};\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledTextFauxInput.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { em, math, rgba } from 'polished';\r\nimport {\r\n  retrieveComponentStyles,\r\n  getColor,\r\n  getLineHeight,\r\n  DEFAULT_THEME\r\n} from '@zendeskgarden/react-theming';\r\nimport { VALIDATION } from '../../utils/validation';\r\nimport { StyledHint } from '../common/StyledHint';\r\nimport { StyledLabel } from '../common/StyledLabel';\r\nimport { StyledMessage } from '../common/StyledMessage';\r\n\r\nconst COMPONENT_ID = 'forms.input';\r\n\r\nconst isInvalid = (validation?: VALIDATION) => {\r\n  return validation === 'warning' || validation === 'error';\r\n};\r\n\r\nconst colorStyles = (props: IStyledTextInputProps & ThemeProps<DefaultTheme>) => {\r\n  const SHADE = 600;\r\n  const placeholderColor = getColor('neutralHue', SHADE - 200, props.theme);\r\n  let borderColor: string | undefined;\r\n  let hoverBorderColor: string | undefined;\r\n  let focusBorderColor: string;\r\n\r\n  if (props.validation) {\r\n    let hue;\r\n\r\n    if (props.validation === 'success') {\r\n      hue = 'successHue';\r\n    } else if (props.validation === 'warning') {\r\n      hue = 'warningHue';\r\n    } else if (props.validation === 'error') {\r\n      hue = 'dangerHue';\r\n    }\r\n\r\n    borderColor = getColor(hue as string, SHADE, props.theme)!;\r\n    hoverBorderColor = borderColor;\r\n    focusBorderColor = borderColor;\r\n  } else {\r\n    borderColor = getColor('neutralHue', SHADE - 300, props.theme);\r\n    hoverBorderColor = getColor('primaryHue', SHADE, props.theme);\r\n    focusBorderColor = hoverBorderColor!;\r\n  }\r\n\r\n  const boxShadow = `\r\n    ${props.focusInset ? 'inset' : ''}\r\n    ${props.theme.shadows.md(rgba(focusBorderColor, 0.35))}`;\r\n  const readOnlyBackgroundColor = getColor('neutralHue', SHADE - 500, props.theme);\r\n  const readOnlyBorderColor = getColor('neutralHue', SHADE - 300, props.theme);\r\n  const disabledBackgroundColor = readOnlyBackgroundColor;\r\n  const disabledBorderColor = getColor('neutralHue', SHADE - 400, props.theme);\r\n  const disabledForegroundColor = getColor('neutralHue', SHADE - 200, props.theme);\r\n\r\n  let controlledBorderColor = borderColor;\r\n\r\n  if (props.isFocused) {\r\n    controlledBorderColor = focusBorderColor;\r\n  }\r\n\r\n  if (props.isHovered) {\r\n    controlledBorderColor = hoverBorderColor;\r\n  }\r\n\r\n  return css`\r\n    border-color: ${controlledBorderColor};\r\n    box-shadow: ${!props.isBare && props.isFocused && boxShadow};\r\n    background-color: ${props.isBare ? 'transparent' : props.theme.colors.background};\r\n    color: ${props.theme.colors.foreground};\r\n\r\n    &::placeholder {\r\n      color: ${placeholderColor};\r\n    }\r\n\r\n    &[readonly],\r\n    /* apply to faux input */\r\n    &[aria-readonly='true'] {\r\n      border-color: ${readOnlyBorderColor};\r\n      background-color: ${!props.isBare && readOnlyBackgroundColor};\r\n    }\r\n\r\n    &:hover {\r\n      border-color: ${hoverBorderColor};\r\n    }\r\n\r\n    &:focus,\r\n    &[data-garden-focus-visible='true'] {\r\n      border-color: ${focusBorderColor};\r\n      box-shadow: ${!props.isBare && boxShadow};\r\n    }\r\n\r\n    &:disabled,\r\n    /* apply to faux input */\r\n    &[aria-disabled='true'] {\r\n      border-color: ${disabledBorderColor};\r\n      background-color: ${!props.isBare && disabledBackgroundColor};\r\n      color: ${disabledForegroundColor};\r\n    }\r\n  `;\r\n};\r\n\r\nconst sizeStyles = (props: IStyledTextInputProps & ThemeProps<DefaultTheme>) => {\r\n  const fontSize = props.theme.fontSizes.md;\r\n  const paddingHorizontal = `${props.theme.space.base * 3}px`;\r\n  let height;\r\n  let paddingVertical;\r\n  let browseFontSize;\r\n  let swatchHeight;\r\n\r\n  if (props.isCompact) {\r\n    height = `${props.theme.space.base * 8}px`;\r\n    paddingVertical = `${props.theme.space.base * 1.5}px`;\r\n    browseFontSize = math(`${props.theme.fontSizes.sm} - 1`);\r\n    swatchHeight = `${props.theme.space.base * 6}px`;\r\n  } else {\r\n    height = `${props.theme.space.base * 10}px`;\r\n    paddingVertical = `${props.theme.space.base * 2.5}px`;\r\n    browseFontSize = props.theme.fontSizes.sm;\r\n    swatchHeight = `${props.theme.space.base * 7}px`;\r\n  }\r\n\r\n  const lineHeight = math(\r\n    `${height} - (${paddingVertical} * 2) - (${props.theme.borderWidths.sm} * 2)`\r\n  );\r\n  const padding = props.isBare\r\n    ? '0'\r\n    : `${em(paddingVertical, fontSize)} ${em(paddingHorizontal, fontSize)}`;\r\n  const swatchMarginVertical = math(`(${lineHeight} - ${swatchHeight}) / 2`);\r\n  const swatchMarginHorizontal = math(\r\n    `${paddingVertical} + ${swatchMarginVertical} - ${paddingHorizontal}`\r\n  );\r\n\r\n  return css`\r\n    padding: ${padding};\r\n    min-height: ${props.isBare ? '1em' : height};\r\n    line-height: ${getLineHeight(lineHeight, fontSize)};\r\n    font-size: ${fontSize};\r\n\r\n    &::-ms-browse {\r\n      font-size: ${browseFontSize};\r\n    }\r\n\r\n    &[type='date'],\r\n    &[type='datetime-local'],\r\n    &[type='file'],\r\n    &[type='month'],\r\n    &[type='time'],\r\n    &[type='week'] {\r\n      max-height: ${height};\r\n    }\r\n\r\n    &[type='file'] {\r\n      line-height: 1; /* align file prompt text */\r\n    }\r\n\r\n    /* stylelint-disable-next-line at-rule-empty-line-before */\r\n    @supports (-ms-ime-align: auto) {\r\n      &[type='color'] {\r\n        padding: ${props.isCompact ? '0 2px' : '1px 3px'}; /* correct color swatch size for Edge */\r\n      }\r\n    }\r\n\r\n    &::-moz-color-swatch {\r\n      margin-top: ${swatchMarginVertical};\r\n      margin-left: ${swatchMarginHorizontal};\r\n      width: calc(100% + ${math(`${swatchMarginHorizontal} * -2`)});\r\n      height: ${swatchHeight};\r\n    }\r\n\r\n    &::-webkit-color-swatch {\r\n      margin: ${swatchMarginVertical} ${swatchMarginHorizontal};\r\n    }\r\n\r\n    /* stylelint-disable */\r\n    ${StyledLabel}:not([hidden]) + &&,\r\n    ${StyledHint} + &&,\r\n    ${StyledMessage} + &&,\r\n    && + ${StyledHint},\r\n    && + ${StyledMessage} {\r\n      margin-top: ${props.theme.space.base * (props.isCompact ? 1 : 2)}px;\r\n    }\r\n    /* stylelint-enable */\r\n  `;\r\n};\r\n\r\nexport interface IStyledTextInputProps {\r\n  isCompact?: boolean;\r\n  isBare?: boolean;\r\n  isHovered?: boolean;\r\n  isFocused?: boolean;\r\n  focusInset?: boolean;\r\n  validation?: VALIDATION;\r\n}\r\n\r\nexport const StyledTextInput = styled.input.attrs<IStyledTextInputProps>(props => ({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  'aria-invalid': isInvalid(props.validation)\r\n}))<IStyledTextInputProps>`\r\n  appearance: none;\r\n  /* prettier-ignore */\r\n  transition:\r\n    border-color 0.25s ease-in-out,\r\n    box-shadow 0.1s ease-in-out,\r\n    background-color 0.25s ease-in-out,\r\n    color 0.25s ease-in-out,\r\n    z-index 0.25s ease-in-out;\r\n  direction: ${props => props.theme.rtl && 'rtl'};\r\n  border: ${props => (props.isBare ? 'none' : props.theme.borders.sm)};\r\n  border-radius: ${props => (props.isBare ? '0' : props.theme.borderRadii.md)};\r\n  width: 100%; /* vs. display: block to limit mouse interaction area */\r\n  box-sizing: border-box;\r\n  vertical-align: middle; /* support inline label */\r\n  font-family: inherit;\r\n\r\n  &::-ms-browse {\r\n    border-radius: ${props => props.theme.borderRadii.sm};\r\n  }\r\n\r\n  &::-ms-clear,\r\n  &::-ms-reveal {\r\n    display: none; /* remove clear button and password reveal in IE */\r\n  }\r\n\r\n  &::-moz-color-swatch {\r\n    border: none;\r\n    border-radius: ${props => props.theme.borderRadii.sm};\r\n  }\r\n\r\n  &::-webkit-color-swatch {\r\n    border: none;\r\n    border-radius: ${props => props.theme.borderRadii.sm};\r\n  }\r\n\r\n  &::-webkit-color-swatch-wrapper {\r\n    padding: 0;\r\n  }\r\n\r\n  &::-webkit-clear-button,\r\n  &::-webkit-inner-spin-button,\r\n  &::-webkit-search-cancel-button,\r\n  &::-webkit-search-results-button {\r\n    display: none; /* remove non-standard browser features */\r\n  }\r\n\r\n  &::-webkit-datetime-edit {\r\n    direction: ${props => props.theme.rtl && 'rtl'};\r\n    line-height: 1;\r\n  }\r\n\r\n  &::placeholder {\r\n    opacity: 1;\r\n  }\r\n\r\n  &:invalid {\r\n    box-shadow: none; /* prevent FireFox validation styling */\r\n  }\r\n\r\n  &[type='file']::-ms-value {\r\n    display: none; /* remove file entry in IE */\r\n  }\r\n\r\n  /* stylelint-disable-next-line */\r\n  @media screen and (min--moz-device-pixel-ratio: 0) {\r\n    &[type='number'] {\r\n      appearance: textfield; /* remove number spinner in FireFox */\r\n    }\r\n  }\r\n\r\n  ${props => sizeStyles(props)};\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  /* Color (default and validation) styling */\r\n  ${props => colorStyles(props)};\r\n\r\n  &:disabled {\r\n    cursor: default;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledTextInput.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport React, { Children } from 'react';\r\nimport { retrieveComponentStyles, DEFAULT_THEME, getColor } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'forms.media_figure';\r\n\r\ninterface IStyledTextMediaFigureProps {\r\n  isRotated?: boolean;\r\n  isHovered?: boolean;\r\n  isFocused?: boolean;\r\n  isDisabled?: boolean;\r\n  position: 'start' | 'end';\r\n}\r\n\r\nconst colorStyles = (props: IStyledTextMediaFigureProps & ThemeProps<DefaultTheme>) => {\r\n  let shade = 600;\r\n\r\n  if (props.isDisabled) {\r\n    shade = 400;\r\n  } else if (props.isHovered || props.isFocused) {\r\n    shade = 700;\r\n  }\r\n\r\n  return css`\r\n    color: ${getColor('neutralHue', shade, props.theme)};\r\n  `;\r\n};\r\n\r\nconst sizeStyles = (props: IStyledTextMediaFigureProps & ThemeProps<DefaultTheme>) => {\r\n  const size = props.theme.iconSizes.md;\r\n  const marginFirst = `1px ${props.theme.space.base * 2}px auto 0`;\r\n  const marginLast = `1px 0 auto ${props.theme.space.base * 2}px`;\r\n  let margin;\r\n\r\n  if (props.position === 'start') {\r\n    margin = props.theme.rtl ? marginLast : marginFirst;\r\n  } else {\r\n    margin = props.theme.rtl ? marginFirst : marginLast;\r\n  }\r\n\r\n  return css`\r\n    margin: ${margin};\r\n    width: ${size};\r\n    height: ${size};\r\n  `;\r\n};\r\n\r\nexport const StyledTextMediaFigure = styled(\r\n  /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\r\n  ({ children, position, isHovered, isFocused, isDisabled, isRotated, theme, ...props }) =>\r\n    React.cloneElement(Children.only(children), props)\r\n).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledTextMediaFigureProps>`\r\n  transform: ${props => props.isRotated && `rotate(${props.theme.rtl ? '-' : '+'}180deg)`};\r\n  /* prettier-ignore */\r\n  transition:\r\n    transform 0.25s ease-in-out,\r\n    color 0.25s ease-in-out;\r\n\r\n  ${props => colorStyles(props)};\r\n\r\n  ${props => sizeStyles(props)}\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledTextMediaFigure.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledTextInput } from './StyledTextInput';\r\n\r\nconst COMPONENT_ID = 'forms.media_input';\r\n\r\nexport const StyledTextMediaInput = styled(StyledTextInput).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  isBare: true\r\n})`\r\n  flex-grow: 1;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledTextMediaInput.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledTextInput } from './StyledTextInput';\r\n\r\nconst COMPONENT_ID = 'forms.textarea';\r\n\r\ninterface IStyledTextareaProps {\r\n  isResizable?: boolean;\r\n  isHidden?: boolean;\r\n}\r\n\r\nconst hiddenStyles = `\r\n  visibility: hidden;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  height: 0;\r\n  top: 0;\r\n  left: 0;\r\n  transform: translateZ(0);\r\n`;\r\n\r\nexport const StyledTextarea = styled(StyledTextInput).attrs({\r\n  as: 'textarea',\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledTextareaProps>`\r\n  resize: ${props => (props.isResizable ? 'vertical' : 'none')};\r\n  overflow: auto;\r\n  ${props => props.isHidden && hiddenStyles};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledTextarea.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { getColor, DEFAULT_THEME, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\nimport { rgba } from 'polished';\r\nimport { StyledTileIcon } from './StyledTileIcon';\r\n\r\nconst COMPONENT_ID = 'forms.tile';\r\n\r\ninterface IStyledTileProps {\r\n  isDisabled?: boolean;\r\n  isFocused?: boolean;\r\n  isSelected?: boolean;\r\n}\r\n\r\nconst colorStyles = (props: IStyledTileProps & ThemeProps<DefaultTheme>) => {\r\n  const SHADE = 600;\r\n\r\n  const iconColor = getColor('neutralHue', SHADE, props.theme);\r\n  const color = getColor('neutralHue', SHADE + 200, props.theme);\r\n  const borderColor = getColor('neutralHue', SHADE - 300, props.theme);\r\n  const hoverBackgroundColor = getColor('primaryHue', SHADE, props.theme, 0.08);\r\n  const hoverBorderColor = getColor('primaryHue', SHADE, props.theme);\r\n  const focusBorderColor = hoverBorderColor;\r\n  const focusBoxShadow = props.theme.shadows.md(rgba(focusBorderColor!, 0.35));\r\n  const activeBackgroundColor = getColor('primaryHue', SHADE, props.theme, 0.2);\r\n  const activeBorderColor = focusBorderColor;\r\n  const disabledBackgroundColor = getColor('neutralHue', SHADE - 500, props.theme);\r\n  const disabledBorderColor = getColor('neutralHue', SHADE - 400, props.theme);\r\n  const disabledColor = getColor('neutralHue', SHADE - 200, props.theme);\r\n  const selectedBorderColor = focusBorderColor;\r\n  const selectedBackgroundColor = selectedBorderColor;\r\n  const selectedHoverBorderColor = getColor('primaryHue', SHADE + 100, props.theme);\r\n  const selectedHoverBackgroundColor = selectedHoverBorderColor;\r\n  const selectedActiveBorderColor = getColor('primaryHue', SHADE + 200, props.theme);\r\n  const selectedActiveBackgroundColor = selectedActiveBorderColor;\r\n  const selectedDisabledBackgroundColor = disabledBorderColor;\r\n\r\n  return css`\r\n    border: ${props.theme.borders.sm} ${getColor('neutralHue', SHADE - 300, props.theme)};\r\n    border-color: ${borderColor};\r\n    background-color: ${props.theme.colors.background};\r\n    color: ${color};\r\n\r\n    ${StyledTileIcon} {\r\n      color: ${iconColor};\r\n    }\r\n\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n\r\n    &:hover:not([aria-disabled='true']) {\r\n      border-color: ${hoverBorderColor};\r\n      background-color: ${hoverBackgroundColor};\r\n\r\n      /* stylelint-disable-next-line selector-max-specificity */\r\n      ${StyledTileIcon} {\r\n        color: ${color};\r\n      }\r\n    }\r\n\r\n    &[data-garden-focus-visible='true'] {\r\n      border-color: ${focusBorderColor};\r\n      box-shadow: ${focusBoxShadow};\r\n    }\r\n\r\n    &:active:not([aria-disabled='true']) {\r\n      border-color: ${activeBorderColor};\r\n      background-color: ${activeBackgroundColor};\r\n\r\n      /* stylelint-disable-next-line selector-max-specificity */\r\n      ${StyledTileIcon} {\r\n        color: ${color};\r\n      }\r\n    }\r\n\r\n    &[data-garden-selected='true'] {\r\n      border-color: ${selectedBorderColor};\r\n      background-color: ${selectedBackgroundColor};\r\n      color: ${props.theme.colors.background};\r\n\r\n      ${StyledTileIcon} {\r\n        color: ${props.theme.colors.background};\r\n      }\r\n    }\r\n\r\n    /* stylelint-disable selector-max-specificity */\r\n    &[data-garden-selected='true']:not([aria-disabled='true']):hover {\r\n      border-color: ${selectedHoverBorderColor};\r\n      background-color: ${selectedHoverBackgroundColor};\r\n      color: ${props.theme.colors.background};\r\n\r\n      ${StyledTileIcon} {\r\n        color: ${props.theme.colors.background};\r\n      }\r\n    }\r\n\r\n    &[data-garden-selected='true']:not([aria-disabled='true']):active {\r\n      border-color: ${selectedActiveBorderColor};\r\n      background-color: ${selectedActiveBackgroundColor};\r\n      color: ${props.theme.colors.background};\r\n\r\n      ${StyledTileIcon} {\r\n        color: ${props.theme.colors.background};\r\n      }\r\n    }\r\n    /* stylelint-enable selector-max-specificity */\r\n\r\n    &[aria-disabled='true'] {\r\n      border-color: ${disabledBorderColor};\r\n      background-color: ${disabledBackgroundColor};\r\n      color: ${disabledColor};\r\n\r\n      /* stylelint-disable-next-line selector-max-specificity */\r\n      ${StyledTileIcon} {\r\n        color: ${disabledColor};\r\n      }\r\n    }\r\n\r\n    &[data-garden-selected='true'][aria-disabled='true'] {\r\n      background-color: ${selectedDisabledBackgroundColor};\r\n      color: ${disabledColor};\r\n\r\n      /* stylelint-disable-next-line selector-max-specificity */\r\n      ${StyledTileIcon} {\r\n        color: ${disabledColor};\r\n      }\r\n    }\r\n  `;\r\n};\r\n\r\nexport const StyledTile = styled.label.attrs<IStyledTileProps>(props => ({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  'data-garden-focus-visible': props.isFocused,\r\n  'data-garden-selected': props.isSelected\r\n}))<IStyledTileProps>`\r\n  display: block;\r\n  position: relative;\r\n  /* prettier-ignore */\r\n  transition:\r\n    border-color .25s ease-in-out,\r\n    box-shadow .1s ease-in-out,\r\n    background-color .25s ease-in-out,\r\n    color .25s ease-in-out;\r\n  border-radius: ${props => props.theme.borderRadii.md};\r\n  cursor: ${props => !props.isDisabled && 'pointer'};\r\n  padding: ${props => props.theme.space.base * 5}px;\r\n  direction: ${props => props.theme.rtl && 'rtl'};\r\n\r\n  ${props => colorStyles(props)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledTile.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme, css } from 'styled-components';\r\nimport { math } from 'polished';\r\nimport {\r\n  DEFAULT_THEME,\r\n  retrieveComponentStyles,\r\n  getLineHeight\r\n} from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'forms.tile_description';\r\n\r\ninterface IStyledTileDescriptionProps {\r\n  isCentered?: boolean;\r\n}\r\n\r\nconst sizeStyles = (props: IStyledTileDescriptionProps & ThemeProps<DefaultTheme>) => {\r\n  let marginDirection = 'left';\r\n  let marginValue;\r\n\r\n  if (props.theme.rtl) {\r\n    marginDirection = 'right';\r\n  }\r\n\r\n  if (!props.isCentered) {\r\n    marginValue = math(`(${props.theme.iconSizes.md} * 2) + ${props.theme.space.base * 5}px`);\r\n  }\r\n\r\n  return css`\r\n    margin-top: ${props.theme.space.base}px;\r\n    /* stylelint-disable-next-line property-no-unknown */\r\n    margin-${marginDirection}: ${marginValue};\r\n  `;\r\n};\r\n\r\nexport const StyledTileDescription = styled.span.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledTileDescriptionProps>`\r\n  display: block;\r\n  text-align: ${props => props.isCentered && 'center'};\r\n  line-height: ${props => getLineHeight(props.theme.space.base * 4, props.theme.fontSizes.sm)};\r\n  font-size: ${props => props.theme.fontSizes.sm};\r\n\r\n  ${props => sizeStyles(props)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledTileDescription.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { DEFAULT_THEME, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\nimport { math } from 'polished';\r\n\r\nconst COMPONENT_ID = 'forms.tile_icon';\r\n\r\ninterface IStyledTileIconProps {\r\n  isCentered?: boolean;\r\n}\r\n\r\nconst sizeStyles = (props: IStyledTileIconProps & ThemeProps<DefaultTheme>) => {\r\n  const iconSize = math(`${props.theme.iconSizes.md} * 2`);\r\n  let position;\r\n  let top;\r\n  let horizontalValue;\r\n\r\n  if (!props.isCentered) {\r\n    position = 'absolute';\r\n    top = `${props.theme.space.base * 6}px`;\r\n    horizontalValue = `left: ${props.theme.space.base * 5}px`;\r\n\r\n    if (props.theme.rtl) {\r\n      horizontalValue = `right: ${props.theme.space.base * 5}px`;\r\n    }\r\n  }\r\n\r\n  return css`\r\n    position: ${position};\r\n    top: ${top};\r\n    ${horizontalValue};\r\n\r\n    & > * {\r\n      width: ${iconSize};\r\n      height: ${iconSize};\r\n    }\r\n  `;\r\n};\r\n\r\nexport const StyledTileIcon = styled.span.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledTileIconProps>`\r\n  display: block;\r\n  transition: color 0.25s ease-in-out;\r\n  text-align: center;\r\n  line-height: 0;\r\n\r\n  ${props => sizeStyles(props)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledTileIcon.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nexport const StyledTileInput = styled.input`\r\n  position: absolute;\r\n  border: 0;\r\n  clip: rect(1px, 1px, 1px, 1px);\r\n  padding: 0;\r\n  width: 1px;\r\n  height: 1px;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n`;\r\n\r\nStyledTileInput.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme, css } from 'styled-components';\r\nimport { math } from 'polished';\r\nimport {\r\n  retrieveComponentStyles,\r\n  DEFAULT_THEME,\r\n  getLineHeight\r\n} from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'forms.tile_label';\r\n\r\ninterface IStyledTileLabelProps {\r\n  isCentered?: boolean;\r\n}\r\n\r\nconst sizeStyles = (props: IStyledTileLabelProps & ThemeProps<DefaultTheme>) => {\r\n  let marginDirection = 'left';\r\n  let marginTop = `${props.theme.space.base * 2}px`;\r\n  let marginValue;\r\n\r\n  if (props.theme.rtl) {\r\n    marginDirection = 'right';\r\n  }\r\n\r\n  if (!props.isCentered) {\r\n    marginValue = math(`(${props.theme.iconSizes.md} * 2) + ${props.theme.space.base * 5}px`);\r\n    marginTop = '0';\r\n  }\r\n\r\n  return css`\r\n    margin-top: ${marginTop};\r\n    /* stylelint-disable-next-line property-no-unknown */\r\n    margin-${marginDirection}: ${marginValue};\r\n  `;\r\n};\r\n\r\nexport const StyledTileLabel = styled.span.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledTileLabelProps>`\r\n  display: block;\r\n  text-align: ${props => props.isCentered && 'center'};\r\n  line-height: ${props => getLineHeight(props.theme.space.base * 5, props.theme.fontSizes.md)};\r\n  font-size: ${props => props.theme.fontSizes.md};\r\n  font-weight: ${props => props.theme.fontWeights.semibold};\r\n\r\n  ${props => sizeStyles(props)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledTileLabel.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { math } from 'polished';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledHint } from '../common/StyledHint';\r\n\r\nconst COMPONENT_ID = 'forms.toggle_hint';\r\n\r\nexport const StyledToggleHint = styled(StyledHint).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  /* stylelint-disable-next-line */\r\n  padding-${props => (props.theme.rtl ? 'right' : 'left')}:\r\n    ${props => math(`${props.theme.space.base} * 12px`)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledToggleHint.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { math } from 'polished';\r\nimport { retrieveComponentStyles, getColor, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledCheckInput } from '../checkbox/StyledCheckInput';\r\nimport { StyledToggleLabel } from './StyledToggleLabel';\r\n\r\nconst COMPONENT_ID = 'forms.toggle';\r\n\r\nconst colorStyles = (props: ThemeProps<DefaultTheme>) => {\r\n  const SHADE = 600;\r\n\r\n  const backgroundColor = getColor('neutralHue', SHADE - 100, props.theme);\r\n  const hoverBackgroundColor = getColor('neutralHue', SHADE, props.theme);\r\n  const activeBackgroundColor = getColor('neutralHue', SHADE + 100, props.theme);\r\n\r\n  return css`\r\n    & ~ ${StyledToggleLabel}::before {\r\n      background-color: ${backgroundColor};\r\n    }\r\n\r\n    /* stylelint-disable selector-max-specificity */\r\n    &:enabled ~ ${StyledToggleLabel}:hover::before {\r\n      background-color: ${hoverBackgroundColor};\r\n    }\r\n\r\n    &:enabled ~ ${StyledToggleLabel}:active::before {\r\n      background-color: ${activeBackgroundColor};\r\n    }\r\n    /* stylelint-enable selector-max-specificity */\r\n  `;\r\n};\r\n\r\nconst sizeStyles = (props: ThemeProps<DefaultTheme>) => {\r\n  const height = `${props.theme.space.base * 5}px`;\r\n  const width = `${props.theme.space.base * 10}px`;\r\n  const iconSize = props.theme.iconSizes.md;\r\n  const iconPosition = math(`(${height} - ${iconSize}) / 2`);\r\n  const checkedIconPosition = math(`${width} - ${iconSize} - ${iconPosition}`);\r\n\r\n  return css`\r\n    & ~ ${StyledToggleLabel}::before {\r\n      width: ${width};\r\n      height: ${height};\r\n    }\r\n\r\n    & ~ ${StyledToggleLabel} > svg {\r\n      top: ${iconPosition};\r\n      ${props.theme.rtl ? 'right' : 'left'}: ${iconPosition};\r\n      width: ${iconSize};\r\n      height: ${iconSize};\r\n    }\r\n\r\n    &:checked ~ ${StyledToggleLabel} > svg {\r\n      ${props.theme.rtl ? 'right' : 'left'}: ${checkedIconPosition};\r\n    }\r\n  `;\r\n};\r\n\r\nexport const StyledToggleInput = styled(StyledCheckInput).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  & ~ ${StyledToggleLabel}::before {\r\n    top: 0;\r\n    /* prettier-ignore */\r\n    transition:\r\n      box-shadow .1s ease-in-out,\r\n      background-color .15s ease-in-out,\r\n      color .25s ease-in-out;\r\n    border: none;\r\n    border-radius: 100px;\r\n  }\r\n\r\n  ${props => sizeStyles(props)};\r\n\r\n  ${props => colorStyles(props)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledToggleInput.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledCheckLabel } from '../checkbox/StyledCheckLabel';\r\n\r\nconst COMPONENT_ID = 'forms.toggle_label';\r\n\r\nconst sizeStyles = (props: ThemeProps<DefaultTheme>) => {\r\n  const size = props.theme.space.base * 10; /* from StyledToggleInput */\r\n  const padding = size + props.theme.space.base * 2;\r\n\r\n  return css`\r\n    /* stylelint-disable property-no-unknown */\r\n    padding-${props.theme.rtl ? 'right' : 'left'}: ${padding}px;\r\n\r\n    &[hidden] {\r\n      padding-${props.theme.rtl ? 'right' : 'left'}: ${size}px;\r\n    }\r\n    /* stylelint-enable property-no-unknown */\r\n  `;\r\n};\r\n\r\nexport const StyledToggleLabel = styled(StyledCheckLabel).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  ${props => sizeStyles(props)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledToggleLabel.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { math } from 'polished';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledMessage } from '../common/StyledMessage';\r\nimport { StyledMessageIcon } from '../common/StyledMessageIcon';\r\n\r\nconst COMPONENT_ID = 'forms.toggle_message';\r\n\r\nexport const StyledToggleMessage = styled(StyledMessage).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  /* stylelint-disable-next-line */\r\n  padding-${props => (props.theme.rtl ? 'right' : 'left')}:\r\n    ${props => math(`${props.theme.space.base} * 12px`)};\r\n\r\n  & ${StyledMessageIcon} {\r\n    ${props => (props.theme.rtl ? 'right' : 'left')}: ${props =>\r\n  math(`${props.theme.space.base} * 10px - ${props.theme.iconSizes.md}`)};\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledToggleMessage.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { CircleIcon } from './circle-sm';\r\n\r\nconst COMPONENT_ID = 'forms.toggle_svg';\r\n\r\nexport const StyledToggleSvg = styled(CircleIcon).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  transition: all 0.15s ease-in-out;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledToggleSvg.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nexport const CircleIcon = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <circle cx=\"8\" cy=\"8\" r=\"6\" fill=\"currentColor\"/>\r\n</svg>\r\n\r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { createContext, useContext, MutableRefObject } from 'react';\r\nimport { IUseFieldPropGetters } from '@zendeskgarden/container-field';\r\n\r\ninterface IFieldContext extends IUseFieldPropGetters {\r\n  getMessageProps: (messageProps: any) => any;\r\n  isLabelActive: boolean;\r\n  isLabelHovered: boolean;\r\n  setIsLabelHovered: (isLabelHovered: boolean) => void;\r\n  setIsLabelActive: (isLabelActive: boolean) => void;\r\n  multiThumbRangeRef: MutableRefObject<HTMLDivElement | null>;\r\n}\r\n\r\nexport const FieldContext = createContext<IFieldContext | undefined>(undefined);\r\n\r\n/**\r\n * Retrieve Field component context\r\n */\r\nconst useFieldContext = () => {\r\n  const fieldContext = useContext(FieldContext);\r\n\r\n  return fieldContext;\r\n};\r\n\r\nexport default useFieldContext;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { createContext, useContext } from 'react';\r\n\r\ninterface IFieldsetContext {\r\n  isCompact?: boolean;\r\n}\r\n\r\nexport const FieldsetContext = createContext<IFieldsetContext | undefined>(undefined);\r\n\r\n/**\r\n * Retrieve Fieldset component context\r\n */\r\nconst useFieldsetContext = () => {\r\n  const fieldsetContext = useContext(FieldsetContext);\r\n\r\n  return fieldsetContext;\r\n};\r\n\r\nexport default useFieldsetContext;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { createContext, useContext } from 'react';\r\n\r\ninterface IFileContext {\r\n  isCompact?: boolean;\r\n}\r\n\r\nexport const FileContext = createContext<IFileContext | undefined>(undefined);\r\n\r\nconst useFileContext = () => {\r\n  return useContext(FileContext);\r\n};\r\n\r\nexport default useFileContext;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { createContext, useContext } from 'react';\r\n\r\ntype INPUT_CONTEXT_VALUE = 'checkbox' | 'radio' | 'toggle' | undefined;\r\n\r\nexport const InputContext = createContext<INPUT_CONTEXT_VALUE>(undefined);\r\n\r\n/**\r\n * Retrieve input component context\r\n */\r\nconst useInputContext = () => {\r\n  return useContext(InputContext);\r\n};\r\n\r\nexport default useInputContext;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { createContext, useContext } from 'react';\r\n\r\ninterface IInputGroupContext {\r\n  isCompact?: boolean;\r\n}\r\n\r\nexport const InputGroupContext = createContext<IInputGroupContext | undefined>(undefined);\r\n\r\n/**\r\n * Retrieve InputGroup component context\r\n */\r\nexport const useInputGroupContext = () => {\r\n  return useContext(InputGroupContext);\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { useContext, createContext, ChangeEventHandler } from 'react';\r\n\r\ninterface ITilesContext {\r\n  value?: string;\r\n  onChange?: ChangeEventHandler<HTMLInputElement>;\r\n  name: string;\r\n  isCentered?: boolean;\r\n}\r\n\r\nexport const TilesContext = createContext<ITilesContext | undefined>(undefined);\r\n\r\nexport const useTilesContext = () => {\r\n  return useContext(TilesContext);\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { Col, Grid, IGridProps, IRowProps, Row } from '@zendeskgarden/react-grid';\r\nimport { IGridRow } from './types';\r\n\r\ninterface IArgs extends IGridProps {\r\n  rows: IGridRow[];\r\n  alignItems?: IRowProps['alignItems'];\r\n  alignItemsXs?: IRowProps['alignItemsXs'];\r\n  alignItemsSm?: IRowProps['alignItemsSm'];\r\n  alignItemsMd?: IRowProps['alignItemsMd'];\r\n  alignItemsLg?: IRowProps['alignItemsLg'];\r\n  alignItemsXl?: IRowProps['alignItemsXl'];\r\n  justifyContent?: IRowProps['justifyContent'];\r\n  justifyContentXs?: IRowProps['justifyContentXs'];\r\n  justifyContentSm?: IRowProps['justifyContentSm'];\r\n  justifyContentMd?: IRowProps['justifyContentMd'];\r\n  justifyContentLg?: IRowProps['justifyContentLg'];\r\n  justifyContentXl?: IRowProps['justifyContentXl'];\r\n  wrap?: IRowProps['wrap'];\r\n  wrapXs?: IRowProps['wrapXs'];\r\n  wrapSm?: IRowProps['wrapSm'];\r\n  wrapMd?: IRowProps['wrapMd'];\r\n  wrapLg?: IRowProps['wrapLg'];\r\n  wrapXl?: IRowProps['wrapXl'];\r\n}\r\n\r\nexport const GridStory: Story<IArgs> = ({\r\n  rows,\r\n  alignItems,\r\n  alignItemsXs,\r\n  alignItemsSm,\r\n  alignItemsMd,\r\n  alignItemsLg,\r\n  alignItemsXl,\r\n  justifyContent,\r\n  justifyContentXs,\r\n  justifyContentSm,\r\n  justifyContentMd,\r\n  justifyContentLg,\r\n  justifyContentXl,\r\n  wrap,\r\n  wrapXs,\r\n  wrapSm,\r\n  wrapMd,\r\n  wrapLg,\r\n  wrapXl,\r\n  ...args\r\n}) => (\r\n  <Grid {...args}>\r\n    {rows.map((row, rowIndex) => {\r\n      const { cols, ...props } = row;\r\n\r\n      return (\r\n        <Row\r\n          key={rowIndex}\r\n          {...props}\r\n          alignItems={alignItems}\r\n          alignItemsXs={alignItemsXs}\r\n          alignItemsSm={alignItemsSm}\r\n          alignItemsMd={alignItemsMd}\r\n          alignItemsLg={alignItemsLg}\r\n          alignItemsXl={alignItemsXl}\r\n          justifyContent={justifyContent}\r\n          justifyContentXs={justifyContentXs}\r\n          justifyContentSm={justifyContentSm}\r\n          justifyContentMd={justifyContentMd}\r\n          justifyContentLg={justifyContentLg}\r\n          justifyContentXl={justifyContentXl}\r\n          wrap={wrap}\r\n          wrapXs={wrapXs}\r\n          wrapSm={wrapSm}\r\n          wrapMd={wrapMd}\r\n          wrapLg={wrapLg}\r\n          wrapXl={wrapXl}\r\n        >\r\n          {cols.map((col, colIndex) => (\r\n            <Col key={colIndex} {...col} />\r\n          ))}\r\n        </Row>\r\n      );\r\n    })}\r\n  </Grid>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { IColProps } from '@zendeskgarden/react-grid';\r\nimport { IGridRow } from './types';\r\n\r\nconst ROW_COLUMNS_STANDARD: IColProps[] = Array.from({ length: 12 }, (_, index) => ({\r\n  children: index < 9 ? `0${index + 1}` : `${index + 1}`,\r\n  textAlign: 'center'\r\n}));\r\n\r\nconst ROW_COLUMNS_RESPONSIVE: IColProps[] = Array(12).fill({\r\n  children: 'xl={1} lg={2} md={4} sm={6} xs={12}',\r\n  textAlign: 'center',\r\n  xl: 1,\r\n  lg: 2,\r\n  md: 4,\r\n  sm: 6,\r\n  xs: 12\r\n});\r\n\r\nconst ROW_COLUMNS_JUSTIFY: IColProps[] = [\r\n  { children: 'size={4}', size: 4, textAlign: 'center' },\r\n  { children: 'size={4}', size: 4, textAlign: 'center' }\r\n];\r\n\r\nconst ROW_COLUMNS_OFFSET: IColProps[] = [\r\n  { children: 'md={4}', md: 3, textAlign: 'center' },\r\n  { children: 'md={4} offsetMd={4}', md: 3, offsetMd: 6, textAlign: 'center' }\r\n];\r\n\r\nexport const GRID_ROWS: IGridRow[] = [\r\n  {\r\n    cols: [{ children: 'Col' }]\r\n  },\r\n  {\r\n    cols: ROW_COLUMNS_STANDARD\r\n  },\r\n  {\r\n    cols: ROW_COLUMNS_RESPONSIVE\r\n  },\r\n  {\r\n    cols: ROW_COLUMNS_JUSTIFY\r\n  },\r\n  {\r\n    cols: ROW_COLUMNS_OFFSET\r\n  }\r\n];\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  ALIGN_SELF,\r\n  ARRAY_ALIGN_SELF,\r\n  GRID_NUMBER,\r\n  BREAKPOINT,\r\n  TEXT_ALIGN,\r\n  ARRAY_TEXT_ALIGN\r\n} from '../utils/types';\r\nimport { StyledCol } from '../styled';\r\nimport useGridContext from '../utils/useGridContext';\r\n\r\nexport interface IColProps extends HTMLAttributes<HTMLDivElement> {\r\n  /** Sets the total number of grid `columns` that the column spans on all screen sizes */\r\n  size?: GRID_NUMBER;\r\n  /** Defines the column size on extra-small screens.\r\n   *  See [breakpoints](/components/theme-object#default_theme).\r\n   */\r\n  xs?: BREAKPOINT;\r\n  /** Defines the column size on small screens*/\r\n  sm?: BREAKPOINT;\r\n  /** Defines the column size on medium screens */\r\n  md?: BREAKPOINT;\r\n  /** Defines the column size on large screens */\r\n  lg?: BREAKPOINT;\r\n  /** Defines the column size on extra-large screens */\r\n  xl?: BREAKPOINT;\r\n  /**\r\n   * Applies the `align-self` flex item property, overriding `Row alignItems`\r\n   * vertical alignment on all screen sizes\r\n   */\r\n  alignSelf?: ALIGN_SELF;\r\n  /** Applies the `align-self` flex item property to the column on extra-small screens */\r\n  alignSelfXs?: ALIGN_SELF;\r\n  /** Applies the `align-self` flex item property to the column on small screens */\r\n  alignSelfSm?: ALIGN_SELF;\r\n  /** Applies the `align-self` flex item property to the column on medium screens */\r\n  alignSelfMd?: ALIGN_SELF;\r\n  /** Applies the `align-self` flex item property to the column on large screens */\r\n  alignSelfLg?: ALIGN_SELF;\r\n  /** Applies the `align-self` flex item property to the column on extra-large screens */\r\n  alignSelfXl?: ALIGN_SELF;\r\n  /**\r\n   * Applies the RTL-aware `text-align` property to the column on all screen sizes\r\n   */\r\n  textAlign?: TEXT_ALIGN;\r\n  /** Applies the `text-align` property to the column on extra-small screens */\r\n  textAlignXs?: TEXT_ALIGN;\r\n  /** Applies the `text-align` property to the column on small screens */\r\n  textAlignSm?: TEXT_ALIGN;\r\n  /** Applies the `text-align` property to the column on medium screens */\r\n  textAlignMd?: TEXT_ALIGN;\r\n  /** Applies the `text-align` property to the column on large screens */\r\n  textAlignLg?: TEXT_ALIGN;\r\n  /** Applies the `text-align` property to the column on extra-large screens */\r\n  textAlignXl?: TEXT_ALIGN;\r\n  /**\r\n   * Offsets the column relative to the total number of `columns` in the\r\n   * grid on all screen sizes\r\n   */\r\n  offset?: GRID_NUMBER;\r\n  /** Applies offset to the column on extra-small screens */\r\n  offsetXs?: GRID_NUMBER;\r\n  /** Applies offset to the column on small screens */\r\n  offsetSm?: GRID_NUMBER;\r\n  /** Applies offset to the column on medium screens */\r\n  offsetMd?: GRID_NUMBER;\r\n  /** Applies offset to the column on large screens */\r\n  offsetLg?: GRID_NUMBER;\r\n  /** Applies offset to the column on extra-large screens */\r\n  offsetXl?: GRID_NUMBER;\r\n  /**\r\n   * Applies the `order` flex item property to the column on all screen sizes. Note that\r\n   * order modification can introduce accessibility problems by\r\n   * confusing tab ordering. Rely on semantic DOM ordering whenever possible.\r\n   */\r\n  order?: GRID_NUMBER;\r\n  /** Sets the `order` flex item property of the column on extra-small screens */\r\n  orderXs?: GRID_NUMBER;\r\n  /** Sets the `order` flex item property of the column on small screens */\r\n  orderSm?: GRID_NUMBER;\r\n  /** Sets the `order` flex item property of the column on medium screens */\r\n  orderMd?: GRID_NUMBER;\r\n  /** Sets the `order` flex item property of the column on large screens */\r\n  orderLg?: GRID_NUMBER;\r\n  /** Sets the `order` flex item property of the column on extra-large screens */\r\n  orderXl?: GRID_NUMBER;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Col = React.forwardRef<HTMLDivElement, IColProps>(({ size, ...props }, ref) => {\r\n  const { columns, gutters, debug } = useGridContext();\r\n\r\n  return (\r\n    <StyledCol\r\n      sizeAll={size}\r\n      columns={columns}\r\n      gutters={gutters}\r\n      debug={debug}\r\n      ref={ref}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\n\r\nCol.displayName = 'Col';\r\n\r\nCol.propTypes = {\r\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  xs: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.bool]),\r\n  sm: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.bool]),\r\n  md: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.bool]),\r\n  lg: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.bool]),\r\n  xl: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.bool]),\r\n  alignSelf: PropTypes.oneOf(ARRAY_ALIGN_SELF),\r\n  alignSelfXs: PropTypes.oneOf(ARRAY_ALIGN_SELF),\r\n  alignSelfSm: PropTypes.oneOf(ARRAY_ALIGN_SELF),\r\n  alignSelfMd: PropTypes.oneOf(ARRAY_ALIGN_SELF),\r\n  alignSelfLg: PropTypes.oneOf(ARRAY_ALIGN_SELF),\r\n  alignSelfXl: PropTypes.oneOf(ARRAY_ALIGN_SELF),\r\n  textAlign: PropTypes.oneOf(ARRAY_TEXT_ALIGN),\r\n  textAlignXs: PropTypes.oneOf(ARRAY_TEXT_ALIGN),\r\n  textAlignSm: PropTypes.oneOf(ARRAY_TEXT_ALIGN),\r\n  textAlignMd: PropTypes.oneOf(ARRAY_TEXT_ALIGN),\r\n  textAlignLg: PropTypes.oneOf(ARRAY_TEXT_ALIGN),\r\n  textAlignXl: PropTypes.oneOf(ARRAY_TEXT_ALIGN),\r\n  offset: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  offsetXs: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  offsetSm: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  offsetMd: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  offsetLg: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  offsetXl: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  order: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  orderXs: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  orderSm: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  orderMd: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  orderLg: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  orderXl: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { GRID_NUMBER, SPACE, ARRAY_SPACE } from '../utils/types';\r\nimport { GridContext } from '../utils/useGridContext';\r\nimport { StyledGrid } from '../styled';\r\n\r\nexport interface IGridProps extends HTMLAttributes<HTMLDivElement> {\r\n  /** Defines the number of individual columns that the grid contains */\r\n  columns?: GRID_NUMBER;\r\n  /** Specifies the grid column gutter width. The value `false` collapses the gutters */\r\n  gutters?: SPACE;\r\n  /** Highlights the columns for layout debugging */\r\n  debug?: boolean;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Grid = React.forwardRef<HTMLDivElement, IGridProps>(\r\n  ({ columns, debug, ...props }, ref) => {\r\n    const value = useMemo(\r\n      () => ({ columns, gutters: props.gutters!, debug }),\r\n      [columns, props.gutters, debug]\r\n    );\r\n\r\n    return (\r\n      <GridContext.Provider value={value}>\r\n        <StyledGrid debug={debug} ref={ref} {...props} />\r\n      </GridContext.Provider>\r\n    );\r\n  }\r\n);\r\n\r\nGrid.displayName = 'Grid';\r\n\r\nGrid.propTypes = {\r\n  columns: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  gutters: PropTypes.oneOf(ARRAY_SPACE),\r\n  debug: PropTypes.bool\r\n};\r\n\r\nGrid.defaultProps = {\r\n  columns: 12,\r\n  gutters: 'md'\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  ALIGN_ITEMS,\r\n  JUSTIFY_CONTENT,\r\n  WRAP,\r\n  ARRAY_ALIGN_ITEMS,\r\n  ARRAY_JUSTIFY_CONTENT,\r\n  ARRAY_WRAP\r\n} from '../utils/types';\r\nimport useGridContext from '../utils/useGridContext';\r\nimport { StyledRow } from '../styled';\r\n\r\nexport interface IRowProps extends HTMLAttributes<HTMLDivElement> {\r\n  /**\r\n   * Applies the `align-items` flex container property to the row.\r\n   * This affects vertical `Col` alignment on all screen sizes.\r\n   */\r\n  alignItems?: ALIGN_ITEMS;\r\n  /** Applies the `align-items` flex container property to the row on extra-small screens */\r\n  alignItemsXs?: ALIGN_ITEMS;\r\n  /** Applies the `align-items` flex container property to the row on small screens */\r\n  alignItemsSm?: ALIGN_ITEMS;\r\n  /** Applies the `align-items` flex container property to the row on medium screens */\r\n  alignItemsMd?: ALIGN_ITEMS;\r\n  /** Applies the `align-items` flex container property to the row on large screens */\r\n  alignItemsLg?: ALIGN_ITEMS;\r\n  /** Applies the `align-items` flex container property to the row on extra-large screens */\r\n  alignItemsXl?: ALIGN_ITEMS;\r\n  /**\r\n   * Applies the `justify-content` flex container property to the row.\r\n   * This affects horizontal `Col` alignment on all screen sizes.\r\n   */\r\n  justifyContent?: JUSTIFY_CONTENT;\r\n  /** Applies the `justify-content` flex container property to the row on extra-small screens */\r\n  justifyContentXs?: JUSTIFY_CONTENT;\r\n  /** Applies the `justify-content` flex container property to the row on small screens */\r\n  justifyContentSm?: JUSTIFY_CONTENT;\r\n  /** Applies the `justify-content` flex container property to the row on medium screens */\r\n  justifyContentMd?: JUSTIFY_CONTENT;\r\n  /** Applies the `justify-content` flex container property to the row on large screens */\r\n  justifyContentLg?: JUSTIFY_CONTENT;\r\n  /** Applies the `justify-content` flex container property to the row on extra-large screens */\r\n  justifyContentXl?: JUSTIFY_CONTENT;\r\n  /**\r\n   * Applies the `flex-wrap` container property to the row. This affects `Col` wrapping on\r\n   * all screen sizes.\r\n   */\r\n  wrap?: WRAP;\r\n  /** Applies the `flex-wrap` container property to the row on extra-small screens */\r\n  wrapXs?: WRAP;\r\n  /** Applies the `flex-wrap` container property to the row on small screens */\r\n  wrapSm?: WRAP;\r\n  /** Applies the `flex-wrap` container property to the row on medium screens */\r\n  wrapMd?: WRAP;\r\n  /** Applies the `flex-wrap` container property to the row on large screens */\r\n  wrapLg?: WRAP;\r\n  /** Applies the `flex-wrap` container property to the row on extra-large screens */\r\n  wrapXl?: WRAP;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Row = React.forwardRef<HTMLDivElement, IRowProps>(({ wrap, ...props }, ref) => {\r\n  const { gutters, debug } = useGridContext();\r\n\r\n  return <StyledRow gutters={gutters} debug={debug} wrapAll={wrap} ref={ref} {...props} />;\r\n});\r\n\r\nRow.displayName = 'Row';\r\n\r\nRow.propTypes = {\r\n  alignItems: PropTypes.oneOf(ARRAY_ALIGN_ITEMS),\r\n  alignItemsXs: PropTypes.oneOf(ARRAY_ALIGN_ITEMS),\r\n  alignItemsSm: PropTypes.oneOf(ARRAY_ALIGN_ITEMS),\r\n  alignItemsMd: PropTypes.oneOf(ARRAY_ALIGN_ITEMS),\r\n  alignItemsLg: PropTypes.oneOf(ARRAY_ALIGN_ITEMS),\r\n  alignItemsXl: PropTypes.oneOf(ARRAY_ALIGN_ITEMS),\r\n  justifyContent: PropTypes.oneOf(ARRAY_JUSTIFY_CONTENT),\r\n  justifyContentXs: PropTypes.oneOf(ARRAY_JUSTIFY_CONTENT),\r\n  justifyContentSm: PropTypes.oneOf(ARRAY_JUSTIFY_CONTENT),\r\n  justifyContentMd: PropTypes.oneOf(ARRAY_JUSTIFY_CONTENT),\r\n  justifyContentLg: PropTypes.oneOf(ARRAY_JUSTIFY_CONTENT),\r\n  justifyContentXl: PropTypes.oneOf(ARRAY_JUSTIFY_CONTENT),\r\n  wrap: PropTypes.oneOf(ARRAY_WRAP),\r\n  wrapXs: PropTypes.oneOf(ARRAY_WRAP),\r\n  wrapSm: PropTypes.oneOf(ARRAY_WRAP),\r\n  wrapMd: PropTypes.oneOf(ARRAY_WRAP),\r\n  wrapLg: PropTypes.oneOf(ARRAY_WRAP),\r\n  wrapXl: PropTypes.oneOf(ARRAY_WRAP)\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { math } from 'polished';\r\nimport { retrieveComponentStyles, getColor, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { ALIGN_SELF, BREAKPOINT, GRID_NUMBER, SPACE, TEXT_ALIGN } from '../utils/types';\r\n\r\nconst COMPONENT_ID = 'grid.col';\r\n\r\nconst colorStyles = (props: IStyledColProps) => {\r\n  const backgroundColor = getColor('primaryHue', 600, props.theme, 0.1);\r\n\r\n  return css`\r\n    background-clip: content-box;\r\n    background-color: ${backgroundColor};\r\n  `;\r\n};\r\n\r\nconst flexStyles = (\r\n  size: BREAKPOINT | undefined,\r\n  alignSelf: ALIGN_SELF | undefined,\r\n  textAlign: TEXT_ALIGN | undefined,\r\n  offset: GRID_NUMBER | undefined,\r\n  order: GRID_NUMBER | undefined,\r\n  props: IStyledColProps\r\n) => {\r\n  const margin = offset && `${math(`${offset} / ${props.columns} * 100`)}%`;\r\n  let flexBasis;\r\n  let flexGrow;\r\n  let maxWidth;\r\n  let width;\r\n\r\n  if (typeof size === 'boolean') {\r\n    flexBasis = 0;\r\n    flexGrow = 1;\r\n    maxWidth = '100%';\r\n  } else if (size === 'auto') {\r\n    flexBasis = 'auto';\r\n    flexGrow = 0;\r\n    maxWidth = '100%';\r\n    width = 'auto';\r\n  } else if (size !== undefined) {\r\n    flexBasis = `${math(`${size} / ${props.columns} * 100`)}%`;\r\n    flexGrow = 0;\r\n    maxWidth = flexBasis;\r\n  }\r\n\r\n  let horizontalAlign;\r\n\r\n  if (textAlign === 'start') {\r\n    horizontalAlign = props.theme.rtl ? 'right' : 'left';\r\n  } else if (textAlign === 'end') {\r\n    horizontalAlign = props.theme.rtl ? 'left' : 'right';\r\n  } else {\r\n    horizontalAlign = textAlign;\r\n  }\r\n\r\n  let flexOrder;\r\n\r\n  if (order === 'first') {\r\n    flexOrder = -1;\r\n  } else if (order === 'last') {\r\n    flexOrder = math(`${props.columns} + 1`);\r\n  } else {\r\n    flexOrder = order;\r\n  }\r\n\r\n  return css`\r\n    /* stylelint-disable declaration-block-no-redundant-longhand-properties */\r\n    flex-basis: ${flexBasis};\r\n    flex-grow: ${flexGrow};\r\n    flex-shrink: ${size && 0};\r\n    align-self: ${alignSelf === 'start' || alignSelf === 'end' ? `flex-${alignSelf}` : alignSelf};\r\n    order: ${flexOrder};\r\n    /* stylelint-disable-next-line property-no-unknown */\r\n    margin-${props.theme.rtl ? 'right' : 'left'}: ${margin};\r\n    width: ${width};\r\n    max-width: ${maxWidth};\r\n    text-align: ${horizontalAlign};\r\n  `;\r\n};\r\n\r\nconst mediaStyles = (\r\n  minWidth: string,\r\n  size: BREAKPOINT | undefined,\r\n  alignSelf: ALIGN_SELF | undefined,\r\n  textAlign: TEXT_ALIGN | undefined,\r\n  offset: GRID_NUMBER | undefined,\r\n  order: GRID_NUMBER | undefined,\r\n  props: IStyledColProps\r\n) => {\r\n  return css`\r\n    @media (min-width: ${minWidth}) {\r\n      ${flexStyles(size, alignSelf, textAlign, offset, order, props)};\r\n    }\r\n  `;\r\n};\r\n\r\nconst sizeStyles = (props: IStyledColProps) => {\r\n  const padding = props.gutters ? math(`${props.theme.space[props.gutters!]} / 2`) : 0;\r\n\r\n  return css`\r\n    padding-right: ${padding};\r\n    padding-left: ${padding};\r\n  `;\r\n};\r\n\r\nexport interface IStyledColProps extends ThemeProps<DefaultTheme> {\r\n  columns?: GRID_NUMBER;\r\n  gutters?: SPACE;\r\n  sizeAll?: GRID_NUMBER;\r\n  xs?: BREAKPOINT;\r\n  sm?: BREAKPOINT;\r\n  md?: BREAKPOINT;\r\n  lg?: BREAKPOINT;\r\n  xl?: BREAKPOINT;\r\n  alignSelf?: ALIGN_SELF;\r\n  alignSelfXs?: ALIGN_SELF;\r\n  alignSelfSm?: ALIGN_SELF;\r\n  alignSelfMd?: ALIGN_SELF;\r\n  alignSelfLg?: ALIGN_SELF;\r\n  alignSelfXl?: ALIGN_SELF;\r\n  textAlign?: TEXT_ALIGN;\r\n  textAlignXs?: TEXT_ALIGN;\r\n  textAlignSm?: TEXT_ALIGN;\r\n  textAlignMd?: TEXT_ALIGN;\r\n  textAlignLg?: TEXT_ALIGN;\r\n  textAlignXl?: TEXT_ALIGN;\r\n  offset?: GRID_NUMBER;\r\n  offsetXs?: GRID_NUMBER;\r\n  offsetSm?: GRID_NUMBER;\r\n  offsetMd?: GRID_NUMBER;\r\n  offsetLg?: GRID_NUMBER;\r\n  offsetXl?: GRID_NUMBER;\r\n  order?: GRID_NUMBER;\r\n  orderXs?: GRID_NUMBER;\r\n  orderSm?: GRID_NUMBER;\r\n  orderMd?: GRID_NUMBER;\r\n  orderLg?: GRID_NUMBER;\r\n  orderXl?: GRID_NUMBER;\r\n  debug?: boolean;\r\n}\r\n\r\nexport const StyledCol = styled.div.attrs<IStyledColProps>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledColProps>`\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n\r\n  ${props =>\r\n    flexStyles(\r\n      !props.sizeAll && (props.xs || props.sm || props.md || props.lg || props.xl)\r\n        ? undefined\r\n        : props.sizeAll || false,\r\n      props.alignSelf,\r\n      props.textAlign,\r\n      props.offset,\r\n      props.order,\r\n      props\r\n    )};\r\n  ${props => sizeStyles(props)};\r\n  ${props => props.debug && colorStyles(props)};\r\n\r\n  ${props =>\r\n    mediaStyles(\r\n      props.theme.breakpoints.xs,\r\n      props.xs,\r\n      props.alignSelfXs,\r\n      props.textAlignXs,\r\n      props.offsetXs,\r\n      props.orderXs,\r\n      props\r\n    )};\r\n\r\n  ${props =>\r\n    mediaStyles(\r\n      props.theme.breakpoints.sm,\r\n      props.sm,\r\n      props.alignSelfSm,\r\n      props.textAlignSm,\r\n      props.offsetSm,\r\n      props.orderSm,\r\n      props\r\n    )};\r\n\r\n  ${props =>\r\n    mediaStyles(\r\n      props.theme.breakpoints.md,\r\n      props.md,\r\n      props.alignSelfMd,\r\n      props.textAlignMd,\r\n      props.offsetMd,\r\n      props.orderMd,\r\n      props\r\n    )};\r\n\r\n  ${props =>\r\n    mediaStyles(\r\n      props.theme.breakpoints.lg,\r\n      props.lg,\r\n      props.alignSelfLg,\r\n      props.textAlignLg,\r\n      props.offsetLg,\r\n      props.orderLg,\r\n      props\r\n    )};\r\n\r\n  ${props =>\r\n    mediaStyles(\r\n      props.theme.breakpoints.xl,\r\n      props.xl,\r\n      props.alignSelfXl,\r\n      props.textAlignXl,\r\n      props.offsetXl,\r\n      props.orderXl,\r\n      props\r\n    )};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledCol.defaultProps = {\r\n  columns: 12,\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { math } from 'polished';\r\nimport { retrieveComponentStyles, getColor, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { SPACE } from '../utils/types';\r\n\r\nconst COMPONENT_ID = 'grid.grid';\r\n\r\nconst colorStyles = (props: IStyledGridProps) => {\r\n  const borderColor = getColor(props.theme.palette.crimson, 400, props.theme, 0.5);\r\n  const borderWidth = math(`${props.theme.borderWidths.sm} * 2`);\r\n\r\n  return css`\r\n    /* prettier-ignore */\r\n    box-shadow:\r\n      -${borderWidth} 0 0 0 ${borderColor},\r\n      ${borderWidth} 0 0 0 ${borderColor};\r\n  `;\r\n};\r\n\r\nconst sizeStyles = (props: IStyledGridProps) => {\r\n  const padding = props.gutters ? math(`${props.theme.space[props.gutters!]} / 2`) : 0;\r\n\r\n  return css`\r\n    padding-right: ${padding};\r\n    padding-left: ${padding};\r\n  `;\r\n};\r\n\r\nexport interface IStyledGridProps extends ThemeProps<DefaultTheme> {\r\n  gutters?: SPACE;\r\n  debug?: boolean;\r\n}\r\n\r\nexport const StyledGrid = styled.div.attrs<IStyledGridProps>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledGridProps>`\r\n  direction: ${props => props.theme.rtl && 'rtl'};\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n\r\n  ${props => sizeStyles(props)};\r\n  ${props => props.debug && colorStyles(props)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledGrid.defaultProps = {\r\n  gutters: 'md',\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { math } from 'polished';\r\nimport { retrieveComponentStyles, DEFAULT_THEME, getColor } from '@zendeskgarden/react-theming';\r\nimport { ALIGN_ITEMS, JUSTIFY_CONTENT, SPACE, WRAP } from '../utils/types';\r\n\r\nconst COMPONENT_ID = 'grid.row';\r\n\r\nconst colorStyles = (props: IStyledRowProps) => {\r\n  const borderColor = getColor(props.theme.palette.mint, 600, props.theme, 0.5);\r\n  const borderWidth = props.theme.borderWidths.sm;\r\n\r\n  return css`\r\n    /* prettier-ignore */\r\n    box-shadow:\r\n      inset 0 ${borderWidth} 0 0 ${borderColor},\r\n      inset 0 -${borderWidth} 0 0 ${borderColor};\r\n  `;\r\n};\r\n\r\nconst flexStyles = (alignItems?: ALIGN_ITEMS, justifyContent?: JUSTIFY_CONTENT, wrap?: WRAP) => {\r\n  let flexAlignItems;\r\n  let flexJustifyContent;\r\n\r\n  if (alignItems === 'start' || alignItems === 'end') {\r\n    flexAlignItems = `flex-${alignItems}`;\r\n  } else {\r\n    flexAlignItems = alignItems;\r\n  }\r\n\r\n  if (justifyContent === 'start' || justifyContent === 'end') {\r\n    flexJustifyContent = `flex-${justifyContent}`;\r\n  } else if (justifyContent === 'between' || justifyContent === 'around') {\r\n    flexJustifyContent = `space-${justifyContent}`;\r\n  } else {\r\n    flexJustifyContent = justifyContent;\r\n  }\r\n\r\n  return css`\r\n    flex-wrap: ${wrap};\r\n    align-items: ${flexAlignItems};\r\n    justify-content: ${flexJustifyContent};\r\n  `;\r\n};\r\n\r\nconst mediaStyles = (\r\n  minWidth: string,\r\n  alignItems?: ALIGN_ITEMS,\r\n  justifyContent?: JUSTIFY_CONTENT,\r\n  wrap?: WRAP\r\n) => {\r\n  return css`\r\n    @media (min-width: ${minWidth}) {\r\n      ${flexStyles(alignItems, justifyContent, wrap)};\r\n    }\r\n  `;\r\n};\r\n\r\nconst sizeStyles = (props: IStyledRowProps) => {\r\n  const margin = props.gutters ? math(`${props.theme.space[props.gutters!]} / 2`) : 0;\r\n\r\n  return css`\r\n    margin-right: -${margin};\r\n    margin-left: -${margin};\r\n  `;\r\n};\r\n\r\nexport interface IStyledRowProps extends ThemeProps<DefaultTheme> {\r\n  gutters?: SPACE;\r\n  alignItems?: ALIGN_ITEMS;\r\n  alignItemsXs?: ALIGN_ITEMS;\r\n  alignItemsSm?: ALIGN_ITEMS;\r\n  alignItemsMd?: ALIGN_ITEMS;\r\n  alignItemsLg?: ALIGN_ITEMS;\r\n  alignItemsXl?: ALIGN_ITEMS;\r\n  justifyContent?: JUSTIFY_CONTENT;\r\n  justifyContentXs?: JUSTIFY_CONTENT;\r\n  justifyContentSm?: JUSTIFY_CONTENT;\r\n  justifyContentMd?: JUSTIFY_CONTENT;\r\n  justifyContentLg?: JUSTIFY_CONTENT;\r\n  justifyContentXl?: JUSTIFY_CONTENT;\r\n  wrapAll?: WRAP;\r\n  wrapXs?: WRAP;\r\n  wrapSm?: WRAP;\r\n  wrapMd?: WRAP;\r\n  wrapLg?: WRAP;\r\n  wrapXl?: WRAP;\r\n  debug?: boolean;\r\n}\r\n\r\nexport const StyledRow = styled.div.attrs<IStyledRowProps>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledRowProps>`\r\n  display: flex;\r\n  box-sizing: border-box;\r\n\r\n  ${props => flexStyles(props.alignItems, props.justifyContent, props.wrapAll)}\r\n  ${props => sizeStyles(props)};\r\n  ${props => props.debug && colorStyles(props)};\r\n\r\n  ${props =>\r\n    mediaStyles(\r\n      props.theme.breakpoints.xs,\r\n      props.alignItemsXs,\r\n      props.justifyContentXs,\r\n      props.wrapXs\r\n    )};\r\n\r\n  ${props =>\r\n    mediaStyles(\r\n      props.theme.breakpoints.sm,\r\n      props.alignItemsSm,\r\n      props.justifyContentSm,\r\n      props.wrapSm\r\n    )};\r\n\r\n  ${props =>\r\n    mediaStyles(\r\n      props.theme.breakpoints.md,\r\n      props.alignItemsMd,\r\n      props.justifyContentMd,\r\n      props.wrapMd\r\n    )};\r\n\r\n  ${props =>\r\n    mediaStyles(\r\n      props.theme.breakpoints.lg,\r\n      props.alignItemsLg,\r\n      props.justifyContentLg,\r\n      props.wrapLg\r\n    )};\r\n\r\n  ${props =>\r\n    mediaStyles(\r\n      props.theme.breakpoints.xl,\r\n      props.alignItemsXl,\r\n      props.justifyContentXl,\r\n      props.wrapXl\r\n    )};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledRow.defaultProps = {\r\n  wrapAll: 'wrap',\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nexport type ALIGN_ITEMS = 'start' | 'end' | 'center' | 'baseline' | 'stretch';\r\nexport const ARRAY_ALIGN_ITEMS: ALIGN_ITEMS[] = ['start', 'end', 'center', 'baseline', 'stretch'];\r\n\r\nexport type ALIGN_SELF = 'auto' | ALIGN_ITEMS;\r\nexport const ARRAY_ALIGN_SELF: ALIGN_SELF[] = [\r\n  'auto',\r\n  'start',\r\n  'end',\r\n  'center',\r\n  'baseline',\r\n  'stretch'\r\n];\r\n\r\nexport type DIRECTION = 'row' | 'row-reverse' | 'column' | 'column-reverse';\r\nexport const ARRAY_DIRECTION: DIRECTION[] = ['row', 'row-reverse', 'column', 'column-reverse'];\r\n\r\nexport type JUSTIFY_CONTENT = 'start' | 'end' | 'center' | 'between' | 'around';\r\nexport const ARRAY_JUSTIFY_CONTENT: JUSTIFY_CONTENT[] = [\r\n  'start',\r\n  'end',\r\n  'center',\r\n  'between',\r\n  'around'\r\n];\r\n\r\nexport type TEXT_ALIGN = 'start' | 'end' | 'center' | 'justify';\r\nexport const ARRAY_TEXT_ALIGN: TEXT_ALIGN[] = ['start', 'end', 'center', 'justify'];\r\n\r\nexport type GRID_NUMBER = number | string;\r\nexport type BREAKPOINT = GRID_NUMBER | boolean;\r\n\r\nexport type SPACE = false | 'xxs' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl';\r\nexport const ARRAY_SPACE: SPACE[] = [false, 'xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl'];\r\n\r\nexport type WRAP = 'nowrap' | 'wrap' | 'wrap-reverse';\r\nexport const ARRAY_WRAP: WRAP[] = ['nowrap', 'wrap', 'wrap-reverse'];\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { createContext, useContext } from 'react';\r\nimport { GRID_NUMBER, SPACE } from './types';\r\n\r\ninterface IGridContext {\r\n  columns?: GRID_NUMBER;\r\n  gutters?: SPACE;\r\n  debug?: boolean;\r\n}\r\n\r\nexport const GridContext = createContext<IGridContext>({ gutters: 'md' });\r\n\r\n/**\r\n * Retrieve Grid component context\r\n */\r\nconst useGridContext = () => {\r\n  return useContext(GridContext);\r\n};\r\n\r\nexport default useGridContext;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { FunctionComponent } from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { DEFAULT_THEME, PALETTE } from '@zendeskgarden/react-theming';\r\nimport { LG, MD, SM, XL, XXL, XXXL } from '@zendeskgarden/react-typography';\r\nimport { ISkeletonProps, Skeleton } from '@zendeskgarden/react-loaders';\r\nimport { TYPE_SCALE } from './types';\r\n\r\ninterface IArgs extends ISkeletonProps {\r\n  backgroundColor?: string;\r\n  count?: number;\r\n  typescale?: TYPE_SCALE;\r\n}\r\n\r\nexport const SkeletonStory: Story<IArgs> = ({ backgroundColor, count = 1, typescale, ...args }) => {\r\n  let Typescale: FunctionComponent | undefined;\r\n\r\n  switch (typescale) {\r\n    case 'small':\r\n      Typescale = SM;\r\n      break;\r\n\r\n    case 'medium':\r\n      Typescale = MD;\r\n      break;\r\n\r\n    case 'large':\r\n      Typescale = LG;\r\n      break;\r\n\r\n    case 'extra-large':\r\n      Typescale = XL;\r\n      break;\r\n\r\n    case '2x-large':\r\n      Typescale = XXL;\r\n      break;\r\n\r\n    case '3x-large':\r\n      Typescale = XXXL;\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: backgroundColor || (args.isLight ? PALETTE.kale[600] : undefined),\r\n        padding: DEFAULT_THEME.space.md\r\n      }}\r\n    >\r\n      {[...Array(count)].map((_, index) =>\r\n        Typescale ? (\r\n          <Typescale key={index + Math.random()}>\r\n            <Skeleton {...args} />\r\n          </Typescale>\r\n        ) : (\r\n          <Skeleton key={index + Math.random()} {...args} />\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nexport const TYPE_SCALE_OPTIONS = [\r\n  'small',\r\n  'medium',\r\n  'large',\r\n  'extra-large',\r\n  '2x-large',\r\n  '3x-large'\r\n] as const;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useEffect, useRef, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeContext } from 'styled-components';\r\nimport { useSchedule } from '@zendeskgarden/container-schedule';\r\nimport { useDocument } from '@zendeskgarden/react-theming';\r\nimport {\r\n  StyledDotsCircleOne,\r\n  StyledDotsCircleTwo,\r\n  StyledDotsCircleThree,\r\n  StyledSVG,\r\n  StyledLoadingPlaceholder\r\n} from '../styled';\r\n\r\nconst COMPONENT_ID = 'loaders.dots';\r\n\r\nexport interface IDotsProps extends React.SVGAttributes<SVGSVGElement> {\r\n  /** Sets the height and width in pixels. Inherits the parent's font size by default. */\r\n  size?: string | number;\r\n  /** Sets the fill color. Inherits the parent's `color` by default. */\r\n  color?: string;\r\n  /** Sets the length of the animation cycle in milliseconds **/\r\n  duration?: number;\r\n  /** Delays displaying the loader to prevent a render flash during normal loading times **/\r\n  delayMS?: number;\r\n}\r\n\r\n/**\r\n * @extends SVGAttributes<SVGSVGElement>\r\n */\r\nconst Dots: React.FC<IDotsProps> = ({ size, color, duration, delayMS, ...other }) => {\r\n  const theme = useContext(ThemeContext);\r\n  const environment = useDocument(theme);\r\n  const canTransformSVG = useRef<boolean | null>(null);\r\n\r\n  if (environment && canTransformSVG.current === null) {\r\n    const svg = environment.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n\r\n    canTransformSVG.current = 'transform' in svg;\r\n  }\r\n\r\n  const { delayComplete } = useSchedule({ duration, delayMS, loop: true });\r\n  const dotOne = useRef<SVGCircleElement>(null);\r\n  const dotTwo = useRef<SVGCircleElement>(null);\r\n  const dotThree = useRef<SVGCircleElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!canTransformSVG.current && delayComplete) {\r\n      const transforms = [\r\n        window.getComputedStyle(dotOne.current!).getPropertyValue('transform'),\r\n        window.getComputedStyle(dotTwo.current!).getPropertyValue('transform'),\r\n        window.getComputedStyle(dotThree.current!).getPropertyValue('transform')\r\n      ];\r\n\r\n      dotOne.current!.setAttribute('transform', transforms[0]);\r\n      dotTwo.current!.setAttribute('transform', transforms[1]);\r\n      dotThree.current!.setAttribute('transform', transforms[2]);\r\n    }\r\n  });\r\n\r\n  if (!delayComplete && delayMS !== 0) {\r\n    return <StyledLoadingPlaceholder fontSize={size!}>&nbsp;</StyledLoadingPlaceholder>;\r\n  }\r\n\r\n  return (\r\n    <StyledSVG\r\n      fontSize={size!}\r\n      color={color!}\r\n      width=\"80\"\r\n      height=\"72\"\r\n      dataGardenId={COMPONENT_ID}\r\n      {...other}\r\n    >\r\n      <g fill=\"currentColor\">\r\n        <StyledDotsCircleOne duration={duration!} ref={dotOne} />\r\n        <StyledDotsCircleTwo duration={duration!} ref={dotTwo} />\r\n        <StyledDotsCircleThree duration={duration!} ref={dotThree} />\r\n      </g>\r\n    </StyledSVG>\r\n  );\r\n};\r\n\r\nDots.propTypes = {\r\n  size: PropTypes.any,\r\n  duration: PropTypes.number,\r\n  color: PropTypes.string,\r\n  delayMS: PropTypes.number\r\n};\r\n\r\nDots.defaultProps = {\r\n  size: 'inherit',\r\n  color: 'inherit',\r\n  duration: 1250,\r\n  delayMS: 750\r\n};\r\n\r\nexport default Dots;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledInlineTypingSVG, StyledCircle, IStyledTypingSvgProps } from '../styled';\r\n\r\nconst InlineTypingIndicator: React.FC<IStyledTypingSvgProps> = props => {\r\n  return (\r\n    <StyledInlineTypingSVG {...props}>\r\n      <StyledCircle cx=\"14\" />\r\n      <StyledCircle cx=\"8\" />\r\n      <StyledCircle cx=\"2\" />\r\n    </StyledInlineTypingSVG>\r\n  );\r\n};\r\n\r\nexport interface IInlineProps extends React.SVGAttributes<SVGSVGElement> {\r\n  /** Sets the width in pixels and scales the loader proportionally */\r\n  size?: number;\r\n  /** Sets the fill color. Inherits the parent's `color` by default. */\r\n  color?: string;\r\n}\r\n\r\n/**\r\n * @extends SVGAttributes<SVGSVGElement>\r\n */\r\nconst Inline: React.FC<IInlineProps> = ({ size, color, ...other }) => {\r\n  return <InlineTypingIndicator size={size!} color={color!} {...other} />;\r\n};\r\n\r\nInline.propTypes = {\r\n  size: PropTypes.number,\r\n  color: PropTypes.string\r\n};\r\n\r\nInline.defaultProps = {\r\n  size: 16,\r\n  color: 'inherit'\r\n};\r\n\r\nexport default Inline;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledProgressBackground, StyledProgressIndicator } from '../styled';\r\n\r\nconst COMPONENT_ID = 'loaders.progress';\r\n\r\nexport interface IProgressProps extends HTMLAttributes<HTMLDivElement> {\r\n  /** Sets the progress as a value between 0 and 100 */\r\n  value?: number;\r\n  /**\r\n   * Sets the foreground bar's fill color.\r\n   * Defaults to the `successHue` [theme](/components/theme-object#colors) value.\r\n   */\r\n  color?: string;\r\n  /** Adjusts the height */\r\n  size?: 'small' | 'medium' | 'large';\r\n}\r\n\r\nconst Progress = React.forwardRef<HTMLDivElement, IProgressProps>(\r\n  ({ value, size, ...other }, ref) => {\r\n    const percentage = Math.max(0, Math.min(100, value!));\r\n\r\n    return (\r\n      <StyledProgressBackground\r\n        data-garden-id={COMPONENT_ID}\r\n        data-garden-version={PACKAGE_VERSION}\r\n        aria-valuemax={100}\r\n        aria-valuemin={0}\r\n        aria-valuenow={percentage}\r\n        role=\"progressbar\"\r\n        size={size!}\r\n        ref={ref}\r\n        {...other}\r\n      >\r\n        <StyledProgressIndicator value={percentage} size={size!} />\r\n      </StyledProgressBackground>\r\n    );\r\n  }\r\n);\r\n\r\nProgress.displayName = 'Progress';\r\n\r\nProgress.propTypes = {\r\n  color: PropTypes.string,\r\n  value: PropTypes.number.isRequired,\r\n  size: PropTypes.oneOf(['small', 'medium', 'large'])\r\n};\r\n\r\nProgress.defaultProps = {\r\n  value: 0,\r\n  size: 'medium'\r\n};\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport default Progress as React.FunctionComponent<\r\n  IProgressProps & React.RefAttributes<HTMLDivElement>\r\n>;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledSkeleton } from '../styled';\r\n\r\nexport interface ISkeletonProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  /** Sets the width as a percentage of the the parent element's width */\r\n  width?: string;\r\n  /** Sets the height as a percentage of parent element's height if the height is not already inherited by `line-height` */\r\n  height?: string;\r\n  /** Inverts the color for use on dark backgrounds */\r\n  isLight?: boolean;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nconst Skeleton: React.FC<ISkeletonProps> = ({ width, height, isLight, ...other }) => {\r\n  return (\r\n    <StyledSkeleton isLight={isLight} customWidth={width} customHeight={height} {...other}>\r\n      &nbsp;\r\n    </StyledSkeleton>\r\n  );\r\n};\r\n\r\nSkeleton.propTypes = {\r\n  width: PropTypes.string,\r\n  height: PropTypes.string,\r\n  isLight: PropTypes.bool\r\n};\r\n\r\nSkeleton.defaultProps = {\r\n  width: '100%',\r\n  height: '100%'\r\n};\r\n\r\nexport default Skeleton;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSchedule } from '@zendeskgarden/container-schedule';\r\n\r\nimport {\r\n  STROKE_WIDTH_FRAMES,\r\n  DASHARRAY_FRAMES,\r\n  ROTATION_FRAMES\r\n} from '../utils/spinner-coordinates';\r\nimport { StyledSpinnerCircle, StyledSVG, StyledLoadingPlaceholder } from '../styled';\r\n\r\nconst COMPONENT_ID = 'loaders.spinner';\r\nconst TOTAL_FRAMES = 100;\r\n\r\nconst computeFrames = (\r\n  frames: Record<number, number>,\r\n  duration: number\r\n): Record<string, number> => {\r\n  return Object.entries<number>(frames).reduce((acc: Record<string, number>, item, index, arr) => {\r\n    const [frame, value] = item;\r\n    const [nextFrame, nextValue] = arr[index + 1] || [TOTAL_FRAMES, arr[0][1]];\r\n    const diff = parseInt(nextFrame, 10) - parseInt(frame, 10);\r\n    const frameHz = 1000 / 60;\r\n\r\n    let subDuration = (duration / (TOTAL_FRAMES - 1)) * diff;\r\n    let lastValue = value;\r\n\r\n    acc[frame] = value;\r\n    for (let idx = 0; idx < diff; idx++) {\r\n      lastValue = lastValue + (nextValue - lastValue) * (frameHz / subDuration);\r\n      subDuration = (duration / (TOTAL_FRAMES - 1)) * (diff - idx);\r\n\r\n      acc[parseInt(frame, 10) + idx + 1] = lastValue;\r\n    }\r\n    acc[nextFrame] = nextValue;\r\n\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\nexport interface ISpinnerProps extends React.SVGAttributes<SVGSVGElement> {\r\n  /**\r\n   * Sets the height and width in pixels. Inherits the parent's font size by default.\r\n   **/\r\n  size?: string;\r\n  /**\r\n   * Sets the length of the animation cycle in milliseconds\r\n   **/\r\n  duration?: number;\r\n  /**\r\n   * Sets the fill color. Inherits the parent's `color` by default.\r\n   **/\r\n  color?: string;\r\n  /**\r\n   * Delays displaying the loader to prevent a render flash during normal loading times\r\n   **/\r\n  delayMS?: number;\r\n}\r\n\r\n/**\r\n * @extends SVGAttributes<SVGSVGElement>\r\n */\r\nconst Spinner: React.FC<ISpinnerProps> = ({ size, duration, color, delayMS, ...other }) => {\r\n  const strokeWidthValues = computeFrames(STROKE_WIDTH_FRAMES, duration!);\r\n  const rotationValues = computeFrames(ROTATION_FRAMES, duration!);\r\n  const dasharrayValues = computeFrames(DASHARRAY_FRAMES, duration!);\r\n\r\n  const { elapsed, delayComplete } = useSchedule({ duration, delayMS });\r\n  const frame = (elapsed * 100).toFixed(0);\r\n\r\n  const strokeWidthValue = strokeWidthValues[frame];\r\n  const rotationValue = rotationValues[frame];\r\n  const dasharrayValue = dasharrayValues[frame];\r\n\r\n  const WIDTH = 80;\r\n  const HEIGHT = 80;\r\n\r\n  if (!delayComplete && delayMS !== 0) {\r\n    return (\r\n      <StyledLoadingPlaceholder width=\"1em\" height=\"1em\" fontSize={size!}>\r\n        &nbsp;\r\n      </StyledLoadingPlaceholder>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <StyledSVG\r\n      fontSize={size}\r\n      color={color}\r\n      width={WIDTH}\r\n      height={HEIGHT}\r\n      dataGardenId={COMPONENT_ID}\r\n      containerHeight=\"1em\"\r\n      containerWidth=\"1em\"\r\n      {...other}\r\n    >\r\n      <StyledSpinnerCircle\r\n        dasharrayValue={dasharrayValue}\r\n        strokeWidthValue={strokeWidthValue}\r\n        transform={`rotate(${rotationValue}, ${WIDTH / 2}, ${HEIGHT / 2})`}\r\n      />\r\n    </StyledSVG>\r\n  );\r\n};\r\n\r\nSpinner.propTypes = {\r\n  size: PropTypes.any,\r\n  duration: PropTypes.number,\r\n  color: PropTypes.string,\r\n  delayMS: PropTypes.number\r\n};\r\n\r\nSpinner.defaultProps = {\r\n  size: 'inherit',\r\n  duration: 1250,\r\n  color: 'inherit',\r\n  delayMS: 750\r\n};\r\n\r\nexport default Spinner;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css } from 'styled-components';\r\nimport { dotOneKeyframes, dotTwoKeyframes, dotThreeKeyframes } from '../utils/animations';\r\nimport { DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst StyledDotsCircle = styled.circle.attrs({\r\n  cy: 36,\r\n  r: 9\r\n})``;\r\n\r\nStyledDotsCircle.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n\r\ninterface IStyledDotProps {\r\n  duration: number;\r\n}\r\n\r\nexport const StyledDotsCircleOne = styled(StyledDotsCircle).attrs({\r\n  cx: 9\r\n})<IStyledDotProps>`\r\n  animation: ${({ duration }) =>\r\n    css`\r\n      ${dotOneKeyframes} ${duration}ms linear infinite\r\n    `};\r\n`;\r\n\r\nStyledDotsCircleOne.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n\r\nexport const StyledDotsCircleTwo = styled(StyledDotsCircle).attrs(() => ({\r\n  cx: 40\r\n}))<IStyledDotProps>`\r\n  animation: ${({ duration }) =>\r\n    css`\r\n      ${dotTwoKeyframes} ${duration}ms linear infinite\r\n    `};\r\n`;\r\n\r\nStyledDotsCircleTwo.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n\r\nexport const StyledDotsCircleThree = styled(StyledDotsCircle).attrs(() => ({\r\n  cx: 71\r\n}))<IStyledDotProps>`\r\n  animation: ${({ duration }) =>\r\n    css`\r\n      ${dotThreeKeyframes} ${duration}ms linear infinite\r\n    `};\r\n`;\r\n\r\nStyledDotsCircleThree.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'loaders.inline';\r\n\r\nconst PULSE_ANIMATION = keyframes`\r\n  0%, 100% {\r\n    opacity: .2;\r\n  }\r\n\r\n  50% {\r\n    opacity: .8;\r\n  }\r\n`;\r\n\r\nexport const StyledCircle = styled.circle.attrs({\r\n  fill: 'currentColor',\r\n  cy: 2,\r\n  r: 2\r\n})``;\r\n\r\nStyledCircle.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n\r\nexport interface IStyledTypingSvgProps extends React.HTMLAttributes<SVGSVGElement> {\r\n  size: number;\r\n  color: string;\r\n}\r\n\r\nexport const StyledInlineTypingSVG = styled.svg.attrs<IStyledTypingSvgProps>(props => ({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  viewBox: '0 0 16 4',\r\n  width: props.size,\r\n  height: props.size * 0.25\r\n}))<IStyledTypingSvgProps>`\r\n  color: ${props => props.color};\r\n\r\n  ${StyledCircle} {\r\n    opacity: 0.2;\r\n\r\n    &:nth-child(1) {\r\n      animation: ${PULSE_ANIMATION} 1s infinite;\r\n      animation-delay: ${props => (props.theme.rtl ? 'unset' : '0.4s')};\r\n    }\r\n\r\n    &:nth-child(2) {\r\n      animation: ${PULSE_ANIMATION} 1s infinite;\r\n      animation-delay: 0.2s;\r\n    }\r\n\r\n    &:nth-child(3) {\r\n      animation: ${PULSE_ANIMATION} 1s infinite;\r\n      animation-delay: ${props => (props.theme.rtl ? '0.4s' : 'unset')};\r\n    }\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)}\r\n`;\r\n\r\nStyledInlineTypingSVG.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'loaders.loading_placeholder';\r\n\r\nexport const StyledLoadingPlaceholder = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  role: 'progressbar'\r\n})<{ fontSize: string | number; width?: string; height?: string }>`\r\n  display: inline-block;\r\n  width: ${props => props.width || '1em'};\r\n  height: ${props => props.height || '0.9em'};\r\n  font-size: ${props => props.fontSize};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)}\r\n`;\r\n\r\nStyledLoadingPlaceholder.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { DefaultTheme } from 'styled-components';\r\nimport { retrieveComponentStyles, getColor, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\ntype SIZE = 'small' | 'medium' | 'large';\r\n\r\nconst sizeToHeight = (size: SIZE, theme: DefaultTheme) => {\r\n  switch (size) {\r\n    case 'small':\r\n      return theme.space.base / 2;\r\n    case 'medium':\r\n      return theme.space.base * 1.5;\r\n    default:\r\n      return theme.space.base * 3;\r\n  }\r\n};\r\n\r\nconst sizeToBorderRadius = (size: SIZE, theme: DefaultTheme) => sizeToHeight(size, theme) / 2;\r\n\r\ninterface IStyledProgressBackgroundProps {\r\n  size: SIZE;\r\n  borderRadius?: number;\r\n  color?: string;\r\n}\r\n\r\nconst PROGRESS_BACKGROUND_COMPONENT_ID = 'loaders.progress_background';\r\n\r\nexport const StyledProgressBackground = styled.div.attrs<IStyledProgressBackgroundProps>(props => ({\r\n  'data-garden-id': PROGRESS_BACKGROUND_COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  borderRadius: props.borderRadius || sizeToBorderRadius(props.size, props.theme)\r\n}))<IStyledProgressBackgroundProps>`\r\n  margin: ${props => props.theme.space.base * 2}px 0;\r\n  border-radius: ${props => props.borderRadius}px;\r\n  background-color: ${props => getColor('neutralHue', 200, props.theme)};\r\n  color: ${props => props.color || getColor('successHue', 600, props.theme)};\r\n\r\n  ${props => retrieveComponentStyles(PROGRESS_BACKGROUND_COMPONENT_ID, props)}\r\n`;\r\n\r\nStyledProgressBackground.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n\r\ninterface IStyledProgressIndicatorProps {\r\n  size: SIZE;\r\n  borderRadius?: number;\r\n  value: number;\r\n  height?: number;\r\n}\r\n\r\nconst PROGESS_INDICATOR_COMPONENT_ID = 'loaders.progress_indicator';\r\n\r\nexport const StyledProgressIndicator = styled.div.attrs<IStyledProgressIndicatorProps>(props => ({\r\n  'data-garden-id': PROGESS_INDICATOR_COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  height: props.height || sizeToHeight(props.size, props.theme),\r\n  borderRadius: props.borderRadius || sizeToBorderRadius(props.size, props.theme)\r\n}))<IStyledProgressIndicatorProps>`\r\n  transition: width 0.1s ease-in-out;\r\n  border-radius: ${props => props.borderRadius}px;\r\n  background: currentColor;\r\n  width: ${props => props.value}%;\r\n  height: ${props => props.height}px;\r\n\r\n  ${props => retrieveComponentStyles(PROGESS_INDICATOR_COMPONENT_ID, props)}\r\n`;\r\n\r\nStyledProgressIndicator.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\ninterface IStyledSVGProps {\r\n  dataGardenId: string;\r\n  color?: string;\r\n  fontSize?: string | number;\r\n  width: number | string;\r\n  height: number | string;\r\n  containerWidth?: string;\r\n  containerHeight?: string;\r\n}\r\n\r\nexport const StyledSVG = styled.svg.attrs<IStyledSVGProps>(props => ({\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  xmlns: 'http://www.w3.org/2000/svg',\r\n  width: props.width,\r\n  height: props.height,\r\n  focusable: 'false',\r\n  viewBox: `0 0 ${props.width} ${props.height}`,\r\n  role: 'progressbar'\r\n}))<IStyledSVGProps>`\r\n  width: ${props => props.containerWidth || '1em'};\r\n  height: ${props => props.containerHeight || '0.9em'};\r\n  color: ${props => props.color || 'inherit'};\r\n  font-size: ${props => props.fontSize || 'inherit'};\r\n\r\n  ${props => retrieveComponentStyles(props.dataGardenId, props)};\r\n`;\r\n\r\nStyledSVG.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { keyframes, css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { rgba } from 'polished';\r\nimport {\r\n  DEFAULT_THEME,\r\n  retrieveComponentStyles,\r\n  getColor,\r\n  getLineHeight\r\n} from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'loaders.skeleton';\r\n\r\nconst fadeInAnimation = keyframes`\r\n  0%, 60% {\r\n    opacity: 0;\r\n  }\r\n\r\n  100% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst skeletonAnimation = keyframes`\r\n  100% {\r\n    left: 100%;\r\n  }\r\n`;\r\n\r\nconst skeletonRtlAnimation = keyframes`\r\n  100% {\r\n    right: 100%;\r\n  }\r\n`;\r\n\r\nconst retrieveSkeletonBackgroundColor = ({\r\n  theme,\r\n  isLight\r\n}: IStyledSkeletonProps & ThemeProps<DefaultTheme>) => {\r\n  if (isLight) {\r\n    return css`\r\n      background-color: ${rgba(theme.colors.background, 0.2)};\r\n    `;\r\n  }\r\n\r\n  return css`\r\n    background-color: ${getColor('neutralHue', 800, theme, 0.1)};\r\n  `;\r\n};\r\n\r\ninterface IStyledSkeletonProps {\r\n  width?: string;\r\n  height?: string;\r\n  isLight?: boolean;\r\n  customWidth?: string;\r\n  customHeight?: string;\r\n}\r\n\r\nconst retrieveSkeletonAnimation = ({ theme }: ThemeProps<DefaultTheme>) => {\r\n  if (theme.rtl) {\r\n    return css`\r\n      right: -1800px;\r\n      animation: ${skeletonRtlAnimation} 1.5s ease-in-out 300ms infinite;\r\n    `;\r\n  }\r\n\r\n  return css`\r\n    left: -1800px;\r\n    animation: ${skeletonAnimation} 1.5s ease-in-out 300ms infinite;\r\n  `;\r\n};\r\n\r\nconst retrieveSkeletonGradient = ({\r\n  theme,\r\n  isLight\r\n}: IStyledSkeletonProps & ThemeProps<DefaultTheme>) => {\r\n  // Disabling stylelint due to conflicts with prettier and linear-gradient formatting\r\n  return css`\r\n    /* stylelint-disable */\r\n    background-image: linear-gradient(\r\n      ${theme.rtl ? '-45deg' : '45deg'},\r\n      transparent,\r\n      ${isLight ? getColor('chromeHue', 700, theme, 0.4) : rgba(theme.colors.background, 0.6)},\r\n      transparent\r\n    );\r\n    /* stylelint-enable */\r\n  `;\r\n};\r\n\r\nexport const StyledSkeleton = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledSkeletonProps>`\r\n  display: inline-block;\r\n  position: relative;\r\n  animation: ${fadeInAnimation} 750ms linear;\r\n  border-radius: ${props => props.theme.borderRadii.md};\r\n  width: ${props => props.customWidth};\r\n  height: ${props => props.customHeight};\r\n  overflow: hidden;\r\n  line-height: ${props => getLineHeight(props.theme.fontSizes.sm, props.theme.space.base * 5)};\r\n\r\n  ${retrieveSkeletonBackgroundColor}\r\n\r\n  &::before {\r\n    position: absolute;\r\n    top: 0;\r\n    width: 1000px;\r\n    height: 100%;\r\n    content: '';\r\n\r\n    ${retrieveSkeletonAnimation}\r\n    ${retrieveSkeletonGradient}\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledSkeleton.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\ninterface IStyledSpinnerCircleProps {\r\n  dasharrayValue: number;\r\n  strokeWidthValue: number;\r\n  transform: string;\r\n}\r\n\r\nexport const StyledSpinnerCircle = styled.circle.attrs<IStyledSpinnerCircleProps>(props => ({\r\n  cx: 40,\r\n  cy: 40,\r\n  r: 34,\r\n  fill: 'none',\r\n  stroke: 'currentColor',\r\n  strokeLinecap: 'round',\r\n  strokeWidth: props.strokeWidthValue,\r\n  strokeDasharray: `${props.dasharrayValue} 250`,\r\n  transform: props.transform\r\n}))<IStyledSpinnerCircleProps>``;\r\n\r\nStyledSpinnerCircle.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { keyframes } from 'styled-components';\r\n\r\n/* stylelint-disable rule-empty-line-before */\r\nexport const dotOneKeyframes = keyframes`\r\n  0% { transform: translate(0, 5px); }\r\n  3% { transform: translate(1px, -5px); }\r\n  6% { transform: translate(3px, -15px); }\r\n  8% { transform: translate(5px, -18px); }\r\n  9% { transform: translate(7px, -21px); }\r\n  11% { transform: translate(8px, -22px); }\r\n  13% { transform: translate(9px, -23px); }\r\n  16% { transform: translate(12px, -25px); }\r\n  18% { transform: translate(13px, -26px); }\r\n  23% { transform: translate(18px, -26px); }\r\n  24% { transform: translate(19px, -25px); }\r\n  28% { transform: translate(22px, -23px); }\r\n  31% { transform: translate(24px, -21px); }\r\n  33% { transform: translate(26px, -18px); }\r\n  34% { transform: translate(28px, -14px); }\r\n  36% { transform: translate(29px, -12px); }\r\n  38% { transform: translate(30px, -5px); }\r\n  39% { transform: translate(31px, 5px); }\r\n  54% { transform: translate(31px, 3px); }\r\n  59% { transform: translate(33px); }\r\n  61% { transform: translate(43px); }\r\n  63% { transform: translate(48px); }\r\n  64% { transform: translate(51px); }\r\n  66% { transform: translate(53px); }\r\n  68% { transform: translate(55px); }\r\n  69% { transform: translate(57px); }\r\n  76% { transform: translate(60px); }\r\n  81% { transform: translate(61px); }\r\n  83%, 100% { transform: translate(62px); }\r\n`;\r\n\r\nexport const dotTwoKeyframes = keyframes`\r\n  4% { transform: translate(0); }\r\n  6% { transform: translate(-1px); }\r\n  8% { transform: translate(-2px); }\r\n  9% { transform: translate(-5px); }\r\n  11% { transform: translate(-7px); }\r\n  13% { transform: translate(-12px); }\r\n  14% { transform: translate(-17px); }\r\n  16% { transform: translate(-19px); }\r\n  18% { transform: translate(-22px); }\r\n  19% { transform: translate(-25px); }\r\n  21% { transform: translate(-26px); }\r\n  23% { transform: translate(-27px); }\r\n  24% { transform: translate(-28px); }\r\n  26% { transform: translate(-29px); }\r\n  29% { transform: translate(-30px); }\r\n  33%, 89% { transform: translate(-31px); }\r\n  91% { transform: translate(-31px, 1px); }\r\n  94% { transform: translate(-31px, 2px); }\r\n  98% { transform: translate(-31px, 3px); }\r\n  99% { transform: translate(-31px, 4px); }\r\n  100% { transform: translate(-31px, 5px); }\r\n`;\r\n\r\nexport const dotThreeKeyframes = keyframes`\r\n  39% { transform: translate(0); }\r\n  44% { transform: translate(0, 1px); }\r\n  46% { transform: translate(0, 2px); }\r\n  48% { transform: translate(0, 3px); }\r\n  49% { transform: translate(0, 4px); }\r\n  51% { transform: translate(0, 5px); }\r\n  53% { transform: translate(-1px, -6px); }\r\n  54% { transform: translate(-2px, -13px); }\r\n  56% { transform: translate(-3px, -15px); }\r\n  58% { transform: translate(-5px, -19px); }\r\n  59% { transform: translate(-7px, -21px); }\r\n  61% { transform: translate(-8px, -22px); }\r\n  63% { transform: translate(-9px, -24px); }\r\n  64% { transform: translate(-11px, -25px); }\r\n  66% { transform: translate(-12px, -26px); }\r\n  74% { transform: translate(-19px, -26px); }\r\n  76% { transform: translate(-20px, -25px); }\r\n  78% { transform: translate(-22px, -24px); }\r\n  81% { transform: translate(-24px, -21px); }\r\n  83% { transform: translate(-26px, -19px); }\r\n  84% { transform: translate(-28px, -15px); }\r\n  86% { transform: translate(-29px, -13px); }\r\n  88% { transform: translate(-30px, -6px); }\r\n  89% { transform: translate(-31px, 5px); }\r\n  91% { transform: translate(-31px, 4px); }\r\n  93% { transform: translate(-31px, 3px); }\r\n  94% { transform: translate(-31px, 2px); }\r\n  98% { transform: translate(-31px, 1px); }\r\n  100% { transform: translate(-31px); }\r\n`;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\ntype AnimationPoints = Record<number, number>;\r\n\r\nexport const STROKE_WIDTH_FRAMES: AnimationPoints = {\r\n  0: 6,\r\n  14: 5,\r\n  26: 4,\r\n  36: 3,\r\n  46: 2,\r\n  58: 3,\r\n  70: 4,\r\n  80: 5,\r\n  91: 6\r\n};\r\n\r\nexport const ROTATION_FRAMES: AnimationPoints = {\r\n  0: -90,\r\n  8: -81,\r\n  36: -30,\r\n  41: -18,\r\n  44: -8,\r\n  48: 0,\r\n  55: 22,\r\n  63: 53,\r\n  64: 62,\r\n  66: 67,\r\n  68: 78,\r\n  69: 90,\r\n  71: 99,\r\n  73: 112,\r\n  74: 129,\r\n  76: 138,\r\n  78: 159,\r\n  79: 180,\r\n  81: 190,\r\n  83: 207,\r\n  84: 221,\r\n  86: 226,\r\n  88: 235,\r\n  90: 243,\r\n  99: 270\r\n};\r\n\r\nexport const DASHARRAY_FRAMES: AnimationPoints = {\r\n  0: 0,\r\n  13: 2,\r\n  26: 13,\r\n  53: 86,\r\n  58: 90,\r\n  63: 89,\r\n  64: 88,\r\n  66: 86,\r\n  68: 83,\r\n  69: 81,\r\n  71: 76,\r\n  73: 70,\r\n  74: 62,\r\n  76: 58,\r\n  78: 47,\r\n  79: 37,\r\n  81: 31,\r\n  83: 23,\r\n  84: 16,\r\n  88: 10,\r\n  89: 7,\r\n  98: 1,\r\n  99: 0\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { EventHandler, MouseEventHandler } from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { useTheme } from 'styled-components';\r\nimport { DrawerModal, IDrawerModalProps } from '@zendeskgarden/react-modals';\r\nimport { Button } from '@zendeskgarden/react-buttons';\r\nimport { IFooterItem } from './types';\r\n\r\ninterface IArgs extends IDrawerModalProps {\r\n  onClick: MouseEventHandler<HTMLElement>;\r\n  onClose: EventHandler<any>;\r\n  hasBody: boolean;\r\n  body: string;\r\n  hasClose: boolean;\r\n  hasFooter: boolean;\r\n  footerItems: IFooterItem[];\r\n  hasHeader: boolean;\r\n  header: string;\r\n}\r\n\r\nexport const DrawerModalStory: Story<IArgs> = ({\r\n  onClick,\r\n  onClose,\r\n  hasBody,\r\n  body,\r\n  hasClose,\r\n  hasFooter,\r\n  footerItems,\r\n  hasHeader,\r\n  header,\r\n  ...args\r\n}) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={onClick}>\r\n        Open\r\n        <Button.EndIcon isRotated={theme.rtl}>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" d=\"M1 8.5h14.5m-10-5L.9 8.1c-.2.2-.2.5 0 .7l4.6 4.6\"/>\r\n</svg>\r\n        </Button.EndIcon>\r\n      </Button>\r\n      <DrawerModal {...args} onClose={onClose}>\r\n        {hasHeader && <DrawerModal.Header>{header}</DrawerModal.Header>}\r\n        {hasBody ? <DrawerModal.Body>{body}</DrawerModal.Body> : body}\r\n        {hasFooter && (\r\n          <DrawerModal.Footer>\r\n            {footerItems.map(({ text, type }, index) => (\r\n              <DrawerModal.FooterItem key={index}>\r\n                <Button isBasic={type === 'basic'} isPrimary={type === 'primary'} onClick={onClose}>\r\n                  {text}\r\n                </Button>\r\n              </DrawerModal.FooterItem>\r\n            ))}\r\n          </DrawerModal.Footer>\r\n        )}\r\n        {hasClose && <DrawerModal.Close />}\r\n      </DrawerModal>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { EventHandler, MouseEventHandler } from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport {\r\n  Body,\r\n  Close,\r\n  Footer,\r\n  FooterItem,\r\n  Header,\r\n  IModalProps,\r\n  Modal\r\n} from '@zendeskgarden/react-modals';\r\nimport { Button } from '@zendeskgarden/react-buttons';\r\nimport { IFooterItem } from './types';\r\n\r\ninterface IArgs extends IModalProps {\r\n  isVisible: boolean;\r\n  onClick: MouseEventHandler<HTMLElement>;\r\n  onClose: EventHandler<any>;\r\n  hasBody: boolean;\r\n  body: string;\r\n  hasClose: boolean;\r\n  hasFooter: boolean;\r\n  footerItems: IFooterItem[];\r\n  hasHeader: boolean;\r\n  isDanger: boolean;\r\n  header: string;\r\n}\r\n\r\nexport const ModalStory: Story<IArgs> = ({\r\n  onClick,\r\n  onClose,\r\n  isVisible,\r\n  hasBody,\r\n  body,\r\n  hasClose,\r\n  hasFooter,\r\n  footerItems,\r\n  hasHeader,\r\n  header,\r\n  isDanger,\r\n  ...args\r\n}) => (\r\n  <>\r\n    <Button size={args.isLarge ? 'large' : undefined} isDanger={isDanger} onClick={onClick}>\r\n      Open\r\n      <Button.EndIcon>\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"none\" stroke=\"currentColor\" d=\"M12.17 7.5H9.5L12.96 1c.12-.28-.01-.5-.29-.5H7.5c-.28 0-.6.22-.71.5L4.21 7c-.11.28.01.5.29.5h2.45l-2.64 7.24c-.19.51-.04.95.59.38l7.29-6.87c.43-.4.4-.75-.02-.75z\"/>\r\n</svg>\r\n      </Button.EndIcon>\r\n    </Button>\r\n    {isVisible && (\r\n      <Modal {...args} onClose={onClose}>\r\n        {hasHeader && <Header isDanger={isDanger}>{header}</Header>}\r\n        {hasBody ? <Body>{body}</Body> : body}\r\n        {hasFooter && (\r\n          <Footer>\r\n            {footerItems.map(({ text, type }, index) => (\r\n              <FooterItem key={index}>\r\n                <Button\r\n                  isBasic={type === 'basic'}\r\n                  isPrimary={type === 'primary'}\r\n                  isDanger={isDanger && type === 'primary'}\r\n                  onClick={onClose}\r\n                >\r\n                  {text}\r\n                </Button>\r\n              </FooterItem>\r\n            ))}\r\n          </Footer>\r\n        )}\r\n        {hasClose && <Close />}\r\n      </Modal>\r\n    )}\r\n  </>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useRef } from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { Col, Grid, Row } from '@zendeskgarden/react-grid';\r\nimport { Button, IconButton } from '@zendeskgarden/react-buttons';\r\nimport { Avatar } from '@zendeskgarden/react-avatars';\r\nimport { ITooltipModalProps, TooltipModal } from '@zendeskgarden/react-modals';\r\n\r\nconst PLACEMENT = ['top-start', 'top', 'top-end', 'bottom-start', 'bottom', 'bottom-end'] as const;\r\n\r\ninterface IArgs extends ITooltipModalProps {\r\n  count: number;\r\n  handleClick: (ref?: HTMLElement | null) => void;\r\n  hasBody: boolean;\r\n  body: string;\r\n  hasClose: boolean;\r\n  hasFooter: boolean;\r\n  hasTitle: boolean;\r\n  title: string;\r\n}\r\n\r\nexport const TooltipModalStory: Story<IArgs> = ({\r\n  count,\r\n  handleClick,\r\n  hasBody,\r\n  body,\r\n  hasClose,\r\n  hasFooter,\r\n  hasTitle,\r\n  title,\r\n  ...args\r\n}) => {\r\n  const refs = useRef<(HTMLElement | null | undefined)[]>([]);\r\n  const current = refs.current.indexOf(args.referenceElement);\r\n\r\n  return (\r\n    <>\r\n      <TooltipModal {...args} placement={args.placement || PLACEMENT[current]}>\r\n        {hasTitle && <TooltipModal.Title>{title}</TooltipModal.Title>}\r\n        {hasBody && <TooltipModal.Body>{body}</TooltipModal.Body>}\r\n        {hasFooter && (\r\n          <TooltipModal.Footer>\r\n            {current > 0 && (\r\n              <TooltipModal.FooterItem>\r\n                <Button size=\"small\" onClick={() => handleClick(refs.current[current - 1])}>\r\n                  Previous\r\n                </Button>\r\n              </TooltipModal.FooterItem>\r\n            )}\r\n            {current >= 0 && (\r\n              <TooltipModal.FooterItem>\r\n                <Button\r\n                  isPrimary\r\n                  size=\"small\"\r\n                  onClick={() =>\r\n                    handleClick(\r\n                      current === refs.current.length - 1 ? null : refs.current[current + 1]\r\n                    )\r\n                  }\r\n                >\r\n                  {current === refs.current.length - 1 ? 'Finish' : 'Next'}\r\n                </Button>\r\n              </TooltipModal.FooterItem>\r\n            )}\r\n          </TooltipModal.Footer>\r\n        )}\r\n        {hasClose && <TooltipModal.Close />}\r\n      </TooltipModal>\r\n      <Grid>\r\n        <Row style={{ height: 'calc(100vh - 80px)' }}>\r\n          {[...Array(count)].map((_, index) => (\r\n            <Col key={index} md={4} textAlign=\"center\" alignSelf=\"center\">\r\n              <IconButton\r\n                ref={element => {\r\n                  refs.current[index] = element;\r\n                }}\r\n                onClick={event => handleClick(event.currentTarget)}\r\n              >\r\n                <Avatar foregroundColor={DEFAULT_THEME.colors.foreground}>\r\n                  <Avatar.Text>{index + 1}</Avatar.Text>\r\n                </Avatar>\r\n              </IconButton>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { IFooterItem } from './types';\r\n\r\nexport const MODAL_BODY = `Turnip greens yarrow ricebean rutabaga endive\r\ncauliflower sea lettuce kohlrabi amaranth water spinach avocado daikon napa\r\ncabbage asparagus winter purslane kale. Celery potato scallion desert raisin\r\nhorseradish spinach carrot soko. Lotus root water spinach fennel kombu maize\r\nbamboo shoot green bean swiss chard seakale pumpkin onion chickpea gram corn\r\npea. Brussels sprout coriander water chestnut gourd swiss chard wakame kohlrabi\r\nbeetroot carrot watercress. Corn amaranth salsify bunya nuts nori azuki bean\r\nchickweed potato bell pepper artichoke. Nori grape silver beet broccoli kombu\r\nbeet greens fava bean potato quandong celery. Bunya nuts black-eyed pea prairie\r\nturnip leek lentil turnip greens parsnip. Sea lettuce lettuce water chestnut\r\neggplant winter purslane fennel azuki bean earthnut pea sierra leone bologi leek\r\nsoko chicory celtuce parsley jícama. Celery quandong swiss chard chicory\r\nearthnut pea potato. Salsify taro catsear garlic gram celery bitterleaf wattle\r\nseed collard greens nori. Grape wattle seed kombu beetroot horseradish carrot\r\nsquash brussels sprout chard. Pea horseradish azuki bean lettuce avocado\r\nasparagus okra. Kohlrabi radish okra azuki bean corn fava bean mustard tigernut\r\njícama green bean celtuce collard greens avocado quandong fennel gumbo\r\nblack-eyed pea. Soko radicchio bunya nuts gram dulse silver beet parsnip napa\r\ncabbage lotus root sea lettuce brussels sprout cabbage.`;\r\n\r\nexport const MODAL_FOOTER_ITEMS: IFooterItem[] = [\r\n  {\r\n    text: 'Cancel',\r\n    type: 'basic'\r\n  },\r\n  {\r\n    text: 'Save',\r\n    type: 'primary'\r\n  }\r\n];\r\n\r\nexport const TOOLTIP_MODAL_BODY = `Gumbo beet greens corn soko endive gumbo\r\ngourd. Parsley shallot courgette tatsoi pea sprouts fava bean collard greens\r\ndandelion okra wakame tomato. Dandelion cucumber earthnut pea peanut soko\r\nzucchini.`;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { StyledBody } from '../styled';\r\nimport { useModalContext } from '../utils/useModalContext';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Body = React.forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  (props, ref) => {\r\n    const { getContentProps } = useModalContext();\r\n\r\n    return <StyledBody ref={ref} {...getContentProps(props)} />;\r\n  }\r\n);\r\n\r\nBody.displayName = 'Body';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { StyledClose } from '../styled';\r\nimport { useModalContext } from '../utils/useModalContext';\r\nimport XStrokeIcon from '@zendeskgarden/svg-icons/src/16/x-stroke.svg';\r\n\r\n/**\r\n * @extends ButtonHTMLAttributes<HTMLButtonElement>\r\n */\r\nexport const Close = React.forwardRef<\r\n  HTMLButtonElement,\r\n  React.ButtonHTMLAttributes<HTMLButtonElement>\r\n>((props, ref) => {\r\n  const { getCloseProps } = useModalContext();\r\n\r\n  return (\r\n    <StyledClose ref={ref} {...getCloseProps(props)}>\r\n      <XStrokeIcon />\r\n    </StyledClose>\r\n  );\r\n});\r\n\r\nClose.displayName = 'Close';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { useModalContext } from '../../utils/useModalContext';\r\nimport { StyledDrawerModalBody } from '../../styled';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Body = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\r\n  (props, ref) => {\r\n    const { getContentProps } = useModalContext();\r\n\r\n    return (\r\n      <StyledDrawerModalBody ref={ref} {...getContentProps(props)}>\r\n        {props.children}\r\n      </StyledDrawerModalBody>\r\n    );\r\n  }\r\n);\r\n\r\nBody.displayName = 'DrawerModal.Body';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { StyledDrawerModalClose } from '../../styled';\r\nimport { useModalContext } from '../../utils/useModalContext';\r\n\r\n/**\r\n * @extends ButtonHTMLAttributes<HTMLButtonElement>\r\n */\r\nexport const Close = React.forwardRef<\r\n  HTMLButtonElement,\r\n  React.ButtonHTMLAttributes<HTMLButtonElement>\r\n>((props, ref) => {\r\n  const { getCloseProps } = useModalContext();\r\n\r\n  return (\r\n    <StyledDrawerModalClose ref={ref} {...getCloseProps(props)}>\r\n     <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path stroke=\"currentColor\" strokeLinecap=\"round\" d=\"M3 13L13 3m0 10L3 3\"/>\r\n</svg>\r\n    </StyledDrawerModalClose>\r\n  );\r\n});\r\n\r\nClose.displayName = 'DrawerModal.Close';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, {\r\n  useEffect,\r\n  useRef,\r\n  useMemo,\r\n  useContext,\r\n  forwardRef,\r\n  RefAttributes,\r\n  HTMLAttributes,\r\n  PropsWithoutRef,\r\n  ForwardRefExoticComponent\r\n} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport mergeRefs from 'react-merge-refs';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { ThemeContext } from 'styled-components';\r\nimport { useModal } from '@zendeskgarden/container-modal';\r\nimport { useDocument } from '@zendeskgarden/react-theming';\r\nimport { useFocusVisible } from '@zendeskgarden/container-focusvisible';\r\nimport { ModalsContext } from '../../utils/useModalContext';\r\nimport {\r\n  StyledBackdrop,\r\n  StyledDrawerModal,\r\n  StyledDrawerModalFooter,\r\n  StyledDrawerModalFooterItem\r\n} from '../../styled';\r\n\r\nimport { Header } from './Header';\r\nimport { Body } from './Body';\r\nimport { Close } from './Close';\r\n\r\ninterface IStaticDrawerModalExport<T, P>\r\n  extends ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>> {\r\n  Header: typeof Header;\r\n  Body: typeof Body;\r\n  Close: typeof Close;\r\n  Footer: typeof StyledDrawerModalFooter;\r\n  FooterItem: typeof StyledDrawerModalFooterItem;\r\n}\r\n\r\nexport interface IDrawerModalProps extends HTMLAttributes<HTMLDivElement> {\r\n  /**\r\n   * Opens the modal\r\n   */\r\n  isOpen?: boolean;\r\n  /**\r\n   * Passes HTML attributes to the backdrop element\r\n   */\r\n  backdropProps?: any;\r\n  /**\r\n   * Handles close actions. Can be triggered from the backdrop and from the close icon.\r\n   *\r\n   * @param {Object} event The DOM event that triggered the close action\r\n   */\r\n  onClose?: (event: KeyboardEvent | MouseEvent) => void;\r\n  /**\r\n   * Sets the root ID. A unique ID is created if none is provided.\r\n   */\r\n  id?: string;\r\n  /**\r\n   * Defines the DOM element that the modal will attatch to\r\n   */\r\n  appendToNode?: Element;\r\n  /**\r\n   * Directs keyboard focus to the modal on mount\r\n   */\r\n  focusOnMount?: boolean;\r\n  /**\r\n   * Returns keyboard focus to the element that triggered the modal\r\n   */\r\n  restoreFocus?: boolean;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const DrawerModal = forwardRef<\r\n  HTMLDivElement,\r\n  IDrawerModalProps & HTMLAttributes<HTMLDivElement>\r\n>(\r\n  (\r\n    { id, isOpen, onClose, backdropProps, appendToNode, focusOnMount, restoreFocus, ...props },\r\n    ref\r\n  ) => {\r\n    const modalRef = useRef<HTMLDivElement | null>(null);\r\n    const transitionRef = useRef<HTMLDivElement>(null);\r\n    const theme = useContext(ThemeContext);\r\n    const environment = useDocument(theme);\r\n\r\n    useFocusVisible({ scope: modalRef, relativeDocument: modalRef.current });\r\n\r\n    const { getTitleProps, getCloseProps, getContentProps, getBackdropProps, getModalProps } =\r\n      useModal({\r\n        id,\r\n        modalRef,\r\n        focusOnMount,\r\n        restoreFocus,\r\n        environment,\r\n        onClose\r\n      });\r\n\r\n    useEffect(() => {\r\n      if (!environment) {\r\n        return undefined;\r\n      }\r\n\r\n      const htmlElement = environment.querySelector('html');\r\n      let previousHtmlOverflow: string;\r\n\r\n      if (htmlElement && isOpen) {\r\n        previousHtmlOverflow = htmlElement.style.overflow;\r\n\r\n        htmlElement.style.overflow = 'hidden';\r\n      }\r\n\r\n      return () => {\r\n        if (htmlElement && isOpen) {\r\n          htmlElement.style.overflow = previousHtmlOverflow;\r\n        }\r\n      };\r\n    }, [environment, isOpen]);\r\n\r\n    const rootNode = useMemo(() => {\r\n      if (appendToNode) {\r\n        return appendToNode;\r\n      }\r\n\r\n      if (environment) {\r\n        return environment.body;\r\n      }\r\n\r\n      return undefined;\r\n    }, [appendToNode, environment]);\r\n\r\n    const value = useMemo(\r\n      () => ({\r\n        getTitleProps,\r\n        getContentProps,\r\n        getCloseProps\r\n      }),\r\n      [getTitleProps, getContentProps, getCloseProps]\r\n    );\r\n\r\n    if (!rootNode) {\r\n      return null;\r\n    }\r\n\r\n    const modalProps = isOpen\r\n      ? getModalProps({ ref: mergeRefs([ref, modalRef, transitionRef]), ...props } as any)\r\n      : { ref: mergeRefs([ref, modalRef, transitionRef]), ...props };\r\n\r\n    return ReactDOM.createPortal(\r\n      <ModalsContext.Provider value={value}>\r\n        <CSSTransition\r\n          in={isOpen}\r\n          timeout={250}\r\n          unmountOnExit\r\n          classNames=\"garden-drawer-transition\"\r\n          nodeRef={transitionRef}\r\n        >\r\n          <StyledBackdrop {...(getBackdropProps({ isAnimated: true, ...backdropProps }) as any)}>\r\n            <StyledDrawerModal {...modalProps} />\r\n          </StyledBackdrop>\r\n        </CSSTransition>\r\n      </ModalsContext.Provider>,\r\n      rootNode\r\n    );\r\n  }\r\n) as IStaticDrawerModalExport<HTMLDivElement, IDrawerModalProps>;\r\n\r\nDrawerModal.Header = Header;\r\nDrawerModal.Body = Body;\r\nDrawerModal.Close = Close;\r\nDrawerModal.Footer = StyledDrawerModalFooter;\r\nDrawerModal.FooterItem = StyledDrawerModalFooterItem;\r\n\r\nDrawerModal.displayName = 'DrawerModal';\r\n\r\nDrawerModal.propTypes = {\r\n  backdropProps: PropTypes.object,\r\n  focusOnMount: PropTypes.bool,\r\n  restoreFocus: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n  appendToNode: PropTypes.any,\r\n  id: PropTypes.string,\r\n  isOpen: PropTypes.bool\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { useModalContext } from '../../utils/useModalContext';\r\nimport { StyledDrawerModalHeader } from '../../styled';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Header = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\r\n  (props, ref) => {\r\n    const { getTitleProps } = useModalContext();\r\n\r\n    return <StyledDrawerModalHeader ref={ref} {...getTitleProps(props)} />;\r\n  }\r\n);\r\n\r\nHeader.displayName = 'DrawerModal.Header';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { StyledFooter } from '../styled';\r\nimport { useModalContext } from '../utils/useModalContext';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Footer = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\r\n  (props, ref) => {\r\n    const { isLarge } = useModalContext();\r\n\r\n    return <StyledFooter ref={ref} isLarge={isLarge} {...props} />;\r\n  }\r\n);\r\n\r\nFooter.displayName = 'Footer';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { StyledFooterItem } from '../styled';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLSpanElement>\r\n */\r\nexport const FooterItem = React.forwardRef<HTMLSpanElement, React.HTMLAttributes<HTMLSpanElement>>(\r\n  (props, ref) => <StyledFooterItem ref={ref} {...props} />\r\n);\r\n\r\nFooterItem.displayName = 'FooterItem';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { useModalContext } from '../utils/useModalContext';\r\nimport { StyledDangerIcon, StyledHeader, IStyledHeaderProps } from '../styled';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Header = React.forwardRef<\r\n  HTMLDivElement,\r\n  IStyledHeaderProps & React.HTMLAttributes<HTMLDivElement>\r\n>((props, ref) => {\r\n  const { getTitleProps } = useModalContext();\r\n\r\n  return (\r\n    <StyledHeader ref={ref} {...getTitleProps(props)}>\r\n      {props.isDanger && <StyledDangerIcon />}\r\n      {props.children}\r\n    </StyledHeader>\r\n  );\r\n});\r\n\r\nHeader.displayName = 'Header';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useEffect, useMemo, useContext, HTMLAttributes, useRef } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { ThemeContext } from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { useDocument } from '@zendeskgarden/react-theming';\r\nimport { useModal } from '@zendeskgarden/container-modal';\r\nimport { useFocusVisible } from '@zendeskgarden/container-focusvisible';\r\nimport mergeRefs from 'react-merge-refs';\r\nimport isWindow from 'dom-helpers/isWindow';\r\nimport ownerDocument from 'dom-helpers/ownerDocument';\r\nimport ownerWindow from 'dom-helpers/ownerWindow';\r\nimport css from 'dom-helpers/css';\r\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\r\n\r\nimport { StyledModal, StyledBackdrop } from '../styled';\r\nimport { ModalsContext } from '../utils/useModalContext';\r\n\r\nconst isOverflowing = (element: Element) => {\r\n  const doc = ownerDocument(element);\r\n  const win = ownerWindow(doc as unknown as Element);\r\n\r\n  const isBody = element && element.tagName.toLowerCase() === 'body';\r\n\r\n  /* istanbul ignore next */\r\n  if (!isWindow(doc) && !isBody) {\r\n    return element.scrollHeight > element.clientHeight;\r\n  }\r\n\r\n  const style = win.getComputedStyle(doc.body);\r\n  const marginLeft = parseInt(style.getPropertyValue('margin-left'), 10);\r\n  const marginRight = parseInt(style.getPropertyValue('margin-right'), 10);\r\n\r\n  return marginLeft + doc.body.clientWidth + marginRight < win.innerWidth;\r\n};\r\n\r\nexport interface IModalProps extends HTMLAttributes<HTMLDivElement> {\r\n  /**\r\n   * Passes HTML attributes to the backdrop element\r\n   */\r\n  backdropProps?: HTMLAttributes<HTMLDivElement>;\r\n  /**\r\n   * Handles close actions. Can be triggered from the backdrop and from the close icon.\r\n   *\r\n   * @param {Object} event The DOM event that triggered the close action\r\n   */\r\n  onClose?: (event: KeyboardEvent | MouseEvent) => void;\r\n  /**\r\n   * Centers the modal on the backdrop\r\n   */\r\n  isCentered?: boolean;\r\n  /**\r\n   * Animates the modal\r\n   */\r\n  isAnimated?: boolean;\r\n  /**\r\n   * Sets the root ID. A unique ID is created if none is provided.\r\n   */\r\n  id?: string;\r\n  /**\r\n   * Defines the DOM element that the modal will attatch to\r\n   */\r\n  appendToNode?: Element;\r\n  /**\r\n   * Applies large styling\r\n   */\r\n  isLarge?: boolean;\r\n  /**\r\n   * Directs keyboard focus to the modal on mount\r\n   */\r\n  focusOnMount?: boolean;\r\n  /**\r\n   * Returns keyboard focus to the element that triggered the modal\r\n   */\r\n  restoreFocus?: boolean;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Modal = React.forwardRef<HTMLDivElement, IModalProps>(\r\n  (\r\n    {\r\n      backdropProps,\r\n      children,\r\n      onClose,\r\n      isLarge,\r\n      isCentered,\r\n      isAnimated,\r\n      id,\r\n      appendToNode,\r\n      focusOnMount,\r\n      restoreFocus,\r\n      ...modalProps\r\n    },\r\n    ref\r\n  ) => {\r\n    const theme = useContext(ThemeContext);\r\n    const modalRef = useRef<HTMLDivElement>(null);\r\n    const environment = useDocument(theme);\r\n\r\n    const { getBackdropProps, getModalProps, getTitleProps, getContentProps, getCloseProps } =\r\n      useModal({\r\n        id,\r\n        onClose,\r\n        modalRef,\r\n        focusOnMount,\r\n        restoreFocus\r\n      });\r\n\r\n    useFocusVisible({ scope: modalRef, relativeDocument: environment });\r\n\r\n    useEffect(() => {\r\n      if (!environment) {\r\n        return undefined;\r\n      }\r\n\r\n      const htmlElement = environment.querySelector('html');\r\n      const bodyElement = environment.querySelector('body');\r\n      let previousHtmlOverflow: string;\r\n      let previousBodyPaddingRight: string;\r\n\r\n      if (bodyElement) {\r\n        if (isOverflowing(bodyElement)) {\r\n          const scrollbarSize = getScrollbarSize();\r\n          const bodyPaddingRight = parseInt(css(bodyElement, 'paddingRight') || '0', 10);\r\n\r\n          previousBodyPaddingRight = bodyElement.style.paddingRight;\r\n          bodyElement.style.paddingRight = `${bodyPaddingRight + scrollbarSize}px`;\r\n        }\r\n\r\n        if (htmlElement) {\r\n          previousHtmlOverflow = htmlElement.style.overflow;\r\n\r\n          htmlElement.style.overflow = 'hidden';\r\n        }\r\n\r\n        return () => {\r\n          if (htmlElement) {\r\n            htmlElement.style.overflow = previousHtmlOverflow;\r\n          }\r\n\r\n          bodyElement.style.paddingRight = previousBodyPaddingRight;\r\n        };\r\n      }\r\n\r\n      return undefined;\r\n    }, [environment]);\r\n\r\n    const rootNode = useMemo(() => {\r\n      if (appendToNode) {\r\n        return appendToNode;\r\n      }\r\n\r\n      if (environment) {\r\n        return environment.body;\r\n      }\r\n\r\n      return undefined;\r\n    }, [appendToNode, environment]);\r\n\r\n    const value = useMemo(\r\n      () => ({\r\n        isLarge,\r\n        getTitleProps,\r\n        getContentProps,\r\n        getCloseProps\r\n      }),\r\n      [isLarge, getTitleProps, getContentProps, getCloseProps]\r\n    );\r\n\r\n    if (!rootNode) {\r\n      return null;\r\n    }\r\n\r\n    return createPortal(\r\n      <ModalsContext.Provider value={value}>\r\n        <StyledBackdrop\r\n          {...(getBackdropProps({ isCentered, isAnimated, ...backdropProps }) as any)}\r\n        >\r\n          <StyledModal\r\n            {...(getModalProps({\r\n              isCentered,\r\n              isAnimated,\r\n              isLarge,\r\n              ref: mergeRefs([ref, modalRef]),\r\n              ...modalProps\r\n            }) as any)}\r\n          >\r\n            {children}\r\n          </StyledModal>\r\n        </StyledBackdrop>\r\n      </ModalsContext.Provider>,\r\n      rootNode\r\n    );\r\n  }\r\n);\r\n\r\nModal.displayName = 'Modal';\r\n\r\nModal.propTypes = {\r\n  backdropProps: PropTypes.object,\r\n  isLarge: PropTypes.bool,\r\n  isAnimated: PropTypes.bool,\r\n  isCentered: PropTypes.bool,\r\n  focusOnMount: PropTypes.bool,\r\n  restoreFocus: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n  appendToNode: PropTypes.any,\r\n  id: PropTypes.string\r\n};\r\n\r\nModal.defaultProps = {\r\n  isAnimated: true,\r\n  isCentered: true\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { StyledTooltipModalBody } from '../../styled';\r\nimport { useTooltipModalContext } from '../../utils/useTooltipModalContext';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Body = React.forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  (props, ref) => {\r\n    const { getContentProps } = useTooltipModalContext();\r\n\r\n    return <StyledTooltipModalBody ref={ref} {...getContentProps(props)} />;\r\n  }\r\n);\r\n\r\nBody.displayName = 'TooltipModal.Body';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { StyledTooltipModalClose } from '../../styled';\r\nimport { useTooltipModalContext } from '../../utils/useTooltipModalContext';\r\nimport XStrokeIcon from '@zendeskgarden/svg-icons/src/16/x-stroke.svg';\r\n\r\n/**\r\n * @extends ButtonHTMLAttributes<HTMLButtonElement>\r\n */\r\nexport const Close = React.forwardRef<\r\n  HTMLButtonElement,\r\n  React.ButtonHTMLAttributes<HTMLButtonElement>\r\n>((props, ref) => {\r\n  const { getCloseProps } = useTooltipModalContext();\r\n\r\n  return (\r\n    <StyledTooltipModalClose ref={ref} {...getCloseProps(props)}>\r\n      <XStrokeIcon />\r\n    </StyledTooltipModalClose>\r\n  );\r\n});\r\n\r\nClose.displayName = 'TooltipModal.Close';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { useTooltipModalContext } from '../../utils/useTooltipModalContext';\r\nimport { StyledTooltipModalTitle } from '../../styled';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Title = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\r\n  (props, ref) => {\r\n    const { getTitleProps } = useTooltipModalContext();\r\n\r\n    return (\r\n      <StyledTooltipModalTitle ref={ref} {...getTitleProps(props)}>\r\n        {props.children}\r\n      </StyledTooltipModalTitle>\r\n    );\r\n  }\r\n);\r\n\r\nTitle.displayName = 'TooltipModal.Title';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, {\r\n  useState,\r\n  useContext,\r\n  useMemo,\r\n  useEffect,\r\n  useRef,\r\n  HTMLAttributes,\r\n  ForwardRefExoticComponent,\r\n  PropsWithoutRef,\r\n  RefAttributes\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeContext } from 'styled-components';\r\nimport { usePopper, Modifier } from 'react-popper';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { useModal } from '@zendeskgarden/container-modal';\r\nimport mergeRefs from 'react-merge-refs';\r\nimport {\r\n  GARDEN_PLACEMENT,\r\n  getRtlPopperPlacement,\r\n  getPopperPlacement\r\n} from '../../utils/gardenPlacements';\r\nimport { TooltipModalContext } from '../../utils/useTooltipModalContext';\r\nimport {\r\n  StyledTooltipWrapper,\r\n  StyledTooltipModal,\r\n  StyledTooltipModalFooter,\r\n  StyledTooltipModalFooterItem,\r\n  StyledTooltipModalBackdrop\r\n} from '../../styled';\r\nimport { Title } from './Title';\r\nimport { Body } from './Body';\r\nimport { Close } from './Close';\r\n\r\ninterface IStaticTooltipModalExport<T, P>\r\n  extends ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>> {\r\n  Title: typeof Title;\r\n  Body: typeof Body;\r\n  Close: typeof Close;\r\n  Footer: typeof StyledTooltipModalFooter;\r\n  FooterItem: typeof StyledTooltipModalFooterItem;\r\n}\r\n\r\nexport interface ITooltipModalProps extends HTMLAttributes<HTMLDivElement> {\r\n  /**\r\n   * Positions the modal relative to the provided `HTMLElement`\r\n   */\r\n  referenceElement?: HTMLElement | null;\r\n  /**\r\n   * Modifies [Popper instance](https://popper.js.org/docs/v2/modifiers/) to customize positioning logic\r\n   */\r\n  popperModifiers?: Partial<Modifier<any, any>>[];\r\n  /**\r\n   * Adjusts the placement of the tooltip\r\n   **/\r\n  placement?: GARDEN_PLACEMENT;\r\n  /**\r\n   * Adds an arrow to the tooltop\r\n   */\r\n  hasArrow?: boolean;\r\n  /**\r\n   * Animates the tooltop\r\n   */\r\n  isAnimated?: boolean;\r\n  /**\r\n   * Sets the `z-index` of the tooltip\r\n   */\r\n  zIndex?: number;\r\n  /**\r\n   * Handles close actions. Can be triggered from the backdrop and from the close icon.\r\n   *\r\n   * @param {Object} event The DOM event that triggered the close action\r\n   */\r\n  onClose?: (event: KeyboardEvent | MouseEvent) => void;\r\n  /**\r\n   * Passes HTML attributes to the backdrop element\r\n   */\r\n  backdropProps?: any;\r\n  /**\r\n   * Directs keyboard focus to the modal on mount\r\n   */\r\n  focusOnMount?: boolean;\r\n  /**\r\n   * Returns keyboard focus to the element that triggered the modal\r\n   */\r\n  restoreFocus?: boolean;\r\n  /**\r\n   * Sets the root ID. A unique ID is created if none is provided.\r\n   */\r\n  id?: string;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const TooltipModal = React.forwardRef<HTMLDivElement, ITooltipModalProps>(\r\n  (\r\n    {\r\n      referenceElement,\r\n      popperModifiers,\r\n      placement,\r\n      onClose,\r\n      hasArrow,\r\n      isAnimated,\r\n      zIndex,\r\n      style,\r\n      backdropProps,\r\n      focusOnMount,\r\n      restoreFocus,\r\n      id,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const theme = useContext(ThemeContext);\r\n    const previousReferenceElementRef = useRef<HTMLElement | null>();\r\n    const modalRef = useRef<HTMLDivElement>(null);\r\n    const transitionRef = useRef<HTMLDivElement>(null);\r\n    const [popperElement, setPopperElement] = useState<HTMLDivElement | null>();\r\n    const { getTitleProps, getCloseProps, getContentProps, getBackdropProps, getModalProps } =\r\n      useModal({\r\n        id,\r\n        onClose,\r\n        modalRef,\r\n        focusOnMount,\r\n        /** Handle `restoreFocus` locally to return focus to `referenceElement` */\r\n        restoreFocus: false\r\n      });\r\n\r\n    useEffect(() => {\r\n      if (!referenceElement && previousReferenceElementRef.current && restoreFocus) {\r\n        previousReferenceElementRef.current.focus();\r\n      }\r\n\r\n      previousReferenceElementRef.current = referenceElement;\r\n    }, [referenceElement, restoreFocus]);\r\n\r\n    const popperPlacement = useMemo(\r\n      () => (theme.rtl ? getRtlPopperPlacement(placement!) : getPopperPlacement(placement!)),\r\n      [placement, theme.rtl]\r\n    );\r\n\r\n    const { styles, attributes, state } = usePopper(referenceElement, popperElement, {\r\n      placement: popperPlacement,\r\n      modifiers: [\r\n        { name: 'offset', options: { offset: [0, theme.space.base * 3] } }, // Default Popper offset\r\n        ...(popperModifiers || [])\r\n      ]\r\n    });\r\n\r\n    const value = {\r\n      getTitleProps,\r\n      getContentProps,\r\n      getCloseProps\r\n    };\r\n\r\n    const modalProps = getModalProps({\r\n      ref: mergeRefs([modalRef, ref]),\r\n      placement: state ? state.placement : 'top',\r\n      hasArrow,\r\n      isAnimated,\r\n      style,\r\n      ...props\r\n    }) as any;\r\n\r\n    return (\r\n      <CSSTransition\r\n        unmountOnExit\r\n        timeout={isAnimated ? 200 : 0}\r\n        in={Boolean(referenceElement)}\r\n        classNames={isAnimated ? 'garden-tooltip-modal-transition' : ''}\r\n        nodRef={transitionRef}\r\n      >\r\n        {transitionState => {\r\n          return (\r\n            <TooltipModalContext.Provider value={value}>\r\n              <StyledTooltipModalBackdrop\r\n                {...(getBackdropProps({ ref: transitionRef, ...backdropProps }) as any)}\r\n              >\r\n                <StyledTooltipWrapper\r\n                  ref={setPopperElement}\r\n                  style={styles.popper}\r\n                  placement={state ? state.placement : undefined}\r\n                  zIndex={zIndex}\r\n                  isAnimated={isAnimated}\r\n                  {...attributes.popper}\r\n                >\r\n                  <StyledTooltipModal transitionState={transitionState} {...modalProps} />\r\n                </StyledTooltipWrapper>\r\n              </StyledTooltipModalBackdrop>\r\n            </TooltipModalContext.Provider>\r\n          );\r\n        }}\r\n      </CSSTransition>\r\n    );\r\n  }\r\n) as IStaticTooltipModalExport<HTMLDivElement, ITooltipModalProps>;\r\n\r\nTooltipModal.Title = Title;\r\nTooltipModal.Body = Body;\r\nTooltipModal.Close = Close;\r\nTooltipModal.Footer = StyledTooltipModalFooter;\r\nTooltipModal.FooterItem = StyledTooltipModalFooterItem;\r\n\r\nTooltipModal.defaultProps = {\r\n  placement: 'auto',\r\n  isAnimated: true,\r\n  hasArrow: true,\r\n  focusOnMount: true,\r\n  restoreFocus: true\r\n};\r\n\r\nTooltipModal.propTypes = {\r\n  referenceElement: PropTypes.any,\r\n  popperModifiers: PropTypes.any,\r\n  placement: PropTypes.any,\r\n  isAnimated: PropTypes.bool,\r\n  hasArrow: PropTypes.bool,\r\n  zIndex: PropTypes.number,\r\n  onClose: PropTypes.func,\r\n  backdropProps: PropTypes.any,\r\n  focusOnMount: PropTypes.bool,\r\n  restoreFocus: PropTypes.bool,\r\n  id: PropTypes.string\r\n};\r\n\r\nTooltipModal.displayName = 'TooltipModal';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport PropTypes from 'prop-types';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { getColor, DEFAULT_THEME, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'modals.backdrop';\r\n\r\nexport interface IStyledBackdropProps {\r\n  isCentered?: boolean;\r\n  isAnimated?: boolean;\r\n}\r\n\r\nconst animationName = keyframes`\r\n  0% {\r\n    opacity: 0;\r\n  }\r\n\r\n  100% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\n/**\r\n * 1. Smooth iOS scrolling.\r\n */\r\nexport const StyledBackdrop = styled.div.attrs<IStyledBackdropProps>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledBackdropProps>`\r\n  display: flex;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  align-items: ${props => props.isCentered && 'center'};\r\n  justify-content: ${props => props.isCentered && 'center'};\r\n  z-index: 400;\r\n  background-color: ${props => getColor('neutralHue', 800, props.theme, 0.85)};\r\n  overflow: auto;\r\n  -webkit-overflow-scrolling: touch; /* [1] */\r\n  font-family: ${props => props.theme.fonts.system};\r\n  direction: ${props => props.theme.rtl && 'rtl'};\r\n  animation: ${props =>\r\n    props.isAnimated &&\r\n    css`\r\n      ${animationName} 0.15s ease-in\r\n    `};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledBackdrop.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n\r\nStyledBackdrop.propTypes = {\r\n  isCentered: PropTypes.bool,\r\n  isAnimated: PropTypes.bool\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport {\r\n  getLineHeight,\r\n  retrieveComponentStyles,\r\n  DEFAULT_THEME\r\n} from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'modals.body';\r\n\r\nexport const StyledBody = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  display: block;\r\n  margin: 0;\r\n  padding: ${props => `${props.theme.space.base * 5}px ${props.theme.space.base * 10}px`};\r\n  height: 100%;\r\n  overflow: auto;\r\n  line-height: ${props => getLineHeight(props.theme.lineHeights.md, props.theme.fontSizes.md)};\r\n  color: ${props => props.theme.colors.foreground};\r\n  font-size: ${props => props.theme.fontSizes.md};\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledBody.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, DefaultTheme, ThemeProps } from 'styled-components';\r\nimport { getColor, retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'modals.close';\r\n\r\nconst colorStyles = (props: ThemeProps<DefaultTheme>) => {\r\n  const backgroundColor = 'primaryHue';\r\n  const foregroundColor = 'neutralHue';\r\n\r\n  return css`\r\n    background-color: transparent;\r\n    color: ${getColor(foregroundColor, 600, props.theme)};\r\n\r\n    &:hover {\r\n      background-color: ${getColor(backgroundColor, 600, props.theme, 0.08)};\r\n      color: ${getColor(foregroundColor, 700, props.theme)};\r\n    }\r\n\r\n    &[data-garden-focus-visible] {\r\n      box-shadow: ${props.theme.shadows.md(\r\n        getColor(backgroundColor, 600, props.theme, 0.35) as string\r\n      )};\r\n    }\r\n\r\n    &:active {\r\n      /* prettier-ignore */\r\n      transition:\r\n        background-color 0.1s ease-in-out,\r\n        color 0.1s ease-in-out;\r\n      background-color: ${getColor(backgroundColor, 600, props.theme, 0.2)};\r\n      color: ${getColor(foregroundColor, 800, props.theme)};\r\n    }\r\n  `;\r\n};\r\n\r\n/**\r\n * 1. Remove dotted outline from Firefox on focus.\r\n */\r\nexport const StyledClose = styled.button.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  display: block;\r\n  position: absolute;\r\n  top: ${props => props.theme.space.base * 2.5}px;\r\n  ${props => (props.theme.rtl ? 'left' : 'right')}: ${props => `${props.theme.space.base * 6.5}px`};\r\n  /* prettier-ignore */\r\n  transition:\r\n    box-shadow 0.1s ease-in-out,\r\n    background-color 0.25s ease-in-out,\r\n    color 0.25s ease-in-out;\r\n  border: none;\r\n  border-radius: 50%;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  width: ${props => props.theme.space.base * 10}px;\r\n  height: ${props => props.theme.space.base * 10}px;\r\n  overflow: hidden;\r\n  text-decoration: none;\r\n  font-size: 0;\r\n  user-select: none;\r\n\r\n  &::-moz-focus-inner {\r\n    border: 0; /* [1] */\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  ${props => colorStyles(props)}\r\n\r\n  & > svg {\r\n    vertical-align: middle;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledClose.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport AlertErrorStrokeIcon from '@zendeskgarden/svg-icons/src/16/alert-error-stroke.svg';\r\n\r\nexport const StyledDangerIcon = styled(AlertErrorStrokeIcon)`\r\n  position: absolute;\r\n  top: ${props => props.theme.space.base * 5.5}px;\r\n  ${props => (props.theme.rtl ? 'right' : 'left')}: ${props => `${props.theme.space.base * 4}px`};\r\n`;\r\n\r\nStyledDangerIcon.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { getColor, retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'modals.drawer_modal';\r\n\r\nconst DRAWER_WIDTH = 380;\r\n\r\nconst boxShadow = (props: ThemeProps<DefaultTheme>) => {\r\n  const { theme } = props;\r\n  const { space, shadows } = theme;\r\n  const offsetY = `${space.base * 5}px`;\r\n  const blurRadius = `${space.base * 7}px`;\r\n  const color = getColor('neutralHue', 800, theme, 0.35);\r\n\r\n  return shadows.lg(offsetY, blurRadius, color as string);\r\n};\r\n\r\n/**\r\n * 1. Smooth iOS scrolling.\r\n */\r\nexport const StyledDrawerModal = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  display: flex;\r\n  position: fixed;\r\n  top: 0;\r\n  ${props => (props.theme.rtl ? 'left' : 'right')}: 0;\r\n  flex-direction: column;\r\n  z-index: 500;\r\n  box-shadow: ${boxShadow};\r\n  background: ${props => props.theme.colors.background};\r\n  width: ${DRAWER_WIDTH}px;\r\n  height: 100%;\r\n  overflow: auto;\r\n  -webkit-overflow-scrolling: touch; /* [1] */\r\n  font-family: ${props => props.theme.fonts.system};\r\n  direction: ${props => props.theme.rtl && 'rtl'};\r\n\r\n  &.garden-drawer-transition-enter {\r\n    transform: translateX(${props => (props.theme.rtl ? -DRAWER_WIDTH : DRAWER_WIDTH)}px);\r\n  }\r\n\r\n  &.garden-drawer-transition-enter-active {\r\n    transform: translateX(0);\r\n    transition: transform 0.25s ease-in-out;\r\n  }\r\n\r\n  &.garden-drawer-transition-exit-active {\r\n    transform: translateX(${props => (props.theme.rtl ? -DRAWER_WIDTH : DRAWER_WIDTH)}px);\r\n    transition: transform 0.25s ease-in-out;\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledDrawerModal.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledBody } from './StyledBody';\r\n\r\nconst COMPONENT_ID = 'modals.drawer_modal.body';\r\n\r\nexport const StyledDrawerModalBody = styled(StyledBody).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  padding: ${props => props.theme.space.base * 5}px;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledDrawerModalBody.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledClose } from './StyledClose';\r\n\r\nconst COMPONENT_ID = 'modals.drawer_modal.close';\r\n\r\nexport const StyledDrawerModalClose = styled(StyledClose).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  top: ${props => props.theme.space.base * 3.5}px;\r\n  width: ${props => props.theme.space.base * 8}px;\r\n  height: ${props => props.theme.space.base * 8}px;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledDrawerModalClose.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { getColor, retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'modals.drawer_modal.footer';\r\n\r\nexport const StyledDrawerModalFooter = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  justify-content: flex-end;\r\n  border-top: ${props => `${props.theme.borders.sm} ${getColor('neutralHue', 200, props.theme)}`};\r\n  padding: ${props => props.theme.space.base * 5}px;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledDrawerModalFooter.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledFooterItem } from './StyledFooterItem';\r\n\r\nconst COMPONENT_ID = 'modals.drawer_modal.footer_item';\r\n\r\nexport const StyledDrawerModalFooterItem = styled(StyledFooterItem).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledDrawerModalFooterItem.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledHeader } from './StyledHeader';\r\n\r\nconst COMPONENT_ID = 'modals.drawer_modal.header';\r\n\r\nexport const StyledDrawerModalHeader = styled(StyledHeader).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  padding: ${props => props.theme.space.base * 5}px;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledDrawerModalHeader.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { getColor, retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'modals.footer';\r\n\r\ninterface IStyledFooter {\r\n  isLarge?: boolean;\r\n}\r\n\r\nexport const StyledFooter = styled.div.attrs<IStyledFooter>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledFooter>`\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  border-top: ${props =>\r\n    props.isLarge && `${props.theme.borders.sm} ${getColor('neutralHue', 200, props.theme)}`};\r\n  padding: ${props =>\r\n    props.isLarge\r\n      ? `${props.theme.space.base * 8}px ${props.theme.space.base * 10}px`\r\n      : `${props.theme.space.base * 5}px ${props.theme.space.base * 10}px ${\r\n          props.theme.space.base * 8\r\n        }px`};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledFooter.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'modals.footer_item';\r\n\r\nexport const StyledFooterItem = styled.span.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  display: flex;\r\n  /* stylelint-disable property-no-unknown */\r\n  margin-${props => (props.theme.rtl ? 'right' : 'left')}: ${props => props.theme.space.base * 5}px;\r\n  /* stylelint-enable property-no-unknown */\r\n  min-width: 0;\r\n\r\n  &:first-child {\r\n    /* stylelint-disable property-no-unknown */\r\n    margin-${props => (props.theme.rtl ? 'right' : 'left')}: 0;\r\n    /* stylelint-enable property-no-unknown */\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledFooterItem.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport {\r\n  getLineHeight,\r\n  getColor,\r\n  retrieveComponentStyles,\r\n  DEFAULT_THEME\r\n} from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'modals.header';\r\n\r\nexport interface IStyledHeaderProps {\r\n  /**\r\n   * Applies danger styling\r\n   */\r\n  isDanger?: boolean;\r\n}\r\n\r\nexport const StyledHeader = styled.div.attrs<IStyledHeaderProps>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledHeaderProps>`\r\n  display: block;\r\n  position: ${props => props.isDanger && 'relative'};\r\n  margin: 0;\r\n  border-bottom: ${props => props.theme.borders.sm} ${getColor('neutralHue', 200)};\r\n  padding: ${props => `${props.theme.space.base * 5}px ${props.theme.space.base * 10}px`};\r\n  line-height: ${props => getLineHeight(props.theme.lineHeights.md, props.theme.fontSizes.md)};\r\n  color: ${props =>\r\n    props.isDanger ? getColor('dangerHue', 600, props.theme) : props.theme.colors.foreground};\r\n  font-size: ${props => props.theme.fontSizes.md};\r\n  font-weight: ${props => props.theme.fontWeights.semibold};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledHeader.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport PropTypes from 'prop-types';\r\nimport styled, { css, keyframes, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { getColor, retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'modals.modal';\r\n\r\nexport interface IStyledModalProps {\r\n  isLarge?: boolean;\r\n  isCentered?: boolean;\r\n  isAnimated?: boolean;\r\n}\r\n\r\nconst animationName = keyframes`\r\n  0% {\r\n    transform: scale(0);\r\n    opacity: 0;\r\n  }\r\n\r\n  50% {\r\n    transform: scale(1.05);\r\n  }\r\n\r\n  100% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst boxShadow = (props: ThemeProps<DefaultTheme>) => {\r\n  const { theme } = props;\r\n  const { space, shadows } = theme;\r\n  const offsetY = `${space.base * 5}px`;\r\n  const blurRadius = `${space.base * 7}px`;\r\n  const color = getColor('neutralHue', 800, theme, 0.35);\r\n\r\n  return shadows.lg(offsetY, blurRadius, color as string);\r\n};\r\n\r\nconst sizeStyles = (props: IStyledModalProps & ThemeProps<DefaultTheme>) => {\r\n  const defaultWidth = 544;\r\n  const largeWidth = 800;\r\n\r\n  return css`\r\n    width: ${props.isLarge ? `${largeWidth}px` : `${defaultWidth}px`};\r\n    @media (max-width: ${props.isLarge ? `${largeWidth - 1}px` : props.theme.breakpoints.md}) {\r\n      ${props.theme.rtl ? 'right' : 'left'}: ${props.theme.space.base * 6}px;\r\n    }\r\n  `;\r\n};\r\n\r\n/**\r\n * 1. IE11 centering hack.\r\n */\r\nexport const StyledModal = styled.div.attrs<IStyledModalProps>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledModalProps>`\r\n  display: flex;\r\n  position: fixed;\r\n  flex-direction: column;\r\n  margin: ${props => (props.isCentered ? '0' : `${props.theme.space.base * 12}px`)};\r\n  border-radius: ${props => props.theme.borderRadii.md};\r\n  box-shadow: ${boxShadow};\r\n  background-color: ${props => props.theme.colors.background};\r\n  min-height: 60px;\r\n  max-height: calc(100vh - ${props => props.theme.space.base * 24}px);\r\n  animation: ${props =>\r\n    props.isAnimated &&\r\n    css`\r\n      ${animationName} 0.3s ease-in-out\r\n    `};\r\n  animation-delay: 0.01s;\r\n  overflow: auto;\r\n  direction: ${props => props.theme.rtl && 'rtl'};\r\n  ${sizeStyles}\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  /* stylelint-disable-next-line */\r\n  @media (max-height: 399px) {\r\n    top: ${props => props.theme.space.base * 6}px;\r\n    bottom: auto;\r\n    margin-bottom: ${props => props.theme.space.base * 6}px;\r\n    max-height: none;\r\n  }\r\n\r\n  /* stylelint-disable-next-line */\r\n  @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\r\n    right: ${props => props.isCentered && '50%'}; /* [1] */\r\n    bottom: ${props => props.isCentered && '50%'}; /* [1] */\r\n    transform: ${props => props.isCentered && 'translate(50%, 50%)'}; /* [1] */\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledModal.propTypes = {\r\n  isLarge: PropTypes.bool,\r\n  isAnimated: PropTypes.bool\r\n};\r\n\r\nStyledModal.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { Placement } from '@popperjs/core';\r\nimport { arrowStyles, retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { getArrowPosition } from '../utils/gardenPlacements';\r\n\r\nconst COMPONENT_ID = 'modals.tooltip_modal';\r\n\r\nexport interface IStyledTooltipModalProps {\r\n  hasArrow?: boolean;\r\n  /**\r\n   * All valid [Popper.JS Placements](https://popper.js.org/popper-documentation.html#Popper.placements)\r\n   */\r\n  placement: Placement;\r\n  isAnimated?: boolean;\r\n  transitionState?: string;\r\n}\r\n\r\nexport const StyledTooltipModal = styled.div.attrs<IStyledTooltipModalProps>(props => ({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  className: props.isAnimated && 'is-animated'\r\n}))<IStyledTooltipModalProps>`\r\n  padding: ${props => props.theme.space.base * 5}px;\r\n  width: 400px;\r\n\r\n  ${props => {\r\n    const computedArrowStyles = arrowStyles(getArrowPosition(props.placement), {\r\n      size: `${props.theme.space.base * 2}px`,\r\n      inset: '1px',\r\n      animationModifier: '.is-animated'\r\n    });\r\n\r\n    if (props.isAnimated) {\r\n      return props.hasArrow && props.transitionState === 'entered' && computedArrowStyles;\r\n    }\r\n\r\n    return props.hasArrow && computedArrowStyles;\r\n  }};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledTooltipModal.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { DEFAULT_THEME, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'modals.tooltip_modal.backdrop';\r\n\r\n/**\r\n * 1. Smooth iOS scrolling.\r\n */\r\nexport const StyledTooltipModalBackdrop = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 400;\r\n  overflow: hidden;\r\n  -webkit-overflow-scrolling: touch; /* [1] */\r\n  font-family: ${props => props.theme.fonts.system};\r\n  direction: ${props => props.theme.rtl && 'rtl'};\r\n\r\n  &.garden-tooltip-modal-transition-exit-active {\r\n    pointer-events: none;\r\n  }\r\n\r\n  &.garden-tooltip-modal-transition-exit-active div {\r\n    transition: opacity 200ms;\r\n    opacity: 0;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledTooltipModalBackdrop.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport {\r\n  getLineHeight,\r\n  retrieveComponentStyles,\r\n  DEFAULT_THEME\r\n} from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'modals.tooltip_modal.body';\r\n\r\nexport const StyledTooltipModalBody = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  display: block;\r\n  margin: 0;\r\n  padding-top: ${props => props.theme.space.base * 1.5}px;\r\n  line-height: ${props => getLineHeight(props.theme.lineHeights.md, props.theme.fontSizes.md)};\r\n  color: ${props => props.theme.colors.foreground};\r\n  font-size: ${props => props.theme.fontSizes.md};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledTooltipModalBody.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledClose } from './StyledClose';\r\n\r\nconst COMPONENT_ID = 'modals.tooltip_modal.close';\r\n\r\nexport const StyledTooltipModalClose = styled(StyledClose).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  top: ${props => props.theme.space.base * 3.5}px;\r\n  ${props => (props.theme.rtl ? 'left' : 'right')}: ${props => `${props.theme.space.base * 3}px`};\r\n  width: ${props => props.theme.space.base * 8}px;\r\n  height: ${props => props.theme.space.base * 8}px;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledTooltipModalClose.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'modals.tooltip_modal.footer';\r\n\r\nexport const StyledTooltipModalFooter = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  padding-top: ${p => p.theme.space.base * 5}px;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledTooltipModalFooter.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledFooterItem } from './StyledFooterItem';\r\n\r\nconst COMPONENT_ID = 'modals.tooltip_modal.footer_item';\r\n\r\nexport const StyledTooltipModalFooterItem = styled(StyledFooterItem).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledTooltipModalFooterItem.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme } from 'styled-components';\r\nimport {\r\n  getLineHeight,\r\n  retrieveComponentStyles,\r\n  DEFAULT_THEME\r\n} from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'modals.tooltip_modal.title';\r\n\r\nconst sizeStyles = (props: ThemeProps<DefaultTheme>) => `\r\n  /* stylelint-disable-next-line property-no-unknown */\r\n  padding-${props.theme.rtl ? 'left' : 'right'}: ${props.theme.space.base * 8}px;\r\n  line-height: ${getLineHeight(props.theme.lineHeights.md, props.theme.fontSizes.md)};\r\n  font-size: ${props.theme.fontSizes.md};\r\n`;\r\n\r\nexport const StyledTooltipModalTitle = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  margin: 0;\r\n  color: ${props => props.theme.colors.foreground};\r\n  font-weight: ${props => props.theme.fontWeights.semibold};\r\n\r\n  ${props => sizeStyles(props)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledTooltipModalTitle.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { DEFAULT_THEME, menuStyles } from '@zendeskgarden/react-theming';\r\nimport { getMenuPosition } from '../utils/gardenPlacements';\r\nimport { Placement } from '@popperjs/core';\r\n\r\ninterface IStyledTooltipWrapperProps {\r\n  isAnimated?: boolean;\r\n  zIndex?: number;\r\n  placement?: Placement;\r\n}\r\n\r\nexport const StyledTooltipWrapper = styled.div.attrs<IStyledTooltipWrapperProps>(props => ({\r\n  className: props.isAnimated && 'is-animated'\r\n}))<IStyledTooltipWrapperProps>`\r\n  ${props =>\r\n    menuStyles(getMenuPosition(props.placement), {\r\n      theme: props.theme,\r\n      hidden: false,\r\n      /**\r\n       * Popper v2 no longer allows margin values to be applied to referenced\r\n       * elements.\r\n       */\r\n      margin: '0',\r\n      zIndex: props.zIndex,\r\n      animationModifier: '.is-animated'\r\n    })};\r\n`;\r\n\r\nStyledTooltipWrapper.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { ARROW_POSITION, MENU_POSITION } from '@zendeskgarden/react-theming';\r\nimport { Placement } from '@popperjs/core';\r\n\r\nexport type GARDEN_PLACEMENT =\r\n  | 'auto'\r\n  | 'top'\r\n  | 'top-start'\r\n  | 'top-end'\r\n  | 'bottom'\r\n  | 'bottom-start'\r\n  | 'bottom-end'\r\n  | 'end'\r\n  | 'end-top'\r\n  | 'end-bottom'\r\n  | 'start'\r\n  | 'start-top'\r\n  | 'start-bottom';\r\n\r\n/**\r\n * Convert Garden RTL aware placement to Popper.JS valid placement\r\n * @param {String} gardenPlacement\r\n */\r\nexport function getPopperPlacement(gardenPlacement: GARDEN_PLACEMENT) {\r\n  const gardenToPopperMapping: Record<GARDEN_PLACEMENT, Placement> = {\r\n    auto: 'auto',\r\n    top: 'top',\r\n    'top-start': 'top-start',\r\n    'top-end': 'top-end',\r\n    bottom: 'bottom',\r\n    'bottom-start': 'bottom-start',\r\n    'bottom-end': 'bottom-end',\r\n    end: 'right',\r\n    'end-top': 'right-start',\r\n    'end-bottom': 'right-end',\r\n    start: 'left',\r\n    'start-top': 'left-start',\r\n    'start-bottom': 'left-end'\r\n  };\r\n\r\n  return gardenToPopperMapping[gardenPlacement];\r\n}\r\n\r\n/**\r\n * Convert Garden RTL aware placement to RTL equivalent Popper.JS placement\r\n * @param {String} gardenPlacement\r\n */\r\nexport function getRtlPopperPlacement(gardenPlacement: GARDEN_PLACEMENT) {\r\n  const rtlPlacementMappings: Partial<Record<Placement, Placement>> = {\r\n    left: 'right',\r\n    'left-start': 'right-start',\r\n    'left-end': 'right-end',\r\n    'top-start': 'top-end',\r\n    'top-end': 'top-start',\r\n    right: 'left',\r\n    'right-start': 'left-start',\r\n    'right-end': 'left-end',\r\n    'bottom-start': 'bottom-end',\r\n    'bottom-end': 'bottom-start'\r\n  };\r\n\r\n  const popperPlacement = getPopperPlacement(gardenPlacement);\r\n\r\n  return rtlPlacementMappings[popperPlacement] || popperPlacement;\r\n}\r\n\r\n/**\r\n * Convert Popper.JS placement to corresponding arrow position\r\n * @param {String} popperPlacement\r\n */\r\nexport function getArrowPosition(popperPlacement: Placement) {\r\n  const arrowPositionMappings: Partial<Record<Placement, ARROW_POSITION>> = {\r\n    top: 'bottom',\r\n    'top-start': 'bottom-left',\r\n    'top-end': 'bottom-right',\r\n    right: 'left',\r\n    'right-start': 'left-top',\r\n    'right-end': 'left-bottom',\r\n    bottom: 'top',\r\n    'bottom-start': 'top-left',\r\n    'bottom-end': 'top-right',\r\n    left: 'right',\r\n    'left-start': 'right-top',\r\n    'left-end': 'right-bottom'\r\n  };\r\n\r\n  return arrowPositionMappings[popperPlacement] || 'top';\r\n}\r\n\r\n/**\r\n * Convert Popper.JS placement to corresponding menu position\r\n * @param {String} popperPlacement\r\n */\r\nexport function getMenuPosition(popperPlacement?: Placement) {\r\n  return (popperPlacement ? popperPlacement.split('-')[0] : 'bottom') as MENU_POSITION;\r\n}\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { createContext, useContext, HTMLAttributes } from 'react';\r\n\r\nexport interface IModalContext {\r\n  isLarge?: boolean;\r\n  getTitleProps: <T>(options?: T) => T & HTMLAttributes<HTMLDivElement>;\r\n  getContentProps: <T>(options?: T) => T & HTMLAttributes<HTMLDivElement>;\r\n  getCloseProps: <T>(options?: T) => T & HTMLAttributes<HTMLButtonElement>;\r\n}\r\n\r\nexport const ModalsContext = createContext<IModalContext | undefined>(undefined);\r\n\r\nexport const useModalContext = () => {\r\n  const context = useContext(ModalsContext);\r\n\r\n  if (context === undefined) {\r\n    throw new Error('useModalContext must be used within a ModalsContext.Provider');\r\n  }\r\n\r\n  return context;\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { createContext, useContext, HTMLAttributes } from 'react';\r\n\r\nexport interface IModalContext {\r\n  getTitleProps: <T>(options?: T) => T & HTMLAttributes<HTMLDivElement>;\r\n  getContentProps: <T>(options?: T) => T & HTMLAttributes<HTMLDivElement>;\r\n  getCloseProps: <T>(options?: T) => T & HTMLAttributes<HTMLButtonElement>;\r\n}\r\n\r\nexport const TooltipModalContext = createContext<IModalContext | undefined>(undefined);\r\n\r\nexport const useTooltipModalContext = () => {\r\n  const context = useContext(TooltipModalContext);\r\n\r\n  if (context === undefined) {\r\n    throw new Error('Element must be used within a TooltipModal component.');\r\n  }\r\n\r\n  return context;\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { Alert, Close, IAlertProps, Paragraph, Title } from '@zendeskgarden/react-notifications';\r\n\r\ninterface IArgs extends IAlertProps {\r\n  title?: string;\r\n  isRegular?: boolean;\r\n  hasClose: boolean;\r\n  hasParagraph: boolean;\r\n}\r\n\r\nexport const AlertStory: Story<IArgs> = ({\r\n  children,\r\n  title,\r\n  hasClose,\r\n  hasParagraph,\r\n  isRegular,\r\n  ...args\r\n}) => (\r\n  <Alert {...args}>\r\n    {title && <Title isRegular={isRegular}>{title}</Title>}\r\n    {hasParagraph ? <Paragraph>{children}</Paragraph> : children}\r\n    {hasClose && <Close aria-label=\"Close\" />}\r\n  </Alert>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport {\r\n  Notification,\r\n  Close,\r\n  INotificationProps,\r\n  Title,\r\n  Paragraph\r\n} from '@zendeskgarden/react-notifications';\r\n\r\ninterface IArgs extends INotificationProps {\r\n  title?: string;\r\n  isRegular?: boolean;\r\n  hasClose: boolean;\r\n  hasParagraph: boolean;\r\n}\r\n\r\nexport const NotificationStory: Story<IArgs> = ({\r\n  children,\r\n  title,\r\n  hasClose,\r\n  hasParagraph,\r\n  isRegular,\r\n  ...args\r\n}) => (\r\n  <Notification {...args}>\r\n    {title && <Title isRegular={isRegular}>{title}</Title>}\r\n    {hasParagraph ? <Paragraph>{children}</Paragraph> : children}\r\n    {hasClose && <Close aria-label=\"Close\" />}\r\n  </Notification>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { ToastProvider, IToastProviderProps } from '@zendeskgarden/react-notifications';\r\nimport { TOAST_PLACEMENT } from './types';\r\nimport { ToastStory } from './ToastStory';\r\n\r\ninterface IArgs extends IToastProviderProps {\r\n  children: string;\r\n  autoDismiss: boolean;\r\n  milliseconds: number;\r\n  placement?: TOAST_PLACEMENT;\r\n}\r\n\r\nexport const ToastProviderStory: Story<IArgs> = ({\r\n  children,\r\n  autoDismiss,\r\n  milliseconds,\r\n  placement = 'top-end',\r\n  ...args\r\n}) => (\r\n  <ToastProvider {...args}>\r\n    <ToastStory placement={placement} autoDismiss={autoDismiss ? milliseconds : false}>\r\n      {children}\r\n    </ToastStory>\r\n  </ToastProvider>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useCallback, useState } from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { Col, Grid, Row } from '@zendeskgarden/react-grid';\r\nimport { Button } from '@zendeskgarden/react-buttons';\r\nimport {\r\n  Dropdown,\r\n  MediaBody,\r\n  MediaFigure,\r\n  MediaItem,\r\n  Menu,\r\n  Trigger\r\n} from '@zendeskgarden/react-dropdowns';\r\nimport {\r\n  Close,\r\n  IToastOptions,\r\n  Notification,\r\n  Title,\r\n  ToastContent,\r\n  useToast\r\n} from '@zendeskgarden/react-notifications';\r\n\r\ninterface IArgs extends IToastOptions {\r\n  children: string;\r\n}\r\n\r\nexport const ToastStory: Story<IArgs> = ({ children, ...args }) => {\r\n  const {\r\n    addToast,\r\n    removeToast,\r\n    removeAllToasts: handleRemoveAll,\r\n    updateToast,\r\n    toasts\r\n  } = useToast();\r\n  const [removeRotated, setRemoveRotated] = useState<boolean | undefined>();\r\n\r\n  const handleAdd = useCallback(() => {\r\n    const getToast = (id?: string) => {\r\n      const retVal: ToastContent = ({ close }) => (\r\n        <Notification>\r\n          {id && <Title>{id}</Title>}\r\n          {children}\r\n          <Close aria-label=\"Close\" onClick={close} />\r\n        </Notification>\r\n      );\r\n\r\n      return retVal;\r\n    };\r\n\r\n    const id = addToast(getToast(), args);\r\n\r\n    updateToast(id, { content: getToast(id) });\r\n  }, [addToast, updateToast, children, args]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Row style={{ height: 'calc(100vh - 80px)' }}>\r\n        <Col sm={4} textAlign=\"center\" textAlignSm=\"end\" alignSelf=\"center\">\r\n          <Button onClick={handleAdd}>\r\n            <Button.StartIcon>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"none\" stroke=\"currentColor\" strokeLinejoin=\"round\" d=\"M13.5 9.5s0-9-5.5-9-5.5 9-5.5 9C.65 9.5.44 11.15.46 12c.01.28.22.5.5.5h14.08c.28 0 .49-.22.5-.5.02-.85-.19-2.5-2.04-2.5zm-7 3.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5\"/>\r\n</svg>\r\n            </Button.StartIcon>\r\n            Add\r\n          </Button>\r\n        </Col>\r\n        <Col sm={4} textAlign=\"center\" alignSelf=\"center\">\r\n          <Dropdown\r\n            onSelect={id => removeToast(id)}\r\n            onStateChange={options =>\r\n              Object.prototype.hasOwnProperty.call(options, 'isOpen') &&\r\n              setRemoveRotated(options.isOpen)\r\n            }\r\n          >\r\n            <Trigger>\r\n              <Button disabled={toasts.length === 0} isDanger>\r\n                Remove\r\n                <Button.EndIcon isRotated={removeRotated && toasts.length > 0}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"currentColor\" d=\"M12.688 5.61a.5.5 0 01.69.718l-.066.062-5 4a.5.5 0 01-.542.054l-.082-.054-5-4a.5.5 0 01.55-.83l.074.05L8 9.359l4.688-3.75z\"/>\r\n</svg>\r\n\r\n                </Button.EndIcon>\r\n              </Button>\r\n            </Trigger>\r\n            <Menu>\r\n              {toasts.map(toast => (\r\n                <MediaItem key={toast.id} value={toast.id} isDanger>\r\n                  <MediaFigure>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path stroke=\"currentColor\" strokeLinecap=\"round\" d=\"M3 13L13 3m0 10L3 3\"/>\r\n</svg>\r\n                  </MediaFigure>\r\n                  <MediaBody>{toast.id}</MediaBody>\r\n                </MediaItem>\r\n              ))}\r\n            </Menu>\r\n          </Dropdown>\r\n        </Col>\r\n        <Col sm={4} textAlign=\"center\" textAlignSm=\"start\" alignSelf=\"center\">\r\n          <Button isDanger disabled={toasts.length === 0} onClick={handleRemoveAll}>\r\n            <Button.StartIcon>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <g fill=\"none\" stroke=\"currentColor\">\r\n    <circle cx=\"7.5\" cy=\"8.5\" r=\"7\"/>\r\n    <path strokeLinecap=\"round\" d=\"M4.5 11.5l6-6m0 6l-6-6\"/>\r\n  </g>\r\n</svg>\r\n            </Button.StartIcon>\r\n            Remove all\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Grid>\r\n  );\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { Well, IWellProps, Paragraph, Title } from '@zendeskgarden/react-notifications';\r\n\r\ninterface IArgs extends IWellProps {\r\n  title?: string;\r\n  isRegular?: boolean;\r\n  hasParagraph: boolean;\r\n}\r\n\r\nexport const WellStory: Story<IArgs> = ({ children, title, hasParagraph, isRegular, ...args }) => (\r\n  <Well {...args}>\r\n    {title && <Title isRegular={isRegular}>{title}</Title>}\r\n    {hasParagraph ? <Paragraph>{children}</Paragraph> : children}\r\n  </Well>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nexport const TOAST_PLACEMENT_OPTIONS = [\r\n  'bottom',\r\n  'bottom-end',\r\n  'bottom-start',\r\n  'top',\r\n  'top-end',\r\n  'top-start'\r\n] as const;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledAlert, StyledIcon } from '../styled';\r\nimport { validationIcons, validationHues } from '../utils/icons';\r\nimport { ARRAY_VALIDATION_TYPE, VALIDATION_HUE } from '../utils/types';\r\nimport { NotificationsContext } from '../utils/useNotificationsContext';\r\n\r\nexport interface IAlertProps extends HTMLAttributes<HTMLDivElement> {\r\n  /** Applies alert type styles */\r\n  type: 'success' | 'warning' | 'error' | 'info';\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Alert = React.forwardRef<HTMLDivElement, IAlertProps>((props, ref) => {\r\n  const hue = validationHues[props.type];\r\n  const Icon = validationIcons[props.type] as any;\r\n\r\n  return (\r\n    <NotificationsContext.Provider value={hue as VALIDATION_HUE}>\r\n      <StyledAlert ref={ref} hue={hue} {...props}>\r\n        <StyledIcon hue={hue}>\r\n          <Icon />\r\n        </StyledIcon>\r\n        {props.children}\r\n      </StyledAlert>\r\n    </NotificationsContext.Provider>\r\n  );\r\n});\r\n\r\nAlert.displayName = 'Alert';\r\n\r\nAlert.propTypes = {\r\n  type: PropTypes.oneOf(ARRAY_VALIDATION_TYPE).isRequired\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledNotification, StyledIcon } from '../styled';\r\nimport { ARRAY_VALIDATION_TYPE, VALIDATION_TYPE } from '../utils/types';\r\nimport { validationIcons, validationHues } from '../utils/icons';\r\n\r\nexport interface INotificationProps extends HTMLAttributes<HTMLDivElement> {\r\n  type?: VALIDATION_TYPE;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Notification = React.forwardRef<HTMLDivElement, INotificationProps>((props, ref) => {\r\n  const Icon = props.type ? validationIcons[props.type] : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <g stroke=\"currentColor\">\r\n    <circle cx=\"7.5\" cy=\"8.5\" r=\"7\" fill=\"none\"/>\r\n    <path strokeLinecap=\"round\" d=\"M7.5 12.5V8\"/>\r\n  </g>\r\n  <circle cx=\"7.5\" cy=\"5\" r=\"1\" fill=\"currentColor\"/>\r\n</svg>;\r\n  const hue = props.type && validationHues[props.type];\r\n\r\n  return (\r\n    <StyledNotification ref={ref} type={props.type} isFloating {...props}>\r\n      {props.type && (\r\n        <StyledIcon hue={hue}>\r\n          <Icon />\r\n        </StyledIcon>\r\n      )}\r\n\r\n      {props.children}\r\n    </StyledNotification>\r\n  );\r\n});\r\n\r\nNotification.displayName = 'Notification';\r\n\r\nNotification.propTypes = {\r\n  type: PropTypes.oneOf(ARRAY_VALIDATION_TYPE)\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledWell } from '../styled';\r\n\r\nexport interface IWellProps extends HTMLAttributes<HTMLDivElement> {\r\n  /** Applies a background color */\r\n  isRecessed?: boolean;\r\n  /** Applies a drop shadow */\r\n  isFloating?: boolean;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Well = React.forwardRef<HTMLDivElement, IWellProps>((props, ref) => (\r\n  <StyledWell ref={ref} {...props} />\r\n));\r\n\r\nWell.displayName = 'Well';\r\n\r\nWell.propTypes = {\r\n  isRecessed: PropTypes.bool,\r\n  isFloating: PropTypes.bool\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { ButtonHTMLAttributes } from 'react';\r\nimport { StyledClose } from '../../styled';\r\nimport { useNotificationsContext } from '../../utils/useNotificationsContext';\r\n\r\n/**\r\n * @extends ButtonHTMLAttributes<HTMLButtonElement>\r\n */\r\nexport const Close = React.forwardRef<HTMLButtonElement, ButtonHTMLAttributes<HTMLButtonElement>>(\r\n  (props, ref) => {\r\n    const hue = useNotificationsContext();\r\n\r\n    return (\r\n      <StyledClose ref={ref} hue={hue} {...props}>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" focusable=\"false\" viewBox=\"0 0 12 12\">\r\n  <path stroke=\"currentColor\" strokeLinecap=\"round\" d=\"M3 9l6-6m0 6L3 3\"/>\r\n</svg>\r\n      </StyledClose>\r\n    );\r\n  }\r\n);\r\n\r\nClose.displayName = 'Close';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { StyledParagraph } from '../../styled';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLParagraphElement>\r\n */\r\nexport const Paragraph = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  HTMLAttributes<HTMLParagraphElement>\r\n>((props, ref) => <StyledParagraph ref={ref} {...props} />);\r\n\r\nParagraph.displayName = 'Paragraph';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { StyledTitle } from '../../styled';\r\n\r\nexport interface ITitleProps extends HTMLAttributes<HTMLDivElement> {\r\n  /** Applies regular (non-bold) font weight */\r\n  isRegular?: boolean;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Title = React.forwardRef<HTMLDivElement, ITitleProps>((props, ref) => (\r\n  <StyledTitle ref={ref} {...props} />\r\n));\r\n\r\nTitle.displayName = 'Title';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { IToast } from './reducer';\r\nimport { useToast } from './useToast';\r\n\r\ninterface IToastProps {\r\n  toast: IToast;\r\n  pauseTimers: boolean;\r\n}\r\n\r\nexport const Toast: React.FC<IToastProps> = ({ toast, pauseTimers }) => {\r\n  const { removeToast } = useToast();\r\n  const { id } = toast;\r\n  const { autoDismiss } = toast.options;\r\n\r\n  const [remainingTime, setRemainingTime] = useState(NaN);\r\n  const startTimeRef = useRef(Date.now());\r\n  const previousRemainingTimeRef = useRef(remainingTime);\r\n\r\n  /**\r\n   * Reset timer if `autoDimiss` option is updated\r\n   */\r\n  useEffect(() => {\r\n    if (typeof autoDismiss === 'number') {\r\n      setRemainingTime(autoDismiss);\r\n    } else {\r\n      setRemainingTime(NaN);\r\n    }\r\n  }, [autoDismiss]);\r\n\r\n  /**\r\n   * Store remaining time when `pauseTimers` is provided\r\n   */\r\n  useEffect(() => {\r\n    if (pauseTimers && !isNaN(remainingTime)) {\r\n      previousRemainingTimeRef.current = remainingTime - (Date.now() - startTimeRef.current);\r\n\r\n      setRemainingTime(NaN);\r\n    } else if (!pauseTimers && isNaN(remainingTime) && !isNaN(previousRemainingTimeRef.current)) {\r\n      setRemainingTime(previousRemainingTimeRef.current);\r\n    }\r\n  }, [pauseTimers, remainingTime]);\r\n\r\n  useEffect(() => {\r\n    let timeout: any;\r\n\r\n    if (!isNaN(remainingTime)) {\r\n      startTimeRef.current = Date.now();\r\n\r\n      timeout = setTimeout(() => {\r\n        removeToast(id);\r\n      }, remainingTime);\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  }, [id, pauseTimers, remainingTime, removeToast]);\r\n\r\n  const close = useCallback(() => {\r\n    removeToast(toast.id);\r\n  }, [removeToast, toast.id]);\r\n\r\n  return toast.content({ close });\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, {\r\n  createContext,\r\n  useReducer,\r\n  Dispatch,\r\n  useCallback,\r\n  useMemo,\r\n  HTMLAttributes\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n  toasterReducer,\r\n  getInitialState,\r\n  IToasterState,\r\n  ToasterReducerAction,\r\n  ToastPlacement\r\n} from './reducer';\r\nimport { ToastSlot } from './ToastSlot';\r\n\r\nexport const ToastContext = createContext<\r\n  { state: IToasterState; dispatch: Dispatch<ToasterReducerAction> } | undefined\r\n>(undefined);\r\n\r\nexport interface IToastProviderProps {\r\n  /**\r\n   * Limits the number of visible toasts\r\n   */\r\n  limit?: number;\r\n  /**\r\n   * Sets the `z-index` of the toast\r\n   */\r\n  zIndex?: number;\r\n  /**\r\n   * Passes placement-based customization props to the toast's parent element\r\n   */\r\n  placementProps?: Partial<Record<ToastPlacement, HTMLAttributes<HTMLDivElement>>>;\r\n}\r\n\r\nexport const ToastProvider: React.FC<IToastProviderProps> = ({\r\n  limit,\r\n  zIndex,\r\n  placementProps = {},\r\n  children\r\n}) => {\r\n  const [state, dispatch] = useReducer(toasterReducer, getInitialState());\r\n\r\n  const contextValue = useMemo(() => ({ state, dispatch }), [state, dispatch]);\r\n\r\n  const toastsByPlacement = useCallback(\r\n    (placement: ToastPlacement) => {\r\n      let matchingToasts = state.toasts.filter(toast => toast.options.placement === placement);\r\n\r\n      if (placement === 'bottom' || placement === 'bottom-start' || placement === 'bottom-end') {\r\n        matchingToasts = matchingToasts.reverse();\r\n      }\r\n\r\n      return (\r\n        <ToastSlot\r\n          placement={placement}\r\n          toasts={matchingToasts}\r\n          zIndex={zIndex}\r\n          limit={limit!}\r\n          {...placementProps[placement]}\r\n        />\r\n      );\r\n    },\r\n    [limit, state.toasts, zIndex, placementProps]\r\n  );\r\n\r\n  return (\r\n    <ToastContext.Provider value={contextValue}>\r\n      {toastsByPlacement('top-start')}\r\n      {toastsByPlacement('top')}\r\n      {toastsByPlacement('top-end')}\r\n      {children}\r\n      {toastsByPlacement('bottom-start')}\r\n      {toastsByPlacement('bottom')}\r\n      {toastsByPlacement('bottom-end')}\r\n    </ToastContext.Provider>\r\n  );\r\n};\r\n\r\nToastProvider.displayName = 'ToastProvider';\r\n\r\nToastProvider.defaultProps = {\r\n  limit: 4\r\n};\r\n\r\nToastProvider.propTypes = {\r\n  limit: PropTypes.number,\r\n  zIndex: PropTypes.number\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes, useCallback, useContext, useEffect, useState } from 'react';\r\nimport { ThemeContext } from 'styled-components';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { useDocument } from '@zendeskgarden/react-theming';\r\nimport { IToast, ToastPlacement } from './reducer';\r\nimport { Toast } from './Toast';\r\nimport { StyledFadeInTransition, StyledTransitionGroup, TRANSITION_CLASS } from './styled';\r\n\r\ninterface IToastSlotProps extends HTMLAttributes<HTMLDivElement> {\r\n  toasts: IToast[];\r\n  placement: ToastPlacement;\r\n  limit: number;\r\n  zIndex?: number;\r\n}\r\n\r\nexport const ToastSlot: React.FC<IToastSlotProps> = ({\r\n  toasts,\r\n  placement,\r\n  zIndex,\r\n  limit,\r\n  ...props\r\n}) => {\r\n  const [pauseTimers, setPauseTimers] = useState(false);\r\n  const theme = useContext(ThemeContext);\r\n  const environment = useDocument(theme);\r\n\r\n  const handleVisibilityChange = useCallback((e: Event) => {\r\n    if ((e.target as Document).visibilityState === 'visible') {\r\n      setPauseTimers(false);\r\n    } else {\r\n      setPauseTimers(true);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (environment) {\r\n      environment.addEventListener('visibilitychange', handleVisibilityChange);\r\n    }\r\n\r\n    return () => {\r\n      if (environment) {\r\n        environment.removeEventListener('visibilitychange', handleVisibilityChange);\r\n      }\r\n    };\r\n  }, [environment, handleVisibilityChange]);\r\n\r\n  const handleMouseEnter = useCallback(() => {\r\n    setPauseTimers(true);\r\n  }, []);\r\n\r\n  const handleMouseLeave = useCallback(() => {\r\n    setPauseTimers(false);\r\n  }, []);\r\n\r\n  const isHidden = useCallback(\r\n    (index: number) => {\r\n      if (placement === 'bottom' || placement === 'bottom-start' || placement === 'bottom-end') {\r\n        return index < toasts.length - limit;\r\n      }\r\n\r\n      return index >= limit;\r\n    },\r\n    [limit, placement, toasts.length]\r\n  );\r\n\r\n  return (\r\n    <StyledTransitionGroup\r\n      key={placement}\r\n      $placement={placement}\r\n      $zIndex={zIndex}\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n      {...props}\r\n    >\r\n      {toasts.map((toast, index) => {\r\n        const transitionRef = React.createRef<HTMLDivElement>();\r\n\r\n        return (\r\n          <CSSTransition\r\n            key={toast.id}\r\n            timeout={{ enter: 400, exit: 550 }}\r\n            unmountOnExit\r\n            classNames={TRANSITION_CLASS}\r\n            nodeRef={transitionRef}\r\n          >\r\n            <StyledFadeInTransition\r\n              ref={transitionRef}\r\n              placement={placement}\r\n              isHidden={isHidden(index)}\r\n            >\r\n              <Toast toast={toast} pauseTimers={pauseTimers || isHidden(index)} />\r\n            </StyledFadeInTransition>\r\n          </CSSTransition>\r\n        );\r\n      })}\r\n    </StyledTransitionGroup>\r\n  );\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { ReactElement } from 'react';\r\n\r\nexport type ToastPlacement =\r\n  | 'top-start'\r\n  | 'top'\r\n  | 'top-end'\r\n  | 'bottom-start'\r\n  | 'bottom'\r\n  | 'bottom-end';\r\n\r\nexport type ToastContent = ({ close }: { close: () => void }) => ReactElement;\r\n\r\nexport interface IToastOptions<T = any> {\r\n  id?: string;\r\n  autoDismiss: boolean | number;\r\n  placement: ToastPlacement;\r\n  data?: T;\r\n}\r\n\r\nexport interface IToast {\r\n  id: string;\r\n  content: ToastContent;\r\n  options: IToastOptions;\r\n}\r\n\r\nexport interface IToasterState {\r\n  toasts: IToast[];\r\n}\r\n\r\nexport type ToasterReducerAction =\r\n  | {\r\n      type: 'ADD_TOAST';\r\n      payload: IToast;\r\n    }\r\n  | { type: 'REMOVE_TOAST'; payload: string }\r\n  | {\r\n      type: 'UPDATE_TOAST';\r\n      payload: { id: string; options: { content?: ToastContent } & Partial<IToastOptions> };\r\n    }\r\n  | { type: 'REMOVE_ALL_TOASTS' };\r\n\r\nexport const getInitialState = (): IToasterState => {\r\n  return {\r\n    toasts: []\r\n  };\r\n};\r\n\r\nexport const toasterReducer = (\r\n  state: IToasterState,\r\n  action: ToasterReducerAction\r\n): IToasterState => {\r\n  switch (action.type) {\r\n    case 'ADD_TOAST': {\r\n      return {\r\n        ...state,\r\n        toasts: [...state.toasts, action.payload]\r\n      };\r\n    }\r\n    case 'REMOVE_TOAST': {\r\n      const filteredToasts = state.toasts.filter(toast => toast.id !== action.payload);\r\n\r\n      return {\r\n        ...state,\r\n        toasts: filteredToasts\r\n      };\r\n    }\r\n    case 'UPDATE_TOAST': {\r\n      const updatedToasts = state.toasts.map(toast => {\r\n        if (toast.id !== action.payload.id) {\r\n          return toast;\r\n        }\r\n\r\n        const updatedToast = toast;\r\n        const { content, ...newOptions } = action.payload.options;\r\n\r\n        if (content) {\r\n          updatedToast.content = content;\r\n        }\r\n\r\n        updatedToast.options = {\r\n          ...updatedToast.options,\r\n          ...newOptions\r\n        };\r\n\r\n        return updatedToast;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        toasts: updatedToasts\r\n      };\r\n    }\r\n    case 'REMOVE_ALL_TOASTS': {\r\n      return {\r\n        ...state,\r\n        toasts: []\r\n      };\r\n    }\r\n    /* istanbul ignore next */\r\n    default:\r\n      throw new Error('Invalid toaster reducer action');\r\n  }\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, DefaultTheme, ThemeProps } from 'styled-components';\r\nimport { hideVisually } from 'polished';\r\nimport { TransitionGroup } from 'react-transition-group';\r\nimport { DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { ToastPlacement } from './reducer';\r\n\r\nexport const TRANSITION_CLASS = 'garden-toast-transition';\r\n\r\nconst DEFAULT_DURATION = '400ms';\r\n\r\nexport const StyledFadeInTransition = styled.div<{ isHidden: boolean; placement: ToastPlacement }>`\r\n  transition: opacity ${DEFAULT_DURATION} ease-in 300ms;\r\n  opacity: ${p => (p.isHidden ? '0 !important' : 1)};\r\n  margin-bottom: ${p => p.theme.space.base * 2}px;\r\n\r\n  ${p => p.isHidden && hideVisually()}\r\n\r\n  &.${TRANSITION_CLASS}-enter {\r\n    /* stylelint-disable */\r\n    transform: translateY(\r\n      ${props => {\r\n        if (\r\n          props.placement === 'bottom-start' ||\r\n          props.placement === 'bottom' ||\r\n          props.placement === 'bottom-end'\r\n        ) {\r\n          return '100px';\r\n        }\r\n\r\n        return '-100px';\r\n      }}\r\n    );\r\n    /* stylelint-enable */\r\n    opacity: 0;\r\n    max-height: 0;\r\n  }\r\n\r\n  &.${TRANSITION_CLASS}-enter-active {\r\n    transform: translateY(0);\r\n    /* prettier-ignore */\r\n    transition:\r\n      opacity ${DEFAULT_DURATION} ease-in,\r\n      transform ${DEFAULT_DURATION} cubic-bezier(0.15, 0.85, 0.35, 1.2),\r\n      max-height ${DEFAULT_DURATION};\r\n    opacity: 1;\r\n    max-height: 500px;\r\n  }\r\n\r\n  &.${TRANSITION_CLASS}-exit {\r\n    opacity: 1;\r\n    max-height: 500px;\r\n  }\r\n\r\n  &.${TRANSITION_CLASS}-exit-active {\r\n    /* prettier-ignore */\r\n    transition:\r\n      opacity 550ms ease-out,\r\n      max-height ${DEFAULT_DURATION} linear 150ms;\r\n    opacity: 0;\r\n    max-height: 0;\r\n  }\r\n`;\r\n\r\nStyledFadeInTransition.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n\r\ninterface IStyledTransitionGroupProps {\r\n  $placement: ToastPlacement;\r\n  $zIndex?: number;\r\n}\r\n\r\nconst placementStyles = (props: ThemeProps<DefaultTheme> & IStyledTransitionGroupProps) => {\r\n  const verticalDistance = `${props.theme.space.base * 16}px`;\r\n  const horizontalDistance = `${props.theme.space.base * 3}px`;\r\n\r\n  const topLeftStyles = css`\r\n    top: ${verticalDistance};\r\n    left: ${horizontalDistance};\r\n  `;\r\n\r\n  const topStyles = css`\r\n    top: ${verticalDistance};\r\n    left: 50%;\r\n    transform: translate(-50%, 0);\r\n  `;\r\n\r\n  const topRightStyles = css`\r\n    top: ${verticalDistance};\r\n    right: ${horizontalDistance};\r\n  `;\r\n\r\n  const bottomLeftStyles = css`\r\n    bottom: ${verticalDistance};\r\n    left: ${horizontalDistance};\r\n  `;\r\n\r\n  const bottomStyles = css`\r\n    bottom: ${verticalDistance};\r\n    left: 50%;\r\n    transform: translate(-50%, 0);\r\n  `;\r\n\r\n  const bottomRightStyles = css`\r\n    right: ${horizontalDistance};\r\n    bottom: ${verticalDistance};\r\n  `;\r\n\r\n  switch (props.$placement) {\r\n    case 'top-start':\r\n      if (props.theme.rtl) {\r\n        return topRightStyles;\r\n      }\r\n\r\n      return topLeftStyles;\r\n    case 'top':\r\n      return topStyles;\r\n    case 'top-end':\r\n      if (props.theme.rtl) {\r\n        return topLeftStyles;\r\n      }\r\n\r\n      return topRightStyles;\r\n    case 'bottom-start':\r\n      if (props.theme.rtl) {\r\n        return bottomRightStyles;\r\n      }\r\n\r\n      return bottomLeftStyles;\r\n    case 'bottom':\r\n      return bottomStyles;\r\n    case 'bottom-end':\r\n      if (props.theme.rtl) {\r\n        return bottomLeftStyles;\r\n      }\r\n\r\n      return bottomRightStyles;\r\n    /* istanbul ignore next */\r\n    default:\r\n      return '';\r\n  }\r\n};\r\n\r\nexport const StyledTransitionGroup = styled(TransitionGroup)<IStyledTransitionGroupProps>`\r\n  position: fixed;\r\n  z-index: ${props => props.$zIndex};\r\n\r\n  ${placementStyles};\r\n`;\r\n\r\nStyledTransitionGroup.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { useCallback, useContext } from 'react';\r\nimport { uid } from 'react-uid';\r\nimport { IToast, IToastOptions, ToastContent } from './reducer';\r\nimport { ToastContext } from './ToastProvider';\r\n\r\nconst DEFAULT_TOAST_OPTIONS: IToastOptions = {\r\n  autoDismiss: 5000,\r\n  placement: 'top-end'\r\n};\r\n\r\nexport const useToast = () => {\r\n  const context = useContext(ToastContext);\r\n\r\n  if (context === undefined) {\r\n    throw new Error('useToast() must be used within a \"ToastProvider\"');\r\n  }\r\n\r\n  const { dispatch, state } = context;\r\n\r\n  const addToast = useCallback(\r\n    (content: ToastContent, options: Partial<IToastOptions> = {}) => {\r\n      const mergedOptions = { ...DEFAULT_TOAST_OPTIONS, ...options };\r\n\r\n      const newToast: IToast = {\r\n        id: mergedOptions.id || uid(content),\r\n        content,\r\n        options: mergedOptions\r\n      };\r\n\r\n      dispatch({ type: 'ADD_TOAST', payload: newToast });\r\n\r\n      return newToast.id;\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const removeToast = useCallback(\r\n    (id: string) => {\r\n      dispatch({ type: 'REMOVE_TOAST', payload: id });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const updateToast = useCallback(\r\n    (id: string, options: { content?: ToastContent } & Partial<IToastOptions>) => {\r\n      dispatch({ type: 'UPDATE_TOAST', payload: { id, options } });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const removeAllToasts = useCallback(() => {\r\n    dispatch({ type: 'REMOVE_ALL_TOASTS' });\r\n  }, [dispatch]);\r\n\r\n  return {\r\n    addToast,\r\n    removeToast,\r\n    updateToast,\r\n    removeAllToasts,\r\n    toasts: state.toasts\r\n  };\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { retrieveComponentStyles, getColor, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledTitle } from './content/StyledTitle';\r\nimport { StyledBase } from './StyledBase';\r\n\r\nconst COMPONENT_ID = 'notifications.alert';\r\n\r\nexport interface IStyledAlertProps {\r\n  hue?: string;\r\n}\r\n\r\nconst colorStyles = (props: IStyledAlertProps & ThemeProps<DefaultTheme>) => css`\r\n  ${StyledTitle} {\r\n    color: ${props.hue && getColor(props.hue, 800, props.theme)};\r\n  }\r\n`;\r\n\r\n/**\r\n * Supports all `<div>` props\r\n */\r\nexport const StyledAlert = styled(StyledBase).attrs(props => ({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  role: props.role === undefined ? 'alert' : props.role\r\n}))<IStyledAlertProps>`\r\n  ${colorStyles}\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledAlert.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { getColor, getLineHeight, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { VALIDATION_TYPE } from '../utils/types';\r\n\r\nexport interface IStyledBaseProps {\r\n  isFloating?: boolean;\r\n  hue?: string;\r\n  type?: VALIDATION_TYPE;\r\n}\r\n\r\nconst boxShadow = (props: ThemeProps<DefaultTheme>) => {\r\n  const { theme } = props;\r\n  const { space, shadows } = theme;\r\n  const offsetY = `${space.base * 5}px`;\r\n  const blurRadius = `${space.base * 7}px`;\r\n  const color = getColor('chromeHue', 600, theme, 0.15);\r\n\r\n  return shadows.lg(offsetY, blurRadius, color as string);\r\n};\r\n\r\nconst colorStyles = (props: ThemeProps<DefaultTheme> & IStyledBaseProps) => {\r\n  let backgroundColor;\r\n  let borderColor;\r\n  let foregroundColor;\r\n\r\n  if (props.hue) {\r\n    backgroundColor = getColor(props.hue, 100, props.theme);\r\n    borderColor = getColor(props.hue, 300, props.theme);\r\n    foregroundColor = getColor(props.hue, props.type === 'info' ? 600 : 700, props.theme);\r\n  } else {\r\n    backgroundColor = props.theme.colors.background;\r\n    borderColor = getColor('neutralHue', 300, props.theme);\r\n    foregroundColor = getColor('neutralHue', 800, props.theme);\r\n  }\r\n\r\n  return css`\r\n    border-color: ${borderColor};\r\n    background-color: ${backgroundColor};\r\n    color: ${foregroundColor};\r\n  `;\r\n};\r\n\r\nconst padding = (props: ThemeProps<DefaultTheme>) => {\r\n  const { space } = props.theme;\r\n  const paddingVertical = `${space.base * 5}px`;\r\n  const paddingHorizontal = `${space.base * 10}px`;\r\n\r\n  return `${paddingVertical} ${paddingHorizontal}`;\r\n};\r\n\r\nexport const StyledBase = styled.div`\r\n  position: relative;\r\n  border: ${props => props.theme.borders.sm};\r\n  border-radius: ${props => props.theme.borderRadii.md};\r\n  box-shadow: ${props => props.isFloating && boxShadow};\r\n  padding: ${padding};\r\n  line-height: ${props => getLineHeight(props.theme.space.base * 5, props.theme.fontSizes.md)};\r\n  font-size: ${props => props.theme.fontSizes.md};\r\n  direction: ${props => props.theme.rtl && 'rtl'};\r\n\r\n  ${colorStyles};\r\n`;\r\n\r\nStyledBase.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { Children } from 'react';\r\nimport styled from 'styled-components';\r\nimport { getColor, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nexport const StyledIcon = styled(({ children, ...props }) =>\r\n  React.cloneElement(Children.only(children), props)\r\n)`\r\n  position: absolute;\r\n  right: ${props => props.theme.rtl && `${props.theme.space.base * 4}px`};\r\n  left: ${props => !props.theme.rtl && `${props.theme.space.base * 4}px`};\r\n  margin-top: ${props => props.theme.space.base / 2}px;\r\n  color: ${props =>\r\n    props.hue && getColor(props.hue, props.hue === 'warningHue' ? 700 : 600, props.theme)};\r\n`;\r\n\r\nStyledIcon.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport PropTypes from 'prop-types';\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { retrieveComponentStyles, getColor, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { VALIDATION_TYPE, ARRAY_VALIDATION_TYPE } from '../utils/types';\r\nimport { StyledTitle } from './content/StyledTitle';\r\nimport { StyledBase } from './StyledBase';\r\n\r\nconst COMPONENT_ID = 'notifications.notification';\r\n\r\nexport interface IStyledNotificationProps {\r\n  /** Applies notification type styles */\r\n  type?: VALIDATION_TYPE;\r\n}\r\n\r\nconst colorStyles = (props: IStyledNotificationProps & ThemeProps<DefaultTheme>) => {\r\n  const { type, theme } = props;\r\n  const { colors } = theme;\r\n  const { successHue, dangerHue, warningHue, foreground } = colors;\r\n\r\n  let color;\r\n\r\n  switch (type) {\r\n    case 'success':\r\n      color = getColor(successHue, 600, theme);\r\n      break;\r\n    case 'error':\r\n      color = getColor(dangerHue, 600, theme);\r\n      break;\r\n    case 'warning':\r\n      color = getColor(warningHue, 700, theme);\r\n      break;\r\n    case 'info':\r\n      color = foreground;\r\n      break;\r\n    default:\r\n      color = 'inherit';\r\n      break;\r\n  }\r\n\r\n  return css`\r\n    ${StyledTitle} {\r\n      color: ${color};\r\n    }\r\n  `;\r\n};\r\n\r\n/**\r\n * Supports all `<div>` props\r\n */\r\nexport const StyledNotification = styled(StyledBase).attrs(props => ({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  role: props.role === undefined ? 'status' : props.role\r\n}))<IStyledNotificationProps>`\r\n  ${colorStyles}\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledNotification.propTypes = {\r\n  type: PropTypes.oneOf(ARRAY_VALIDATION_TYPE)\r\n};\r\n\r\nStyledNotification.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { getColor, retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledBase } from './StyledBase';\r\n\r\nconst COMPONENT_ID = 'notifications.well';\r\n\r\nexport interface IStyledWellProps {\r\n  isRecessed?: boolean;\r\n}\r\n\r\n/**\r\n * Supports all `<div>` props\r\n */\r\nexport const StyledWell = styled(StyledBase).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledWellProps>`\r\n  background-color: ${props => props.isRecessed && getColor('neutralHue', 100, props.theme)};\r\n  color: ${props => getColor('neutralHue', 600, props.theme)}\r\n    ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledWell.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, getColor, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { VALIDATION_HUE } from '../../utils/types';\r\n\r\nconst COMPONENT_ID = 'notifications.close';\r\n\r\ninterface IStyledCloseProps {\r\n  hue?: VALIDATION_HUE;\r\n}\r\n\r\n/**\r\n * Used to close a Notification. Supports all `<button>` props\r\n *\r\n * 1. Reset for <button> element.\r\n * 2. Remove dotted outline from Firefox on focus.\r\n */\r\nexport const StyledClose = styled.button.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledCloseProps>`\r\n  display: block;\r\n  position: absolute;\r\n  top: ${props => props.theme.space.base}px;\r\n  ${props => (props.theme.rtl ? 'left' : 'right')}: ${props => `${props.theme.space.base}px`};\r\n  transition: background-color 0.1s ease-in-out, color 0.25s ease-in-out;\r\n  border: none; /* [1] */\r\n  border-radius: 50%;\r\n  background-color: transparent; /* [1] */\r\n  cursor: pointer;\r\n  padding: 0;\r\n  width: ${props => props.theme.space.base * 7}px;\r\n  height: ${props => props.theme.space.base * 7}px;\r\n  overflow: hidden;\r\n  color: ${props =>\r\n    props.hue\r\n      ? getColor(props.hue, props.hue === 'warningHue' ? 700 : 600, props.theme)\r\n      : getColor('neutralHue', 600, props.theme)};\r\n  font-size: 0; /* [1] */\r\n  user-select: none;\r\n\r\n  &:hover {\r\n    color: ${props =>\r\n      props.hue ? getColor(props.hue, 800, props.theme) : getColor('neutralHue', 800, props.theme)};\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &[data-garden-focus-visible] {\r\n    background-color: ${props =>\r\n      props.hue\r\n        ? getColor(props.hue, props.hue === 'warningHue' ? 700 : 600, props.theme, 0.15)\r\n        : getColor('neutralHue', 600, props.theme, 0.15)};\r\n    color: ${props =>\r\n      props.hue ? getColor(props.hue, 800, props.theme) : getColor('neutralHue', 800, props.theme)};\r\n\r\n    &::-moz-focus-inner {\r\n      border: 0; /* [2] */\r\n    }\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledClose.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'notifications.paragraph';\r\n\r\n/**\r\n * Used for multi-line Notification content. Supports all `<p>` props\r\n */\r\nexport const StyledParagraph = styled.p.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  margin: ${props => props.theme.space.base * 2}px 0 0;\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledParagraph.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'notifications.title';\r\n\r\nexport interface IStyledTitleProps {\r\n  isRegular?: boolean;\r\n}\r\n\r\n/**\r\n * 1. Reset for <h1>, etc.\r\n */\r\nexport const StyledTitle = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledTitleProps>`\r\n  margin: 0; /* [1] */\r\n  color: ${props => props.theme.colors.foreground};\r\n  font-weight: ${props =>\r\n    props.isRegular ? props.theme.fontWeights.regular : props.theme.fontWeights.semibold};\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledTitle.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nexport const AlertErrorStrokeIcon = () => {\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n      <g fill=\"none\" stroke=\"currentColor\">\r\n        <circle cx=\"7.5\" cy=\"8.5\" r=\"7\"/>\r\n        <path strokeLinecap=\"round\" d=\"M7.5 4.5V9\"/>\r\n      </g>\r\n      <circle cx=\"7.5\" cy=\"12\" r=\"1\" fill=\"currentColor\"/>\r\n    </svg>\r\n  )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nexport const AlertWarningStrokeIcon = () => {\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" d=\"M.88 13.77L7.06 1.86c.19-.36.7-.36.89 0l6.18 11.91c.17.33-.07.73-.44.73H1.32c-.37 0-.61-.4-.44-.73zM7.5 6v3.5\"/>\r\n  <circle cx=\"7.5\" cy=\"12\" r=\"1\" fill=\"currentColor\"/>\r\n</svg>\r\n\r\n  )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nexport const CheckCircleStrokeIcon = () => {\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n      <g fill=\"none\" stroke=\"currentColor\">\r\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4 9l2.5 2.5 5-5\"/>\r\n        <circle cx=\"7.5\" cy=\"8.5\" r=\"7\"/>\r\n      </g>\r\n    </svg>\r\n  )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { CheckCircleStrokeIcon } from './check-circle';\r\nimport { AlertErrorStrokeIcon } from './alert-error';\r\nimport { AlertWarningStrokeIcon } from './alert-warning';\r\nimport { InfoStrokeIcon } from './info-stroke';\r\nimport { VALIDATION_TYPE } from './types';\r\n\r\nexport const validationIcons: Record<VALIDATION_TYPE, Record<string, unknown>> = {\r\n  success: CheckCircleStrokeIcon,\r\n  error: AlertErrorStrokeIcon,\r\n  warning: AlertWarningStrokeIcon,\r\n  info: InfoStrokeIcon\r\n};\r\n\r\nexport const validationHues: Record<VALIDATION_TYPE, string> = {\r\n  success: 'successHue',\r\n  error: 'dangerHue',\r\n  warning: 'warningHue',\r\n  info: 'neutralHue'\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nexport const InfoStrokeIcon = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <g stroke=\"currentColor\">\r\n    <circle cx=\"7.5\" cy=\"8.5\" r=\"7\" fill=\"none\"/>\r\n    <path strokeLinecap=\"round\" d=\"M7.5 12.5V8\"/>\r\n  </g>\r\n  <circle cx=\"7.5\" cy=\"5\" r=\"1\" fill=\"currentColor\"/>\r\n</svg>\r\n\r\n    )\r\n}","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nexport type VALIDATION_TYPE = 'success' | 'warning' | 'error' | 'info';\r\n\r\nexport type VALIDATION_HUE = 'successHue' | 'warningHue' | 'dangerHue' | 'neutralHue';\r\n\r\nexport const ARRAY_VALIDATION_TYPE: VALIDATION_TYPE[] = ['success', 'warning', 'error', 'info'];\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { createContext, useContext } from 'react';\r\nimport { VALIDATION_HUE } from './types';\r\n\r\nexport const NotificationsContext = createContext<VALIDATION_HUE | undefined>(undefined);\r\n\r\nexport const useNotificationsContext = () => {\r\n  return useContext(NotificationsContext);\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { CursorPagination, IPaginationProps } from '@zendeskgarden/react-pagination';\r\n\r\ninterface IArgs extends IPaginationProps {\r\n  first: string;\r\n  previous: string;\r\n  next: string;\r\n  last: string;\r\n}\r\n\r\nexport const CursorPaginationStory: Story<IArgs> = ({\r\n  currentPage,\r\n  totalPages,\r\n  onChange,\r\n  first,\r\n  previous,\r\n  next,\r\n  last,\r\n  ...args\r\n}) => (\r\n  <CursorPagination {...args}>\r\n    <CursorPagination.First\r\n      onClick={() => onChange!(0)}\r\n      disabled={totalPages <= 2 || currentPage === 0}\r\n    >\r\n      {first}\r\n    </CursorPagination.First>\r\n    <CursorPagination.Previous\r\n      onClick={() => currentPage > 0 && onChange!(currentPage - 1)}\r\n      disabled={currentPage === 0}\r\n    >\r\n      {previous}\r\n    </CursorPagination.Previous>\r\n    <CursorPagination.Next\r\n      onClick={() => currentPage < totalPages - 1 && onChange!(currentPage + 1)}\r\n      disabled={currentPage >= totalPages - 1}\r\n    >\r\n      {next}\r\n    </CursorPagination.Next>\r\n    <CursorPagination.Last\r\n      onClick={() => onChange!(totalPages - 1)}\r\n      disabled={totalPages <= 2 || currentPage >= totalPages - 1}\r\n    >\r\n      {last}\r\n    </CursorPagination.Last>\r\n  </CursorPagination>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, {\r\n  HTMLAttributes,\r\n  ForwardRefExoticComponent,\r\n  PropsWithoutRef,\r\n  RefAttributes\r\n} from 'react';\r\nimport { First } from './components/First';\r\nimport { Next } from './components/Next';\r\nimport { Previous } from './components/Previous';\r\nimport { Last } from './components/Last';\r\nimport { StyledCursorPagination } from '../../styled';\r\n\r\ninterface IStaticCursorPaginationExport<T, P>\r\n  extends ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>> {\r\n  First: typeof First;\r\n  Next: typeof Next;\r\n  Previous: typeof Previous;\r\n  Last: typeof Last;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLElement>\r\n */\r\nexport const CursorPagination = React.forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>(\r\n  (props, ref) => <StyledCursorPagination ref={ref} {...props} />\r\n) as IStaticCursorPaginationExport<HTMLDivElement, HTMLAttributes<HTMLElement>>;\r\n\r\nCursorPagination.First = First;\r\nCursorPagination.Next = Next;\r\nCursorPagination.Previous = Previous;\r\nCursorPagination.Last = Last;\r\n\r\nCursorPagination.displayName = 'CursorPagination';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { ButtonHTMLAttributes } from 'react';\r\nimport { StyledIcon, StyledCursor } from '../../../styled';\r\n\r\nexport const First = React.forwardRef<HTMLButtonElement, ButtonHTMLAttributes<HTMLButtonElement>>(\r\n  ({ children, ...other }, ref) => {\r\n    return (\r\n      <StyledCursor ref={ref} {...other}>\r\n        <StyledIcon type=\"first\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"currentColor\" d=\"M7.812 13.39a.5.5 0 01-.64-.012l-.062-.066-4-5a.5.5 0 01-.054-.542l.054-.082 4-5a.5.5 0 01.83.55l-.05.074L4.141 8l3.75 4.688a.5.5 0 01-.079.702zm5 0a.5.5 0 01-.64-.012l-.062-.066-4-5a.5.5 0 01-.054-.542l.054-.082 4-5a.5.5 0 01.83.55l-.05.074L9.141 8l3.75 4.688a.5.5 0 01-.079.702z\"/>\r\n</svg>\r\n        </StyledIcon>\r\n        <span>{children}</span>\r\n      </StyledCursor>\r\n    );\r\n  }\r\n);\r\n\r\nFirst.displayName = 'First';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { ButtonHTMLAttributes } from 'react';\r\nimport { StyledIcon, StyledCursor } from '../../../styled';\r\n\r\nexport const Last = React.forwardRef<HTMLButtonElement, ButtonHTMLAttributes<HTMLButtonElement>>(\r\n  ({ children, ...other }, ref) => {\r\n    return (\r\n      <StyledCursor ref={ref} as=\"button\" {...other}>\r\n        <span>{children}</span>\r\n        <StyledIcon type=\"last\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"currentColor\" d=\"M8.188 2.61a.5.5 0 01.64.013l.062.065 4 5a.5.5 0 01.054.542l-.054.082-4 5a.5.5 0 01-.83-.55l.05-.074L11.859 8l-3.75-4.688a.5.5 0 01.079-.702zm-5 0a.5.5 0 01.64.013l.062.065 4 5a.5.5 0 01.054.542l-.054.082-4 5a.5.5 0 01-.83-.55l.05-.074L6.859 8l-3.75-4.688a.5.5 0 01.079-.702z\"/>\r\n</svg>\r\n       </StyledIcon>\r\n      </StyledCursor>\r\n    );\r\n  }\r\n);\r\n\r\nLast.displayName = 'Last';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { ButtonHTMLAttributes } from 'react';\r\nimport { StyledIcon, StyledCursor } from '../../../styled';\r\n\r\nexport const Next = React.forwardRef<HTMLButtonElement, ButtonHTMLAttributes<HTMLButtonElement>>(\r\n  ({ children, ...other }, ref) => {\r\n    return (\r\n      <StyledCursor ref={ref} as=\"button\" {...other}>\r\n        <span>{children}</span>\r\n        <StyledIcon type=\"next\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"currentColor\" d=\"M5.61 3.312a.5.5 0 01.718-.69l.062.066 4 5a.5.5 0 01.054.542l-.054.082-4 5a.5.5 0 01-.83-.55l.05-.074L9.359 8l-3.75-4.688z\"/>\r\n</svg>\r\n        </StyledIcon>\r\n      </StyledCursor>\r\n    );\r\n  }\r\n);\r\n\r\nNext.displayName = 'Next';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { ButtonHTMLAttributes } from 'react';\r\nimport { StyledIcon, StyledCursor } from '../../../styled';\r\n\r\nexport const Previous = React.forwardRef<\r\n  HTMLButtonElement,\r\n  ButtonHTMLAttributes<HTMLButtonElement>\r\n>(({ children, ...other }, ref) => {\r\n  return (\r\n    <StyledCursor ref={ref} as=\"button\" {...other}>\r\n      <StyledIcon type=\"previous\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"currentColor\" d=\"M10.39 12.688a.5.5 0 01-.718.69l-.062-.066-4-5a.5.5 0 01-.054-.542l.054-.082 4-5a.5.5 0 01.83.55l-.05.074L6.641 8l3.75 4.688z\"/>\r\n</svg>\r\n      </StyledIcon>\r\n      <span>{children}</span>\r\n    </StyledCursor>\r\n  );\r\n});\r\n\r\nPrevious.displayName = 'Previous';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useState, useContext, HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeContext } from 'styled-components';\r\nimport { usePagination } from '@zendeskgarden/container-pagination';\r\nimport { getControlledValue } from '@zendeskgarden/container-utilities';\r\n\r\nimport { StyledPagination, StyledPage, StyledGap, StyledNavigation } from '../../styled';\r\n\r\nconst PREVIOUS_KEY = 'previous';\r\nconst NEXT_KEY = 'next';\r\n\r\nexport type PAGE_TYPE = 'next' | 'page' | 'gap' | 'previous';\r\n\r\nexport interface IPaginationProps extends Omit<HTMLAttributes<HTMLUListElement>, 'onChange'> {\r\n  /**\r\n   * Sets the current page. Pages start at 1.\r\n   */\r\n  currentPage: number;\r\n  /**\r\n   * Defines the total number of pages\r\n   */\r\n  totalPages: number;\r\n  /**\r\n   * Sets the number of pages that appear between the current page and a gap indicator\r\n   */\r\n  pagePadding?: number;\r\n  /**\r\n   * Positions the leading and trailing gap indicator, based on\r\n   * the current and total pages\r\n   */\r\n  pageGap?: number;\r\n  /**\r\n   * Handles page change events\r\n   *\r\n   * @param {any} currentPage The current page\r\n   */\r\n  onChange?: (currentPage: number) => void;\r\n  /**\r\n   * Applies localized labels, test attributes, etc. to individual pages\r\n   *\r\n   * @param {string} pageType The type of the page accepting the props.\r\n   *  One of: \"previous\", \"gap\", \"page\", \"next\"\r\n   * @param {any} props Default page props to transform\r\n   */\r\n  transformPageProps?: (pageType: PAGE_TYPE, props: any) => any;\r\n}\r\n\r\nconst Pagination = React.forwardRef<HTMLUListElement, IPaginationProps>(\r\n  (\r\n    {\r\n      currentPage: controlledCurrentPage,\r\n      transformPageProps,\r\n      totalPages,\r\n      pagePadding,\r\n      pageGap,\r\n      onChange,\r\n      ...otherProps\r\n    },\r\n    ref\r\n  ) => {\r\n    const [focusedItem, setFocusedItem] = useState<number | string>();\r\n    const [internalCurrentPage, setCurrentPage] = useState(1);\r\n    const currentPage = getControlledValue(controlledCurrentPage, internalCurrentPage)!;\r\n    const theme = useContext(ThemeContext);\r\n\r\n    const { getContainerProps, getPageProps, getPreviousPageProps, getNextPageProps } =\r\n      usePagination<number | string | undefined>({\r\n        rtl: theme.rtl,\r\n        focusedItem,\r\n        selectedItem: currentPage,\r\n        onFocus: item => {\r\n          setFocusedItem(item);\r\n        },\r\n        onSelect: item => {\r\n          let updatedCurrentPage = item;\r\n          let updatedFocusedKey = focusedItem;\r\n\r\n          if (updatedCurrentPage === PREVIOUS_KEY && currentPage > 1) {\r\n            updatedCurrentPage = currentPage - 1;\r\n\r\n            // Must manually change focusedKey once PreviousPage is no longer visible\r\n            if (updatedCurrentPage === 1 && focusedItem === PREVIOUS_KEY) {\r\n              updatedFocusedKey = 1;\r\n            }\r\n          } else if (updatedCurrentPage === NEXT_KEY && currentPage < totalPages) {\r\n            updatedCurrentPage = currentPage + 1;\r\n\r\n            // Must manually change focusedKey once NextPage is no longer visible\r\n            if (updatedCurrentPage === totalPages && updatedFocusedKey === NEXT_KEY) {\r\n              updatedFocusedKey = totalPages;\r\n            }\r\n          }\r\n\r\n          if (onChange && updatedCurrentPage !== undefined) {\r\n            onChange(updatedCurrentPage as number);\r\n          }\r\n\r\n          setFocusedItem(updatedFocusedKey);\r\n          setCurrentPage(updatedCurrentPage as number);\r\n        }\r\n      });\r\n\r\n    const getTransformedProps = (pageType: PAGE_TYPE, props: any = {}) => {\r\n      if (transformPageProps) {\r\n        return transformPageProps(pageType, props);\r\n      }\r\n\r\n      return props;\r\n    };\r\n\r\n    const renderPreviousPage = (rtl: boolean) => {\r\n      const isFirstPageSelected = totalPages > 0 && currentPage === 1;\r\n      const focusRef = React.createRef();\r\n\r\n      return (\r\n        <StyledNavigation\r\n          {...getTransformedProps(\r\n            'previous',\r\n            // The PreviousPage element should be hidden when first page is selected\r\n            isFirstPageSelected\r\n              ? { hidden: true }\r\n              : getPreviousPageProps({\r\n                  role: null,\r\n                  key: PREVIOUS_KEY,\r\n                  isFocused: focusedItem === PREVIOUS_KEY,\r\n                  item: PREVIOUS_KEY,\r\n                  ref: focusRef,\r\n                  focusRef\r\n                })\r\n          )}\r\n        >\r\n          {rtl ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"currentColor\" d=\"M5.61 3.312a.5.5 0 01.718-.69l.062.066 4 5a.5.5 0 01.054.542l-.054.082-4 5a.5.5 0 01-.83-.55l.05-.074L9.359 8l-3.75-4.688z\"/>\r\n</svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"currentColor\" d=\"M10.39 12.688a.5.5 0 01-.718.69l-.062-.066-4-5a.5.5 0 01-.054-.542l.054-.082 4-5a.5.5 0 01.83.55l-.05.074L6.641 8l3.75 4.688z\"/>\r\n</svg>}\r\n        </StyledNavigation>\r\n      );\r\n    };\r\n\r\n    const renderNextPage = (rtl: boolean) => {\r\n      const isLastPageSelected = currentPage === totalPages;\r\n      const focusRef = React.createRef();\r\n\r\n      return (\r\n        <StyledNavigation\r\n          {...getTransformedProps(\r\n            'next',\r\n            // The NextPage element should be hidden when the last page is selected\r\n            isLastPageSelected\r\n              ? { hidden: true }\r\n              : getNextPageProps({\r\n                  role: null,\r\n                  item: NEXT_KEY,\r\n                  key: NEXT_KEY,\r\n                  isFocused: focusedItem === NEXT_KEY,\r\n                  ref: focusRef,\r\n                  focusRef\r\n                })\r\n          )}\r\n        >\r\n          {rtl ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"currentColor\" d=\"M5.61 3.312a.5.5 0 01.718-.69l.062.066 4 5a.5.5 0 01.054.542l-.054.082-4 5a.5.5 0 01-.83-.55l.05-.074L9.359 8l-3.75-4.688z\"/>\r\n</svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"currentColor\" d=\"M10.39 12.688a.5.5 0 01-.718.69l-.062-.066-4-5a.5.5 0 01-.054-.542l.054-.082 4-5a.5.5 0 01.83.55l-.05.074L6.641 8l3.75 4.688z\"/>\r\n</svg>}\r\n        </StyledNavigation>\r\n      );\r\n    };\r\n\r\n    const createGap = (pageIndex: number) => (\r\n      <StyledGap {...getTransformedProps('gap', { key: `gap-${pageIndex}` })}>…</StyledGap>\r\n    );\r\n\r\n    const createPage = (pageIndex: number) => {\r\n      const focusRef = React.createRef();\r\n\r\n      return (\r\n        <StyledPage\r\n          {...getTransformedProps(\r\n            'page',\r\n            getPageProps({\r\n              role: null,\r\n              key: pageIndex,\r\n              item: pageIndex,\r\n              page: pageIndex,\r\n              title: pageIndex.toString(),\r\n              current: currentPage === pageIndex,\r\n              ref: focusRef,\r\n              focusRef\r\n            })\r\n          )}\r\n        >\r\n          {pageIndex}\r\n        </StyledPage>\r\n      );\r\n    };\r\n\r\n    /**\r\n     * Renders all Page and Gap Elements based on pagePadding prop\r\n     */\r\n    const renderPages = () => {\r\n      const pages = [];\r\n      const PADDING = pagePadding!;\r\n      const GAP = pageGap!;\r\n\r\n      for (let pageIndex = 1; pageIndex <= totalPages; pageIndex++) {\r\n        // Always display current, first, and last pages\r\n        if (pageIndex === currentPage || pageIndex < GAP || pageIndex > totalPages - GAP + 1) {\r\n          pages.push(createPage(pageIndex));\r\n          continue;\r\n        }\r\n\r\n        let minimum;\r\n        let maximum;\r\n\r\n        if (currentPage <= GAP + PADDING) {\r\n          minimum = GAP + 1;\r\n          maximum = minimum + PADDING * 2;\r\n        } else if (currentPage >= totalPages - GAP - PADDING) {\r\n          maximum = totalPages - GAP;\r\n          minimum = maximum - PADDING * 2;\r\n        } else {\r\n          minimum = currentPage - PADDING;\r\n          maximum = currentPage + PADDING;\r\n        }\r\n\r\n        // Display padded window of pages\r\n        if (\r\n          (pageIndex >= minimum && pageIndex <= currentPage) ||\r\n          (pageIndex >= currentPage && pageIndex <= maximum)\r\n        ) {\r\n          pages.push(createPage(pageIndex));\r\n          continue;\r\n        }\r\n\r\n        // Handle start gap\r\n        if (pageIndex === GAP) {\r\n          if (minimum > GAP + 1 && currentPage > GAP + PADDING + 1) {\r\n            pages.push(createGap(pageIndex));\r\n          } else {\r\n            pages.push(createPage(pageIndex));\r\n          }\r\n\r\n          continue;\r\n        }\r\n\r\n        // Handle end gap\r\n        if (pageIndex === totalPages - GAP + 1) {\r\n          if (maximum < totalPages - GAP && currentPage < totalPages - GAP - PADDING) {\r\n            pages.push(createGap(pageIndex));\r\n          } else {\r\n            pages.push(createPage(pageIndex));\r\n          }\r\n\r\n          continue;\r\n        }\r\n      }\r\n\r\n      return pages;\r\n    };\r\n\r\n    return (\r\n      <StyledPagination {...getContainerProps({ role: null, ...otherProps })} ref={ref}>\r\n        {renderPreviousPage(theme.rtl)}\r\n        {totalPages > 0 && renderPages()}\r\n        {renderNextPage(theme.rtl)}\r\n      </StyledPagination>\r\n    );\r\n  }\r\n);\r\n\r\nPagination.propTypes = {\r\n  currentPage: PropTypes.number.isRequired,\r\n  totalPages: PropTypes.number.isRequired,\r\n  pagePadding: PropTypes.number,\r\n  pageGap: PropTypes.number,\r\n  onChange: PropTypes.func,\r\n  transformPageProps: PropTypes.func\r\n};\r\n\r\nPagination.defaultProps = {\r\n  pagePadding: 2,\r\n  pageGap: 2\r\n};\r\n\r\nPagination.displayName = 'Pagination';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLUListElement>\r\n */\r\nexport default Pagination as React.FC<IPaginationProps & React.RefAttributes<HTMLUListElement>>;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledPageBase } from '../Pagination/StyledPageBase';\r\n\r\nconst COMPONENT_ID = 'cursor_pagination.cursor';\r\n\r\n/**\r\n * 1. Reset CSS from <button>.\r\n */\r\nexport const StyledCursor = styled(StyledPageBase as 'button').attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  as: 'button'\r\n})`\r\n  display: flex;\r\n  align-items: center;\r\n  border: none; /* [1] */\r\n  background: transparent; /* [1] */\r\n  padding: ${props => `0px ${props.theme.space.base * 2}px`};\r\n  overflow: visible;\r\n\r\n  &:not(${props => (props.theme.rtl ? ':first' : ':last')}-of-type) {\r\n    margin-right: ${props => props.theme.space.base}px;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledCursor.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'cursor_pagination';\r\n\r\nexport const StyledCursorPagination = styled.nav.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledCursorPagination.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { cloneElement, Children } from 'react';\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nexport interface IStyledIcon {\r\n  type: 'first' | 'next' | 'previous' | 'last';\r\n}\r\n\r\nconst marginStyles = (props: IStyledIcon & ThemeProps<DefaultTheme>) => {\r\n  const { type, theme } = props;\r\n  const margin = theme.space.base;\r\n\r\n  if (theme.rtl) {\r\n    return css`\r\n      /* stylelint-disable-next-line property-no-unknown */\r\n      margin-${type === 'last' || type === 'next' ? 'right' : 'left'}: ${margin}px;\r\n    `;\r\n  }\r\n\r\n  return css`\r\n    /* stylelint-disable-next-line property-no-unknown */\r\n    margin-${type === 'first' || type === 'previous' ? 'right' : 'left'}: ${margin}px;\r\n  `;\r\n};\r\n\r\nexport const StyledIcon = styled(({ children, ...props }) =>\r\n  cloneElement(Children.only(children), props)\r\n)`\r\n  ${marginStyles}\r\n  transform: ${props => props.theme.rtl && 'rotate(180deg)'};\r\n`;\r\n\r\nStyledIcon.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { math } from 'polished';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledPage } from './StyledPage';\r\n\r\nconst COMPONENT_ID = 'pagination.gap';\r\n\r\nconst sizeStyles = (props: ThemeProps<DefaultTheme>) => {\r\n  const shift = 2;\r\n  const marginTop = `-${shift}px`;\r\n  const fontSize = math(`${props.theme.fontSizes.md} + ${shift}`);\r\n\r\n  return css`\r\n    margin-top: ${marginTop};\r\n    font-size: ${fontSize};\r\n  `;\r\n};\r\n\r\nexport const StyledGap = styled(StyledPage).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  cursor: default;\r\n\r\n  ${props => sizeStyles(props)};\r\n\r\n  &:hover {\r\n    background-color: transparent;\r\n    color: inherit;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledGap.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledPage } from './StyledPage';\r\n\r\nconst COMPONENT_ID = 'pagination.navigation';\r\n\r\nexport const StyledNavigation = styled(StyledPage).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledNavigation.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { math } from 'polished';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledPageBase } from './StyledPageBase';\r\n\r\nconst COMPONENT_ID = 'pagination.page';\r\n\r\nconst sizeStyles = (props: ThemeProps<DefaultTheme>) => {\r\n  const height = `${props.theme.space.base * 8}px`;\r\n\r\n  return css`\r\n    min-width: ${height};\r\n    max-width: ${math(`${height} * 2`)}; /* [1] */\r\n\r\n    &[aria-current='true'] {\r\n      max-width: none;\r\n    }\r\n  `;\r\n};\r\n\r\nexport const StyledPage = styled(StyledPageBase).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  margin-left: ${props => `${props.theme.space.base}px`};\r\n\r\n  ${props => sizeStyles(props)};\r\n\r\n  /* stylelint-disable */\r\n  /* prettier-ignore */\r\n  &[aria-current=\"true\"] {\r\n    font-weight: ${props => props.theme.fontWeights.semibold};\r\n  }\r\n  /* stylelint-enable */\r\n\r\n  &${props => (props.theme.rtl ? ':last-of-type' : ':first-of-type')} {\r\n    margin-left: 0;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledPage.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport {\r\n  retrieveComponentStyles,\r\n  DEFAULT_THEME,\r\n  getLineHeight,\r\n  getColor\r\n} from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'pagination.page';\r\n\r\nconst colorStyles = (props: ThemeProps<DefaultTheme>) => {\r\n  const defaultColor = getColor('neutralHue', 600, props.theme);\r\n  const hoverForegroundColor = getColor('neutralHue', 700, props.theme);\r\n  const hoverBackgroundColor = getColor('primaryHue', 600, props.theme, 0.08);\r\n  const boxShadowColor = getColor('primaryHue', 600, props.theme, 0.35);\r\n  const activeForegroundColor = getColor('neutralHue', 800, props.theme);\r\n  const activeBackgroundColor = getColor('primaryHue', 600, props.theme, 0.2);\r\n  const currentForegroundColor = activeForegroundColor;\r\n  const currentBackgroundColor = hoverBackgroundColor;\r\n  const currentHoverBackgroundColor = getColor('primaryHue', 600, props.theme, 0.16);\r\n  const currentActiveBackgroundColor = getColor('primaryHue', 600, props.theme, 0.28);\r\n\r\n  return css`\r\n    color: ${defaultColor};\r\n\r\n    &:hover {\r\n      background-color: ${hoverBackgroundColor};\r\n      color: ${hoverForegroundColor};\r\n    }\r\n\r\n    &[data-garden-focus-visible] {\r\n      box-shadow: inset ${props.theme.shadows.md(boxShadowColor!)};\r\n    }\r\n\r\n    &:active,\r\n    &[data-garden-focus-visible]:active {\r\n      background-color: ${activeBackgroundColor};\r\n      color: ${activeForegroundColor};\r\n    }\r\n\r\n    &[aria-current='true'] {\r\n      background-color: ${currentBackgroundColor};\r\n      color: ${currentForegroundColor};\r\n    }\r\n\r\n    &[aria-current='true']:hover {\r\n      background-color: ${currentHoverBackgroundColor};\r\n    }\r\n\r\n    &[aria-current='true']:active {\r\n      background-color: ${currentActiveBackgroundColor};\r\n    }\r\n\r\n    :disabled,\r\n    [aria-disabled='true'] {\r\n      background-color: transparent;\r\n      color: ${getColor('grey', 300, props.theme)};\r\n    }\r\n  `;\r\n};\r\n\r\nconst sizeStyles = (props: ThemeProps<DefaultTheme>) => {\r\n  const fontSize = props.theme.fontSizes.md;\r\n  const height = `${props.theme.space.base * 8}px`;\r\n  const lineHeight = getLineHeight(height, fontSize);\r\n  const padding = `${props.theme.space.base * 1.5}px`;\r\n\r\n  return css`\r\n    padding: 0 ${padding};\r\n    height: ${height};\r\n    line-height: ${lineHeight};\r\n    font-size: ${fontSize};\r\n  `;\r\n};\r\n\r\nexport const StyledPageBase = styled.li.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  box-sizing: border-box;\r\n  display: inline-block;\r\n  /* prettier-ignore */\r\n  transition:\r\n    box-shadow 0.1s ease-in-out,\r\n    background-color 0.25s ease-in-out,\r\n    color 0.25s ease-in-out;\r\n  visibility: ${props => props.hidden && 'hidden'};\r\n  border-radius: ${props => props.theme.borderRadii.md};\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n  text-align: center;\r\n  text-overflow: ellipsis;\r\n  user-select: none;\r\n\r\n  ${props => sizeStyles(props)};\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &[aria-current='true'] {\r\n    font-weight: ${props => props.theme.fontWeights.semibold};\r\n  }\r\n\r\n  :disabled,\r\n  [aria-disabled='true'] {\r\n    cursor: default;\r\n  }\r\n\r\n  ${props => colorStyles(props)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledPageBase.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME, getColor } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'pagination.pagination_view';\r\n\r\n/**\r\n * 1. List reset.\r\n * 2. Text truncation.\r\n */\r\nexport const StyledPagination = styled.ul.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  direction: ${props => props.theme.rtl && 'rtl'};\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 0; /* [1] */\r\n  padding: 0; /* [1] */\r\n  white-space: nowrap; /* [2] */\r\n  color: ${props => getColor('neutralHue', 600, props.theme)};\r\n\r\n  :focus {\r\n    outline: none;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledPagination.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { Checkbox, Field, Label } from '@zendeskgarden/react-forms';\r\nimport {\r\n  Table,\r\n  Body,\r\n  Caption,\r\n  Cell,\r\n  GroupRow,\r\n  Head,\r\n  HeaderCell,\r\n  HeaderRow,\r\n  OverflowButton,\r\n  Row,\r\n  SortableCell,\r\n  ITableProps,\r\n  ISortableCellProps\r\n} from '@zendeskgarden/react-tables';\r\nimport { CELL_WIDTH, TABLE_ROW } from './types';\r\n\r\ninterface IArgs extends ITableProps {\r\n  caption: string;\r\n  data: TABLE_ROW[];\r\n  widths: CELL_WIDTH[];\r\n  hasOverflow: boolean;\r\n  hasSelection: boolean;\r\n  isBold: boolean;\r\n  isSortable: boolean;\r\n  isStriped?: boolean;\r\n  isTruncated?: boolean;\r\n}\r\n\r\nexport const TableStory: Story<IArgs> = ({\r\n  caption,\r\n  data,\r\n  widths = [],\r\n  hasOverflow,\r\n  hasSelection,\r\n  isBold,\r\n  isSortable,\r\n  isStriped,\r\n  isTruncated,\r\n  ...args\r\n}) => {\r\n  const headerCells = data.reduce((previous, current) => {\r\n    let retVal = previous;\r\n\r\n    if (typeof current !== 'string') {\r\n      const keys = Object.keys(current);\r\n\r\n      if (keys.length > previous.length) {\r\n        retVal = keys.map(value => `${value[0].toUpperCase()}${value.slice(1)}`);\r\n      }\r\n    }\r\n\r\n    return retVal;\r\n  }, [] as string[]);\r\n  const [sort, setSort] = useState<Record<string, ISortableCellProps['sort']>>({});\r\n  const colSpan = headerCells.length + (hasSelection ? 1 : 0) + (hasOverflow ? 1 : 0);\r\n\r\n  return (\r\n    <Table {...args}>\r\n      <Caption>{caption}</Caption>\r\n      <Head>\r\n        <HeaderRow>\r\n          {hasSelection && (\r\n            <HeaderCell isMinimum>\r\n              <Field>\r\n                <Checkbox>\r\n                  <Label hidden>Select all</Label>\r\n                </Checkbox>\r\n              </Field>\r\n            </HeaderCell>\r\n          )}\r\n          {headerCells.map((headerCell, index) =>\r\n            isSortable ? (\r\n              <SortableCell\r\n                key={index}\r\n                cellProps={{ isTruncated }}\r\n                onClick={() => {\r\n                  if (sort[headerCell] === 'asc') {\r\n                    setSort({ [headerCell]: 'desc' });\r\n                  } else if (sort[headerCell] === 'desc') {\r\n                    setSort({ [headerCell]: undefined });\r\n                  } else {\r\n                    setSort({ [headerCell]: 'asc' });\r\n                  }\r\n                }}\r\n                sort={sort[headerCell]}\r\n                width={widths ? widths[index] : undefined}\r\n              >\r\n                {headerCell}\r\n              </SortableCell>\r\n            ) : (\r\n              <HeaderCell\r\n                key={index}\r\n                isTruncated={isTruncated}\r\n                width={widths ? widths[index] : undefined}\r\n              >\r\n                {headerCell}\r\n              </HeaderCell>\r\n            )\r\n          )}\r\n          {hasOverflow && (\r\n            <HeaderCell hasOverflow>\r\n              <OverflowButton aria-label=\"overflow\" />\r\n            </HeaderCell>\r\n          )}\r\n        </HeaderRow>\r\n      </Head>\r\n      <Body>\r\n        {data\r\n          .filter(value => (isStriped ? typeof value !== 'string' : true))\r\n          .map((row, rowIndex) =>\r\n            typeof row === 'string' ? (\r\n              <GroupRow key={rowIndex}>\r\n                <Cell colSpan={colSpan} isTruncated={isTruncated}>\r\n                  {isBold ? <b>{row}</b> : row}\r\n                </Cell>\r\n              </GroupRow>\r\n            ) : (\r\n              <Row key={rowIndex} isStriped={isStriped && rowIndex % 2 === 0}>\r\n                {hasSelection && (\r\n                  <Cell isMinimum>\r\n                    <Field>\r\n                      <Checkbox>\r\n                        <Label hidden>Select all</Label>\r\n                      </Checkbox>\r\n                    </Field>\r\n                  </Cell>\r\n                )}\r\n                {Object.keys(row).map((column, columnIndex) => (\r\n                  <Cell key={`${rowIndex}${columnIndex}`} isTruncated={isTruncated}>\r\n                    {row[column]}\r\n                  </Cell>\r\n                ))}\r\n                {hasOverflow && (\r\n                  <Cell hasOverflow>\r\n                    <OverflowButton aria-label=\"overflow\" />\r\n                  </Cell>\r\n                )}\r\n              </Row>\r\n            )\r\n          )}\r\n      </Body>\r\n    </Table>\r\n  );\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { TABLE_ROW } from './types';\r\n\r\nexport const TABLE_DATA: TABLE_ROW[] = [\r\n  'Fruits',\r\n  {\r\n    type: 'Raspberries',\r\n    exposure: 'Partial shade',\r\n    soil: 'Moist and slightly acidic'\r\n  },\r\n  {\r\n    type: 'Strawberries',\r\n    exposure: 'Full sun',\r\n    soil: 'Medium moisture'\r\n  },\r\n  {\r\n    type: 'Grapes',\r\n    exposure: 'Full sun',\r\n    soil: 'Rich and well draining'\r\n  },\r\n  {\r\n    type: 'Cherries',\r\n    exposure: 'Partial sun',\r\n    soil: 'Rich and well draining'\r\n  },\r\n  {\r\n    type: 'Tomatoes',\r\n    exposure: 'Partial shade',\r\n    soil: 'Well draining'\r\n  },\r\n  'Vegetables',\r\n  {\r\n    type: 'Zucchini',\r\n    exposure: 'Partial shade',\r\n    soil: 'Moist and slightly acidic'\r\n  },\r\n  {\r\n    type: 'Carrot',\r\n    exposure: 'Full sun',\r\n    soil: 'Medium moisture'\r\n  },\r\n  {\r\n    type: 'Squash',\r\n    exposure: 'Full sun',\r\n    soil: 'Rich and well draining'\r\n  },\r\n  {\r\n    type: 'Garlic',\r\n    exposure: 'Full sun',\r\n    soil: 'Medium moisture'\r\n  },\r\n  {\r\n    type: 'Celery',\r\n    exposure: 'Full sun',\r\n    soil: 'Rich and well draining'\r\n  }\r\n];\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { StyledBody } from '../styled';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLTableSectionElement>\r\n */\r\nexport const Body = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  HTMLAttributes<HTMLTableSectionElement>\r\n>((props, ref) => <StyledBody ref={ref} {...props} />);\r\n\r\nBody.displayName = 'Body';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { StyledCaption } from '../styled';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLTableCaptionElement>\r\n */\r\nexport const Caption = React.forwardRef<\r\n  HTMLTableCaptionElement,\r\n  HTMLAttributes<HTMLTableCaptionElement>\r\n>((props, ref) => <StyledCaption ref={ref} {...props} />);\r\n\r\nCaption.displayName = 'Caption';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { TdHTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledCell, IStyledCellProps } from '../styled';\r\nimport { useTableContext } from '../utils/useTableContext';\r\n\r\nexport interface ICellProps extends TdHTMLAttributes<HTMLTableCellElement> {\r\n  /**\r\n   * Applies minimum fixed width styling (e.g. for cells that contain\r\n   * checkboxes or icons)\r\n   */\r\n  isMinimum?: boolean;\r\n  /** Truncates long text with an ellipsis */\r\n  isTruncated?: boolean;\r\n  /** Applies styling for a cell that contains an overflow menu */\r\n  hasOverflow?: boolean;\r\n  /** Adjusts the [width](https://developer.mozilla.org/en-US/docs/Web/CSS/width) of the cell */\r\n  width?: IStyledCellProps['width'];\r\n}\r\n\r\n/**\r\n * @extends TdHTMLAttributes<HTMLTableCellElement>\r\n */\r\nexport const Cell = React.forwardRef<HTMLTableCellElement, ICellProps>((props, ref) => {\r\n  const { size } = useTableContext();\r\n\r\n  return <StyledCell ref={ref} size={size} {...props} />;\r\n});\r\n\r\nCell.displayName = 'Cell';\r\n\r\nCell.propTypes = {\r\n  isMinimum: PropTypes.bool,\r\n  isTruncated: PropTypes.bool,\r\n  hasOverflow: PropTypes.bool,\r\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { StyledGroupRow } from '../styled';\r\nimport { useTableContext } from '../utils/useTableContext';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLTableRowElement>\r\n */\r\nexport const GroupRow = React.forwardRef<HTMLTableRowElement, HTMLAttributes<HTMLTableRowElement>>(\r\n  (props, ref) => {\r\n    const { size } = useTableContext();\r\n\r\n    return <StyledGroupRow ref={ref} size={size} {...props} />;\r\n  }\r\n);\r\n\r\nGroupRow.displayName = 'GroupRow';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { StyledHead } from '../styled';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLTableSectionElement>\r\n */\r\nexport const Head = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  HTMLAttributes<HTMLTableSectionElement>\r\n>((props, ref) => <StyledHead ref={ref} {...props} />);\r\n\r\nHead.displayName = 'Head';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { ThHTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { StyledHeaderCell, IStyledCellProps } from '../styled';\r\nimport { useTableContext } from '../utils/useTableContext';\r\n\r\n/**\r\n * @extends ThHTMLAttributes<HTMLTableHeaderCellElement>\r\n */\r\nexport const HeaderCell = React.forwardRef<\r\n  HTMLTableHeaderCellElement,\r\n  Omit<IStyledCellProps, 'size'> & ThHTMLAttributes<HTMLTableHeaderCellElement>\r\n>((props, ref) => {\r\n  const { size } = useTableContext();\r\n\r\n  return <StyledHeaderCell ref={ref} size={size} {...props} />;\r\n});\r\n\r\nHeaderCell.displayName = 'HeaderCell';\r\n\r\nHeaderCell.propTypes = {\r\n  isMinimum: PropTypes.bool,\r\n  isTruncated: PropTypes.bool,\r\n  hasOverflow: PropTypes.bool,\r\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { StyledHeaderRow } from '../styled';\r\nimport { useTableContext } from '../utils/useTableContext';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLTableRowElement>\r\n */\r\nexport const HeaderRow = React.forwardRef<HTMLTableRowElement, HTMLAttributes<HTMLTableRowElement>>(\r\n  (props, ref) => {\r\n    const { size } = useTableContext();\r\n\r\n    return <StyledHeaderRow ref={ref} size={size} {...props} />;\r\n  }\r\n);\r\n\r\nHeaderRow.displayName = 'HeaderRow';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { ButtonHTMLAttributes, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { composeEventHandlers } from '@zendeskgarden/container-utilities';\r\nimport OverflowStrokeIcon from '@zendeskgarden/svg-icons/src/16/overflow-stroke.svg';\r\nimport {\r\n  StyledOverflowButton,\r\n  IStyledOverflowButtonProps,\r\n  StyledOverflowButtonIconWrapper\r\n} from '../styled';\r\nimport { useTableContext } from '../utils/useTableContext';\r\n\r\n/**\r\n * @extends ButtonHTMLAttributes<HTMLButtonElement>\r\n */\r\nexport const OverflowButton = React.forwardRef<\r\n  HTMLButtonElement,\r\n  Omit<IStyledOverflowButtonProps, 'size'> & ButtonHTMLAttributes<HTMLButtonElement>\r\n>(({ onFocus, onBlur, isFocused: focused, ...other }, ref) => {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const { size } = useTableContext();\r\n\r\n  return (\r\n    <StyledOverflowButton\r\n      onFocus={composeEventHandlers(onFocus, () => {\r\n        setIsFocused(true);\r\n      })}\r\n      onBlur={composeEventHandlers(onBlur, () => {\r\n        setIsFocused(false);\r\n      })}\r\n      size={size}\r\n      isFocused={typeof focused === 'undefined' ? isFocused : focused}\r\n      ref={ref}\r\n      {...other}\r\n    >\r\n      <StyledOverflowButtonIconWrapper>\r\n        <OverflowStrokeIcon />\r\n      </StyledOverflowButtonIconWrapper>\r\n    </StyledOverflowButton>\r\n  );\r\n});\r\n\r\nOverflowButton.displayName = 'OverflowButton';\r\n\r\nOverflowButton.propTypes = {\r\n  isHovered: PropTypes.bool,\r\n  isActive: PropTypes.bool,\r\n  isFocused: PropTypes.bool\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useState, HTMLAttributes, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { composeEventHandlers } from '@zendeskgarden/container-utilities';\r\nimport { StyledRow, IStyledRowProps } from '../styled';\r\nimport { useTableContext } from '../utils/useTableContext';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLTableRowElement>\r\n */\r\nexport const Row = React.forwardRef<\r\n  HTMLTableRowElement,\r\n  Omit<IStyledRowProps, 'size'> & HTMLAttributes<HTMLTableRowElement>\r\n>(({ onFocus, onBlur, isFocused: focused, ...otherProps }, ref) => {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const { size, isReadOnly } = useTableContext();\r\n\r\n  const computedFocused = useMemo(() => {\r\n    if (typeof focused !== 'undefined') {\r\n      return focused;\r\n    }\r\n\r\n    if (isReadOnly) {\r\n      return false;\r\n    }\r\n\r\n    return isFocused;\r\n  }, [focused, isFocused, isReadOnly]);\r\n\r\n  return (\r\n    <StyledRow\r\n      onFocus={composeEventHandlers(onFocus, () => {\r\n        setIsFocused(true);\r\n      })}\r\n      onBlur={composeEventHandlers(onBlur, () => {\r\n        setIsFocused(false);\r\n      })}\r\n      size={size}\r\n      isReadOnly={isReadOnly}\r\n      isFocused={computedFocused}\r\n      ref={ref}\r\n      {...otherProps}\r\n    />\r\n  );\r\n});\r\n\r\nRow.displayName = 'Row';\r\n\r\nRow.propTypes = {\r\n  isStriped: PropTypes.bool,\r\n  isFocused: PropTypes.bool,\r\n  isHovered: PropTypes.bool,\r\n  isSelected: PropTypes.bool\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { ButtonHTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SortStrokeIcon from '@zendeskgarden/svg-icons/src/12/sort-stroke.svg';\r\nimport SortFillIcon from '@zendeskgarden/svg-icons/src/12/sort-fill.svg';\r\nimport {\r\n  StyledHeaderCell,\r\n  StyledSortableButton,\r\n  StyledSortableStrokeIconWrapper,\r\n  StyledSortableFillIconWrapper,\r\n  IStyledSortableButtonProps\r\n} from '../styled';\r\n\r\nexport interface ISortableCellProps extends IStyledSortableButtonProps {\r\n  /** Passes props to the cell */\r\n  cellProps?: any;\r\n}\r\n\r\n/**\r\n * @extends ButtonHTMLAttributes<HTMLButtonElement>\r\n */\r\nexport const SortableCell = React.forwardRef<\r\n  HTMLButtonElement,\r\n  ISortableCellProps & ButtonHTMLAttributes<HTMLButtonElement>\r\n>(({ sort, cellProps, width, children, ...otherProps }, ref) => {\r\n  let ariaSortValue = 'none';\r\n\r\n  if (sort === 'asc') {\r\n    ariaSortValue = 'ascending';\r\n  } else if (sort === 'desc') {\r\n    ariaSortValue = 'descending';\r\n  }\r\n\r\n  const SortIcon = sort === undefined ? SortStrokeIcon : SortFillIcon;\r\n\r\n  return (\r\n    <StyledHeaderCell aria-sort={ariaSortValue} width={width} {...cellProps}>\r\n      <StyledSortableButton sort={sort} ref={ref} {...otherProps}>\r\n        {children}\r\n        <StyledSortableStrokeIconWrapper>\r\n          <SortIcon />\r\n        </StyledSortableStrokeIconWrapper>\r\n        <StyledSortableFillIconWrapper>\r\n          <SortFillIcon />\r\n        </StyledSortableFillIconWrapper>\r\n      </StyledSortableButton>\r\n    </StyledHeaderCell>\r\n  );\r\n});\r\n\r\nSortableCell.displayName = 'SortableCell';\r\n\r\nSortableCell.propTypes = {\r\n  sort: PropTypes.oneOf(['asc', 'desc']),\r\n  cellProps: PropTypes.any,\r\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { TableHTMLAttributes, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledTable, IStyledTableProps } from '../styled';\r\nimport { TableContext } from '../utils/useTableContext';\r\n\r\nexport interface ITableProps extends IStyledTableProps, TableHTMLAttributes<HTMLTableElement> {\r\n  /** Removes interactive styling from table rows */\r\n  isReadOnly?: boolean;\r\n}\r\n\r\n/**\r\n * @extends TableHTMLAttributes<HTMLTableElement>\r\n */\r\nexport const Table = React.forwardRef<HTMLTableElement, ITableProps>((props, ref) => {\r\n  const tableContextValue = useMemo(\r\n    () => ({ size: props.size!, isReadOnly: props.isReadOnly! }),\r\n    [props.size, props.isReadOnly]\r\n  );\r\n\r\n  return (\r\n    <TableContext.Provider value={tableContextValue}>\r\n      <StyledTable ref={ref} {...props} />\r\n    </TableContext.Provider>\r\n  );\r\n});\r\n\r\nTable.displayName = 'Table';\r\n\r\nTable.defaultProps = {\r\n  size: 'medium'\r\n};\r\n\r\nTable.propTypes = {\r\n  size: PropTypes.oneOf(['small', 'medium', 'large'])\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'tables.body';\r\n\r\nexport const StyledBody = styled.tbody.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledBody.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'tables.caption';\r\n\r\nexport const StyledCaption = styled.caption.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  display: table-caption;\r\n  text-align: ${props => (props.theme.rtl ? 'right' : 'left')};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledCaption.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { math } from 'polished';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { SIZE, getLineHeight } from './StyledTable';\r\nimport { getRowHeight } from './style-utils';\r\n\r\nconst COMPONENT_ID = 'tables.cell';\r\n\r\nexport interface IStyledCellProps {\r\n  /**\r\n   * Applies minimum fixed width styling (e.g. for cells that contain\r\n   * checkboxes or icons)\r\n   */\r\n  isMinimum?: boolean;\r\n  /** Truncates long text with an ellipsis */\r\n  isTruncated?: boolean;\r\n  /** Applies styling for a cell that contains an overflow menu */\r\n  hasOverflow?: boolean;\r\n  /** Adjusts the [width](https://developer.mozilla.org/en-US/docs/Web/CSS/width) of the cell */\r\n  width?: string | number;\r\n  /** Adjusts the vertical padding of the cell */\r\n  size: SIZE;\r\n}\r\n\r\nconst truncatedStyling = css`\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst sizeStyling = (props: IStyledCellProps & ThemeProps<DefaultTheme>) => {\r\n  let boxSizing = 'border-box';\r\n  let padding;\r\n  let width = props.width;\r\n  let height;\r\n\r\n  if (props.hasOverflow) {\r\n    boxSizing = 'content-box';\r\n    width = '2em';\r\n    height = 'inherit';\r\n    padding = props.theme.rtl\r\n      ? `0 0 0 ${props.theme.space.base}px`\r\n      : `0 ${props.theme.space.base}px 0 0`;\r\n  } else {\r\n    const paddingVertical = math(`(${getRowHeight(props)} - ${getLineHeight(props)}) / 2`);\r\n    const paddingHorizontal = `${props.theme.space.base * 3}px`;\r\n\r\n    padding = `${paddingVertical} ${paddingHorizontal}`;\r\n  }\r\n\r\n  if (props.isMinimum) {\r\n    boxSizing = 'content-box';\r\n    width = '1em';\r\n  }\r\n\r\n  return css`\r\n    box-sizing: ${boxSizing};\r\n    padding: ${padding};\r\n    width: ${width};\r\n    height: ${height};\r\n  `;\r\n};\r\n\r\nexport const StyledCell = styled.td.attrs<IStyledCellProps>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledCellProps>`\r\n  display: table-cell;\r\n  transition: border-color 0.25s ease-in-out, box-shadow 0.1s ease-in-out;\r\n\r\n  ${props => sizeStyling(props)};\r\n  ${props => props.isTruncated && truncatedStyling};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledCell.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, DefaultTheme, ThemeProps } from 'styled-components';\r\nimport { math } from 'polished';\r\nimport { retrieveComponentStyles, DEFAULT_THEME, getColor } from '@zendeskgarden/react-theming';\r\nimport { StyledBaseRow, IStyledRowProps } from './StyledRow';\r\nimport { StyledCell } from './StyledCell';\r\nimport { getLineHeight } from './StyledTable';\r\n\r\nconst COMPONENT_ID = 'tables.group_row';\r\n\r\nconst sizeStyles = (props: IStyledRowProps & ThemeProps<DefaultTheme>) => {\r\n  const height = `${props.theme.space.base * 8}px`;\r\n  const lineHeight = getLineHeight(props);\r\n\r\n  return css`\r\n    height: ${height};\r\n    line-height: ${lineHeight};\r\n    font-size: ${props.theme.fontSizes.sm};\r\n\r\n    ${StyledCell} {\r\n      padding: ${math(`(${height} - ${lineHeight}) / 2`)} ${props.theme.space.base * 3}px;\r\n    }\r\n  `;\r\n};\r\n\r\nexport const StyledGroupRow = styled(StyledBaseRow).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  background-color: ${props => getColor('neutralHue', 100, props.theme)};\r\n  ${props => sizeStyles(props)}\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledGroupRow.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'tables.head';\r\n\r\nexport const StyledHead = styled.thead.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledHead.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { math } from 'polished';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledCell, IStyledCellProps } from './StyledCell';\r\nimport { StyledSortableButton } from './StyledSortableButton';\r\nimport { getLineHeight } from './StyledTable';\r\nimport { getRowHeight } from './style-utils';\r\n\r\nconst COMPONENT_ID = 'tables.header_cell';\r\n\r\nconst truncatedStyling = css`\r\n  ${StyledSortableButton} {\r\n    max-width: 100%;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n`;\r\n\r\nconst sizeStyles = (props: IStyledCellProps & ThemeProps<DefaultTheme>) => {\r\n  let paddingVertical = undefined;\r\n\r\n  if (!props.hasOverflow) {\r\n    paddingVertical = math(`(${getRowHeight(props)} - ${getLineHeight(props)}) / 2`);\r\n  }\r\n\r\n  return css`\r\n    padding-top: ${paddingVertical};\r\n    padding-bottom: ${paddingVertical};\r\n  `;\r\n};\r\n\r\nexport const StyledHeaderCell = styled(StyledCell).attrs({\r\n  as: 'th',\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  text-align: ${props => {\r\n    if (!props.hasOverflow) {\r\n      if (props.theme.rtl) {\r\n        return 'right';\r\n      }\r\n\r\n      return 'left';\r\n    }\r\n\r\n    return undefined;\r\n  }};\r\n  font-weight: inherit;\r\n\r\n  ${props => sizeStyles(props)}\r\n  ${props => props.isTruncated && truncatedStyling}\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledHeaderCell.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { math } from 'polished';\r\nimport { retrieveComponentStyles, getColor, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledBaseRow, IStyledRowProps } from './StyledRow';\r\nimport { StyledOverflowButton } from './StyledOverflowButton';\r\n\r\nconst COMPONENT_ID = 'tables.header_row';\r\n\r\nconst getHeaderRowHeight = (props: IStyledRowProps & ThemeProps<DefaultTheme>) => {\r\n  if (props.size === 'large') {\r\n    return `${props.theme.space.base * 18}px`;\r\n  } else if (props.size === 'small') {\r\n    return `${props.theme.space.base * 10}px`;\r\n  }\r\n\r\n  return `${props.theme.space.base * 12}px`;\r\n};\r\n\r\nexport const StyledHeaderRow = styled(StyledBaseRow).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  border-bottom-color: ${props => getColor('neutralHue', 300, props.theme)};\r\n  height: ${getHeaderRowHeight};\r\n  vertical-align: bottom;\r\n  font-weight: ${props => props.theme.fontWeights.semibold};\r\n\r\n  ${StyledOverflowButton} {\r\n    opacity: 1;\r\n    margin-top: 0;\r\n    margin-bottom: calc(${props => math(`${getHeaderRowHeight(props)} / 2`)} - 1em);\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledHeaderRow.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, css, DefaultTheme } from 'styled-components';\r\nimport { math } from 'polished';\r\nimport { retrieveComponentStyles, DEFAULT_THEME, getColor } from '@zendeskgarden/react-theming';\r\nimport { SIZE } from './StyledTable';\r\nimport { getRowHeight } from './style-utils';\r\n\r\nconst COMPONENT_ID = 'tables.overflow_button';\r\n\r\nexport interface IStyledOverflowButtonProps {\r\n  /** Applies hover styling */\r\n  isHovered?: boolean;\r\n  /** Applies active styling */\r\n  isActive?: boolean;\r\n  /** Applies focus styling */\r\n  isFocused?: boolean;\r\n  /** Sets the size */\r\n  size: SIZE;\r\n}\r\n\r\nconst OVERFLOW_BUTTON_SIZE = '2em';\r\n\r\nconst colorStyles = (props: IStyledOverflowButtonProps & ThemeProps<DefaultTheme>) => {\r\n  const boxShadow = props.theme.shadows.md(getColor('primaryHue', 600, props.theme, 0.35)!);\r\n  const hoverBackgroundColor = getColor('primaryHue', 600, props.theme, 0.08);\r\n  const hoverForegroundColor = getColor('neutralHue', 700, props.theme);\r\n  const activeBackgroundColor = getColor('primaryHue', 600, props.theme, 0.2);\r\n  const activeForegroundColor = getColor('neutralHue', 800, props.theme);\r\n  let foregroundColor;\r\n\r\n  if (props.isHovered) {\r\n    foregroundColor = hoverForegroundColor;\r\n  } else if (props.isActive) {\r\n    foregroundColor = activeForegroundColor;\r\n  } else {\r\n    foregroundColor = getColor('neutralHue', 600, props.theme);\r\n  }\r\n\r\n  return css`\r\n    color: ${foregroundColor};\r\n\r\n    &:hover {\r\n      background-color: ${hoverBackgroundColor};\r\n      color: ${hoverForegroundColor};\r\n    }\r\n\r\n    &:active {\r\n      background-color: ${activeBackgroundColor};\r\n      color: ${activeForegroundColor};\r\n    }\r\n\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n\r\n    &[data-garden-focus-visible] {\r\n      box-shadow: inset ${boxShadow};\r\n    }\r\n  `;\r\n};\r\n\r\n/**\r\n * 1. Reset for <button> element\r\n * 2. Reset for <a>nchor element\r\n */\r\nexport const StyledOverflowButton = styled.button.attrs<IStyledOverflowButtonProps>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  type: 'button'\r\n})<IStyledOverflowButtonProps>`\r\n  display: block;\r\n  transition: opacity 0.25s ease-in-out, background-color 0.1s ease-in-out;\r\n  opacity: ${props => (props.isHovered || props.isFocused || props.isActive ? '1' : '0')};\r\n  z-index: ${props => (props.isActive ? '1' : '0')};\r\n  margin-top: calc(${props => math(`${getRowHeight(props)} / 2`)} - 1em);\r\n  border: none; /* [1] */\r\n  border-radius: 50%;\r\n  background-color: transparent; /* [1] */\r\n  cursor: pointer;\r\n  padding: 0; /* [1] */\r\n  width: 100%;\r\n  height: ${OVERFLOW_BUTTON_SIZE};\r\n  text-decoration: none; /* [2] */\r\n  font-size: inherit; /* [1] */\r\n\r\n  ${props => colorStyles(props)}\r\n\r\n  &[aria-expanded='true'] {\r\n    opacity: 1;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledOverflowButton.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n\r\nexport const StyledOverflowButtonIconWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transform: rotate(90deg);\r\n  transition: opacity 0.25s ease-in-out, background-color 0.1s ease-in-out;\r\n\r\n  width: ${OVERFLOW_BUTTON_SIZE};\r\n  height: ${OVERFLOW_BUTTON_SIZE};\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nStyledOverflowButtonIconWrapper.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme, css } from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME, getColor } from '@zendeskgarden/react-theming';\r\nimport { SIZE } from './StyledTable';\r\nimport { StyledCell } from './StyledCell';\r\nimport { StyledOverflowButton } from './StyledOverflowButton';\r\nimport { getRowHeight } from './style-utils';\r\n\r\nconst COMPONENT_ID = 'tables.row';\r\n\r\nexport interface IStyledRowProps {\r\n  /** Applies striped styling */\r\n  isStriped?: boolean;\r\n  /** Applies focus styling */\r\n  isFocused?: boolean;\r\n  /** Applies hover styling */\r\n  isHovered?: boolean;\r\n  /** Applies selected styling */\r\n  isSelected?: boolean;\r\n  /** Removes interactive styling */\r\n  isReadOnly?: boolean;\r\n  /** Adjusts vertical padding */\r\n  size: SIZE;\r\n}\r\n\r\nexport const StyledBaseRow = styled.tr<IStyledRowProps>`\r\n  display: table-row;\r\n  transition: background-color 0.1s ease-in-out;\r\n  border-bottom: ${props =>\r\n    `${props.theme.borders.sm} ${getColor('neutralHue', 200, props.theme)}`};\r\n  background-color: ${props => props.isStriped && getColor('neutralHue', 100, props.theme)};\r\n  vertical-align: top;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nStyledBaseRow.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n\r\nconst colorStyles = (props: IStyledRowProps & ThemeProps<DefaultTheme>) => {\r\n  const boxShadow = `inset ${props.theme.rtl ? '-' : ''}${\r\n    props.theme.shadowWidths.md\r\n  } 0 0 0 ${getColor('primaryHue', 600, props.theme)}`;\r\n  const hoveredBackgroundColor = getColor('primaryHue', 600, props.theme, 0.08);\r\n  const hoveredBorderColor = getColor('primaryHue', 200, props.theme);\r\n  const selectedBackgroundColor = getColor('primaryHue', 600, props.theme, 0.2);\r\n  const selectedBorderColor = getColor('primaryHue', 300, props.theme);\r\n  const hoveredSelectedBackgroundColor = getColor('primaryHue', 600, props.theme, 0.28);\r\n  let backgroundColor = undefined;\r\n  let borderColor = undefined;\r\n  let hoverBorderBottomColor = undefined;\r\n  let hoverBackgroundColor = undefined;\r\n\r\n  if (props.isSelected) {\r\n    if (props.isHovered) {\r\n      backgroundColor = hoveredSelectedBackgroundColor;\r\n    } else {\r\n      backgroundColor = selectedBackgroundColor;\r\n    }\r\n\r\n    borderColor = selectedBorderColor;\r\n    hoverBorderBottomColor = selectedBorderColor;\r\n    hoverBackgroundColor = hoveredSelectedBackgroundColor;\r\n  } else if (props.isHovered) {\r\n    backgroundColor = hoveredBackgroundColor;\r\n    borderColor = hoveredBorderColor;\r\n  } else if (!props.isReadOnly) {\r\n    hoverBorderBottomColor = hoveredBorderColor;\r\n    hoverBackgroundColor = hoveredBackgroundColor;\r\n  }\r\n\r\n  return css`\r\n    border-bottom-color: ${borderColor};\r\n    background-color: ${backgroundColor};\r\n\r\n    &:hover {\r\n      border-bottom-color: ${hoverBorderBottomColor};\r\n      background-color: ${hoverBackgroundColor};\r\n\r\n      ${StyledOverflowButton} {\r\n        opacity: 1;\r\n      }\r\n    }\r\n\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n\r\n    ${StyledCell}:first-of-type {\r\n      box-shadow: ${props.isFocused && boxShadow};\r\n\r\n      &:focus {\r\n        box-shadow: ${boxShadow};\r\n      }\r\n    }\r\n  `;\r\n};\r\n\r\nexport const StyledRow = styled(StyledBaseRow).attrs<IStyledRowProps>(props => ({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  tabIndex: props.isReadOnly ? undefined : (-1 as number)\r\n}))<IStyledRowProps>`\r\n  height: ${getRowHeight};\r\n\r\n  ${props => colorStyles(props)}\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledRow.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { math } from 'polished';\r\nimport { retrieveComponentStyles, DEFAULT_THEME, getColor } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'tables.sortable';\r\n\r\ntype SORT = 'asc' | 'desc';\r\n\r\nconst StyledBaseIconWrapper = styled.div`\r\n  display: flex;\r\n  position: absolute;\r\n  top: 0;\r\n  ${props => (props.theme.rtl ? 'left' : 'right')}: 0;\r\n  align-items: center;\r\n  justify-content: center;\r\n  opacity: 0;\r\n  width: ${props => props.theme.iconSizes.sm};\r\n  height: 100%;\r\n  color: inherit;\r\n  fill: inherit;\r\n`;\r\n\r\nStyledBaseIconWrapper.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n\r\nexport const StyledSortableStrokeIconWrapper = styled(StyledBaseIconWrapper)``;\r\n\r\nStyledSortableStrokeIconWrapper.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n\r\nexport const StyledSortableFillIconWrapper = styled(StyledBaseIconWrapper)``;\r\n\r\nStyledSortableFillIconWrapper.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n\r\nexport interface IStyledSortableButtonProps {\r\n  /** Sets the sort order */\r\n  sort?: SORT;\r\n  /** Sets the width of the cell */\r\n  width?: string | number;\r\n}\r\n\r\n/**\r\n * 1. Reset for <button> element\r\n * 2. Reset for <a>nchor element\r\n */\r\nexport const StyledSortableButton = styled.button.attrs<IStyledSortableButtonProps>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  type: 'button'\r\n})<IStyledSortableButtonProps>`\r\n  position: relative;\r\n  border: none; /* [1] */\r\n  background-color: transparent; /* [1] */\r\n  cursor: pointer;\r\n  padding: 0; /* [1] */\r\n  /* stylelint-disable-next-line property-no-unknown */\r\n  padding-${props => (props.theme.rtl ? 'left' : 'right')}: ${props =>\r\n  math(`${props.theme.space.base} + ${props.theme.iconSizes.sm}`)};\r\n  width: ${props => props.width};\r\n  text-decoration: none; /* [2] */\r\n  color: inherit;\r\n  font-family: inherit; /* [1] */\r\n  font-size: inherit; /* [1] */\r\n  font-weight: ${props => props.theme.fontWeights.semibold};\r\n\r\n  ${StyledSortableStrokeIconWrapper} {\r\n    opacity: ${props => props.sort === undefined && 1};\r\n  }\r\n\r\n  ${StyledSortableFillIconWrapper} {\r\n    opacity: ${props => props.sort !== undefined && 1};\r\n    color: ${props => {\r\n      if (props.sort === 'asc') {\r\n        return getColor('neutralHue', 600, props.theme);\r\n      } else if (props.sort === 'desc') {\r\n        return getColor('neutralHue', 400, props.theme);\r\n      }\r\n\r\n      return undefined;\r\n    }};\r\n    fill: ${props => {\r\n      if (props.sort === 'asc') {\r\n        return getColor('neutralHue', 400, props.theme);\r\n      } else if (props.sort === 'desc') {\r\n        return getColor('neutralHue', 600, props.theme);\r\n      }\r\n\r\n      return undefined;\r\n    }};\r\n  }\r\n\r\n  &:hover,\r\n  &[data-garden-focus-visible] {\r\n    text-decoration: none;\r\n    color: ${props => getColor('primaryHue', 600, props.theme)};\r\n\r\n    ${props =>\r\n      props.sort === undefined &&\r\n      `\r\n      ${StyledSortableFillIconWrapper} {\r\n        opacity: 1;\r\n        color: ${getColor('primaryHue', 600, props.theme)};\r\n        fill: ${getColor('primaryHue', 600, props.theme)};\r\n      }\r\n\r\n      ${StyledSortableStrokeIconWrapper} {\r\n        opacity: 0;\r\n      }\r\n    `};\r\n\r\n    ${props =>\r\n      props.sort === 'asc' &&\r\n      `\r\n      ${StyledSortableFillIconWrapper} {\r\n        color: ${getColor('primaryHue', 600, props.theme)};\r\n        fill: ${getColor('primaryHue', 600, props.theme, 0.25)};\r\n      }\r\n    `}\r\n\r\n    ${props =>\r\n      props.sort === 'desc' &&\r\n      `\r\n      ${StyledSortableFillIconWrapper} {\r\n        color: ${getColor('primaryHue', 600, props.theme, 0.25)};\r\n        fill: ${getColor('primaryHue', 600, props.theme)};\r\n      }\r\n    `}\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledSortableButton.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'tables.table';\r\n\r\nexport type SIZE = 'small' | 'medium' | 'large';\r\n\r\nexport interface IStyledTableProps {\r\n  /** Sets the table size */\r\n  size?: SIZE;\r\n}\r\n\r\nexport const getLineHeight = (props: ThemeProps<DefaultTheme>) => {\r\n  return `${props.theme.space.base * 5}px`;\r\n};\r\n\r\n/**\r\n * 1. <table> reset\r\n */\r\nexport const StyledTable = styled.table.attrs<IStyledTableProps>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledTableProps>`\r\n  display: table;\r\n  border: none; /* [1] */\r\n  width: 100%; /* [1] */\r\n  table-layout: fixed; /* [1] */\r\n  border-collapse: collapse; /* [1] */\r\n  border-spacing: 0; /* [1] */\r\n  line-height: ${props => getLineHeight(props)};\r\n  color: ${props => props.theme.colors.foreground};\r\n  font-size: ${props => props.theme.fontSizes.md};\r\n  direction: ${props => props.theme.rtl && 'rtl'};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledTable.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { SIZE } from './StyledTable';\r\nimport { ThemeProps, DefaultTheme } from 'styled-components';\r\n\r\nexport const getRowHeight = (props: { size: SIZE } & ThemeProps<DefaultTheme>) => {\r\n  if (props.size === 'large') {\r\n    return `${props.theme.space.base * 16}px`;\r\n  } else if (props.size === 'small') {\r\n    return `${props.theme.space.base * 8}px`;\r\n  }\r\n\r\n  return `${props.theme.space.base * 10}px`;\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useContext } from 'react';\r\nimport { SIZE } from '../styled/StyledTable';\r\n\r\ninterface ITableContext {\r\n  size: SIZE;\r\n  isReadOnly: boolean;\r\n}\r\n\r\nexport const TableContext = React.createContext<ITableContext>({\r\n  size: 'medium',\r\n  isReadOnly: false\r\n});\r\n\r\nexport const useTableContext = () => {\r\n  return useContext(TableContext);\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { ITabsProps, Tab, TabList, TabPanel, Tabs } from '@zendeskgarden/react-tabs';\r\nimport { ITab } from './types';\r\n\r\ninterface IArgs extends ITabsProps {\r\n  tabs: ITab[];\r\n}\r\n\r\nexport const TabsStory: Story<IArgs> = ({ tabs, ...args }) => (\r\n  <Tabs {...args}>\r\n    <TabList>\r\n      {tabs.map((tab, index) => (\r\n        <Tab key={index} item={index} disabled={tab.disabled}>\r\n          {tab.tab}\r\n        </Tab>\r\n      ))}\r\n    </TabList>\r\n    {tabs.map((tab, index) => (\r\n      <TabPanel key={index} item={index}>\r\n        {tab.panel}\r\n      </TabPanel>\r\n    ))}\r\n  </Tabs>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { ITab } from './types';\r\n\r\nexport const TABS: ITab[] = [\r\n  {\r\n    tab: 'Elm',\r\n    panel:\r\n      'Elms are deciduous and semi-deciduous trees comprising the flowering plant genus Ulmus in the plant family Ulmaceae.',\r\n    disabled: false\r\n  },\r\n  {\r\n    tab: 'Sugar maple',\r\n    panel:\r\n      'The sugar maple is one of America’s most-loved trees. In fact, more states have claimed it as their state tree than any other single species—for New York, West Virginia, Wisconsin, and Vermont, the maple tree stands alone.',\r\n    disabled: false\r\n  },\r\n  {\r\n    tab: 'Sugar',\r\n    panel:\r\n      'Cornus is a genus of about 30–60 species of woody plants in the family Cornaceae, commonly known as dogwoods, which can generally be distinguished by their blossoms, berries, and distinctive bark.',\r\n    disabled: false\r\n  },\r\n  {\r\n    tab: 'Boysenberry syrup',\r\n    panel: 'Boysenberry syrup has been discontinued due to low demand.',\r\n    disabled: true\r\n  }\r\n];\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useRef, HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport mergeRefs from 'react-merge-refs';\r\nimport { StyledTab } from '../styled';\r\nimport { useTabsContext } from '../utils/useTabsContext';\r\n\r\nexport interface ITabProps extends HTMLAttributes<HTMLDivElement> {\r\n  /** Indicates that the element is not interactive */\r\n  disabled?: boolean;\r\n  /** Defines a unique value to identify the tab. Provided to the `onChange` event in the [Tabs](#tabs) component. */\r\n  item?: any;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Tab = React.forwardRef<HTMLDivElement, ITabProps>(\r\n  ({ disabled, item, ...otherProps }, ref) => {\r\n    const tabsPropGetters = useTabsContext();\r\n    const tabRef = useRef<HTMLDivElement>();\r\n\r\n    if (disabled || !tabsPropGetters) {\r\n      return <StyledTab disabled={disabled} ref={mergeRefs([tabRef, ref])} {...otherProps} />;\r\n    }\r\n\r\n    return (\r\n      <StyledTab\r\n        ref={mergeRefs([tabRef, ref])}\r\n        {...tabsPropGetters.getTabProps({\r\n          item,\r\n          focusRef: tabRef,\r\n          index: tabsPropGetters.tabIndexRef.current++,\r\n          isSelected: item === tabsPropGetters.selectedItem,\r\n          ...otherProps\r\n        })}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nTab.displayName = 'Tab';\r\n\r\nTab.propTypes = {\r\n  disabled: PropTypes.bool,\r\n  item: PropTypes.any\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { StyledTabList } from '../styled';\r\nimport { useTabsContext } from '../utils/useTabsContext';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const TabList = React.forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  (props, ref) => {\r\n    const tabsPropGetters = useTabsContext();\r\n\r\n    if (!tabsPropGetters) {\r\n      return <StyledTabList ref={ref} {...props} />;\r\n    }\r\n\r\n    return <StyledTabList {...(tabsPropGetters.getTabListProps({ ref, ...props }) as any)} />;\r\n  }\r\n);\r\n\r\nTabList.displayName = 'TabList';\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledTabPanel } from '../styled';\r\nimport { useTabsContext } from '../utils/useTabsContext';\r\n\r\nexport interface ITabPanelProps extends HTMLAttributes<HTMLDivElement> {\r\n  /**\r\n   * Defines a value used to match a tab panel with its associated tab\r\n   */\r\n  item?: any;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const TabPanel = React.forwardRef<HTMLDivElement, ITabPanelProps>(\r\n  ({ item, ...otherProps }, ref) => {\r\n    const tabsPropGetters = useTabsContext();\r\n\r\n    if (!tabsPropGetters) {\r\n      return <StyledTabPanel ref={ref} {...otherProps} />;\r\n    }\r\n\r\n    return (\r\n      <StyledTabPanel\r\n        {...tabsPropGetters.getTabPanelProps({\r\n          item,\r\n          ref,\r\n          index: tabsPropGetters.tabPanelIndexRef.current++,\r\n          'aria-hidden': tabsPropGetters.selectedItem !== item,\r\n          ...otherProps\r\n        })}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nTabPanel.displayName = 'TabPanel';\r\n\r\nTabPanel.propTypes = { item: PropTypes.any };\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useState, useRef, useContext, HTMLAttributes, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeContext } from 'styled-components';\r\nimport { DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { useTabs } from '@zendeskgarden/container-tabs';\r\nimport { getControlledValue } from '@zendeskgarden/container-utilities';\r\nimport { TabsContext } from '../utils/useTabsContext';\r\nimport { StyledTabs } from '../styled/StyledTabs';\r\n\r\nexport interface ITabsProps extends HTMLAttributes<HTMLDivElement> {\r\n  /**\r\n   * Arranges the tabs vertically\r\n   */\r\n  isVertical?: boolean;\r\n  /**\r\n   * Specifies the currently selected tab\r\n   */\r\n  selectedItem?: any;\r\n  /**\r\n   * Handles tab selection\r\n   *\r\n   * @param {String} updatedSelectedItem The selected tab's `item` value\r\n   */\r\n  onChange?: (updatedSelectedItem: any) => void;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nconst Tabs = React.forwardRef<HTMLDivElement, ITabsProps>(\r\n  (\r\n    { isVertical, children, onChange, selectedItem: controlledSelectedItem, ...otherProps },\r\n    ref\r\n  ) => {\r\n    const theme = useContext(ThemeContext) || DEFAULT_THEME;\r\n    const [internalSelectedItem, setSelectedItem] = useState();\r\n    const tabIndexRef = useRef<number>(0);\r\n    const tabPanelIndexRef = useRef<number>(0);\r\n    const selectedItem = getControlledValue(controlledSelectedItem, internalSelectedItem);\r\n\r\n    const tabPropGetters = useTabs({\r\n      rtl: theme!.rtl,\r\n      vertical: isVertical,\r\n      selectedItem,\r\n      defaultSelectedIndex: 0,\r\n      onSelect: item => {\r\n        if (onChange) {\r\n          onChange(item);\r\n        } else {\r\n          setSelectedItem(item);\r\n        }\r\n      }\r\n    });\r\n\r\n    const tabsContextValue = useMemo(\r\n      () => ({ ...tabPropGetters, tabIndexRef, tabPanelIndexRef }),\r\n      [tabPropGetters]\r\n    );\r\n\r\n    return (\r\n      <TabsContext.Provider value={tabsContextValue}>\r\n        <StyledTabs isVertical={isVertical} {...otherProps} ref={ref}>\r\n          {children}\r\n        </StyledTabs>\r\n      </TabsContext.Provider>\r\n    );\r\n  }\r\n);\r\n\r\nTabs.propTypes = {\r\n  isVertical: PropTypes.bool,\r\n  selectedItem: PropTypes.any,\r\n  onChange: PropTypes.func\r\n};\r\n\r\nTabs.defaultProps = {\r\n  isVertical: false\r\n};\r\n\r\nTabs.displayName = 'Tabs';\r\n\r\nexport default Tabs;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { DefaultTheme, css, ThemeProps } from 'styled-components';\r\nimport { retrieveComponentStyles, getColor, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { stripUnit } from 'polished';\r\n\r\nconst COMPONENT_ID = 'tabs.tab';\r\n\r\ninterface IStyledTabProps {\r\n  disabled?: boolean;\r\n  isSelected?: boolean;\r\n}\r\n\r\n/**\r\n * 1. A high specificity is needed to apply the border-color in vertical orientations\r\n */\r\nconst colorStyles = ({ theme, isSelected }: IStyledTabProps & ThemeProps<DefaultTheme>) => {\r\n  const selectedColor = getColor('primaryHue', 600, theme);\r\n\r\n  return css`\r\n    border-color: ${isSelected && 'currentColor !important'}; /* [1] */\r\n    color: ${isSelected ? selectedColor : 'inherit'};\r\n\r\n    &:hover {\r\n      color: ${selectedColor};\r\n    }\r\n\r\n    &:active {\r\n      border-color: currentColor;\r\n      color: ${selectedColor};\r\n    }\r\n\r\n    &[data-garden-focus-visible] {\r\n      color: ${selectedColor};\r\n    }\r\n\r\n    &[data-garden-focus-visible]::before {\r\n      box-shadow: inset ${theme.shadows.sm(getColor('primaryHue', 600, theme, 0.35)!)};\r\n    }\r\n\r\n    &[aria-disabled='true'] {\r\n      border-color: transparent;\r\n      color: ${props => getColor('neutralHue', 400, props.theme)};\r\n    }\r\n  `;\r\n};\r\n\r\nconst sizeStyles = ({ theme }: ThemeProps<DefaultTheme>) => {\r\n  const paddingTop = theme.space.base * 2.5;\r\n  const paddingHorizontal = theme.space.base * 7;\r\n  const paddingBottom =\r\n    paddingTop -\r\n    (stripUnit(theme.borderWidths.md) as number) -\r\n    (stripUnit(theme.borderWidths.sm) as number);\r\n\r\n  return css`\r\n    padding: ${paddingTop}px ${paddingHorizontal}px ${paddingBottom}px;\r\n  `;\r\n};\r\n\r\n/**\r\n * 1. Text truncation (requires `max-width`).\r\n * 2. Overflow compensation.\r\n * 3. Override default anchor styling\r\n */\r\nexport const StyledTab = styled.div.attrs<IStyledTabProps>(props => ({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  'aria-disabled': props.disabled\r\n}))<IStyledTabProps>`\r\n  display: inline-block;\r\n  position: relative;\r\n  transition: color 0.25s ease-in-out;\r\n  border-bottom: ${props => props.theme.borderStyles.solid} transparent;\r\n  border-width: ${props => props.theme.borderWidths.md};\r\n  cursor: pointer;\r\n  overflow: hidden; /* [1] */\r\n  vertical-align: top; /* [2] */\r\n  user-select: none;\r\n  text-align: center;\r\n  text-decoration: none; /* [3] */\r\n  text-overflow: ellipsis; /* [1] */\r\n\r\n  ${sizeStyles}\r\n  ${colorStyles}\r\n\r\n  &:focus {\r\n    outline: none;\r\n    text-decoration: none;\r\n  }\r\n\r\n  &[data-garden-focus-visible]::before {\r\n    position: absolute;\r\n    top: ${props => props.theme.space.base * 2.5}px;\r\n    right: ${props => props.theme.space.base * 6}px;\r\n    left: ${props => props.theme.space.base * 6}px;\r\n    border-radius: ${props => props.theme.borderRadii.md};\r\n    height: ${props => props.theme.space.base * 5}px;\r\n    pointer-events: none;\r\n  }\r\n\r\n  &::before {\r\n    transition: box-shadow 0.1s ease-in-out;\r\n    content: '';\r\n  }\r\n\r\n  &:active::before {\r\n    box-shadow: none;\r\n  }\r\n\r\n  &[aria-disabled='true'] {\r\n    cursor: default;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledTab.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, getColor, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'tabs.tablist';\r\n\r\n/**\r\n * 1. List element reset.\r\n */\r\nexport const StyledTabList = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  display: block;\r\n  margin-top: 0; /* [1] */\r\n  margin-bottom: ${props => props.theme.space.base * 5}px;\r\n  border-bottom: ${props => props.theme.borderWidths.sm} ${props => props.theme.borderStyles.solid}\r\n    ${props => getColor('neutralHue', 300, props.theme)};\r\n  padding: 0; /* [1] */\r\n  line-height: ${props => props.theme.space.base * 5}px;\r\n  white-space: nowrap;\r\n  color: ${props => getColor('neutralHue', 600, props.theme)};\r\n  font-size: ${props => props.theme.fontSizes.md};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledTabList.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'tabs.tabpanel';\r\n\r\n/**\r\n * Accepts all `<div>` props\r\n */\r\nexport const StyledTabPanel = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  display: block;\r\n\r\n  &[aria-hidden='true'] {\r\n    display: none;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledTabPanel.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\nimport { StyledTab } from './StyledTab';\r\nimport { StyledTabPanel } from './StyledTabPanel';\r\nimport { StyledTabList } from './StyledTabList';\r\n\r\nconst COMPONENT_ID = 'tabs.tabs';\r\n\r\ninterface IStyledTabsProps {\r\n  /**\r\n   * Displays vertical TabList styling\r\n   */\r\n  isVertical?: boolean;\r\n}\r\n\r\nconst verticalStyling = ({ theme }: ThemeProps<DefaultTheme>) => {\r\n  return css`\r\n    display: table;\r\n\r\n    ${StyledTabList} {\r\n      display: table-cell;\r\n      margin-bottom: 0;\r\n      border-bottom: none;\r\n      vertical-align: top;\r\n    }\r\n\r\n    ${StyledTab} {\r\n      display: block;\r\n      margin-bottom: ${theme.space.base * 5}px;\r\n      margin-left: ${theme.rtl && '0'};\r\n      border-left: ${theme.rtl && '0'};\r\n      border-bottom-style: none;\r\n      /* stylelint-disable property-case, property-no-unknown */\r\n      border-${theme.rtl ? 'right' : 'left'}-style: ${theme.borderStyles.solid};\r\n      border-${theme.rtl ? 'right' : 'left'}-color: transparent;\r\n      /* stylelint-enable property-case, property-no-unknown */\r\n      padding: ${theme.space.base}px ${theme.space.base * 2}px;\r\n      text-align: ${theme.rtl ? 'right' : 'left'};\r\n\r\n      &:last-of-type {\r\n        margin-bottom: 0;\r\n      }\r\n\r\n      &[data-garden-focus-visible]::before {\r\n        top: ${theme.space.base}px;\r\n        right: ${theme.space.base}px;\r\n        left: ${theme.space.base}px;\r\n      }\r\n    }\r\n\r\n    ${StyledTabPanel} {\r\n      /* stylelint-disable-next-line property-no-unknown */\r\n      margin-${theme.rtl ? 'right' : 'left'}: ${theme.space.base * 8}px;\r\n      vertical-align: top;\r\n    }\r\n  `;\r\n};\r\n\r\n/**\r\n * Accepts all `<div>` props\r\n */\r\nexport const StyledTabs = styled.div.attrs<IStyledTabsProps>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledTabsProps>`\r\n  display: block;\r\n  overflow: hidden;\r\n  direction: ${props => props.theme.rtl && 'rtl'};\r\n\r\n  ${props => props.isVertical && verticalStyling(props)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledTabs.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { createContext, useContext, MutableRefObject } from 'react';\r\nimport { IUseTabsReturnValue } from '@zendeskgarden/container-tabs';\r\n\r\ninterface ITabsContext extends IUseTabsReturnValue<any> {\r\n  tabIndexRef: MutableRefObject<number>;\r\n  tabPanelIndexRef: MutableRefObject<number>;\r\n}\r\n\r\nexport const TabsContext = createContext<ITabsContext | undefined>(undefined);\r\n\r\nexport const useTabsContext = () => {\r\n  return useContext(TabsContext);\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { ITagProps, Tag } from '@zendeskgarden/react-tags';\r\n\r\nexport interface IArgs extends ITagProps {\r\n  hasAvatar: boolean;\r\n  hasClose: boolean;\r\n}\r\n\r\nexport const TagStory: Story<IArgs> = ({ children, hasAvatar, hasClose, ...args }) => (\r\n  <Tag {...args} tabIndex={hasClose ? 0 : args.tabIndex}>\r\n    {hasAvatar && (\r\n      <Tag.Avatar>\r\n        <img alt=\"\" src={`images/avatars/${args.isPill ? 'user' : 'system'}.png`} />\r\n      </Tag.Avatar>\r\n    )}\r\n    {children}\r\n    {hasClose && <Tag.Close />}\r\n  </Tag>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { FauxInput } from '@zendeskgarden/react-forms';\r\nimport { IArgs as ITagStoryArgs, TagStory } from '../../stories/TagStory';\r\n\r\ninterface IArgs extends ITagStoryArgs {\r\n  tags: string[];\r\n  width: number;\r\n}\r\n\r\nexport const FauxInputStory: Story<IArgs> = ({ tags, width, ...args }) => (\r\n  <FauxInput isCompact={args.size !== 'large'} style={{ width: `${width}%` }}>\r\n    {tags.map((tag, index) => (\r\n      <TagStory key={index} {...args} tabIndex={0} style={{ margin: 2 }}>\r\n        <span>{tag}</span>\r\n      </TagStory>\r\n    ))}\r\n  </FauxInput>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nexport const FAUX_INPUT_TAGS = [\r\n  'veggies es bonus',\r\n  'beet greens corn soko endive',\r\n  'shallot courgette tatsoi pea sprouts',\r\n  'cauliflower',\r\n  'turnip yarrow ricebean rutabaga',\r\n  'celery quandong swiss chard chicory earthnut pea potato',\r\n  'grape wattle seed'\r\n];\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { StyledClose } from '../styled';\r\n\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nconst Close = React.forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>((props, ref) => (\r\n  <StyledClose ref={ref} {...props}>\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path stroke=\"currentColor\" strokeLinecap=\"round\" d=\"M3 13L13 3m0 10L3 3\"/>\r\n</svg>\r\n  </StyledClose>\r\n));\r\n\r\nClose.displayName = 'Close';\r\n\r\nexport default Close;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledTag, StyledAvatar } from '../styled';\r\nimport Close from './Close';\r\n\r\nexport interface ITagProps extends HTMLAttributes<HTMLDivElement> {\r\n  /** Adjusts font size and padding */\r\n  size?: 'small' | 'medium' | 'large';\r\n  /**\r\n   * Sets the color of the tag. Refer to\r\n   * [PALETTE](/components/palette#palette)\r\n   * for available colors. Accepts any hex value.\r\n   */\r\n  hue?: string;\r\n  /** Applies pill styling */\r\n  isPill?: boolean;\r\n  /** Applies styles to round the tag */\r\n  isRound?: boolean;\r\n  /** Applies regular (non-bold) font weight */\r\n  isRegular?: boolean;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nconst Tag = React.forwardRef<HTMLDivElement, ITagProps>(({ size, hue, ...otherProps }, ref) => (\r\n  <StyledTag ref={ref} size={size} hue={hue} {...otherProps} />\r\n));\r\n\r\nTag.displayName = 'Tag';\r\n\r\nTag.propTypes = {\r\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\r\n  hue: PropTypes.string,\r\n  isPill: PropTypes.bool,\r\n  isRound: PropTypes.bool,\r\n  isRegular: PropTypes.bool\r\n};\r\n\r\nTag.defaultProps = {\r\n  size: 'medium'\r\n};\r\n\r\n(Tag as any).Avatar = StyledAvatar;\r\n(Tag as any).Close = Close;\r\n\r\nexport default Tag as React.ForwardRefExoticComponent<\r\n  ITagProps & React.RefAttributes<HTMLDivElement>\r\n> & {\r\n  Avatar: typeof StyledAvatar;\r\n  Close: typeof Close;\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport React, { Children } from 'react';\r\nimport { DEFAULT_THEME, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'tags.avatar';\r\n\r\nexport const StyledAvatar = styled(({ children, ...props }) =>\r\n  React.cloneElement(Children.only(children), props)\r\n).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  flex-shrink: 0;\r\n  font-size: 0; /* text content reset */\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledAvatar.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { DEFAULT_THEME, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'tags.close';\r\n\r\nexport const StyledClose = styled.div.attrs<unknown>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  'aria-label': 'Press delete to remove'\r\n})`\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: opacity 0.25s ease-in-out;\r\n  opacity: 0.8;\r\n  border: 0; /* <button> element reset */\r\n  cursor: pointer;\r\n  padding: 0; /* <button> element reset */\r\n  font-size: 0; /* text content reset */\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledClose.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { math, readableColor } from 'polished';\r\nimport {\r\n  DEFAULT_THEME,\r\n  getColor,\r\n  retrieveComponentStyles,\r\n  getLineHeight\r\n} from '@zendeskgarden/react-theming';\r\nimport { StyledAvatar } from './StyledAvatar';\r\nimport { StyledClose } from './StyledClose';\r\n\r\nconst COMPONENT_ID = 'tags.tag_view';\r\n\r\nconst colorStyles = (props: IStyledTagProps & ThemeProps<DefaultTheme>) => {\r\n  let backgroundColor;\r\n  let boxShadowColor;\r\n  let foregroundColor;\r\n  let closeColor;\r\n\r\n  if (props.hue) {\r\n    const shade = props.hue === 'yellow' ? 400 : 600;\r\n\r\n    backgroundColor = getColor(props.hue, shade, props.theme);\r\n    boxShadowColor = getColor(props.hue, shade, props.theme, 0.35);\r\n\r\n    if (props.hue === 'yellow' || props.hue === 'lemon') {\r\n      foregroundColor = getColor('yellow', 800, props.theme);\r\n    } else {\r\n      foregroundColor = readableColor(\r\n        backgroundColor!,\r\n        props.theme.palette.grey[800],\r\n        props.theme.palette.white as string\r\n      );\r\n    }\r\n  } else {\r\n    backgroundColor = getColor('neutralHue', 200, props.theme);\r\n    boxShadowColor = getColor('neutralHue', 600, props.theme, 0.35);\r\n    foregroundColor = getColor('neutralHue', 700, props.theme);\r\n    closeColor = getColor('neutralHue', 600, props.theme);\r\n  }\r\n\r\n  return css`\r\n    background-color: ${backgroundColor};\r\n    color: ${foregroundColor};\r\n\r\n    &:hover {\r\n      color: ${foregroundColor}; /* <a> element reset */\r\n    }\r\n\r\n    /**\r\n     * Tags show their focus state regardless of\r\n     * whether it was performed by a mouse or keyboard.\r\n     **/\r\n    &:focus {\r\n      box-shadow: ${props.theme.shadows.sm(boxShadowColor!)};\r\n    }\r\n\r\n    & ${StyledClose} {\r\n      color: ${closeColor};\r\n    }\r\n  `;\r\n};\r\n\r\nconst sizeStyles = (props: IStyledTagProps & ThemeProps<DefaultTheme>) => {\r\n  let borderRadius;\r\n  let padding;\r\n  let height;\r\n  let fontSize;\r\n  let minWidth;\r\n  let avatarSize;\r\n\r\n  if (props.size === 'small') {\r\n    borderRadius = props.theme.borderRadii.sm;\r\n    padding = props.theme.space.base;\r\n    height = props.theme.space.base * 4;\r\n    fontSize = props.theme.fontSizes.xs;\r\n    avatarSize = 0;\r\n  } else if (props.size === 'large') {\r\n    borderRadius = props.theme.borderRadii.md;\r\n    padding = props.theme.space.base * 3;\r\n    height = props.theme.space.base * 8;\r\n    fontSize = props.theme.fontSizes.sm;\r\n    avatarSize = props.theme.space.base * 6;\r\n  } else {\r\n    borderRadius = props.theme.borderRadii.sm;\r\n    padding = props.theme.space.base * 2;\r\n    height = props.theme.space.base * 5;\r\n    fontSize = props.theme.fontSizes.sm;\r\n    avatarSize = props.theme.space.base * 4;\r\n  }\r\n\r\n  let avatarBorderRadius = props.size === 'large' ? math(`${borderRadius} - 1`) : borderRadius;\r\n  const avatarMargin = (height - avatarSize) / 2;\r\n  const avatarTextMargin = props.isRound ? avatarMargin : avatarMargin * 2;\r\n\r\n  if (props.isRound) {\r\n    borderRadius = '50%';\r\n    padding = 0;\r\n    minWidth = height;\r\n    avatarBorderRadius = '50%';\r\n  } else if (props.isPill) {\r\n    borderRadius = '100px';\r\n    avatarBorderRadius = '50%';\r\n\r\n    if (props.size === 'small') {\r\n      padding = props.theme.space.base * 1.5;\r\n      minWidth = props.theme.space.base * 6;\r\n    } else if (props.size === 'large') {\r\n      minWidth = props.theme.space.base * 12;\r\n    } else {\r\n      minWidth = props.theme.space.base * 7.5;\r\n    }\r\n  }\r\n\r\n  return css`\r\n    border-radius: ${borderRadius};\r\n    padding: 0 ${padding}px;\r\n    min-width: ${minWidth ? `${minWidth}px` : `calc(${padding * 2}px + 1ch)`};\r\n    height: ${height}px;\r\n    line-height: ${getLineHeight(height, fontSize)};\r\n    font-size: ${fontSize};\r\n\r\n    & > * {\r\n      width: 100%;\r\n      min-width: ${minWidth ? `${minWidth - padding * 2}px` : '1ch'};\r\n    }\r\n\r\n    & ${StyledAvatar} {\r\n      /* stylelint-disable-next-line property-no-unknown */\r\n      margin-${props.theme.rtl ? 'right' : 'left'}: -${padding - avatarMargin}px;\r\n      /* stylelint-disable-next-line property-no-unknown */\r\n      margin-${props.theme.rtl ? 'left' : 'right'}: ${avatarTextMargin}px;\r\n      border-radius: ${avatarBorderRadius};\r\n      width: ${avatarSize}px;\r\n      min-width: ${avatarSize}px; /* prevent flex shrink */\r\n      height: ${avatarSize}px;\r\n    }\r\n\r\n    & ${StyledClose} {\r\n      /* stylelint-disable-next-line property-no-unknown */\r\n      margin-${props.theme.rtl ? 'left' : 'right'}: -${padding}px;\r\n      border-radius: ${borderRadius};\r\n      width: ${height}px;\r\n      height: ${height}px;\r\n    }\r\n  `;\r\n};\r\n\r\ninterface IStyledTagProps {\r\n  hue?: string;\r\n  size?: 'small' | 'medium' | 'large';\r\n  isPill?: boolean;\r\n  isRound?: boolean;\r\n  isRegular?: boolean;\r\n}\r\n\r\nexport const StyledTag = styled.div.attrs<IStyledTagProps>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledTagProps>`\r\n  display: inline-flex;\r\n  flex-wrap: nowrap;\r\n  align-items: center;\r\n  justify-content: ${props => props.isRound && 'center'};\r\n  transition: box-shadow 0.1s ease-in-out;\r\n  box-sizing: border-box;\r\n  border: 0; /* <button> element reset */\r\n  max-width: 100%;\r\n  overflow: hidden;\r\n  vertical-align: middle;\r\n  text-decoration: none; /* <a> element reset */\r\n  white-space: nowrap;\r\n  font-weight: ${props => !props.isRegular && props.theme.fontWeights.semibold};\r\n  direction: ${props => (props.theme.rtl ? 'rtl' : 'ltr')};\r\n\r\n  ${props => sizeStyles(props)};\r\n\r\n  &:hover {\r\n    cursor: default;\r\n    text-decoration: none;\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:link:hover,\r\n  &:visited:hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:any-link:hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  &[data-garden-focus-visible] {\r\n    text-decoration: none;\r\n  }\r\n\r\n  ${props => colorStyles(props)};\r\n\r\n  & > * {\r\n    overflow: hidden;\r\n    text-align: center;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n  }\r\n\r\n  & b {\r\n    font-weight: ${props => props.theme.fontWeights.semibold};\r\n  }\r\n\r\n  & ${StyledAvatar} {\r\n    display: ${props => (props.isRound || props.size === 'small') && 'none'};\r\n  }\r\n\r\n  & ${StyledClose} {\r\n    display: ${props => props.isRound && 'none'};\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledTag.defaultProps = {\r\n  size: 'medium',\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Story } from '@storybook/react';\r\nimport { arrowStyles, getColor, DEFAULT_THEME, ARROW_POSITION } from '@zendeskgarden/react-theming';\r\n\r\ninterface IArgs {\r\n  position: ARROW_POSITION;\r\n  hasBoxShadow: boolean;\r\n  hasBorder: boolean;\r\n  isAnimated: boolean;\r\n  size: number;\r\n  inset: number;\r\n}\r\n\r\nconst StyledDiv = styled.div<Omit<IArgs, 'isAnimated'>>`\r\n  border: ${props => props.hasBorder && `${DEFAULT_THEME.borders.sm} ${getColor('primaryHue')}`};\r\n  box-shadow: ${props =>\r\n    props.hasBoxShadow &&\r\n    DEFAULT_THEME.shadows.lg('8px', '12px', getColor('chromeHue', 600, DEFAULT_THEME, 0.15)!)};\r\n  background-color: ${getColor('primaryHue', 200)};\r\n  padding: ${p => p.theme.space.xxl};\r\n\r\n  ${props =>\r\n    arrowStyles(props.position, {\r\n      size: `${props.size}px`,\r\n      inset: `${props.inset}px`,\r\n      animationModifier: '[data-garden-animate=\"true\"]'\r\n    })};\r\n`;\r\n\r\nexport const ArrowStylesStory: Story<IArgs> = ({ isAnimated, ...args }) => (\r\n  <div style={{ position: 'relative', zIndex: 0 }}>\r\n    <StyledDiv data-garden-animate={isAnimated} {...args} />\r\n  </div>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Story } from '@storybook/react';\r\nimport { DEFAULT_THEME, getColor } from '@zendeskgarden/react-theming';\r\n\r\ninterface IArgs {\r\n  hue: string;\r\n  shade: number;\r\n  transparency?: number;\r\n}\r\n\r\nconst StyledDiv = styled.div<IArgs>`\r\n  background-color: ${props =>\r\n    getColor(\r\n      props.hue,\r\n      props.shade,\r\n      DEFAULT_THEME,\r\n      props.transparency ? props.transparency / 100 : undefined\r\n    )};\r\n  height: 208px;\r\n`;\r\n\r\nexport const GetColorStory: Story<IArgs> = args => <StyledDiv {...args} />;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Story } from '@storybook/react';\r\nimport { Col, Grid, Row } from '@zendeskgarden/react-grid';\r\nimport { ToggleButton } from '@zendeskgarden/react-buttons';\r\nimport {\r\n  menuStyles,\r\n  arrowStyles,\r\n  MENU_POSITION,\r\n  ARROW_POSITION\r\n} from '@zendeskgarden/react-theming';\r\n\r\nconst TOP: Record<string, string> = {\r\n  right: 'calc(-50% - 8px)',\r\n  left: 'calc(-50% - 8px)'\r\n};\r\n\r\nconst RIGHT: Record<string, string> = {\r\n  left: '100%'\r\n};\r\n\r\nconst BOTTOM: Record<string, string> = {\r\n  top: '100%'\r\n};\r\n\r\nconst LEFT: Record<string, string> = {\r\n  right: '100%'\r\n};\r\n\r\nconst MENU_ARROW_MAPPING: Record<MENU_POSITION, ARROW_POSITION> = {\r\n  top: 'bottom',\r\n  right: 'left',\r\n  bottom: 'top',\r\n  left: 'right'\r\n};\r\n\r\n/* stylelint-disable declaration-no-important */\r\nconst StyledMenu = styled.div<{ position: MENU_POSITION }>`\r\n  display: flex !important;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100px;\r\n  height: 100px;\r\n\r\n  ${props =>\r\n    arrowStyles(MENU_ARROW_MAPPING[props.position], {\r\n      animationModifier: '[data-garden-animate=\"true\"]'\r\n    })};\r\n`;\r\n\r\nconst StyledWrapper = styled.div<{ position: MENU_POSITION; isHidden: boolean }>`\r\n  ${props =>\r\n    menuStyles(props.position, {\r\n      theme: props.theme,\r\n      hidden: props.isHidden,\r\n      margin: props.theme.space.xs,\r\n      animationModifier: '[data-garden-animate=\"true\"]'\r\n    })};\r\n`;\r\n\r\ninterface IArgs {\r\n  position: MENU_POSITION;\r\n  isAnimated: boolean;\r\n}\r\n\r\nexport const MenuStylesStory: Story<IArgs> = ({ isAnimated, position }) => {\r\n  const [isHidden, setIsHidden] = useState(true);\r\n\r\n  const style = {\r\n    top: TOP[position],\r\n    right: RIGHT[position],\r\n    bottom: BOTTOM[position],\r\n    left: LEFT[position]\r\n  };\r\n\r\n  return (\r\n    <Grid>\r\n      <Row style={{ height: 'calc(100vh - 80px)' }}>\r\n        <Col textAlign=\"center\" alignSelf=\"center\">\r\n          <div style={{ display: 'inline-block', position: 'relative' }}>\r\n            <ToggleButton onClick={() => setIsHidden(!isHidden)} isPressed={!isHidden}>\r\n              Trigger\r\n            </ToggleButton>\r\n            {!isHidden && (\r\n              <StyledWrapper\r\n                data-garden-animate={isAnimated}\r\n                position={position}\r\n                isHidden={isHidden}\r\n                style={style}\r\n              >\r\n                <StyledMenu data-garden-animate={isAnimated} position={position}>\r\n                  <span>Menu</span>\r\n                </StyledMenu>\r\n              </StyledWrapper>\r\n            )}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Grid>\r\n  );\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nexport const ARROW_POSITIONS = [\r\n  'top',\r\n  'top-left',\r\n  'top-right',\r\n  'right',\r\n  'right-top',\r\n  'right-bottom',\r\n  'bottom',\r\n  'bottom-left',\r\n  'bottom-right',\r\n  'left',\r\n  'left-top',\r\n  'left-bottom'\r\n];\r\n\r\nexport const MENU_POSITIONS = ['top', 'right', 'bottom', 'left'];\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useRef } from 'react';\r\nimport { ThemeProvider as StyledThemeProvider, ThemeProps } from 'styled-components';\r\nimport { useFocusVisible } from '@zendeskgarden/container-focusvisible';\r\nimport { getControlledValue } from '@zendeskgarden/container-utilities';\r\nimport DEFAULT_THEME, { IGardenTheme } from './theme';\r\nimport { useDocument } from '../utils/useDocument';\r\n\r\nexport interface IThemeProviderProps extends Partial<ThemeProps<IGardenTheme>> {\r\n  /**\r\n   * Provides values for component styling. See styled-components\r\n   * [`ThemeProvider`](https://styled-components.com/docs/api#themeprovider)\r\n   * for details.\r\n   */\r\n  theme?: IGardenTheme;\r\n  /**\r\n   * Provides a reference to the DOM node used to scope a `:focus-visible`\r\n   * polyfill. If left `undefined`, a scoping `<div>` will be rendered.\r\n   * Assigning `null` (on a nested `ThemeProvider`, for example) prevents the\r\n   * added polyfill and scoping `<div>`.\r\n   */\r\n  focusVisibleRef?: React.RefObject<HTMLElement> | null;\r\n}\r\n\r\nconst ThemeProvider: React.FunctionComponent<IThemeProviderProps> = ({\r\n  theme,\r\n  focusVisibleRef,\r\n  children,\r\n  ...other\r\n}) => {\r\n  const scopeRef = useRef<HTMLDivElement>(null);\r\n  const relativeDocument = useDocument(theme);\r\n  const controlledScopeRef =\r\n    focusVisibleRef === null\r\n      ? React.createRef<HTMLElement>()\r\n      : getControlledValue(focusVisibleRef, scopeRef)!;\r\n\r\n  useFocusVisible({ scope: controlledScopeRef, relativeDocument });\r\n\r\n  return (\r\n    <StyledThemeProvider theme={theme!} {...other}>\r\n      {focusVisibleRef === undefined ? (\r\n        <div ref={scopeRef}>{children as any}</div>\r\n      ) : (\r\n        (children as any)\r\n      )}\r\n    </StyledThemeProvider>\r\n  );\r\n};\r\n\r\nThemeProvider.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n\r\nexport default ThemeProvider;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n/** @ignore */\r\nconst PALETTE = {\r\n  black: '#000',\r\n  white: '#fff',\r\n  product: {\r\n    support: '#00a656',\r\n    message: '#37b8af',\r\n    explore: '#30aabc',\r\n    gather: '#f6c8be',\r\n    guide: '#ff6224',\r\n    connect: '#ff6224',\r\n    chat: '#f79a3e',\r\n    talk: '#efc93d',\r\n    sell: '#c38f00'\r\n  },\r\n\r\n  /* primary */\r\n  grey: {\r\n    100: '#f8f9f9',\r\n    200: '#e9ebed',\r\n    300: '#d8dcde',\r\n    400: '#c2c8cc',\r\n    500: '#87929d',\r\n    600: '#68737d',\r\n    700: '#49545c',\r\n    800: '#2f3941'\r\n  },\r\n  blue: {\r\n    100: '#edf7ff',\r\n    200: '#cee2f2',\r\n    300: '#adcce4',\r\n    400: '#5293c7',\r\n    500: '#337fbd',\r\n    600: '#1f73b7',\r\n    700: '#144a75',\r\n    800: '#0f3554'\r\n  },\r\n  red: {\r\n    100: '#fff0f1',\r\n    200: '#f5d5d8',\r\n    300: '#f5b5ba',\r\n    400: '#e35b66',\r\n    500: '#d93f4c',\r\n    600: '#cc3340',\r\n    700: '#8c232c',\r\n    800: '#681219'\r\n  },\r\n  yellow: {\r\n    100: '#fff7ed',\r\n    200: '#ffeedb',\r\n    300: '#fed6a8',\r\n    400: '#ffb057',\r\n    500: '#f79a3e',\r\n    600: '#ed8f1c',\r\n    700: '#ad5918',\r\n    800: '#703815'\r\n  },\r\n  green: {\r\n    100: '#edf8f4',\r\n    200: '#d1e8df',\r\n    300: '#aecfc2',\r\n    400: '#5eae91',\r\n    500: '#228f67',\r\n    600: '#038153',\r\n    700: '#186146',\r\n    800: '#0b3b29'\r\n  },\r\n  kale: {\r\n    100: '#f5fcfc',\r\n    200: '#daeded',\r\n    300: '#bdd9d7',\r\n    400: '#90bbbb',\r\n    500: '#467b7c',\r\n    600: '#17494d',\r\n    700: '#03363d',\r\n    800: '#012b30'\r\n  },\r\n\r\n  /* secondary */\r\n  fuschia: {\r\n    400: '#d653c2',\r\n    600: '#a81897',\r\n    M400: '#cf62a8',\r\n    M600: '#a8458c'\r\n  },\r\n  pink: {\r\n    400: '#ec4d63',\r\n    600: '#d42054',\r\n    M400: '#d57287',\r\n    M600: '#b23a5d'\r\n  },\r\n  crimson: {\r\n    400: '#e34f32',\r\n    600: '#c72a1c',\r\n    M400: '#cc6c5b',\r\n    M600: '#b24a3c'\r\n  },\r\n  orange: {\r\n    400: '#de701d',\r\n    600: '#bf5000',\r\n    M400: '#d4772c',\r\n    M600: '#b35827'\r\n  },\r\n  lemon: {\r\n    400: '#ffd424',\r\n    600: '#ffbb10',\r\n    M400: '#e7a500',\r\n    M600: '#c38f00'\r\n  },\r\n  lime: {\r\n    400: '#43b324',\r\n    600: '#2e8200',\r\n    M400: '#519e2d',\r\n    M600: '#47782c'\r\n  },\r\n  mint: {\r\n    400: '#00a656',\r\n    600: '#058541',\r\n    M400: '#299c66',\r\n    M600: '#2e8057'\r\n  },\r\n  teal: {\r\n    400: '#02a191',\r\n    600: '#028079',\r\n    M400: '#2d9e8f',\r\n    M600: '#3c7873'\r\n  },\r\n  azure: {\r\n    400: '#3091ec',\r\n    600: '#1371d6',\r\n    M400: '#5f8dcf',\r\n    M600: '#3a70b2'\r\n  },\r\n  royal: {\r\n    400: '#5d7df5',\r\n    600: '#3353e2',\r\n    M400: '#7986d8',\r\n    M600: '#4b61c3'\r\n  },\r\n  purple: {\r\n    400: '#b552e2',\r\n    600: '#6a27b8',\r\n    M400: '#b072cc',\r\n    M600: '#9358b0'\r\n  }\r\n};\r\n\r\n/** @component */\r\nexport default PALETTE;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport PALETTE from '../palette';\r\n\r\ntype Hue = Record<number | string, string> | string;\r\n\r\nexport interface IGardenTheme {\r\n  rtl: boolean;\r\n  document?: any;\r\n  borders: {\r\n    sm: string;\r\n    md: string;\r\n  };\r\n  borderRadii: {\r\n    sm: string;\r\n    md: string;\r\n  };\r\n  borderStyles: {\r\n    solid: string;\r\n  };\r\n  borderWidths: {\r\n    sm: string;\r\n    md: string;\r\n  };\r\n  breakpoints: {\r\n    xs: string;\r\n    sm: string;\r\n    md: string;\r\n    lg: string;\r\n    xl: string;\r\n  };\r\n  colors: {\r\n    base: 'light' | 'dark';\r\n    background: string;\r\n    foreground: string;\r\n    primaryHue: string;\r\n    dangerHue: string;\r\n    warningHue: string;\r\n    successHue: string;\r\n    neutralHue: string;\r\n    chromeHue: string;\r\n  };\r\n  components: Record<string, any>;\r\n  fonts: {\r\n    mono: string;\r\n    system: string;\r\n  };\r\n  fontSizes: {\r\n    xs: string;\r\n    sm: string;\r\n    md: string;\r\n    lg: string;\r\n    xl: string;\r\n    xxl: string;\r\n    xxxl: string;\r\n  };\r\n  fontWeights: {\r\n    thin: number;\r\n    extralight: number;\r\n    light: number;\r\n    regular: number;\r\n    medium: number;\r\n    semibold: number;\r\n    bold: number;\r\n    extrabold: number;\r\n    black: number;\r\n  };\r\n  iconSizes: {\r\n    sm: string;\r\n    md: string;\r\n    lg: string;\r\n  };\r\n  lineHeights: {\r\n    sm: string;\r\n    md: string;\r\n    lg: string;\r\n    xl: string;\r\n    xxl: string;\r\n    xxxl: string;\r\n  };\r\n  shadowWidths: {\r\n    sm: string;\r\n    md: string;\r\n  };\r\n  shadows: {\r\n    sm: (color: string) => string;\r\n    md: (color: string) => string;\r\n    lg: (offsetY: string, blurRadius: string, color: string) => string;\r\n  };\r\n  space: {\r\n    base: number;\r\n    xxs: string;\r\n    xs: string;\r\n    sm: string;\r\n    md: string;\r\n    lg: string;\r\n    xl: string;\r\n    xxl: string;\r\n  };\r\n  palette: Record<string, Hue>;\r\n}\r\n\r\nconst BASE = 4;\r\n\r\nconst borderRadii = {\r\n  sm: `${BASE / 2}px`,\r\n  md: `${BASE}px`\r\n};\r\n\r\nconst borderStyles = {\r\n  solid: 'solid'\r\n};\r\n\r\nconst borderWidths = {\r\n  sm: '1px',\r\n  md: '3px'\r\n};\r\n\r\nconst borders = {\r\n  sm: `${borderWidths.sm} ${borderStyles.solid}`,\r\n  md: `${borderWidths.md} ${borderStyles.solid}`\r\n};\r\n\r\nconst breakpoints = {\r\n  xs: '0px',\r\n  sm: `${BASE * 144}px`,\r\n  md: `${BASE * 192}px`,\r\n  lg: `${BASE * 248}px`,\r\n  xl: `${BASE * 300}px`\r\n};\r\n\r\nconst colors = {\r\n  background: PALETTE.white,\r\n  foreground: PALETTE.grey[800],\r\n  primaryHue: 'blue',\r\n  dangerHue: 'red',\r\n  warningHue: 'yellow',\r\n  successHue: 'green',\r\n  neutralHue: 'grey',\r\n  chromeHue: 'kale'\r\n};\r\n\r\nconst fonts = {\r\n  mono: [\r\n    'SFMono-Regular' /* macOS */,\r\n    'Consolas' /* Windows */,\r\n    '\"Liberation Mono\"' /* Ubuntu */,\r\n    'Menlo',\r\n    'Courier',\r\n    'monospace'\r\n  ].join(','),\r\n  system: [\r\n    'system-ui' /* drafts.csswg.org/css-fonts-4/#system-ui */,\r\n    '-apple-system' /* macOS Safari & FF (San Francisco) */,\r\n    'BlinkMacSystemFont' /* macOS Chrome (San Francisco) */,\r\n    '\"Segoe UI\"' /* Windows */,\r\n    'Roboto' /* Android & ChromeOS */,\r\n    'Oxygen-Sans' /* KDE */,\r\n    'Ubuntu' /* Ubuntu */,\r\n    'Cantarell' /* GNOME */,\r\n    '\"Helvetica Neue\"',\r\n    'Arial',\r\n    'sans-serif'\r\n  ].join(',')\r\n};\r\n\r\nconst fontSizes = {\r\n  xs: '10px',\r\n  sm: '12px',\r\n  md: '14px',\r\n  lg: '18px',\r\n  xl: '22px',\r\n  xxl: '26px',\r\n  xxxl: '36px'\r\n};\r\n\r\nconst fontWeights = {\r\n  thin: 100,\r\n  extralight: 200,\r\n  light: 300,\r\n  regular: 400,\r\n  medium: 500,\r\n  semibold: 600,\r\n  bold: 700,\r\n  extrabold: 800,\r\n  black: 900\r\n};\r\n\r\nconst iconSizes = {\r\n  sm: '12px',\r\n  md: '16px',\r\n  lg: '26px'\r\n};\r\n\r\nconst lineHeights = {\r\n  sm: `${BASE * 4}px`,\r\n  md: `${BASE * 5}px`,\r\n  lg: `${BASE * 6}px`,\r\n  xl: `${BASE * 7}px`,\r\n  xxl: `${BASE * 8}px`,\r\n  xxxl: `${BASE * 11}px`\r\n};\r\n\r\nconst palette = { ...PALETTE };\r\n\r\n/* Exclude product palette from the theme */\r\ndelete (palette as any).product;\r\n\r\nconst shadowWidths = {\r\n  sm: '2px',\r\n  md: '3px'\r\n};\r\n\r\nconst shadows = {\r\n  sm: (color: string) => `0 0 0 ${shadowWidths.sm} ${color}`,\r\n  md: (color: string) => `0 0 0 ${shadowWidths.md} ${color}`,\r\n  lg: (offsetY: string, blurRadius: string, color: string) =>\r\n    `0 ${offsetY} ${blurRadius} 0 ${color}`\r\n};\r\n\r\nconst space = {\r\n  base: BASE,\r\n  xxs: `${BASE}px`,\r\n  xs: `${BASE * 2}px`,\r\n  sm: `${BASE * 3}px`,\r\n  md: `${BASE * 5}px`,\r\n  lg: `${BASE * 8}px`,\r\n  xl: `${BASE * 10}px`,\r\n  xxl: `${BASE * 12}px`\r\n};\r\n\r\nconst DEFAULT_THEME: IGardenTheme = {\r\n  borders,\r\n  borderRadii,\r\n  borderStyles,\r\n  borderWidths,\r\n  breakpoints,\r\n  colors: {\r\n    base: 'light',\r\n    ...colors\r\n  },\r\n  components: {},\r\n  fonts,\r\n  fontSizes,\r\n  fontWeights,\r\n  iconSizes,\r\n  lineHeights,\r\n  palette,\r\n  rtl: false,\r\n  shadowWidths,\r\n  shadows,\r\n  space\r\n};\r\n\r\n/** @component */\r\nexport default DEFAULT_THEME;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { css, keyframes } from 'styled-components';\r\nimport { math } from 'polished';\r\n\r\nexport type ARROW_POSITION =\r\n  | 'top'\r\n  | 'top-left'\r\n  | 'top-right'\r\n  | 'right'\r\n  | 'right-top'\r\n  | 'right-bottom'\r\n  | 'bottom'\r\n  | 'bottom-left'\r\n  | 'bottom-right'\r\n  | 'left'\r\n  | 'left-top'\r\n  | 'left-bottom';\r\n\r\nexport type ARROW_OPTIONS = {\r\n  size?: string;\r\n  inset?: string;\r\n  animationModifier?: string;\r\n};\r\n\r\n// Workaround for https://github.com/styled-components/polished/issues/550\r\nexport const exponentialSymbols = {\r\n  symbols: {\r\n    sqrt: {\r\n      func: {\r\n        symbol: 'sqrt',\r\n        f: (a: number) => Math.sqrt(a),\r\n        notation: 'func',\r\n        precedence: 0,\r\n        rightToLeft: 0,\r\n        argCount: 1\r\n      },\r\n      symbol: 'sqrt',\r\n      regSymbol: 'sqrt\\\\b'\r\n    }\r\n  }\r\n};\r\n\r\nconst animationStyles = (position: ARROW_POSITION, modifier: string) => {\r\n  const property = position.split('-')[0];\r\n  /**\r\n   * 1. Prevent bleed-through on revised stacking context (i.e. parent transform)\r\n   */\r\n  const animationName = keyframes`\r\n    0%, 66% {\r\n      ${property}: 2px;\r\n      border: transparent; /* [1] */\r\n    }\r\n  `;\r\n\r\n  return css`\r\n    &${modifier}::before, &${modifier}::after {\r\n      animation: 0.3s ease-in-out ${animationName};\r\n    }\r\n  `;\r\n};\r\n\r\nconst positionStyles = (position: ARROW_POSITION, size: string, inset: string) => {\r\n  const margin = math(`${size} / -2`);\r\n  const placement = math(`${margin} + ${inset}`);\r\n  let clipPath;\r\n  let positionCss;\r\n  let propertyRadius: string;\r\n\r\n  if (position.startsWith('top')) {\r\n    propertyRadius = 'border-bottom-right-radius';\r\n    clipPath = 'polygon(100% 0, 100% 1px, 1px 100%, 0 100%, 0 0)';\r\n    positionCss = css`\r\n      top: ${placement};\r\n      right: ${position === 'top-right' && size};\r\n      left: ${position === 'top' ? '50%' : position === 'top-left' && size};\r\n      margin-left: ${position === 'top' && margin};\r\n    `;\r\n  } else if (position.startsWith('right')) {\r\n    propertyRadius = 'border-bottom-left-radius';\r\n    clipPath = 'polygon(100% 0, 100% 100%, calc(100% - 1px) 100%, 0 1px, 0 0)';\r\n    positionCss = css`\r\n      top: ${position === 'right' ? '50%' : position === 'right-top' && size};\r\n      right: ${placement};\r\n      bottom: ${position === 'right-bottom' && size};\r\n      margin-top: ${position === 'right' && margin};\r\n    `;\r\n  } else if (position.startsWith('bottom')) {\r\n    propertyRadius = 'border-top-left-radius';\r\n    clipPath = 'polygon(100% 0, calc(100% - 1px) 0, 0 calc(100% - 1px), 0 100%, 100% 100%)';\r\n    positionCss = css`\r\n      right: ${position === 'bottom-right' && size};\r\n      bottom: ${placement};\r\n      left: ${position === 'bottom' ? '50%' : position === 'bottom-left' && size};\r\n      margin-left: ${position === 'bottom' && margin};\r\n    `;\r\n  } else if (position.startsWith('left')) {\r\n    propertyRadius = 'border-top-right-radius';\r\n    clipPath = 'polygon(0 100%, 100% 100%, 100% calc(100% - 1px), 1px 0, 0 0)';\r\n    positionCss = css`\r\n      top: ${position === 'left' ? '50%' : position === 'left-top' && size};\r\n      bottom: ${size};\r\n      left: ${placement};\r\n      margin-top: ${position === 'left' && margin};\r\n    `;\r\n  }\r\n\r\n  /**\r\n   * 1. Round-off portion of the foreground square opposite the arrow tip\r\n   *    (improved layout for IE which doesn't support 'clip-path').\r\n   * 2. Clip portion of the foreground square opposite the arrow tip so that it\r\n   *    doesn't interfere with container content.\r\n   * 3. Arrow positioning on the base element.\r\n   */\r\n  return css`\r\n    &::before {\r\n      ${propertyRadius!}: 100%; /* [1] */\r\n      clip-path: ${clipPath}; /* [2] */\r\n    }\r\n\r\n    &::before,\r\n    &::after {\r\n      ${positionCss}/* [3] */\r\n    }\r\n  `;\r\n};\r\n\r\n/**\r\n * CSS for an arrow at the given position and with the given size. The arrow is\r\n * positioned via `::before` and `::after` pseudo-elements and inherits the\r\n * base element's border, background, and box-shadow.\r\n *\r\n * IMPORTANT: the element that receives arrow styling must be wrapped in a\r\n * positioned box (i.e. `relative`, `absolute`, `fixed`) that has a `z-index`\r\n * greater than or equal to zero. Without this, the arrow cannot properly\r\n * display inherited border or box-shadow styling.\r\n *\r\n * @param {string} position One of:\r\n *  - `'top'`\r\n *  - `'top-left'`\r\n *  - `'top-right'`\r\n *  - `'right'`\r\n *  - `'right-top'`\r\n *  - `'right-bottom'`\r\n *  - `'bottom'`\r\n *  - `'bottom-left'`\r\n *  - `'bottom-right'`\r\n *  - `'left'`\r\n *  - `'left-top'`\r\n *  - `'left-bottom'`\r\n * @param {string} [options.size='6px'] Distance from the base (hypotenuse) to point\r\n *  (right angle) of the arrow expressed as a CSS dimension.\r\n * @param {string} [options.inset='0'] Tweak arrow positioning by adjusting with\r\n *  either a positive (push the arrow in) or negative (pull the arrow out) value.\r\n * @param {string} [options.animationModifier] A CSS class or attribute selector\r\n *  which, when applied, animates the arrow's appearance.\r\n *\r\n * @component\r\n */\r\nexport default function arrowStyles(position: ARROW_POSITION, options: ARROW_OPTIONS = {}) {\r\n  const size = options.size || '6px';\r\n  const inset = options.inset || '0';\r\n  const squareSize = math(`${size} * 2 / sqrt(2)`, exponentialSymbols);\r\n\r\n  /**\r\n   * 1. Set base positioning for an element with an arrow.\r\n   * 2. Allow any border inherited by `::after` to show through.\r\n   * 3. Border styling and box-shadow will be automatically inherited from the\r\n   *    parent element.\r\n   * 4. Apply shared sizing properties to ::before and ::after.\r\n   */\r\n  return css`\r\n    position: relative; /* [1] */\r\n\r\n    &::before {\r\n      /* [2] */\r\n      border-width: inherit;\r\n      border-style: inherit;\r\n      border-color: transparent;\r\n      background-clip: content-box;\r\n    }\r\n\r\n    &::after {\r\n      /* [3] */\r\n      z-index: -1;\r\n      border: inherit;\r\n      box-shadow: inherit;\r\n    }\r\n\r\n    &::before,\r\n    &::after {\r\n      /* [4] */\r\n      position: absolute;\r\n      transform: rotate(45deg);\r\n      background-color: inherit;\r\n      box-sizing: inherit;\r\n      width: ${squareSize};\r\n      height: ${squareSize};\r\n      content: '';\r\n    }\r\n\r\n    ${positionStyles(position, squareSize, inset)};\r\n    ${options.animationModifier && animationStyles(position, options.animationModifier)};\r\n  `;\r\n}\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport DEFAULT_THEME from '../elements/theme';\r\nimport { darken, lighten, rgba } from 'polished';\r\nimport { DefaultTheme } from 'styled-components';\r\n\r\ntype Hue = Record<number | string, string> | string;\r\n\r\nconst DEFAULT_SHADE = 600;\r\n\r\nconst adjust = (color: string, expected: number, actual: number) => {\r\n  if (expected !== actual) {\r\n    // Adjust darkness/lightness if color is not the expected shade.\r\n    const amount = (Math.abs(expected - actual) / 100) * 0.05;\r\n\r\n    return expected > actual ? darken(amount, color) : lighten(amount, color);\r\n  }\r\n\r\n  return color;\r\n};\r\n\r\n/**\r\n * Get the palette color for the given hue, shade, and theme.\r\n *\r\n * @param {string|Object} hue A `theme.palette` hue or one of the following `theme.colors` keys:\r\n *  - `'primaryHue'` = `theme.colors.primaryHue`\r\n *  - `'dangerHue'` = `theme.colors.dangerHue`\r\n *  - `'warningHue'` = `theme.colors.warningHue`\r\n *  - `'successHue'` = `theme.colors.successHue`\r\n *  - `'neutralHue'` = `theme.colors.neutralHue`\r\n *  - `'chromeHue'` = `theme.colors.chromeHue`\r\n * @param {number} [shade=DEFAULT_SHADE] A hue shade.\r\n * @param {Object} theme Context `theme` object.\r\n * @param {Number} [transparency] An alpha-channel value between 0 and 1.\r\n *\r\n * @component\r\n */\r\nexport default function getColor(\r\n  hue: Hue,\r\n  shade: number = DEFAULT_SHADE,\r\n  theme?: DefaultTheme,\r\n  transparency?: number\r\n) {\r\n  let retVal;\r\n\r\n  if (isNaN(shade)) {\r\n    return undefined;\r\n  }\r\n\r\n  const palette = theme && theme.palette ? theme.palette : DEFAULT_THEME.palette;\r\n  const colors = theme && theme.colors ? theme.colors : DEFAULT_THEME.colors;\r\n\r\n  let _hue: Hue;\r\n\r\n  if (typeof hue === 'string') {\r\n    _hue = (colors as any)[hue] || hue;\r\n  } else {\r\n    _hue = hue;\r\n  }\r\n\r\n  if (Object.prototype.hasOwnProperty.call(palette, _hue as string)) {\r\n    // Convert string to a palette hue object.\r\n    _hue = palette[_hue as string];\r\n  }\r\n\r\n  if (typeof _hue === 'object') {\r\n    retVal = _hue[shade];\r\n\r\n    if (!retVal) {\r\n      const _shade = Object.keys(_hue)\r\n        .map(hueKey => parseInt(hueKey, 10))\r\n        .reduce((previous, current) => {\r\n          // Find the closest available shade within the given hue.\r\n          return Math.abs(current - shade) < Math.abs(previous - shade) ? current : previous;\r\n        });\r\n\r\n      retVal = adjust(_hue[_shade], shade, _shade);\r\n    }\r\n  } else {\r\n    retVal = adjust(_hue, shade, DEFAULT_SHADE);\r\n  }\r\n\r\n  if (transparency) {\r\n    retVal = rgba(retVal, transparency);\r\n  }\r\n\r\n  return retVal;\r\n}\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { getValueAndUnit } from 'polished';\r\n\r\n/**\r\n * Get unitless line height based on the given pixel-valued height and font size.\r\n *\r\n * @param {string|number} height Desired line height in pixels.\r\n * @param {string|number} fontSize Font size (in pixels) of text contained within the line.\r\n *\r\n * @component\r\n */\r\nexport default function getLineHeight(height: string | number, fontSize: string | number) {\r\n  const [heightValue, heightUnit] = getValueAndUnit(height.toString());\r\n  const [fontSizeValue, fontSizeUnit] = getValueAndUnit(fontSize.toString());\r\n  const PIXELS = 'px';\r\n\r\n  if (heightUnit && heightUnit !== PIXELS) {\r\n    throw new Error(`Unexpected \\`height\\` with '${heightUnit}' units.`);\r\n  }\r\n\r\n  if (fontSizeUnit && fontSizeUnit !== PIXELS) {\r\n    throw new Error(`Unexpected \\`fontSize\\` with '${fontSizeUnit}' units.`);\r\n  }\r\n\r\n  return (heightValue as number) / (fontSizeValue as number);\r\n}\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { ThemeProps, DefaultTheme } from 'styled-components';\r\n\r\n/** @component */\r\nexport default function isRtl({ theme }: Partial<ThemeProps<Partial<DefaultTheme>>> = {}) {\r\n  return Boolean(theme && theme.rtl);\r\n}\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { css, DefaultTheme, keyframes } from 'styled-components';\r\nimport getColor from './getColor';\r\nimport DEFAULT_THEME from '../elements/theme';\r\n\r\nexport type MENU_POSITION = 'top' | 'right' | 'bottom' | 'left';\r\n\r\nexport type MENU_OPTIONS = {\r\n  theme?: DefaultTheme;\r\n  hidden?: boolean;\r\n  margin?: string;\r\n  zIndex?: number;\r\n  animationModifier?: string;\r\n  childSelector?: string;\r\n};\r\n\r\nconst animationStyles = (position: MENU_POSITION, options: MENU_OPTIONS) => {\r\n  const theme = options.theme || DEFAULT_THEME;\r\n  let translateValue = `${theme.space.base * 5}px`;\r\n  let transformFunction;\r\n\r\n  if (position === 'top') {\r\n    transformFunction = 'translateY';\r\n  } else if (position === 'right') {\r\n    transformFunction = 'translateX';\r\n    translateValue = `-${translateValue}`;\r\n  } else if (position === 'bottom') {\r\n    transformFunction = 'translateY';\r\n    translateValue = `-${translateValue}`;\r\n  } else {\r\n    transformFunction = 'translateX';\r\n  }\r\n\r\n  const animationName = keyframes`\r\n    0% {\r\n      /* stylelint-disable-next-line function-name-case */\r\n      transform: ${transformFunction}(${translateValue});\r\n    }\r\n  `;\r\n\r\n  return css`\r\n    &${options.animationModifier} ${options.childSelector || '> *'} {\r\n      animation: 0.2s cubic-bezier(0.15, 0.85, 0.35, 1.2) ${animationName};\r\n    }\r\n  `;\r\n};\r\n\r\nconst hiddenStyles = (options: MENU_OPTIONS) => {\r\n  const transition = 'opacity 0.2s ease-in-out, 0.2s visibility 0s linear';\r\n\r\n  return css`\r\n    transition: ${options.animationModifier && transition};\r\n    visibility: hidden;\r\n    opacity: 0;\r\n  `;\r\n};\r\n\r\n/**\r\n * CSS for a `wrapper > menu` at the given position. The wrapper provides\r\n * absolute positioning (e.g. via Popper). The menu provides basic styling and\r\n * optional animation.\r\n *\r\n * @param {string} position One of:\r\n *  - `'top'`\r\n *  - `'right'`\r\n *  - `'bottom'`\r\n *  - `'left'`\r\n * @param {Object} [options.theme=`DEFAULT_THEME`] Context theme object.\r\n * @param {boolean} [options.hidden] Determine whether the menu is hidden.\r\n * @param {string} [options.margin] Amount of margin between menu and trigger.\r\n * @param {number} [options.zIndex] The menu wrapper's z-index.\r\n * @param {string} [options.childSelector=`> *`] A CSS selector that identifies the\r\n *  child menu component.\r\n * @param {string} [options.animationModifier] A CSS class or attribute selector\r\n *  which, when applied, animates the menu's appearance.\r\n */\r\nexport default function menuStyles(position: MENU_POSITION, options: MENU_OPTIONS = {}) {\r\n  const theme = options.theme || DEFAULT_THEME;\r\n  let marginProperty;\r\n\r\n  if (position === 'top') {\r\n    marginProperty = 'margin-bottom';\r\n  } else if (position === 'right') {\r\n    marginProperty = 'margin-left';\r\n  } else if (position === 'bottom') {\r\n    marginProperty = 'margin-top';\r\n  } else {\r\n    marginProperty = 'margin-right';\r\n  }\r\n\r\n  /**\r\n   * 1. Popper requires a non-zero font-size to calculate initial placement.\r\n   * 2. Positioned relative to controlling item.\r\n   * 3. Browser list element reset.\r\n   * 4. Prevent controlling item cursor inheritance.\r\n   * 5. Prevent controlling item whitespace inheritance.\r\n   */\r\n  return css`\r\n    position: absolute;\r\n    z-index: ${options.zIndex || 0};\r\n    ${marginProperty}: ${options.margin};\r\n    line-height: 0;\r\n    font-size: 0.01px; /* [1] */\r\n\r\n    & ${options.childSelector || '> *'} {\r\n      display: inline-block;\r\n      position: relative; /* [2] */\r\n      margin: 0; /* [3] */\r\n      box-sizing: border-box;\r\n      border: ${theme.borders.sm} ${getColor('neutralHue', 300, theme)};\r\n      border-radius: ${theme.borderRadii.md};\r\n      box-shadow: ${theme.shadows.lg(\r\n        `${theme.space.base * 5}px`,\r\n        `${theme.space.base * 7.5}px`,\r\n        getColor('chromeHue', 600, theme, 0.15)!\r\n      )};\r\n      background-color: ${theme.colors.background};\r\n      cursor: default; /* [4] */\r\n      padding: 0; /* [3] */\r\n      text-align: ${theme.rtl ? 'right' : 'left'};\r\n      white-space: normal; /* [5] */\r\n      font-size: ${theme.fontSizes.md};\r\n      font-weight: ${theme.fontWeights.regular};\r\n      direction: ${theme.rtl && 'rtl'};\r\n\r\n      :focus {\r\n        outline: none;\r\n      }\r\n    }\r\n\r\n    ${options.animationModifier && animationStyles(position, options)};\r\n    ${options.hidden && hiddenStyles(options)};\r\n  `;\r\n}\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { ThemeProps, DefaultTheme } from 'styled-components';\r\n\r\n/** @component */\r\nexport default function retrieveComponentStyles(\r\n  componentId: string,\r\n  props: Partial<ThemeProps<Partial<DefaultTheme>>>\r\n) {\r\n  const components = props.theme && props.theme.components;\r\n\r\n  if (!components) {\r\n    return undefined;\r\n  }\r\n\r\n  const componentStyles = components[componentId];\r\n\r\n  if (typeof componentStyles === 'function') {\r\n    return componentStyles(props);\r\n  }\r\n\r\n  return componentStyles;\r\n}\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { DefaultTheme } from 'styled-components';\r\n\r\nexport const useDocument = (theme?: Partial<DefaultTheme>) => {\r\n  const [controlledDocument, setControlledDocument] = useState<Document>();\r\n\r\n  /**\r\n   * Only reference `document` after initial render to support SSR environments\r\n   */\r\n  useEffect(() => {\r\n    if (theme && theme.document) {\r\n      setControlledDocument(theme.document);\r\n    } else {\r\n      setControlledDocument(document);\r\n    }\r\n  }, [theme]);\r\n\r\n  return controlledDocument;\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { PALETTE } from '@zendeskgarden/react-theming';\r\nimport { Col, Grid, Row } from '@zendeskgarden/react-grid';\r\nimport { ITooltipProps, Paragraph, Title, Tooltip } from '@zendeskgarden/react-tooltips';\r\nimport { ITooltipContent } from './types';\r\n\r\ninterface IArgs extends ITooltipProps {\r\n  content: ITooltipContent;\r\n}\r\n\r\nexport const TooltipStory: Story<IArgs> = ({ content, ...args }: IArgs) => (\r\n  <Grid>\r\n    <Row style={{ height: 'calc(100vh - 80px)' }}>\r\n      <Col textAlign=\"center\" alignSelf=\"center\">\r\n        <Tooltip\r\n          {...args}\r\n          content={\r\n            <>\r\n              <Title>{content.title}</Title>\r\n              <Paragraph>{content.paragraph}</Paragraph>\r\n            </>\r\n          }\r\n        >\r\n          <span style={{ backgroundColor: PALETTE.grey[100], padding: '1em' }}>Target</span>\r\n        </Tooltip>\r\n      </Col>\r\n    </Row>\r\n  </Grid>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { ITooltipContent } from './types';\r\n\r\nexport const TOOLTIP_CONTENT: ITooltipContent = {\r\n  title: 'Title text',\r\n  paragraph: 'Veggies es bonus'\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { StyledParagraph } from '../styled';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLParagraphElement>\r\n */\r\nexport const Paragraph = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  HTMLAttributes<HTMLParagraphElement>\r\n>((props, ref) => <StyledParagraph ref={ref} {...props} />);\r\n\r\nParagraph.displayName = 'Paragraph';\r\n\r\nexport default Paragraph;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { StyledTitle } from '../styled';\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Title = React.forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  (props, ref) => <StyledTitle ref={ref} {...props} />\r\n);\r\n\r\nTitle.displayName = 'Title';\r\n\r\nexport default Title;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { cloneElement, useRef, useEffect, useContext } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeContext } from 'styled-components';\r\nimport mergeRefs from 'react-merge-refs';\r\nimport { useTooltip } from '@zendeskgarden/container-tooltip';\r\nimport { composeEventHandlers, getControlledValue } from '@zendeskgarden/container-utilities';\r\nimport { Manager, Popper, Reference } from 'react-popper';\r\nimport { Modifiers } from 'popper.js';\r\n\r\nimport {\r\n  getPopperPlacement,\r\n  getRtlPopperPlacement,\r\n  GARDEN_PLACEMENT\r\n} from '../utils/gardenPlacements';\r\nimport { StyledTooltipWrapper, StyledTooltip, TOOLTIP_SIZE, TOOLTIP_TYPE } from '../styled';\r\n\r\nexport interface ITooltipProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  /** Appends the tooltip to the element provided */\r\n  appendToNode?: Element;\r\n  /** Adds an arrow to the tooltip */\r\n  hasArrow?: boolean;\r\n  /** Adds milliseconds of delay to the opening and closing of the tooltip */\r\n  delayMS?: number;\r\n  /** Allows the tooltip to reposition during browser resize events */\r\n  eventsEnabled?: boolean;\r\n  /** Sets the ID of the tooltip */\r\n  id?: string;\r\n  /** Defines the content of the tooltip */\r\n  content: React.ReactNode;\r\n  /**\r\n   * Adjusts the placement of the tooltip\r\n   **/\r\n  placement?: GARDEN_PLACEMENT;\r\n  /** Passes configurations to the [Popper instance](https://popper.js.org/docs/v2/modifiers/) */\r\n  popperModifiers?: Modifiers;\r\n  /** Adjusts the padding and font size */\r\n  size?: TOOLTIP_SIZE;\r\n  /** Specifies the tooltip type */\r\n  type?: TOOLTIP_TYPE;\r\n  /** Sets the `z-index` of the tooltip */\r\n  zIndex?: number | string;\r\n  /** Displays the tooltip on initial render */\r\n  isInitialVisible?: boolean;\r\n  /** Displays the tooltip */\r\n  isVisible?: boolean;\r\n  children: React.ReactElement;\r\n  /** Defines the ref key used to position the tooltip */\r\n  refKey?: string;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nexport const Tooltip: React.FC<ITooltipProps> = ({\r\n  id,\r\n  delayMS,\r\n  isInitialVisible,\r\n  content,\r\n  refKey,\r\n  placement,\r\n  eventsEnabled,\r\n  popperModifiers,\r\n  children,\r\n  hasArrow,\r\n  size,\r\n  type,\r\n  appendToNode,\r\n  zIndex,\r\n  isVisible: externalIsVisible,\r\n  ...otherProps\r\n}) => {\r\n  const theme = useContext(ThemeContext);\r\n  const scheduleUpdateRef = useRef<() => void>();\r\n  const { isVisible, getTooltipProps, getTriggerProps, openTooltip, closeTooltip } = useTooltip({\r\n    id,\r\n    delayMilliseconds: delayMS,\r\n    isVisible: isInitialVisible\r\n  });\r\n\r\n  const controlledIsVisible = getControlledValue(externalIsVisible, isVisible);\r\n\r\n  /**\r\n   * Recalculate popper placement when open to allow animations to complete.\r\n   **/\r\n  useEffect(() => {\r\n    if (controlledIsVisible && scheduleUpdateRef.current) {\r\n      scheduleUpdateRef.current();\r\n    }\r\n  }, [controlledIsVisible, content]);\r\n\r\n  const popperPlacement = theme.rtl\r\n    ? getRtlPopperPlacement(placement!)\r\n    : getPopperPlacement(placement!);\r\n\r\n  const singleChild = React.Children.only<\r\n    React.ReactElement & React.RefAttributes<HTMLButtonElement>\r\n  >(children);\r\n\r\n  /**\r\n   * By default PopperJS treats an overflow container as its boundary.\r\n   * It is much more common to want the parent window to determine\r\n   * the overflow boundary.\r\n   */\r\n  const modifiers: Modifiers = {\r\n    preventOverflow: {\r\n      boundariesElement: 'window'\r\n    },\r\n    ...popperModifiers\r\n  };\r\n\r\n  return (\r\n    <Manager>\r\n      <Reference>\r\n        {({ ref }) => {\r\n          return cloneElement(\r\n            singleChild,\r\n            getTriggerProps({\r\n              ...singleChild.props,\r\n              [refKey!]: mergeRefs([ref, singleChild.ref ? singleChild.ref : null])\r\n            })\r\n          );\r\n        }}\r\n      </Reference>\r\n      <Popper\r\n        placement={popperPlacement}\r\n        eventsEnabled={controlledIsVisible && eventsEnabled}\r\n        modifiers={modifiers}\r\n      >\r\n        {({ ref, style, scheduleUpdate, placement: currentPlacement }) => {\r\n          scheduleUpdateRef.current = scheduleUpdate;\r\n\r\n          const { onFocus, onBlur, ...otherTooltipProps } = otherProps;\r\n\r\n          let computedSize: TOOLTIP_SIZE | undefined = size;\r\n\r\n          if (computedSize === undefined) {\r\n            if (type === 'dark') {\r\n              computedSize = 'small';\r\n            } else {\r\n              computedSize = 'large';\r\n            }\r\n          }\r\n\r\n          const tooltipProps = {\r\n            hasArrow,\r\n            placement: currentPlacement,\r\n            size: computedSize,\r\n            onFocus: composeEventHandlers(onFocus, () => {\r\n              openTooltip();\r\n            }),\r\n            onBlur: composeEventHandlers(onBlur, () => {\r\n              closeTooltip(0);\r\n            }),\r\n            'aria-hidden': !controlledIsVisible,\r\n            type,\r\n            ...otherTooltipProps\r\n          };\r\n\r\n          const tooltip = (\r\n            <StyledTooltipWrapper\r\n              ref={controlledIsVisible ? ref : null}\r\n              style={style}\r\n              zIndex={zIndex}\r\n              aria-hidden={!controlledIsVisible}\r\n            >\r\n              <StyledTooltip {...(getTooltipProps(tooltipProps) as any)}>{content}</StyledTooltip>\r\n            </StyledTooltipWrapper>\r\n          );\r\n\r\n          if (appendToNode) {\r\n            return createPortal(tooltip, appendToNode);\r\n          }\r\n\r\n          return tooltip;\r\n        }}\r\n      </Popper>\r\n    </Manager>\r\n  );\r\n};\r\n\r\nTooltip.displayName = 'Tooltip';\r\n\r\nTooltip.propTypes = {\r\n  appendToNode: PropTypes.any,\r\n  hasArrow: PropTypes.bool,\r\n  delayMS: PropTypes.number,\r\n  eventsEnabled: PropTypes.bool,\r\n  id: PropTypes.string,\r\n  content: PropTypes.node.isRequired,\r\n  placement: PropTypes.oneOf([\r\n    'auto',\r\n    'top',\r\n    'top-start',\r\n    'top-end',\r\n    'end',\r\n    'end-top',\r\n    'end-bottom',\r\n    'bottom',\r\n    'bottom-start',\r\n    'bottom-end',\r\n    'start',\r\n    'start-top',\r\n    'start-bottom'\r\n  ]),\r\n  popperModifiers: PropTypes.any,\r\n  size: PropTypes.oneOf(['small', 'medium', 'large', 'extra-large']),\r\n  type: PropTypes.oneOf(['light', 'dark']),\r\n  zIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  isInitialVisible: PropTypes.bool,\r\n  refKey: PropTypes.string\r\n};\r\n\r\nTooltip.defaultProps = {\r\n  hasArrow: true,\r\n  eventsEnabled: true,\r\n  type: 'dark',\r\n  placement: 'top',\r\n  delayMS: 500,\r\n  refKey: 'ref'\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'tooltip.paragraph';\r\n\r\n/**\r\n * Accepts all `<p>` props\r\n */\r\nexport const StyledParagraph = styled.p.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  margin: 0;\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledParagraph.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { retrieveComponentStyles, DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'tooltip.title';\r\n\r\n/**\r\n * Accepts all `<div>` props\r\n */\r\nexport const StyledTitle = styled.strong.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  display: none;\r\n  margin: 0;\r\n  font-weight: ${props => props.theme.fontWeights.semibold};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledTitle.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, DefaultTheme, ThemeProps } from 'styled-components';\r\nimport {\r\n  arrowStyles,\r\n  retrieveComponentStyles,\r\n  getColor,\r\n  DEFAULT_THEME,\r\n  getLineHeight\r\n} from '@zendeskgarden/react-theming';\r\n\r\nimport { POPPER_PLACEMENT, getArrowPosition } from '../utils/gardenPlacements';\r\nimport { StyledParagraph } from './StyledParagraph';\r\nimport { StyledTitle } from './StyledTitle';\r\n\r\nconst COMPONENT_ID = 'tooltip.tooltip';\r\n\r\nexport type TOOLTIP_SIZE = 'small' | 'medium' | 'large' | 'extra-large';\r\nexport type TOOLTIP_TYPE = 'light' | 'dark';\r\n\r\nexport interface IStyledTooltipProps {\r\n  hasArrow?: boolean;\r\n  size?: TOOLTIP_SIZE;\r\n  /** All valid [Popper.JS Placements](https://popper.js.org/popper-documentation.html#Popper.placements) */\r\n  placement: POPPER_PLACEMENT;\r\n  zIndex?: number | string;\r\n  type: TOOLTIP_TYPE;\r\n}\r\n\r\nconst sizeStyles = ({\r\n  theme,\r\n  size,\r\n  type,\r\n  placement,\r\n  hasArrow\r\n}: IStyledTooltipProps & ThemeProps<DefaultTheme>) => {\r\n  let margin = `${theme.space.base * 1.5}px`;\r\n  let borderRadius = theme.borderRadii.sm;\r\n  let padding = '0 1em';\r\n  let maxWidth;\r\n  let overflowWrap;\r\n  let whiteSpace = 'nowrap';\r\n  let lineHeight = getLineHeight(theme.space.base * 5, theme.fontSizes.sm);\r\n  let fontSize = theme.fontSizes.sm;\r\n  let titleDisplay;\r\n  let paragraphMarginTop;\r\n  let wordWrap;\r\n\r\n  if (size !== 'small') {\r\n    borderRadius = theme.borderRadii.md;\r\n    overflowWrap = 'break-word';\r\n    whiteSpace = 'normal';\r\n    wordWrap = 'break-word';\r\n  }\r\n\r\n  if (size === 'extra-large') {\r\n    padding = `${theme.space.base * 10}px`;\r\n    maxWidth = `460px`;\r\n    lineHeight = getLineHeight(theme.space.base * 5, theme.fontSizes.md);\r\n    paragraphMarginTop = `${theme.space.base * 2.5}px`;\r\n  } else if (size === 'large') {\r\n    padding = `${theme.space.base * 5}px`;\r\n    maxWidth = `270px`;\r\n    lineHeight = getLineHeight(theme.space.base * 5, theme.fontSizes.md);\r\n    paragraphMarginTop = `${theme.space.base * 2}px`;\r\n  } else if (size === 'medium') {\r\n    padding = '1em';\r\n    maxWidth = `140px`;\r\n    lineHeight = getLineHeight(theme.space.base * 4, theme.fontSizes.sm);\r\n  }\r\n\r\n  if (size === 'extra-large' || size === 'large') {\r\n    fontSize = theme.fontSizes.md;\r\n    titleDisplay = 'block';\r\n  }\r\n\r\n  let arrowSize;\r\n  let arrowInset;\r\n\r\n  if (hasArrow) {\r\n    if (size === 'small' || size === 'medium') {\r\n      arrowSize = margin;\r\n      arrowInset = type === 'dark' ? '1px' : '0';\r\n    } else {\r\n      arrowInset = type === 'dark' ? '2px' : '1px';\r\n\r\n      if (size === 'large') {\r\n        margin = `${theme.space.base * 2}px`;\r\n        arrowSize = margin;\r\n      } else if (size === 'extra-large') {\r\n        margin = `${theme.space.base * 3}px`;\r\n        arrowSize = `${theme.space.base * 2.5}px`;\r\n      }\r\n    }\r\n  }\r\n\r\n  return css`\r\n    margin: ${margin};\r\n    border-radius: ${borderRadius};\r\n    padding: ${padding};\r\n    max-width: ${maxWidth};\r\n    line-height: ${lineHeight};\r\n    word-wrap: ${wordWrap};\r\n    white-space: ${whiteSpace};\r\n    font-size: ${fontSize};\r\n    overflow-wrap: ${overflowWrap};\r\n\r\n    ${hasArrow && arrowStyles(getArrowPosition(placement), { size: arrowSize, inset: arrowInset })};\r\n\r\n    ${StyledParagraph} {\r\n      margin-top: ${paragraphMarginTop};\r\n    }\r\n\r\n    ${StyledTitle} {\r\n      display: ${titleDisplay};\r\n    }\r\n  `;\r\n};\r\n\r\nconst colorStyles = ({ theme, type }: IStyledTooltipProps & ThemeProps<DefaultTheme>) => {\r\n  let border;\r\n  let boxShadow = theme.shadows.lg(\r\n    `${theme.space.base}px`,\r\n    `${theme.space.base * 2}px`,\r\n    getColor('chromeHue', 600, theme, 0.15)!\r\n  );\r\n  let backgroundColor = getColor('chromeHue', 700, theme);\r\n  let color = theme.colors.background;\r\n  let titleColor;\r\n\r\n  if (type === 'light') {\r\n    boxShadow = theme.shadows.lg(\r\n      `${theme.space.base * 3}px`,\r\n      `${theme.space.base * 5}px`,\r\n      getColor('chromeHue', 600, theme, 0.15)!\r\n    );\r\n    border = `${theme.borders.sm} ${getColor('neutralHue', 300, theme)}`;\r\n    backgroundColor = theme.colors.background;\r\n    color = getColor('neutralHue', 700, theme)!;\r\n    titleColor = theme.colors.foreground;\r\n  }\r\n\r\n  return css`\r\n    border: ${border};\r\n    box-shadow: ${boxShadow};\r\n    background-color: ${backgroundColor};\r\n    color: ${color};\r\n\r\n    ${StyledTitle} {\r\n      color: ${titleColor};\r\n    }\r\n  `;\r\n};\r\n\r\n/**\r\n * Accepts all `<div>` props\r\n */\r\nexport const StyledTooltip = styled.div.attrs<IStyledTooltipProps>({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledTooltipProps>`\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  direction: ${props => props.theme.rtl && 'rtl'};\r\n  text-align: ${props => (props.theme.rtl ? 'right' : 'left')};\r\n  font-weight: ${props => props.theme.fontWeights.regular};\r\n\r\n  ${props => sizeStyles(props)};\r\n\r\n  &[aria-hidden='true'] {\r\n    display: none;\r\n  }\r\n\r\n  ${colorStyles};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledTooltip.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { DEFAULT_THEME } from '@zendeskgarden/react-theming';\r\n\r\n/**\r\n * This wrapper allows the StyledTooltip to retain it's relative positioning.\r\n * Without this container Popper would apply absolute positioning directly to\r\n * the StyledTooltip which impacts arrow styling.\r\n *\r\n * 1. This wrapper also includes an opacity transition. It allows Popper to\r\n * reposition the tooltip without having a visible shift. The transition\r\n * is fast enough that it should not be perceptible.\r\n */\r\nexport const StyledTooltipWrapper = styled.div<{ zIndex?: number | string }>`\r\n  /* stylelint-disable-next-line time-min-milliseconds */\r\n  transition: opacity 10ms; /* [1] */\r\n  opacity: 1;\r\n  z-index: ${props => props.zIndex};\r\n\r\n  &[aria-hidden='true'] {\r\n    visibility: hidden;\r\n    opacity: 0;\r\n  }\r\n`;\r\n\r\nStyledTooltipWrapper.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { ARROW_POSITION } from '@zendeskgarden/react-theming';\r\n\r\ntype SHARED_PLACEMENT =\r\n  | 'auto'\r\n  | 'top'\r\n  | 'top-start'\r\n  | 'top-end'\r\n  | 'bottom'\r\n  | 'bottom-start'\r\n  | 'bottom-end';\r\n\r\nexport type GARDEN_PLACEMENT =\r\n  | SHARED_PLACEMENT\r\n  | 'end'\r\n  | 'end-top'\r\n  | 'end-bottom'\r\n  | 'start'\r\n  | 'start-top'\r\n  | 'start-bottom';\r\n\r\nexport type POPPER_PLACEMENT =\r\n  | SHARED_PLACEMENT\r\n  | 'right'\r\n  | 'right-start'\r\n  | 'right-end'\r\n  | 'left'\r\n  | 'left-start'\r\n  | 'left-end';\r\n\r\n/**\r\n * Convert Garden RTL aware placement to Popper.JS valid placement\r\n * @param {String} gardenPlacement\r\n */\r\nexport function getPopperPlacement(gardenPlacement: GARDEN_PLACEMENT) {\r\n  const gardenToPopperMapping: Record<GARDEN_PLACEMENT, POPPER_PLACEMENT> = {\r\n    auto: 'auto',\r\n    top: 'top',\r\n    'top-start': 'top-start',\r\n    'top-end': 'top-end',\r\n    bottom: 'bottom',\r\n    'bottom-start': 'bottom-start',\r\n    'bottom-end': 'bottom-end',\r\n    end: 'right',\r\n    'end-top': 'right-start',\r\n    'end-bottom': 'right-end',\r\n    start: 'left',\r\n    'start-top': 'left-start',\r\n    'start-bottom': 'left-end'\r\n  };\r\n\r\n  return gardenToPopperMapping[gardenPlacement];\r\n}\r\n\r\n/**\r\n * Convert Garden RTL aware placement to RTL equivalent Popper.JS placement\r\n * @param {String} gardenPlacement\r\n */\r\nexport function getRtlPopperPlacement(gardenPlacement: GARDEN_PLACEMENT) {\r\n  const rtlPlacementMappings: Partial<Record<POPPER_PLACEMENT, POPPER_PLACEMENT>> = {\r\n    left: 'right',\r\n    'left-start': 'right-start',\r\n    'left-end': 'right-end',\r\n    'top-start': 'top-end',\r\n    'top-end': 'top-start',\r\n    right: 'left',\r\n    'right-start': 'left-start',\r\n    'right-end': 'left-end',\r\n    'bottom-start': 'bottom-end',\r\n    'bottom-end': 'bottom-start'\r\n  };\r\n\r\n  const popperPlacement = getPopperPlacement(gardenPlacement);\r\n\r\n  return rtlPlacementMappings[popperPlacement] || popperPlacement;\r\n}\r\n\r\n/**\r\n * Convert Popper.JS placement to corresponding arrow position\r\n * @param {String} popperPlacement\r\n */\r\nexport function getArrowPosition(popperPlacement: POPPER_PLACEMENT) {\r\n  const arrowPositionMappings: Partial<Record<POPPER_PLACEMENT, ARROW_POSITION>> = {\r\n    top: 'bottom',\r\n    'top-start': 'bottom-left',\r\n    'top-end': 'bottom-right',\r\n    right: 'left',\r\n    'right-start': 'left-top',\r\n    'right-end': 'left-bottom',\r\n    bottom: 'top',\r\n    'bottom-start': 'top-left',\r\n    'bottom-end': 'top-right',\r\n    left: 'right',\r\n    'left-start': 'right-top',\r\n    'left-end': 'right-bottom'\r\n  };\r\n\r\n  return arrowPositionMappings[popperPlacement] || 'top';\r\n}\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { Blockquote, IBlockquoteProps } from '@zendeskgarden/react-typography';\r\nimport { TypescaleStory } from './TypescaleStory';\r\n\r\ninterface IArgs extends IBlockquoteProps {\r\n  children: string[];\r\n}\r\n\r\nexport const BlockquoteStory: Story<IArgs> = ({ children, ...args }) => (\r\n  <>\r\n    {children.map((child, index) => (\r\n      <Blockquote key={index} {...args}>\r\n        <TypescaleStory size={args.size} hasDisplayName tag=\"span\">\r\n          {child}\r\n        </TypescaleStory>\r\n      </Blockquote>\r\n    ))}\r\n  </>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { IOrderedListProps, OrderedList } from '@zendeskgarden/react-typography';\r\nimport { IListItem } from './types';\r\n\r\ninterface IArgs extends IOrderedListProps {\r\n  items: IListItem[];\r\n  level: number;\r\n}\r\n\r\nconst getType = (level: number) => {\r\n  const types = ['decimal', 'lower-alpha', 'lower-roman'] as const;\r\n  const index = level % types.length;\r\n\r\n  return types[index];\r\n};\r\n\r\nexport const OrderedListStory: Story<IArgs> = ({ items, level = 0, ...args }) => (\r\n  <OrderedList {...args} type={level === 0 ? args.type : getType(level)}>\r\n    {items.map((item, index) => (\r\n      <OrderedList.Item key={index}>\r\n        <>\r\n          {item.text}\r\n          {item.items && <OrderedListStory items={item.items} level={level + 1} {...args} />}\r\n        </>\r\n      </OrderedList.Item>\r\n    ))}\r\n  </OrderedList>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { Paragraph, IParagraphProps } from '@zendeskgarden/react-typography';\r\nimport { TypescaleStory } from './TypescaleStory';\r\n\r\ninterface IArgs extends IParagraphProps {\r\n  children: string[];\r\n}\r\n\r\nexport const ParagraphStory: Story<IArgs> = ({ children, ...args }) => (\r\n  <>\r\n    {children.map((child, index) => (\r\n      <Paragraph key={index} {...args}>\r\n        <TypescaleStory size={args.size} hasDisplayName tag=\"span\">\r\n          {child}\r\n        </TypescaleStory>\r\n      </Paragraph>\r\n    ))}\r\n  </>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport Icon from '@zendeskgarden/svg-icons/src/16/asterisk-stroke.svg';\r\nimport StartIcon from '@zendeskgarden/svg-icons/src/16/circle-stroke.svg';\r\nimport { ISpanProps, Span } from '@zendeskgarden/react-typography';\r\n\r\ninterface IArgs extends ISpanProps {\r\n  hasIcon: boolean;\r\n  hasStartIcon: boolean;\r\n}\r\n\r\nexport const SpanStory: Story<IArgs> = ({ hasIcon, hasStartIcon, ...args }) => (\r\n  <Span {...args}>\r\n    {hasStartIcon && (\r\n      <Span.StartIcon>\r\n        <StartIcon />\r\n      </Span.StartIcon>\r\n    )}\r\n    {args.children}\r\n    {hasIcon && (\r\n      <>\r\n        {' '}\r\n        <Span.Icon>\r\n          <Icon />\r\n        </Span.Icon>{' '}\r\n        {args.children}\r\n      </>\r\n    )}\r\n  </Span>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { IMDProps, LG, MD, SM, XL, XXL, XXXL } from '@zendeskgarden/react-typography';\r\n\r\ninterface IArgs extends IMDProps {\r\n  size?: 'small' | 'medium' | 'large' | 'extra-large' | '2x-large' | '3x-large';\r\n  hasDisplayName?: boolean;\r\n}\r\n\r\nexport const TypescaleStory: Story<IArgs> = ({ children, size, hasDisplayName, ...args }) => {\r\n  let Typescale;\r\n\r\n  switch (size) {\r\n    case 'small':\r\n      Typescale = SM;\r\n      break;\r\n\r\n    case 'large':\r\n      Typescale = LG;\r\n      break;\r\n\r\n    case 'extra-large':\r\n      Typescale = XL;\r\n      break;\r\n\r\n    case '2x-large':\r\n      Typescale = XXL;\r\n      break;\r\n\r\n    case '3x-large':\r\n      Typescale = XXXL;\r\n      break;\r\n\r\n    case 'medium':\r\n    default:\r\n      Typescale = MD;\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <Typescale {...args}>\r\n      {hasDisplayName && `<${Typescale.displayName}>`}\r\n      {children}\r\n      {hasDisplayName && `</${Typescale.displayName}>`}\r\n    </Typescale>\r\n  );\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { IUnorderedListProps, UnorderedList } from '@zendeskgarden/react-typography';\r\nimport { IListItem } from './types';\r\n\r\ninterface IArgs extends IUnorderedListProps {\r\n  items: IListItem[];\r\n  level: number;\r\n}\r\n\r\nconst getType = (level: number) => {\r\n  const types = ['disc', 'circle', 'square'] as const;\r\n  const index = level % types.length;\r\n\r\n  return types[index];\r\n};\r\n\r\nexport const UnorderedListStory: Story<IArgs> = ({ items, level = 0, ...args }) => (\r\n  <UnorderedList {...args} type={level === 0 ? args.type : getType(level)}>\r\n    {items.map((item, index) => (\r\n      <UnorderedList.Item key={index}>\r\n        <>\r\n          {item.text}\r\n          {item.items && <UnorderedListStory items={item.items} level={level + 1} {...args} />}\r\n        </>\r\n      </UnorderedList.Item>\r\n    ))}\r\n  </UnorderedList>\r\n);\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { IListItem } from './types';\r\n\r\nexport const BLOCKQUOTE_CHILDREN = ['Blockquote one', 'Blockquote two', 'Blockquote three'];\r\n\r\nexport const CODE_BLOCK_CHILDREN = {\r\n  bash: `\r\n#!/bin/sh\r\n\r\n# Exports.\r\n\r\nexport ZSH=\"$HOME/.oh-my-zsh\"\r\n\r\n# Aliases.\r\n\r\nalias ..=\"cd ..\"\r\n\r\n# Tools.\r\n\r\nif [ -f $(brew --prefix nvm)/nvm.sh ]; then\r\n    mkdir -p $HOME/.nvm\r\n    export NVM_DIR=\"$HOME/.nvm\"\r\n    source $(brew --prefix nvm)/nvm.sh\r\nfi`,\r\n  css: `\r\nbutton,\r\n.button,\r\n#button,\r\n[role='button'] {\r\n  display: inline-block;\r\n  transition:\r\n    border-color .25s ease-in-out,\r\n    box-shadow .1s ease-in-out,\r\n    background-color .25s ease-in-out,\r\n    color .25s ease-in-out;\r\n  margin: 0;\r\n  border: 1px solid transparent;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  overflow: hidden !important;\r\n  vertical-align: middle;\r\n  text-align: center;\r\n  text-decoration: none; /* Anchor tag reset */\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  font-family: inherit; /* Override for <input> & <button> elements */\r\n  font-weight: var(--zd-font-weight-regular);\r\n  -webkit-font-smoothing: subpixel-antialiased;\r\n  box-sizing: border-box;\r\n  user-select: none;\r\n  -webkit-touch-callout: none;\r\n\r\n  @media print {\r\n    display: none;\r\n  }\r\n}`,\r\n  diff: `\r\n@@ -1,3 +1,9 @@\r\n+This is an important\r\n+notice! It should\r\n+therefore be located at\r\n+the beginning of this\r\n+document!\r\n+\r\n This part of the\r\n document has stayed the\r\n same from version to\r\n@@ -8,13 +14,8 @@\r\n compress the size of the\r\n changes.\r\n \r\n-This paragraph contains\r\n-text that is outdated.\r\n-It will be deleted in the\r\n-near future.\r\n-\r\n It is important to spell\r\n!check this document. On\r\n the other hand, a\r\n misspelled word isn't\r\n the end of the world.\r\n@@ -22,3 +23,7 @@\r\n this paragraph needs to\r\n be changed. Things can\r\n be added after it.\r\n+\r\n+This paragraph contains\r\n+important new additions\r\n+to this document.\r\n`,\r\n  javascript: `\r\nPrism.languages.markup = {\r\n  comment: /<!--[\\\\s\\\\S]*?-->/,\r\n  prolog: /<\\\\?[\\\\s\\\\S]+?\\\\?>/,\r\n  doctype: {\r\n    greedy: true\r\n  },\r\n  cdata: /<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?]]>/i,\r\n  tag: {\r\n    greedy: true,\r\n    inside: {\r\n      tag: {\r\n        pattern: /^<\\\\/?[^\\\\s>\\\\/]+/i,\r\n        inside: {\r\n          punctuation: /^<\\\\/?/,\r\n          namespace: /^[^\\\\s>\\\\/:]+:/\r\n        }\r\n      },\r\n      'attr-value': {\r\n        pattern: /=\\\\s*(?:\"[^\"]*\"|'[^']*'|[^\\\\s'\">=]+)/i,\r\n        inside: {\r\n          punctuation: [\r\n            /^=/,\r\n            {\r\n              pattern: /^(\\\\s*)[\"']|[\"']$/,\r\n              lookbehind: true\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      punctuation: /\\\\/?>/u,\r\n      'attr-name': {\r\n        pattern: /[^\\\\s>\\\\/]+/,\r\n        inside: {\r\n          namespace: /^[^\\\\s>\\\\/:]+:/\r\n        }\r\n      }\r\n    }\r\n  },\r\n  entity: /&#?[\\\\da-z]{1,8};/i\r\n};`,\r\n  json: `\r\n{\r\n  \"data\": [\r\n    {\r\n      \"key\": \"product\",\r\n      \"version\": 1,\r\n      \"schema\": {\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"product id\"\r\n          },\r\n          \"name\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"product name\"\r\n          }\r\n        },\r\n        \"required\": [\"id\", \"name\"]\r\n      },\r\n      \"created_at\": \"2018-01-01T10:20:30Z\",\r\n      \"updated_at\": \"2018-01-01T10:20:30Z\"\r\n    },\r\n    {\r\n      \"key\": \"user\",\r\n      \"version\": 2,\r\n      \"schema\": {\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"user id\"\r\n          },\r\n          \"name\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"user name\"\r\n          }\r\n        },\r\n        \"required\": [\"id\", \"name\"]\r\n      },\r\n      \"created_at\": \"2018-01-01T10:20:30Z\",\r\n      \"updated_at\": \"2018-01-01T10:20:30Z\"\r\n    }\r\n  ]\r\n}`,\r\n  markdown: `\r\n# Title 1\r\n## Title 2\r\n### Title 3\r\n#### Title 4\r\n##### Title 5\r\n###### Title 6\r\n\r\nOur product is an extension of our brand and we want it to feel like Zendesk. We use visual design\r\nto shape what Zendesk looks like, and voice and tone to shape what Zendesk sounds like.\r\n\r\n| Voice      | Tone       |\r\n| ---------- | ---------- |\r\n| About us   | About them |\r\n| Consistent | Variable   |\r\n\r\n*Italic*\r\n**Bold**\r\n**Bold on\r\nmultiple lines**\r\n*Italic on\r\nmultiple lines too*\r\n\r\n* This is\r\n* an unordered list\r\n\r\n1. This is an\r\n2. ordered list\r\n\r\n* *List item in italic*\r\n* **List item in bold**\r\n* [List item as a link](http://example.com \"This is an example\")\r\n\r\n> This is a quotation\r\n>> With another quotation inside\r\n> _italic here_, __bold there__\r\n> And a [link](http://example.com)`,\r\n  markup: `\r\n<!doctype html>\r\n<html class=\"no-js\" lang=\"\">\r\n\r\n<head>\r\n  <meta charset=\"utf-8\">\r\n  <title></title>\r\n  <meta name=\"description\" content=\"\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n\r\n  <meta property=\"og:title\" content=\"\">\r\n  <meta property=\"og:type\" content=\"\">\r\n  <meta property=\"og:url\" content=\"\">\r\n  <meta property=\"og:image\" content=\"\">\r\n\r\n  <link rel=\"manifest\" href=\"site.webmanifest\">\r\n  <link rel=\"apple-touch-icon\" href=\"icon.png\">\r\n  <!-- Place favicon.ico in the root directory -->\r\n\r\n  <link rel=\"stylesheet\" href=\"css/normalize.css\">\r\n  <link rel=\"stylesheet\" href=\"css/main.css\">\r\n\r\n  <meta name=\"theme-color\" content=\"#fafafa\">\r\n</head>\r\n\r\n<body>\r\n\r\n  <!-- Add your site or application content here -->\r\n  <p>Hello world! This is HTML5 Boilerplate.</p>\r\n  <script src=\"js/vendor/modernizr-{{MODERNIZR_VERSION}}.min.js\"></script>\r\n  <script src=\"js/plugins.js\"></script>\r\n  <script src=\"js/main.js\"></script>\r\n\r\n  <!-- Google Analytics: change UA-XXXXX-Y to be your site's ID. -->\r\n  <script>\r\n    window.ga = function () { ga.q.push(arguments) }; ga.q = []; ga.l = +new Date;\r\n    ga('create', 'UA-XXXXX-Y', 'auto');\r\n    ga('set', 'anonymizeIp', true);\r\n    ga('set', 'transport', 'beacon');\r\n    ga('send', 'pageview')\r\n  </script>\r\n  <script src=\"https://www.google-analytics.com/analytics.js\" async></script>\r\n</body>\r\n\r\n</html>`,\r\n  python: `\r\ndef median(pool):\r\n    '''Statistical median to demonstrate doctest.\r\n    >>> median([2, 9, 9, 7, 9, 2, 4, 5, 8])\r\n    7\r\n    '''\r\n    copy = sorted(pool)\r\n    size = len(copy)\r\n\r\n    if size % 2 == 1:\r\n        return copy[(size - 1) / 2]\r\n    else:\r\n        return (copy[size/2 - 1] + copy[size/2]) / 2\r\n\r\nif __name__ == '__main__':\r\n    import doctest\r\n    doctest.testmod()`,\r\n  tsx: `\r\n/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Dropdown, Multiselect, Field, Menu, Item, Label } from '@zendeskgarden/react-dropdowns';\r\nimport { mediaQuery } from '@zendeskgarden/react-theming';\r\nimport { Row, Col } from '@zendeskgarden/react-grid';\r\nimport { Tag } from '@zendeskgarden/react-tags';\r\nimport debounce from 'lodash.debounce';\r\n\r\nconst options = [\r\n  'Asparagus',\r\n  'Brussel sprouts',\r\n  'Cauliflower',\r\n  'Garlic',\r\n  'Jerusalem artichoke',\r\n  'Kale',\r\n  'Lettuce',\r\n  'Onion',\r\n  'Mushroom',\r\n  'Potato',\r\n  'Radish',\r\n  'Spinach',\r\n  'Tomato',\r\n  'Yam',\r\n  'Zucchini'\r\n];\r\n\r\nconst StyledCol = styled(Col)\\`\r\n  \\${p => mediaQuery('down', 'xs', p.theme)} {\r\n    margin-top: \\${p => p.theme.space.sm};\r\n  }\r\n\\`;\r\n\r\nconst initialSelectedItems = [options[0], options[1], options[2], options[3]];\r\n\r\nconst Example = () => {\r\n  const [selectedItems, setSelectedItems] = useState(initialSelectedItems);\r\n  const [compactSelectedItems, setCompactSelectedItems] = useState(initialSelectedItems);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [compactInputValue, setCompactInputValue] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [matchingOptions, setMatchingOptions] = useState(options);\r\n\r\n  const filterMatchingOptionsRef = useRef(\r\n    debounce((value: string) => {\r\n      const matchedOptions = options.filter(option => {\r\n        return option.trim().toLowerCase().indexOf(value.trim().toLowerCase()) !== -1;\r\n      });\r\n\r\n      setMatchingOptions(matchedOptions);\r\n      setIsLoading(false);\r\n    }, 300)\r\n  );\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    filterMatchingOptionsRef.current(inputValue);\r\n  }, [inputValue]);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    filterMatchingOptionsRef.current(compactInputValue);\r\n  }, [compactInputValue]);\r\n\r\n  const renderOptions = () => {\r\n    if (isLoading) {\r\n      return <Item disabled>Loading</Item>;\r\n    }\r\n\r\n    if (matchingOptions.length === 0) {\r\n      return <Item disabled>No matches found</Item>;\r\n    }\r\n\r\n    return matchingOptions.map(option => (\r\n      <Item key={option} value={option}>\r\n        <span>{option}</span>\r\n      </Item>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <Dropdown\r\n          inputValue={inputValue}\r\n          selectedItems={selectedItems}\r\n          onSelect={items => setSelectedItems(items)}\r\n          downshiftProps={{ defaultHighlightedIndex: 0 }}\r\n          onStateChange={changes => {\r\n            if (Object.prototype.hasOwnProperty.call(changes, 'inputValue')) {\r\n              setInputValue((changes as any).inputValue);\r\n            }\r\n          }}\r\n        >\r\n          <Field>\r\n            <Label>Vegetables</Label>\r\n            <Multiselect\r\n              renderItem={({ value, removeValue }: any) => (\r\n                <Tag>\r\n                  <span>{value}</span>\r\n                  <Tag.Close onClick={() => removeValue()} />\r\n                </Tag>\r\n              )}\r\n            />\r\n          </Field>\r\n          <Menu>{renderOptions()}</Menu>\r\n        </Dropdown>\r\n      </Col>\r\n      <StyledCol>\r\n        <Dropdown\r\n          inputValue={compactInputValue}\r\n          selectedItems={compactSelectedItems}\r\n          onSelect={items => setCompactSelectedItems(items)}\r\n          downshiftProps={{ defaultHighlightedIndex: 0 }}\r\n          onStateChange={changes => {\r\n            if (Object.prototype.hasOwnProperty.call(changes, 'inputValue')) {\r\n              setCompactInputValue((changes as any).inputValue);\r\n            }\r\n          }}\r\n        >\r\n          <Field>\r\n            <Label>Vegetables</Label>\r\n            <Multiselect\r\n              isCompact\r\n              renderItem={({ value, removeValue }: any) => (\r\n                <Tag>\r\n                  <span>{value}</span>\r\n                  <Tag.Close onClick={() => removeValue()} />\r\n                </Tag>\r\n              )}\r\n            />\r\n          </Field>\r\n          <Menu isCompact>{renderOptions()}</Menu>\r\n        </Dropdown>\r\n      </StyledCol>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Example;\r\n`,\r\n  typescript: `\r\nimport { clean, publish } from 'gh-pages';\r\nimport commander, { Command } from 'commander';\r\nimport { repository as getRepository, token as getToken } from '..';\r\nimport { handleErrorMessage, handleSuccessMessage } from '../../utils';\r\nimport { Ora } from 'ora';\r\nimport execa from 'execa';\r\n\r\ninterface IGitHubPagesArgs {\r\n  dir: string;\r\n  path?: string;\r\n  message?: string;\r\n  token?: string;\r\n  spinner?: Ora;\r\n}\r\n\r\n/**\r\n * Execute the \\`github-pages\\` command.\r\n *\r\n * @param {string} args.dir Folder to publish.\r\n * @param {string} [args.path] Path to a git directory.\r\n * @param {string} [args.message] Commit message.\r\n * @param {string} [args.token] GitHub personal access token.\r\n * @param {Ora} [args.spinner] Terminal spinner.\r\n *\r\n * @returns {Promise<string>} The GitHub pages URL.\r\n */\r\nexport const execute = async (args: IGitHubPagesArgs): Promise<string | undefined> => {\r\n  let retVal: string | undefined;\r\n\r\n  try {\r\n    const token = args.token || (await getToken(args.spinner));\r\n    const repository = await getRepository(args.path || args.dir, args.spinner);\r\n    const message = args.message || 'Updates [skip ci]';\r\n\r\n    if (token && repository) {\r\n      const { owner, repo } = repository;\r\n      let name: string;\r\n      let email: string;\r\n\r\n      try {\r\n        name = (await execa('git', ['config', 'user.name'])).stdout.toString();\r\n        email = (await execa('git', ['config', 'user.email'])).stdout.toString();\r\n      } catch {\r\n        name = 'Zendesk Garden';\r\n        email = 'garden@zendesk.com';\r\n      }\r\n\r\n      clean();\r\n      await publish(\r\n        args.dir,\r\n        {\r\n          repo: \\`https://\\${token}@github.com/\\${owner}/\\${repo}.git\\`,\r\n          user: {\r\n            name,\r\n            email\r\n          },\r\n          message,\r\n          silent: true\r\n        },\r\n        error => {\r\n          if (error) {\r\n            handleErrorMessage(error, 'github-pages', args.spinner);\r\n          } else {\r\n            retVal = \\`https://\\${owner}.github.io/\\${repo}/\\`;\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      throw new Error('Invalid git repository');\r\n    }\r\n  } catch (error) {\r\n    handleErrorMessage(error, 'github-pages', args.spinner);\r\n\r\n    throw error;\r\n  }\r\n\r\n  return retVal;\r\n};`\r\n};\r\n\r\nexport const LIST_ITEMS: IListItem[] = [\r\n  { text: 'garden' },\r\n  {\r\n    text: 'greens',\r\n    items: [\r\n      { text: 'beans' },\r\n      {\r\n        text: 'peas',\r\n        items: [{ text: 'snap', items: [{ text: 'fresh' }, { text: 'frozen' }] }, { text: 'snow' }]\r\n      }\r\n    ]\r\n  },\r\n  { text: 'water' },\r\n  { text: 'rock' }\r\n];\r\n\r\nexport const PARAGRAPH_CHILDREN = [\r\n  'Veggies es bonus vobis, proinde vos postulo essum magis kohlrabi welsh onion daikon amaranth tatsoi tomatillo melon azuki bean garlic. Parsley shallot courgette tatsoi pea sprouts fava bean collard greens dandelion okra wakame tomato. Dandelion cucumber earthnut pea peanut soko zucchini.',\r\n  'Soko radicchio bunya nuts gram dulse silver beet parsnip napa cabbage lotus root sea lettuce brussels sprout cabbage. Catsear cauliflower garbanzo yarrow salsify chicory garlic bell pepper napa cabbage lettuce tomato kale arugula melon sierra leone bologi rutabaga tigernut.',\r\n  'Pea horseradish azuki bean lettuce avocado asparagus okra. Kohlrabi radish okra azuki bean corn fava bean mustard tigernut jícama green bean celtuce collard greens avocado quandong fennel gumbo black-eyed pea.'\r\n];\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { BlockquoteHTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledBlockquote } from '../styled';\r\n\r\nexport interface IBlockquoteProps extends BlockquoteHTMLAttributes<HTMLElement> {\r\n  /** Controls the spacing between sibling blockquotes */\r\n  size?: 'small' | 'medium' | 'large';\r\n}\r\n\r\n/**\r\n * @extends BlockquoteHTMLAttributes<HTMLElement>\r\n */\r\nexport const Blockquote = React.forwardRef<HTMLElement, IBlockquoteProps>(\r\n  ({ size, ...other }, ref) => {\r\n    let _size: 'sm' | 'md' | 'lg';\r\n\r\n    if (size === 'small') {\r\n      _size = 'sm';\r\n    } else if (size === 'medium') {\r\n      _size = 'md';\r\n    } else {\r\n      _size = 'lg';\r\n    }\r\n\r\n    return <StyledBlockquote ref={ref} size={_size} {...other} />;\r\n  }\r\n);\r\n\r\nBlockquote.displayName = 'Blockquote';\r\n\r\nBlockquote.propTypes = {\r\n  size: PropTypes.oneOf(['small', 'medium', 'large'])\r\n};\r\n\r\nBlockquote.defaultProps = {\r\n  size: 'medium'\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledCode } from '../styled';\r\n\r\nexport interface ICodeProps extends HTMLAttributes<HTMLElement> {\r\n  /** Applies color to the background and the text */\r\n  hue?: 'grey' | 'red' | 'green' | 'yellow';\r\n  /** Adjusts the font size. By default font size is inherited from the surrounding text. */\r\n  size?: 'small' | 'medium' | 'large' | 'inherit';\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLElement>\r\n */\r\nconst Code: React.FunctionComponent<ICodeProps & React.RefAttributes<HTMLElement>> =\r\n  React.forwardRef<HTMLElement, ICodeProps>(({ size, hue, ...other }, ref) => {\r\n    let _size: 'sm' | 'md' | 'lg' | 'inherit';\r\n\r\n    if (size === 'small') {\r\n      _size = 'sm';\r\n    } else if (size === 'medium') {\r\n      _size = 'md';\r\n    } else if (size === 'large') {\r\n      _size = 'lg';\r\n    } else {\r\n      _size = 'inherit';\r\n    }\r\n\r\n    return <StyledCode ref={ref} size={_size} hue={hue} {...other} />;\r\n  });\r\n\r\nCode.displayName = 'Code';\r\n\r\nCode.propTypes = {\r\n  hue: PropTypes.oneOf(['grey', 'red', 'green', 'yellow']),\r\n  size: PropTypes.oneOf(['small', 'medium', 'large', 'inherit'])\r\n};\r\n\r\nCode.defaultProps = {\r\n  hue: 'grey',\r\n  size: 'inherit'\r\n};\r\n\r\nexport default Code;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes, useMemo, useRef } from 'react';\r\nimport Highlight, { Language, Prism } from 'prism-react-renderer';\r\nimport { useScrollRegion } from '@zendeskgarden/container-scrollregion';\r\nimport {\r\n  DIFF,\r\n  SIZE,\r\n  StyledCodeBlock,\r\n  StyledCodeBlockContainer,\r\n  StyledCodeBlockLine,\r\n  StyledCodeBlockToken\r\n} from '../styled';\r\n\r\n/* prism-react-renderer Token type replica */\r\ninterface IToken {\r\n  types: string[];\r\n  content: string;\r\n  empty?: boolean;\r\n}\r\n\r\n/* until https://github.com/FormidableLabs/prism-react-renderer/pull/127 is available */\r\nconst LANGUAGES = [\r\n  'markup',\r\n  'bash',\r\n  'clike',\r\n  'c',\r\n  'cpp',\r\n  'css',\r\n  'javascript',\r\n  'jsx',\r\n  'coffeescript',\r\n  'actionscript',\r\n  'css-extr',\r\n  'diff',\r\n  'git',\r\n  'go',\r\n  'graphql',\r\n  'handlebars',\r\n  'json',\r\n  'less',\r\n  'makefile',\r\n  'markdown',\r\n  'objectivec',\r\n  'ocaml',\r\n  'python',\r\n  'reason',\r\n  'sass',\r\n  'scss',\r\n  'sql',\r\n  'stylus',\r\n  'tsx',\r\n  'typescript',\r\n  'wasm',\r\n  'yaml'\r\n] as const;\r\n\r\nexport interface ICodeBlockProps extends HTMLAttributes<HTMLPreElement> {\r\n  /** Selects the language used by the [Prism](https://prismjs.com/) tokenizer */\r\n  language?: typeof LANGUAGES[number];\r\n  /** Specifies the font size */\r\n  size?: 'small' | 'medium' | 'large';\r\n  /** Applies light mode styling */\r\n  isLight?: boolean;\r\n  /** Displays line numbers */\r\n  isNumbered?: boolean;\r\n  /** Determines the lines to highlight */\r\n  highlightLines?: number[];\r\n  /** Passes props to the code block container */\r\n  containerProps?: HTMLAttributes<HTMLDivElement>;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLPreElement>\r\n */\r\nexport const CodeBlock = React.forwardRef<HTMLPreElement, ICodeBlockProps>(\r\n  (\r\n    { children, containerProps, highlightLines, isLight, isNumbered, language, size, ...other },\r\n    ref\r\n  ) => {\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const code = (Array.isArray(children) ? children[0] : children) as string;\r\n    const SIZES: Record<string, SIZE> = {\r\n      small: 'sm',\r\n      medium: 'md',\r\n      large: 'lg'\r\n    };\r\n    const dependency = useMemo(() => [size, children], [size, children]);\r\n    const containerTabIndex = useScrollRegion({ containerRef, dependency });\r\n\r\n    const getDiff = (line: IToken[]) => {\r\n      let retVal: DIFF | undefined;\r\n\r\n      if (language === 'diff') {\r\n        const token = line.find(value => !(value.empty || value.content === ''));\r\n\r\n        if (token) {\r\n          if (token.types.includes('deleted')) {\r\n            retVal = 'delete';\r\n          } else if (token.types.includes('inserted')) {\r\n            retVal = 'add';\r\n          } else if (token.types.includes('coord')) {\r\n            retVal = 'hunk';\r\n          } else if (token.types.includes('diff')) {\r\n            retVal = 'change';\r\n          }\r\n        }\r\n      }\r\n\r\n      return retVal;\r\n    };\r\n\r\n    return (\r\n      <StyledCodeBlockContainer {...containerProps} ref={containerRef} tabIndex={containerTabIndex}>\r\n        <Highlight\r\n          Prism={Prism}\r\n          code={code ? code.trim() : ''}\r\n          language={LANGUAGES.includes(language as Language) ? (language as Language) : 'tsx'}\r\n        >\r\n          {({ className, tokens, getLineProps, getTokenProps }) => (\r\n            <StyledCodeBlock className={className} ref={ref} isLight={isLight} {...other}>\r\n              {tokens.map((line, index) => (\r\n                <StyledCodeBlockLine\r\n                  {...getLineProps({ line })}\r\n                  key={index}\r\n                  language={language}\r\n                  isHighlighted={highlightLines && highlightLines.includes(index + 1)}\r\n                  isLight={isLight}\r\n                  isNumbered={isNumbered}\r\n                  diff={getDiff(line)}\r\n                  size={size ? SIZES[size] : undefined}\r\n                >\r\n                  {line.map((token, tokenKey) => (\r\n                    <StyledCodeBlockToken\r\n                      {...getTokenProps({ token })}\r\n                      key={tokenKey}\r\n                      isLight={isLight}\r\n                    >\r\n                      {token.empty ? '\\n' : token.content}\r\n                    </StyledCodeBlockToken>\r\n                  ))}\r\n                </StyledCodeBlockLine>\r\n              ))}\r\n            </StyledCodeBlock>\r\n          )}\r\n        </Highlight>\r\n      </StyledCodeBlockContainer>\r\n    );\r\n  }\r\n);\r\n\r\nCodeBlock.displayName = 'CodeBlock';\r\n\r\nCodeBlock.defaultProps = {\r\n  language: 'tsx',\r\n  size: 'medium'\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledEllipsis } from '../styled';\r\n\r\nexport interface IEllipsisProps extends HTMLAttributes<HTMLDivElement> {\r\n  /** Overrides the auto-generated `title` attribute */\r\n  title?: string;\r\n  /** Updates the element's HTML tag */\r\n  tag?: any;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nconst Ellipsis: React.FunctionComponent<IEllipsisProps & React.RefAttributes<HTMLDivElement>> =\r\n  React.forwardRef<HTMLDivElement, IEllipsisProps>(({ children, title, tag, ...other }, ref) => {\r\n    let textContent = undefined;\r\n\r\n    if (title !== undefined) {\r\n      textContent = title;\r\n    } else if (typeof children === 'string') {\r\n      textContent = children;\r\n    }\r\n\r\n    return (\r\n      <StyledEllipsis as={tag} ref={ref} title={textContent} {...other}>\r\n        {children}\r\n      </StyledEllipsis>\r\n    );\r\n  });\r\n\r\nEllipsis.displayName = 'Ellipsis';\r\n\r\nEllipsis.propTypes = {\r\n  title: PropTypes.string,\r\n  tag: PropTypes.any\r\n};\r\n\r\nEllipsis.defaultProps = {\r\n  tag: 'div'\r\n};\r\n\r\nexport default Ellipsis;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledFont } from '../styled';\r\n\r\nexport interface ILGProps extends HTMLAttributes<HTMLDivElement> {\r\n  /** Updates the element's HTML tag */\r\n  tag?: any;\r\n  /** Applies bold font style */\r\n  isBold?: boolean;\r\n  /** Renders with monospace font */\r\n  isMonospace?: boolean;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nconst LG: React.FunctionComponent<ILGProps & React.RefAttributes<HTMLDivElement>> =\r\n  React.forwardRef<HTMLDivElement, ILGProps>(({ tag, ...other }, ref) => (\r\n    <StyledFont as={tag} ref={ref} size=\"lg\" {...other} />\r\n  ));\r\n\r\nLG.displayName = 'LG';\r\n\r\nLG.propTypes = {\r\n  tag: PropTypes.any,\r\n  isBold: PropTypes.bool,\r\n  isMonospace: PropTypes.bool\r\n};\r\n\r\nLG.defaultProps = {\r\n  tag: 'div'\r\n};\r\n\r\nexport default LG;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledFont } from '../styled';\r\n\r\nexport interface IMDProps extends HTMLAttributes<HTMLDivElement> {\r\n  /** Updates the element's HTML tag */\r\n  tag?: any;\r\n  /** Applies bold font style */\r\n  isBold?: boolean;\r\n  /** Renders with monospace font */\r\n  isMonospace?: boolean;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nconst MD: React.FunctionComponent<IMDProps & React.RefAttributes<HTMLDivElement>> =\r\n  React.forwardRef<HTMLDivElement, IMDProps>(({ tag, ...other }, ref) => (\r\n    <StyledFont as={tag} ref={ref} size=\"md\" {...other} />\r\n  ));\r\n\r\nMD.displayName = 'MD';\r\n\r\nMD.propTypes = {\r\n  tag: PropTypes.any,\r\n  isBold: PropTypes.bool,\r\n  isMonospace: PropTypes.bool\r\n};\r\n\r\nMD.defaultProps = {\r\n  tag: 'div'\r\n};\r\n\r\nexport default MD;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledParagraph } from '../styled';\r\n\r\nexport interface IParagraphProps extends HTMLAttributes<HTMLParagraphElement> {\r\n  /** Controls the spacing between sibling paragraphs */\r\n  size?: 'small' | 'medium' | 'large';\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLParagraphElement>\r\n */\r\nconst Paragraph: React.FunctionComponent<\r\n  IParagraphProps & React.RefAttributes<HTMLParagraphElement>\r\n> = React.forwardRef<HTMLParagraphElement, IParagraphProps>(({ size, ...other }, ref) => {\r\n  let _size: 'sm' | 'md' | 'lg';\r\n\r\n  if (size === 'small') {\r\n    _size = 'sm';\r\n  } else if (size === 'medium') {\r\n    _size = 'md';\r\n  } else {\r\n    _size = 'lg';\r\n  }\r\n\r\n  return <StyledParagraph ref={ref} size={_size} {...other} />;\r\n});\r\n\r\nParagraph.displayName = 'Paragraph';\r\n\r\nParagraph.propTypes = {\r\n  size: PropTypes.oneOf(['small', 'medium', 'large'])\r\n};\r\n\r\nParagraph.defaultProps = {\r\n  size: 'medium'\r\n};\r\n\r\nexport default Paragraph;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledFont } from '../styled';\r\n\r\nexport interface ISMProps extends HTMLAttributes<HTMLDivElement> {\r\n  /** Updates the element's HTML tag */\r\n  tag?: any;\r\n  /** Applies bold font style */\r\n  isBold?: boolean;\r\n  /** Renders with monospace font */\r\n  isMonospace?: boolean;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nconst SM: React.FunctionComponent<ISMProps & React.RefAttributes<HTMLDivElement>> =\r\n  React.forwardRef<HTMLDivElement, ISMProps>(({ tag, ...other }, ref) => (\r\n    <StyledFont as={tag} ref={ref} size=\"sm\" {...other} />\r\n  ));\r\n\r\nSM.displayName = 'SM';\r\n\r\nSM.propTypes = {\r\n  tag: PropTypes.any,\r\n  isBold: PropTypes.bool,\r\n  isMonospace: PropTypes.bool\r\n};\r\n\r\nSM.defaultProps = {\r\n  tag: 'div'\r\n};\r\n\r\nexport default SM;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledFont, StyledIcon } from '../styled';\r\n\r\nexport interface ISpanProps extends HTMLAttributes<HTMLSpanElement> {\r\n  /** Updates the element's HTML tag */\r\n  tag?: any;\r\n  /** Applies bold font style. Font weight is inherited by default. */\r\n  isBold?: boolean;\r\n  /** Renders with monospace font */\r\n  isMonospace?: boolean;\r\n  /**\r\n   * Applies a font color. Use\r\n   * [PALETTE](/components/palette#palette)\r\n   * colors when possible. Accepts all hex values.\r\n   */\r\n  hue?: string;\r\n}\r\n\r\nconst Span: React.FunctionComponent<ISpanProps & React.RefAttributes<HTMLSpanElement>> =\r\n  React.forwardRef<HTMLSpanElement, ISpanProps>(({ tag, ...other }, ref) => (\r\n    <StyledFont as={tag} ref={ref} size=\"inherit\" {...other} />\r\n  ));\r\n\r\nSpan.displayName = 'Span';\r\n\r\nSpan.propTypes = {\r\n  tag: PropTypes.any,\r\n  isBold: PropTypes.bool,\r\n  isMonospace: PropTypes.bool,\r\n  hue: PropTypes.string\r\n};\r\n\r\nSpan.defaultProps = {\r\n  tag: 'span'\r\n};\r\n\r\ninterface IIconProps extends HTMLAttributes<HTMLElement> {\r\n  children: any;\r\n}\r\n\r\nconst StartIcon = (props: IIconProps) => <StyledIcon isStart {...props} />;\r\nconst Icon = (props: IIconProps) => <StyledIcon {...props} />;\r\n\r\n(Span as any).StartIcon = StartIcon;\r\n(Span as any).Icon = Icon;\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLSpanElement>\r\n */\r\nexport default Span as React.FunctionComponent<\r\n  ISpanProps & React.RefAttributes<HTMLSpanElement>\r\n> & {\r\n  StartIcon: typeof StartIcon;\r\n  Icon: typeof Icon;\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledFont } from '../styled';\r\n\r\nexport interface IXLProps extends HTMLAttributes<HTMLDivElement> {\r\n  /** Updates the element's HTML tag */\r\n  tag?: any;\r\n  /** Applies bold font style */\r\n  isBold?: boolean;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nconst XL: React.FunctionComponent<IXLProps & React.RefAttributes<HTMLDivElement>> =\r\n  React.forwardRef<HTMLDivElement, IXLProps>(({ tag, ...other }, ref) => (\r\n    <StyledFont as={tag} ref={ref} size=\"xl\" {...other} />\r\n  ));\r\n\r\nXL.displayName = 'XL';\r\n\r\nXL.propTypes = {\r\n  tag: PropTypes.any,\r\n  isBold: PropTypes.bool\r\n};\r\n\r\nXL.defaultProps = {\r\n  tag: 'div'\r\n};\r\n\r\nexport default XL;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledFont } from '../styled';\r\n\r\nexport interface IXXLProps extends HTMLAttributes<HTMLDivElement> {\r\n  /** Updates the element's HTML tag */\r\n  tag?: any;\r\n  /** Applies bold font style */\r\n  isBold?: boolean;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nconst XXL: React.FunctionComponent<IXXLProps & React.RefAttributes<HTMLDivElement>> =\r\n  React.forwardRef<HTMLDivElement, IXXLProps>(({ tag, ...other }, ref) => (\r\n    <StyledFont as={tag} ref={ref} size=\"xxl\" {...other} />\r\n  ));\r\n\r\nXXL.displayName = 'XXL';\r\n\r\nXXL.propTypes = {\r\n  tag: PropTypes.any,\r\n  isBold: PropTypes.bool\r\n};\r\n\r\nXXL.defaultProps = {\r\n  tag: 'div'\r\n};\r\n\r\nexport default XXL;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledFont } from '../styled';\r\n\r\nexport interface IXXXLProps extends HTMLAttributes<HTMLDivElement> {\r\n  /** Updates the element's HTML tag */\r\n  tag?: any;\r\n  /** Applies bold font style */\r\n  isBold?: boolean;\r\n}\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLDivElement>\r\n */\r\nconst XXXL: React.FunctionComponent<IXXXLProps & React.RefAttributes<HTMLDivElement>> =\r\n  React.forwardRef<HTMLDivElement, IXXXLProps>(({ tag, ...other }, ref) => (\r\n    <StyledFont as={tag} ref={ref} size=\"xxxl\" {...other} />\r\n  ));\r\n\r\nXXXL.displayName = 'XXXL';\r\n\r\nXXXL.propTypes = {\r\n  tag: PropTypes.any,\r\n  isBold: PropTypes.bool\r\n};\r\n\r\nXXXL.defaultProps = {\r\n  tag: 'div'\r\n};\r\n\r\nexport default XXXL;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport OrderedListItem from './OrderedListItem';\r\nimport { OrderedListContext } from '../../utils/useOrderedListContext';\r\nimport { StyledOrderedList } from '../../styled';\r\n\r\nexport interface IOrderedListProps extends HTMLAttributes<HTMLOListElement> {\r\n  /** Adjusts the vertical spacing between list items */\r\n  size?: 'small' | 'medium' | 'large';\r\n  /** Sets the marker style */\r\n  type?:\r\n    | 'decimal'\r\n    | 'decimal-leading-zero'\r\n    | 'lower-alpha'\r\n    | 'lower-roman'\r\n    | 'upper-alpha'\r\n    | 'upper-roman';\r\n}\r\n\r\nconst OrderedList = React.forwardRef<HTMLOListElement, IOrderedListProps>(\r\n  ({ size, type, ...other }, ref) => {\r\n    const value = useMemo(() => ({ size: size! }), [size]);\r\n\r\n    return (\r\n      <OrderedListContext.Provider value={value}>\r\n        <StyledOrderedList ref={ref} listType={type} {...other} />\r\n      </OrderedListContext.Provider>\r\n    );\r\n  }\r\n);\r\n\r\nOrderedList.displayName = 'OrderedList';\r\n\r\nOrderedList.propTypes = {\r\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\r\n  type: PropTypes.oneOf([\r\n    'decimal',\r\n    'decimal-leading-zero',\r\n    'lower-alpha',\r\n    'lower-roman',\r\n    'upper-alpha',\r\n    'upper-roman'\r\n  ])\r\n};\r\n\r\nOrderedList.defaultProps = {\r\n  size: 'medium',\r\n  type: 'decimal'\r\n};\r\n\r\n(OrderedList as any).Item = OrderedListItem;\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLOListElement>\r\n */\r\nexport default OrderedList as unknown as React.FunctionComponent<\r\n  IOrderedListProps & React.RefAttributes<HTMLOListElement>\r\n> & {\r\n  Item: typeof OrderedListItem;\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { LiHTMLAttributes } from 'react';\r\nimport useOrderedListContext from '../../utils/useOrderedListContext';\r\nimport { StyledOrderedListItem } from '../../styled';\r\n\r\nconst OrderedListItem: React.FunctionComponent<\r\n  LiHTMLAttributes<HTMLLIElement> & React.RefAttributes<HTMLLIElement>\r\n> = React.forwardRef<HTMLLIElement, LiHTMLAttributes<HTMLLIElement>>((props, ref) => {\r\n  const { size } = useOrderedListContext();\r\n\r\n  return <StyledOrderedListItem ref={ref} space={size} {...props} />;\r\n});\r\n\r\nOrderedListItem.displayName = 'OrderedListItem';\r\n\r\n/**\r\n * @extends LiHTMLAttributes<HTMLLIElement>\r\n */\r\nexport default OrderedListItem;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport UnorderedListItem from './UnorderedListItem';\r\nimport { UnorderedListContext } from '../../utils/useUnorderedListContext';\r\nimport { StyledUnorderedList } from '../../styled';\r\n\r\nexport interface IUnorderedListProps extends HTMLAttributes<HTMLUListElement> {\r\n  /** Adjusts the vertical spacing between list items */\r\n  size?: 'small' | 'medium' | 'large';\r\n  /** Sets the marker style */\r\n  type?: 'circle' | 'disc' | 'square';\r\n}\r\n\r\nconst UnorderedList = React.forwardRef<HTMLUListElement, IUnorderedListProps>(\r\n  ({ size, type, ...other }, ref) => {\r\n    const value = useMemo(() => ({ size: size! }), [size]);\r\n\r\n    return (\r\n      <UnorderedListContext.Provider value={value}>\r\n        <StyledUnorderedList ref={ref} listType={type} {...other} />\r\n      </UnorderedListContext.Provider>\r\n    );\r\n  }\r\n);\r\n\r\nUnorderedList.displayName = 'UnorderedList';\r\n\r\nUnorderedList.propTypes = {\r\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\r\n  type: PropTypes.oneOf(['circle', 'disc', 'square'])\r\n};\r\n\r\nUnorderedList.defaultProps = {\r\n  size: 'medium',\r\n  type: 'disc'\r\n};\r\n\r\n(UnorderedList as any).Item = UnorderedListItem;\r\n\r\n/**\r\n * @extends HTMLAttributes<HTMLUListElement>\r\n */\r\nexport default UnorderedList as unknown as React.FunctionComponent<\r\n  IUnorderedListProps & React.RefAttributes<HTMLUListElement>\r\n> & {\r\n  Item: typeof UnorderedListItem;\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { LiHTMLAttributes } from 'react';\r\nimport useUnorderedListContext from '../../utils/useUnorderedListContext';\r\nimport { StyledUnorderedListItem } from '../../styled';\r\n\r\nconst UnorderedListItem: React.FunctionComponent<\r\n  LiHTMLAttributes<HTMLLIElement> & React.RefAttributes<HTMLLIElement>\r\n> = React.forwardRef<HTMLLIElement, LiHTMLAttributes<HTMLLIElement>>((props, ref) => {\r\n  const { size } = useUnorderedListContext();\r\n\r\n  return <StyledUnorderedListItem ref={ref} space={size} {...props} />;\r\n});\r\n\r\nUnorderedListItem.displayName = 'UnorderedListItem';\r\n\r\n/**\r\n * @extends LiHTMLAttributes<HTMLLIElement>\r\n */\r\nexport default UnorderedListItem;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { DEFAULT_THEME, getColor, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'typography.blockquote';\r\n\r\ninterface IStyledBlockquoteProps {\r\n  size?: 'sm' | 'md' | 'lg';\r\n}\r\n\r\nexport const StyledBlockquote = styled.blockquote.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledBlockquoteProps>`\r\n  margin: 0;\r\n  /* stylelint-disable property-no-unknown */\r\n  border-${props => (props.theme.rtl ? 'right' : 'left')}: ${props =>\r\n  props.theme.shadowWidths.sm} solid;\r\n  border-color: ${props => getColor('neutralHue', 400, props.theme)};\r\n  padding: 0;\r\n  padding-${props => (props.theme.rtl ? 'right' : 'left')}: ${props =>\r\n  props.theme.space.base * 4}px;\r\n  /* stylelint-enable property-no-unknown */\r\n  direction: ${props => (props.theme.rtl ? 'rtl' : 'ltr')};\r\n\r\n  p + &,\r\n  & + & {\r\n    margin-top: ${props => props.theme.lineHeights[props.size!]};\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledBlockquote.defaultProps = {\r\n  theme: DEFAULT_THEME,\r\n  size: 'md'\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, DefaultTheme, ThemeProps } from 'styled-components';\r\nimport { DEFAULT_THEME, getColor, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\nimport { StyledFont, IStyledFontProps } from './StyledFont';\r\n\r\nconst COMPONENT_ID = 'typography.code';\r\n\r\nconst colorStyles = (props: IStyledCodeProps & ThemeProps<DefaultTheme>) => {\r\n  const hue = props.hue || 'neutralHue';\r\n  const backgroundColor = getColor(hue, 200, props.theme);\r\n  const shade = hue === 'yellow' ? 800 : 700;\r\n  const foregroundColor = getColor(hue, shade, props.theme);\r\n\r\n  return css`\r\n    background-color: ${backgroundColor};\r\n    color: ${foregroundColor};\r\n\r\n    a & {\r\n      color: inherit;\r\n    }\r\n  `;\r\n};\r\n\r\ninterface IStyledCodeProps extends IStyledFontProps {\r\n  hue?: string;\r\n  size?: 'sm' | 'md' | 'lg' | 'inherit';\r\n}\r\n\r\nexport const StyledCode = styled(StyledFont as 'code').attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  as: 'code'\r\n})<IStyledCodeProps>`\r\n  border-radius: ${props => props.theme.borderRadii.sm};\r\n  padding: 1.5px;\r\n\r\n  ${props => colorStyles(props)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledCode.defaultProps = {\r\n  theme: DEFAULT_THEME,\r\n  isMonospace: true,\r\n  hue: 'neutralHue',\r\n  size: 'inherit'\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { ThemeProps, DefaultTheme, css } from 'styled-components';\r\nimport { DEFAULT_THEME, getColor, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'typography.codeblock';\r\n\r\nconst colorStyles = (props: IStyledCodeBlockProps & ThemeProps<DefaultTheme>) => {\r\n  const backgroundColor = getColor('neutralHue', props.isLight ? 100 : 1000, props.theme);\r\n  const foregroundColor = props.isLight\r\n    ? props.theme.colors.foreground\r\n    : getColor('neutralHue', 300, props.theme);\r\n\r\n  return css`\r\n    background-color: ${backgroundColor};\r\n    color: ${foregroundColor};\r\n  `;\r\n};\r\n\r\nexport interface IStyledCodeBlockProps {\r\n  isLight?: boolean;\r\n}\r\n\r\nexport const StyledCodeBlock = styled.pre.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledCodeBlockProps>`\r\n  display: table;\r\n  margin: 0;\r\n  padding: ${props => props.theme.space.base * 3}px;\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  direction: ltr;\r\n  white-space: pre;\r\n  counter-reset: linenumber;\r\n\r\n  ${props => colorStyles(props)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledCodeBlock.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { getColor, DEFAULT_THEME, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'typography.codeblock_container';\r\n\r\nexport const StyledCodeBlockContainer = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  overflow: auto;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &[data-garden-focus-visible] {\r\n    box-shadow: ${props => props.theme.shadows.md(getColor('primaryHue', 600, props.theme, 0.35)!)};\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledCodeBlockContainer.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { Language } from 'prism-react-renderer';\r\nimport { DEFAULT_THEME, retrieveComponentStyles, getColor } from '@zendeskgarden/react-theming';\r\nimport { StyledFont } from './StyledFont';\r\n\r\nconst COMPONENT_ID = 'typography.codeblock_code';\r\n\r\nconst colorStyles = (props: IStyledCodeBlockLineProps & ThemeProps<DefaultTheme>) => {\r\n  let backgroundColor;\r\n\r\n  if (props.diff) {\r\n    let hue;\r\n\r\n    switch (props.diff) {\r\n      case 'hunk':\r\n        hue = 'royal';\r\n        break;\r\n\r\n      case 'add':\r\n        hue = 'lime';\r\n        break;\r\n\r\n      case 'delete':\r\n        hue = 'crimson';\r\n        break;\r\n\r\n      case 'change':\r\n        hue = 'lemon';\r\n        break;\r\n    }\r\n\r\n    backgroundColor = getColor(hue, 400, props.theme, 0.2);\r\n  } else if (props.isHighlighted) {\r\n    const hue = props.isLight ? props.theme.palette.black : props.theme.palette.white;\r\n\r\n    backgroundColor = getColor(hue, 600, props.theme, 0.1);\r\n  }\r\n\r\n  return css`\r\n    background-color: ${backgroundColor};\r\n  `;\r\n};\r\n\r\nconst lineNumberStyles = (props: IStyledCodeBlockLineProps & ThemeProps<DefaultTheme>) => {\r\n  const color = getColor('neutralHue', props.isLight ? 600 : 500, props.theme);\r\n  let padding;\r\n\r\n  if (props.language && props.language === 'diff') {\r\n    padding = 0;\r\n  } else if (props.size === 'sm') {\r\n    padding = props.theme.space.base * 4;\r\n  } else if (props.size === 'lg') {\r\n    padding = props.theme.space.base * 7;\r\n  } else {\r\n    padding = props.theme.space.base * 6;\r\n  }\r\n\r\n  return `\r\n    &::before {\r\n      display: table-cell;\r\n      padding-right: ${padding}px;\r\n      width: 1px;\r\n      text-align: right;\r\n      color: ${color};\r\n      content: counter(linenumber);\r\n      counter-increment: linenumber;\r\n    }\r\n  `;\r\n};\r\n\r\nexport type DIFF = 'hunk' | 'add' | 'delete' | 'change';\r\nexport type SIZE = 'sm' | 'md' | 'lg';\r\n\r\nexport interface IStyledCodeBlockLineProps {\r\n  language?: Language;\r\n  isHighlighted?: boolean;\r\n  isLight?: boolean;\r\n  isNumbered?: boolean;\r\n  diff?: DIFF;\r\n  size?: SIZE;\r\n}\r\n\r\n/**\r\n * 1. Fix line display for mobile.\r\n * 2. Match parent padding for overflow scroll.\r\n */\r\nexport const StyledCodeBlockLine = styled(StyledFont as 'code').attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  as: 'code',\r\n  isMonospace: true\r\n})<IStyledCodeBlockLineProps>`\r\n  display: table-row;\r\n  height: ${props => props.theme.lineHeights[props.size!]}; /* [1] */\r\n  direction: ltr;\r\n\r\n  ${props => colorStyles(props)};\r\n\r\n  ${props => props.isNumbered && lineNumberStyles(props)};\r\n\r\n  &::after {\r\n    display: inline-block;\r\n    width: ${props => props.theme.space.base * 3}px; /* [2] */\r\n    content: '';\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledCodeBlockLine.defaultProps = {\r\n  size: 'md',\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, DefaultTheme, ThemeProps } from 'styled-components';\r\nimport { DEFAULT_THEME, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\nimport { StyledCodeBlock } from './StyledCodeBlock';\r\n\r\nconst COMPONENT_ID = 'typography.codeblock_token';\r\n\r\n/**\r\n * 1. Isolate the tag name.\r\n * 2. Target opening/closing `<`, `/>`.\r\n * 3. Override string tokenization of `=` after an attribute name.\r\n */\r\nconst colorStyles = (props: IStyledCodeBlockTokenProps & ThemeProps<DefaultTheme>) => {\r\n  const palette = props.theme.palette;\r\n  const colors = {\r\n    boolean: props.isLight ? palette.royal[600] : palette.azure[400],\r\n    builtin: palette.teal[400],\r\n    comment: props.isLight ? palette.lime[600] : palette.mint[400],\r\n    constant: props.isLight ? palette.azure[400] : palette.blue[500],\r\n    coord: props.isLight ? palette.purple[600] : palette.blue[200],\r\n    deleted: props.isLight ? palette.red[700] : palette.red[200],\r\n    diff: props.isLight ? palette.yellow[800] : palette.yellow[200],\r\n    function: props.isLight ? palette.orange['M600' as any] : palette.yellow[300],\r\n    inserted: props.isLight ? palette.green[700] : palette.green[200],\r\n    keyword: palette.fuschia['M400' as any],\r\n    name: props.isLight ? palette.crimson[400] : palette.blue[300],\r\n    number: props.isLight ? palette.green[600] : palette.green[300],\r\n    punctuation: props.isLight ? palette.red[800] : palette.grey[600],\r\n    regex: palette.red[400],\r\n    value: props.isLight ? palette.red[700] : palette.crimson['M400' as any]\r\n  };\r\n\r\n  return css`\r\n    /* stylelint-disable selector-max-specificity, max-line-length */\r\n    &.builtin,\r\n    &.class-name,\r\n    &.tag:not(.punctuation):not(.attr-name):not(.attr-value):not(.script) /* [1] */ {\r\n      color: ${colors.builtin};\r\n    }\r\n\r\n    &.doctype,\r\n    &.prolog,\r\n    &.tag.punctuation:not(.attr-value):not(.script):not(.spread) /* [2] */ {\r\n      color: ${colors.punctuation};\r\n    }\r\n\r\n    &.attribute.value,\r\n    &.attr-value,\r\n    &.atrule,\r\n    &.cdata,\r\n    &.string,\r\n    &.url.content {\r\n      color: ${colors.value};\r\n    }\r\n\r\n    &.constant,\r\n    &.interpolation-punctuation {\r\n      color: ${colors.constant};\r\n    }\r\n\r\n    &.attr-name,\r\n    &.attr-value.spread,\r\n    &.environment,\r\n    &.interpolation,\r\n    &.parameter,\r\n    &.property,\r\n    &.property-access,\r\n    &.variable {\r\n      color: ${colors.name};\r\n    }\r\n\r\n    &.parameter.punctuation,\r\n    &.attr-name + .attr-value.punctuation /* [3] */ {\r\n      color: inherit;\r\n    }\r\n\r\n    &.regex {\r\n      color: ${colors.regex};\r\n    }\r\n\r\n    &.boolean,\r\n    &.bold:not(.diff),\r\n    &.entity,\r\n    &.important,\r\n    &.tag:not(.punctuation):not(.attr-name):not(.attr-value):not(.script):not(.class-name) /* [1] */ {\r\n      color: ${colors.boolean};\r\n    }\r\n\r\n    &.number,\r\n    &.unit {\r\n      color: ${colors.number};\r\n    }\r\n\r\n    &.assign-left,\r\n    &.function,\r\n    &.selector:not(.attribute) {\r\n      color: ${colors.function};\r\n    }\r\n\r\n    &.atrule.rule,\r\n    &.keyword {\r\n      color: ${colors.keyword};\r\n    }\r\n\r\n    &.blockquote,\r\n    &.comment,\r\n    &.shebang {\r\n      color: ${colors.comment};\r\n    }\r\n\r\n    /* stylelint-disable declaration-block-semicolon-newline-after, rule-empty-line-before  */\r\n    ${StyledCodeBlock}.language-css &&.plain {\r\n      color: ${colors.value};\r\n    }\r\n\r\n    ${StyledCodeBlock}.language-diff &&.coord {\r\n      color: ${colors.coord};\r\n    }\r\n\r\n    ${StyledCodeBlock}.language-diff &&.deleted {\r\n      color: ${colors.deleted};\r\n    }\r\n\r\n    ${StyledCodeBlock}.language-diff &&.diff {\r\n      color: ${colors.diff};\r\n    }\r\n\r\n    ${StyledCodeBlock}.language-diff &&.inserted {\r\n      color: ${colors.inserted};\r\n    }\r\n    /* stylelint-enable selector-max-specificity,\r\n       max-line-length,\r\n       declaration-block-semicolon-newline-after,\r\n       rule-empty-line-before */\r\n  `;\r\n};\r\n\r\nexport interface IStyledCodeBlockTokenProps {\r\n  isLight?: boolean;\r\n}\r\n\r\nexport const StyledCodeBlockToken = styled.span.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledCodeBlockTokenProps>`\r\n  display: inline-block;\r\n\r\n  &.bold:not(.diff) {\r\n    font-weight: ${props => props.theme.fontWeights.semibold};\r\n  }\r\n\r\n  &.coord {\r\n    padding-left: 0.75em;\r\n  }\r\n\r\n  &.italic {\r\n    font-style: italic;\r\n  }\r\n\r\n  &.prefix {\r\n    width: 2em;\r\n    text-align: center;\r\n  }\r\n\r\n  ${props => colorStyles(props)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledCodeBlockToken.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { DEFAULT_THEME, isRtl, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'typography.ellipsis';\r\n\r\nexport const StyledEllipsis = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})`\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  direction: ${props => (isRtl(props) ? 'rtl' : 'ltr')};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledEllipsis.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, DefaultTheme, ThemeProps } from 'styled-components';\r\nimport { math } from 'polished';\r\nimport {\r\n  DEFAULT_THEME,\r\n  isRtl,\r\n  retrieveComponentStyles,\r\n  getColor\r\n} from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'typography.font';\r\n\r\nconst fontStyles = (props: IStyledFontProps & ThemeProps<DefaultTheme>) => {\r\n  const monospace = props.isMonospace && ['sm', 'md', 'lg', 'inherit'].indexOf(props.size!) !== -1;\r\n  const fontFamily = monospace && props.theme.fonts.mono;\r\n  const direction = isRtl(props) ? 'rtl' : 'ltr';\r\n  let fontSize;\r\n  let fontWeight;\r\n  let lineHeight;\r\n  let color;\r\n\r\n  if (monospace) {\r\n    if (props.size === 'inherit') {\r\n      fontSize = 'calc(1em - 1px)';\r\n      lineHeight = 'normal';\r\n    } else {\r\n      fontSize = math(`${props.theme.fontSizes[props.size!]} - 1px`);\r\n      lineHeight = math(`${props.theme.lineHeights[props.size!]} - 1px`);\r\n    }\r\n  } else if (props.size !== 'inherit') {\r\n    fontSize = props.theme.fontSizes[props.size!];\r\n    lineHeight = props.theme.lineHeights[props.size!];\r\n  }\r\n\r\n  if (props.isBold === true) {\r\n    fontWeight = props.theme.fontWeights.semibold;\r\n  } else if (props.isBold === false || props.size !== 'inherit') {\r\n    fontWeight = props.theme.fontWeights.regular;\r\n  }\r\n\r\n  if (props.hue) {\r\n    const shade = props.hue === 'yellow' ? 700 : 600;\r\n\r\n    color = getColor(props.hue, shade, props.theme);\r\n  }\r\n\r\n  return css`\r\n    line-height: ${lineHeight};\r\n    color: ${color};\r\n    font-family: ${fontFamily};\r\n    font-size: ${fontSize};\r\n    font-weight: ${fontWeight};\r\n    direction: ${direction};\r\n  `;\r\n};\r\n\r\nexport interface IStyledFontProps {\r\n  isBold?: boolean;\r\n  isMonospace?: boolean;\r\n  size?: 'sm' | 'md' | 'lg' | 'xl' | 'xxl' | 'xxxl' | 'inherit';\r\n  hue?: string;\r\n}\r\n\r\nexport const StyledFont = styled.div.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledFontProps>`\r\n  ${props => fontStyles(props)};\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledFont.defaultProps = {\r\n  theme: DEFAULT_THEME,\r\n  size: 'inherit'\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport React, { Children } from 'react';\r\nimport { DEFAULT_THEME, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'typography.icon';\r\n\r\ninterface IStyledIconProps {\r\n  isStart?: boolean;\r\n}\r\n\r\nconst sizeStyles = (props: IStyledIconProps & ThemeProps<DefaultTheme>) => {\r\n  const margin = props.isStart && `${props.theme.space.base * 2}px`;\r\n  const size = props.theme.iconSizes.md;\r\n\r\n  return css`\r\n    /* stylelint-disable-next-line property-no-unknown */\r\n    margin-${props.theme.rtl ? 'left' : 'right'}: ${margin};\r\n    width: ${size};\r\n    height: ${size};\r\n  `;\r\n};\r\n\r\n/* eslint-disable-next-line @typescript-eslint/no-unused-vars */\r\nexport const StyledIcon = styled(({ children, isStart, ...props }) =>\r\n  React.cloneElement(Children.only(children), props)\r\n).attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledIconProps>`\r\n  position: relative;\r\n  top: -1px;\r\n  vertical-align: middle;\r\n\r\n  ${props => sizeStyles(props)};\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledIcon.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, DefaultTheme, ThemeProps } from 'styled-components';\r\nimport { DEFAULT_THEME, isRtl, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\n\r\nconst listStyles = (props: { listType?: string } & ThemeProps<DefaultTheme>) => {\r\n  const rtl = isRtl(props);\r\n\r\n  return css`\r\n    direction: ${rtl ? 'rtl' : 'ltr'};\r\n    margin: 0;\r\n    /* stylelint-disable-next-line property-no-unknown */\r\n    margin-${rtl ? 'right' : 'left'}: 24px;\r\n    padding: 0;\r\n    list-style-position: outside;\r\n    list-style-type: ${props.listType};\r\n  `;\r\n};\r\n\r\nconst ORDERED_ID = 'typography.ordered_list';\r\n\r\ninterface IStyledListProps {\r\n  listType?:\r\n    | 'decimal'\r\n    | 'decimal-leading-zero'\r\n    | 'lower-alpha'\r\n    | 'lower-roman'\r\n    | 'upper-alpha'\r\n    | 'upper-roman';\r\n}\r\n\r\nexport const StyledOrderedList = styled.ol.attrs({\r\n  'data-garden-id': ORDERED_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledListProps>`\r\n  ${props => listStyles(props)};\r\n  ${props => retrieveComponentStyles(ORDERED_ID, props)};\r\n`;\r\n\r\nStyledOrderedList.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n\r\nconst UNORDERED_ID = 'typography.unordered_list';\r\n\r\ninterface IStyledUnorderedListProps {\r\n  listType?: 'circle' | 'disc' | 'square';\r\n}\r\n\r\nexport const StyledUnorderedList = styled.ul.attrs({\r\n  'data-garden-id': UNORDERED_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledUnorderedListProps>`\r\n  ${props => listStyles(props)};\r\n  ${props => retrieveComponentStyles(UNORDERED_ID, props)};\r\n`;\r\n\r\nStyledUnorderedList.defaultProps = {\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled, { css, ThemeProps, DefaultTheme } from 'styled-components';\r\nimport { math } from 'polished';\r\nimport {\r\n  DEFAULT_THEME,\r\n  getLineHeight,\r\n  isRtl,\r\n  retrieveComponentStyles\r\n} from '@zendeskgarden/react-theming';\r\nimport { StyledOrderedList, StyledUnorderedList } from './StyledList';\r\nimport { StyledFont } from './StyledFont';\r\n\r\ninterface IStyledListItemProps {\r\n  space?: 'small' | 'medium' | 'large';\r\n}\r\n\r\nconst listItemPaddingStyles = (props: IStyledListItemProps & ThemeProps<DefaultTheme>) => {\r\n  const base = props.theme.space.base;\r\n  const paddingTop = props.space === 'large' ? `${base * 2}px` : `${base}px`;\r\n\r\n  /**\r\n   * 1. Prevent padding the very first list item.\r\n   * 2. Restore padding on first list items that are nested.\r\n   */\r\n  return css`\r\n    padding-top: ${paddingTop};\r\n\r\n    /* stylelint-disable */\r\n    ${StyledOrderedList} > &:first-child,\r\n    ${StyledUnorderedList} > &:first-child {\r\n      padding-top: 0; /* [1] */\r\n    }\r\n\r\n    ${StyledOrderedList} ${StyledOrderedList} > &:first-child,\r\n    ${StyledOrderedList} ${StyledUnorderedList} > &:first-child,\r\n    ${StyledUnorderedList} ${StyledUnorderedList} > &:first-child,\r\n    ${StyledUnorderedList} ${StyledUnorderedList} > &:first-child {\r\n      padding-top: ${paddingTop}; /* [2] */\r\n    }\r\n    /* stylelint-enable */\r\n  `;\r\n};\r\n\r\nconst listItemStyles = (props: IStyledListItemProps & ThemeProps<DefaultTheme>) => {\r\n  return css`\r\n    line-height: ${getLineHeight(props.theme.lineHeights.md, props.theme.fontSizes.md)};\r\n\r\n    ${props.space !== 'small' && listItemPaddingStyles(props)};\r\n  `;\r\n};\r\n\r\nconst ORDERED_ID = 'typography.ordered_list_item';\r\n\r\nexport const StyledOrderedListItem = styled(StyledFont as 'li').attrs({\r\n  'data-garden-id': ORDERED_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  as: 'li'\r\n})<IStyledListItemProps>`\r\n  /* stylelint-disable */\r\n  margin-${props => (isRtl(props) ? 'right' : 'left')}: ${props =>\r\n  math(`${props.theme.space.base} * -1px`)};\r\n  padding-${props => (isRtl(props) ? 'right' : 'left')}: ${props =>\r\n  math(`${props.theme.space.base} * 1px`)};\r\n  /* stylelint-enable */\r\n\r\n  ${props => listItemStyles(props)};\r\n\r\n  ${props => retrieveComponentStyles(ORDERED_ID, props)};\r\n`;\r\n\r\nStyledOrderedListItem.defaultProps = {\r\n  space: 'medium',\r\n  theme: DEFAULT_THEME\r\n};\r\n\r\nconst UNORDERED_ID = 'typography.unordered_list_item';\r\n\r\nexport const StyledUnorderedListItem = styled(StyledFont as 'li').attrs({\r\n  'data-garden-id': UNORDERED_ID,\r\n  'data-garden-version': PACKAGE_VERSION,\r\n  as: 'li'\r\n})<IStyledListItemProps>`\r\n  ${props => listItemStyles(props)};\r\n\r\n  ${props => retrieveComponentStyles(UNORDERED_ID, props)};\r\n`;\r\n\r\nStyledUnorderedListItem.defaultProps = {\r\n  space: 'medium',\r\n  theme: DEFAULT_THEME\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport styled from 'styled-components';\r\nimport { DEFAULT_THEME, retrieveComponentStyles } from '@zendeskgarden/react-theming';\r\n\r\nconst COMPONENT_ID = 'typography.paragraph';\r\n\r\ninterface IStyledParagraphProps {\r\n  size?: 'sm' | 'md' | 'lg';\r\n}\r\n\r\nexport const StyledParagraph = styled.p.attrs({\r\n  'data-garden-id': COMPONENT_ID,\r\n  'data-garden-version': PACKAGE_VERSION\r\n})<IStyledParagraphProps>`\r\n  margin: 0;\r\n  padding: 0;\r\n  direction: ${props => (props.theme.rtl ? 'rtl' : 'ltr')};\r\n\r\n  blockquote + &,\r\n  & + & {\r\n    margin-top: ${props => props.theme.lineHeights[props.size!]};\r\n  }\r\n\r\n  ${props => retrieveComponentStyles(COMPONENT_ID, props)};\r\n`;\r\n\r\nStyledParagraph.defaultProps = {\r\n  theme: DEFAULT_THEME,\r\n  size: 'md'\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { createContext, useContext } from 'react';\r\n\r\ninterface IOrderedListContext {\r\n  size: 'small' | 'medium' | 'large';\r\n}\r\n\r\nexport const OrderedListContext = createContext<IOrderedListContext | undefined>(undefined);\r\n\r\n/**\r\n * Retrieve OrderedList component context\r\n */\r\nconst useOrderedListContext = () => {\r\n  const listContext = useContext(OrderedListContext);\r\n\r\n  if (!listContext) {\r\n    throw new Error('This component must be rendered within an `OrderedList` component.');\r\n  }\r\n\r\n  return listContext;\r\n};\r\n\r\nexport default useOrderedListContext;\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport { createContext, useContext } from 'react';\r\n\r\ninterface IUnorderedListContext {\r\n  size: 'small' | 'medium' | 'large';\r\n}\r\n\r\nexport const UnorderedListContext = createContext<IUnorderedListContext | undefined>(undefined);\r\n\r\n/**\r\n * Retrieve UnorderedList component context\r\n */\r\nconst useUnorderedListContext = () => {\r\n  const listContext = useContext(UnorderedListContext);\r\n\r\n  if (!listContext) {\r\n    throw new Error('This component must be rendered within an `UnorderedList` component.');\r\n  }\r\n\r\n  return listContext;\r\n};\r\n\r\nexport default useUnorderedListContext;\r\n","import '@storybook/react';","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Description } from '@storybook/addon-docs';\nimport README from '../README.md';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Accordions/README\" mdxType=\"Meta\" />\n    <Description mdxType=\"Description\">{README}</Description>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Packages/Accordions/README', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport { Accordion } from '@zendeskgarden/react-accordions';\nimport { AccordionStory } from './stories/AccordionStory';\nimport { ACCORDION_SECTIONS as SECTIONS } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Accordions/Accordion\" component={Accordion} subcomponents={{\n      'Accordion.Header': Accordion.Header,\n      'Accordion.Label': Accordion.Label,\n      'Accordion.Panel': Accordion.Panel,\n      'Accordion.Section': Accordion.Section\n    }} args={{\n      isAnimated: true,\n      level: 1,\n      hasIconButtons: false,\n      sections: SECTIONS\n    }} argTypes={{\n      hasIconButtons: {\n        name: 'Accordion.Header icon buttons',\n        table: {\n          category: 'Story'\n        }\n      },\n      sections: {\n        name: 'Accordion.Section[]',\n        table: {\n          category: 'Story'\n        }\n      }\n    }} parameters={{\n      design: {\n        allowFullscreen: true,\n        type: 'figma',\n        url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A16471'\n      }\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <h2 {...{\n      \"id\": \"uncontrolled\"\n    }}>{`Uncontrolled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Uncontrolled\" args={{\n        isCollapsible: true\n      }} argTypes={{\n        expandedSections: {\n          control: false\n        }\n      }} mdxType=\"Story\">\n    {args => <AccordionStory {...args} mdxType=\"AccordionStory\" />}\n  </Story>\n    </Canvas>\n    <h2 {...{\n      \"id\": \"controlled\"\n    }}>{`Controlled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Controlled\" args={{\n        expandedSections: [2]\n      }} argTypes={{\n        defaultExpandedSections: {\n          control: false\n        },\n        isCollapsible: {\n          control: false\n        },\n        isExpandable: {\n          control: false\n        }\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleChange = index => {\n            const expandedSections = args.expandedSections.includes(index) ? args.expandedSections.filter(section => section !== index) : [...args.expandedSections, index];\n            updateArgs({\n              expandedSections\n            });\n          };\n\n          return <AccordionStory {...args} onChange={handleChange} mdxType=\"AccordionStory\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const uncontrolled = (args => <AccordionStory {...args} />);\nuncontrolled.storyName = 'Uncontrolled';\nuncontrolled.argTypes = {\n  expandedSections: {\n    control: false\n  }\n};\nuncontrolled.args = {\n  isCollapsible: true\n};\nuncontrolled.parameters = { storySource: { source: 'args => <AccordionStory {...args} />' } };\n\nexport const controlled = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleChange = index => {\n    const expandedSections = args.expandedSections.includes(index) ? args.expandedSections.filter(section => section !== index) : [...args.expandedSections, index];\n    updateArgs({\n      expandedSections\n    });\n  };\n\n  return <AccordionStory {...args} onChange={handleChange} />;\n});\ncontrolled.storyName = 'Controlled';\ncontrolled.argTypes = {\n  defaultExpandedSections: {\n    control: false\n  },\n  isCollapsible: {\n    control: false\n  },\n  isExpandable: {\n    control: false\n  }\n};\ncontrolled.args = {\n  expandedSections: [2]\n};\ncontrolled.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleChange = index => {\\n    const expandedSections = args.expandedSections.includes(index) ? args.expandedSections.filter(section => section !== index) : [...args.expandedSections, index];\\n    updateArgs({\\n      expandedSections\\n    });\\n  };\\n\\n  return <AccordionStory {...args} onChange={handleChange} />;\\n}' } };\n\nconst componentMeta = { title: 'Packages/Accordions/Accordion', parameters: {\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A16471'\n  }\n}, component: Accordion, subcomponents: {\n  'Accordion.Header': Accordion.Header,\n  'Accordion.Label': Accordion.Label,\n  'Accordion.Panel': Accordion.Panel,\n  'Accordion.Section': Accordion.Section\n}, args: {\n  isAnimated: true,\n  level: 1,\n  hasIconButtons: false,\n  sections: SECTIONS\n}, argTypes: {\n  hasIconButtons: {\n    name: 'Accordion.Header icon buttons',\n    table: {\n      category: 'Story'\n    }\n  },\n  sections: {\n    name: 'Accordion.Section[]',\n    table: {\n      category: 'Story'\n    }\n  }\n}, includeStories: [\"uncontrolled\",\"controlled\"],  };\n\nconst mdxStoryNameToKey = {\"Uncontrolled\":\"uncontrolled\",\"Controlled\":\"controlled\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { Stepper } from '@zendeskgarden/react-accordions';\nimport { StepperStory } from './stories/StepperStory';\nimport { STEPPER_STEPS as STEPS } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Accordions/Stepper\" component={Stepper} subcomponents={{\n      'Stepper.Content': Stepper.Content,\n      'Stepper.Label': Stepper.Label,\n      'Stepper.Step': Stepper.Step\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Stepper\" args={{\n        hasIcon: false,\n        isLabelHidden: false,\n        steps: STEPS\n      }} argTypes={{\n        hasIcon: {\n          name: 'icon',\n          table: {\n            category: 'Stepper.Label'\n          }\n        },\n        isLabelHidden: {\n          name: 'isHidden',\n          table: {\n            category: 'Stepper.Label'\n          }\n        },\n        steps: {\n          name: 'Stepper.Step[]',\n          table: {\n            category: 'Story'\n          }\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=171%3A12818'\n        }\n      }} mdxType=\"Story\">\n    {args => <StepperStory {...args} mdxType=\"StepperStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const stepper = (args => <StepperStory {...args} />);\nstepper.storyName = 'Stepper';\nstepper.argTypes = {\n  hasIcon: {\n    name: 'icon',\n    table: {\n      category: 'Stepper.Label'\n    }\n  },\n  isLabelHidden: {\n    name: 'isHidden',\n    table: {\n      category: 'Stepper.Label'\n    }\n  },\n  steps: {\n    name: 'Stepper.Step[]',\n    table: {\n      category: 'Story'\n    }\n  }\n};\nstepper.args = {\n  hasIcon: false,\n  isLabelHidden: false,\n  steps: STEPS\n};\nstepper.parameters = { storySource: { source: 'args => <StepperStory {...args} />' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=171%3A12818'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Accordions/Stepper', component: Stepper, subcomponents: {\n  'Stepper.Content': Stepper.Content,\n  'Stepper.Label': Stepper.Label,\n  'Stepper.Step': Stepper.Step\n}, includeStories: [\"stepper\"],  };\n\nconst mdxStoryNameToKey = {\"Stepper\":\"stepper\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { Timeline } from '@zendeskgarden/react-accordions';\nimport { TimelineStory } from './stories/TimelineStory';\nimport { TIMELINE_ITEMS as ITEMS } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Accordions/Timeline\" component={Timeline} subcomponents={{\n      'Timeline.Content': Timeline.Content,\n      'Timeline.Item': Timeline.Item,\n      'Timeline.OppositeContent': Timeline.OppositeContent\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Timeline\" args={{\n        hasIcon: false,\n        hasOppositeContent: false,\n        items: ITEMS\n      }} argTypes={{\n        hasIcon: {\n          name: 'icon',\n          table: {\n            category: 'Timeline.Item'\n          }\n        },\n        surfaceColor: {\n          name: 'surfaceColor',\n          control: {\n            type: 'color'\n          },\n          table: {\n            category: 'Timeline.Item'\n          }\n        },\n        hasOppositeContent: {\n          name: 'Timeline.OppositeContent',\n          table: {\n            category: 'Story'\n          }\n        },\n        items: {\n          name: 'Timeline.Item[]',\n          table: {\n            category: 'Story'\n          }\n        }\n      }} mdxType=\"Story\">\n    {args => <TimelineStory {...args} mdxType=\"TimelineStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const timeline = (args => <TimelineStory {...args} />);\ntimeline.storyName = 'Timeline';\ntimeline.argTypes = {\n  hasIcon: {\n    name: 'icon',\n    table: {\n      category: 'Timeline.Item'\n    }\n  },\n  surfaceColor: {\n    name: 'surfaceColor',\n    control: {\n      type: 'color'\n    },\n    table: {\n      category: 'Timeline.Item'\n    }\n  },\n  hasOppositeContent: {\n    name: 'Timeline.OppositeContent',\n    table: {\n      category: 'Story'\n    }\n  },\n  items: {\n    name: 'Timeline.Item[]',\n    table: {\n      category: 'Story'\n    }\n  }\n};\ntimeline.args = {\n  hasIcon: false,\n  hasOppositeContent: false,\n  items: ITEMS\n};\ntimeline.parameters = { storySource: { source: 'args => <TimelineStory {...args} />' } };\n\nconst componentMeta = { title: 'Packages/Accordions/Timeline', component: Timeline, subcomponents: {\n  'Timeline.Content': Timeline.Content,\n  'Timeline.Item': Timeline.Item,\n  'Timeline.OppositeContent': Timeline.OppositeContent\n}, includeStories: [\"timeline\"],  };\n\nconst mdxStoryNameToKey = {\"Timeline\":\"timeline\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Description } from '@storybook/addon-docs';\nimport README from '../README.md';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Avatars/README\" mdxType=\"Meta\" />\n    <Description mdxType=\"Description\">{README}</Description>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Packages/Avatars/README', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { Avatar } from '@zendeskgarden/react-avatars';\nimport { AvatarStory } from './stories/AvatarStory';\nimport { AVATAR_TYPE as TYPE } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Avatars/Avatar\" component={Avatar} subcomponents={{\n      'Avatar.Text': Avatar.Text\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Avatar\" args={{\n        type: TYPE[1]\n      }} argTypes={{\n        backgroundColor: {\n          control: 'color'\n        },\n        badge: {\n          control: 'number'\n        },\n        foregroundColor: {\n          control: 'color'\n        },\n        children: {\n          control: 'text',\n          table: {\n            category: 'Avatar.Text'\n          }\n        },\n        type: {\n          control: 'radio',\n          options: TYPE,\n          table: {\n            category: 'Story'\n          }\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=102%3A110'\n        }\n      }} mdxType=\"Story\">\n    {args => <AvatarStory {...args} mdxType=\"AvatarStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const avatar = (args => <AvatarStory {...args} />);\navatar.storyName = 'Avatar';\navatar.argTypes = {\n  backgroundColor: {\n    control: 'color'\n  },\n  badge: {\n    control: 'number'\n  },\n  foregroundColor: {\n    control: 'color'\n  },\n  children: {\n    control: 'text',\n    table: {\n      category: 'Avatar.Text'\n    }\n  },\n  type: {\n    control: 'radio',\n    options: TYPE,\n    table: {\n      category: 'Story'\n    }\n  }\n};\navatar.args = {\n  type: TYPE[1]\n};\navatar.parameters = { storySource: { source: 'args => <AvatarStory {...args} />' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=102%3A110'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Avatars/Avatar', component: Avatar, subcomponents: {\n  'Avatar.Text': Avatar.Text\n}, includeStories: [\"avatar\"],  };\n\nconst mdxStoryNameToKey = {\"Avatar\":\"avatar\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Canvas, Story } from '@storybook/addon-docs';\nimport { Avatar } from '@zendeskgarden/react-avatars';\nimport { MenuStory } from './stories/MenuStory';\nimport { ChromeStory } from './stories/ChromeStory';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Avatars/[patterns]\" component={Avatar} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"patterns\"\n    }}>{`Patterns`}</h1>\n    <h2 {...{\n      \"id\": \"chrome\"\n    }}>{`Chrome`}</h2>\n    <p>{`Use an `}<inlineCode parentName=\"p\">{`extrasmall`}</inlineCode>{` avatar within a Chrome `}<inlineCode parentName=\"p\">{`HeaderItem`}</inlineCode>{` in order to provide a\nuser profile menu. Remember to add the `}<inlineCode parentName=\"p\">{`isRound`}</inlineCode>{` prop to the header item so that\nthe keyboard focus ring is properly styled. Status may be added to this avatar\nwithout impacting the height of the header. See the code for details.`}</p>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Chrome\" parameters={{\n        controls: {\n          include: ['badge', 'status']\n        }\n      }} argTypes={{\n        badge: {\n          control: 'boolean'\n        }\n      }} mdxType=\"Story\">\n    {args => <ChromeStory {...args} badge={args.badge ? 1 : undefined} mdxType=\"ChromeStory\" />}\n  </Story>\n    </Canvas>\n    <h2 {...{\n      \"id\": \"menu\"\n    }}>{`Menu`}</h2>\n    <p>{`The following example demonstrates intended avatar sizing within menus.\nAdditionally, note the detail of dynamically modifying `}<inlineCode parentName=\"p\">{`surfaceColor`}</inlineCode>{` to blend\nwith the menu item's highlight color on focus and hover. See the code for\ndetails.`}</p>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Menu\" parameters={{\n        controls: {\n          include: ['isCompact']\n        }\n      }} args={{\n        isCompact: false\n      }} argTypes={{\n        isCompact: {\n          control: 'boolean'\n        }\n      }} mdxType=\"Story\">\n    {args => <MenuStory {...args} mdxType=\"MenuStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const chrome = (args => <ChromeStory {...args} badge={args.badge ? 1 : undefined} />);\nchrome.storyName = 'Chrome';\nchrome.argTypes = {\n  badge: {\n    control: 'boolean'\n  }\n};\nchrome.parameters = { storySource: { source: 'args => <ChromeStory {...args} badge={args.badge ? 1 : undefined} />' }, ...{\n  controls: {\n    include: ['badge', 'status']\n  }\n} };\n\nexport const menu = (args => <MenuStory {...args} />);\nmenu.storyName = 'Menu';\nmenu.argTypes = {\n  isCompact: {\n    control: 'boolean'\n  }\n};\nmenu.args = {\n  isCompact: false\n};\nmenu.parameters = { storySource: { source: 'args => <MenuStory {...args} />' }, ...{\n  controls: {\n    include: ['isCompact']\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Avatars/[patterns]', component: Avatar, includeStories: [\"chrome\",\"menu\"],  };\n\nconst mdxStoryNameToKey = {\"Chrome\":\"chrome\",\"Menu\":\"menu\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Description } from '@storybook/addon-docs';\nimport README from '../README.md';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Breadcrumbs/README\" mdxType=\"Meta\" />\n    <Description mdxType=\"Description\">{README}</Description>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Packages/Breadcrumbs/README', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Canvas, Story } from '@storybook/addon-docs';\nimport { Breadcrumb } from '@zendeskgarden/react-breadcrumbs';\nimport { BreadcrumbStory } from './stories/BreadcrumbStory';\nimport { BREADCRUMB_CHILDREN as CHILDREN } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Breadcrumbs/Breadcrumb\" component={Breadcrumb} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Breadcrumb\" args={{\n        children: CHILDREN\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=171%3A13406'\n        }\n      }} mdxType=\"Story\">\n    {args => <BreadcrumbStory {...args} mdxType=\"BreadcrumbStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const breadcrumb = (args => <BreadcrumbStory {...args} />);\nbreadcrumb.storyName = 'Breadcrumb';\nbreadcrumb.args = {\n  children: CHILDREN\n};\nbreadcrumb.parameters = { storySource: { source: 'args => <BreadcrumbStory {...args} />' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=171%3A13406'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Breadcrumbs/Breadcrumb', component: Breadcrumb, includeStories: [\"breadcrumb\"],  };\n\nconst mdxStoryNameToKey = {\"Breadcrumb\":\"breadcrumb\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Description } from '@storybook/addon-docs';\nimport README from '../README.md';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Buttons/README\" mdxType=\"Meta\" />\n    <Description mdxType=\"Description\">{README}</Description>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Packages/Buttons/README', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { Anchor } from '@zendeskgarden/react-buttons';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Buttons/Anchor\" component={Anchor} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story args={{\n        children: 'Text'\n      }} name=\"Anchor\" parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=1494%3A0'\n        }\n      }} mdxType=\"Story\">\n    {args => <Anchor {...args} mdxType=\"Anchor\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const anchor = (args => <Anchor {...args} />);\nanchor.storyName = 'Anchor';\nanchor.args = {\n  children: 'Text'\n};\nanchor.parameters = { storySource: { source: 'args => <Anchor {...args} />' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=1494%3A0'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Buttons/Anchor', component: Anchor, includeStories: [\"anchor\"],  };\n\nconst mdxStoryNameToKey = {\"Anchor\":\"anchor\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { Button } from '@zendeskgarden/react-buttons';\nimport { ButtonStory } from './stories/ButtonStory';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Buttons/Button\" component={Button} subcomponents={{\n      'Button.StartIcon': Button.StartIcon,\n      'Button.EndIcon': Button.EndIcon\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Button\" args={{\n        children: 'Text',\n        hasStartIcon: false,\n        hasEndIcon: false\n      }} argTypes={{\n        disabled: {\n          control: 'boolean'\n        },\n        isEndIconRotated: {\n          name: 'isRotated',\n          control: 'boolean',\n          table: {\n            category: 'Button.EndIcon'\n          }\n        },\n        isStartIconRotated: {\n          name: 'isRotated',\n          control: 'boolean',\n          table: {\n            category: 'Button.StartIcon'\n          }\n        },\n        hasStartIcon: {\n          name: 'Button.StartIcon',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasEndIcon: {\n          name: 'Button.EndIcon',\n          table: {\n            category: 'Story'\n          }\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=1494%3A1'\n        }\n      }} mdxType=\"Story\">\n    {args => <ButtonStory {...args} mdxType=\"ButtonStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const button = (args => <ButtonStory {...args} />);\nbutton.storyName = 'Button';\nbutton.argTypes = {\n  disabled: {\n    control: 'boolean'\n  },\n  isEndIconRotated: {\n    name: 'isRotated',\n    control: 'boolean',\n    table: {\n      category: 'Button.EndIcon'\n    }\n  },\n  isStartIconRotated: {\n    name: 'isRotated',\n    control: 'boolean',\n    table: {\n      category: 'Button.StartIcon'\n    }\n  },\n  hasStartIcon: {\n    name: 'Button.StartIcon',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasEndIcon: {\n    name: 'Button.EndIcon',\n    table: {\n      category: 'Story'\n    }\n  }\n};\nbutton.args = {\n  children: 'Text',\n  hasStartIcon: false,\n  hasEndIcon: false\n};\nbutton.parameters = { storySource: { source: 'args => <ButtonStory {...args} />' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=1494%3A1'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Buttons/Button', component: Button, subcomponents: {\n  'Button.StartIcon': Button.StartIcon,\n  'Button.EndIcon': Button.EndIcon\n}, includeStories: [\"button\"],  };\n\nconst mdxStoryNameToKey = {\"Button\":\"button\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport { ButtonGroup, Button } from '@zendeskgarden/react-buttons';\nimport { ButtonGroupStory } from './stories/ButtonGroupStory';\nimport { BUTTON_GROUP_BUTTONS as BUTTONS } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Buttons/ButtonGroup\" component={ButtonGroup} subcomponents={{\n      Button\n    }} args={{\n      buttons: BUTTONS\n    }} argTypes={{\n      disabled: {\n        control: 'boolean',\n        table: {\n          category: 'Button'\n        }\n      },\n      isBasic: {\n        control: 'boolean',\n        table: {\n          category: 'Button'\n        }\n      },\n      isDanger: {\n        control: 'boolean',\n        table: {\n          category: 'Button'\n        }\n      },\n      isNeutral: {\n        control: 'boolean',\n        table: {\n          category: 'Button'\n        }\n      },\n      isPill: {\n        control: 'boolean',\n        table: {\n          category: 'Button'\n        }\n      },\n      isPrimary: {\n        control: 'boolean',\n        table: {\n          category: 'Button'\n        }\n      },\n      size: {\n        control: 'radio',\n        options: ['small', 'medium', 'large'],\n        table: {\n          category: 'Button'\n        }\n      },\n      buttons: {\n        name: 'Button[]',\n        table: {\n          category: 'Story'\n        }\n      }\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <h2 {...{\n      \"id\": \"uncontrolled\"\n    }}>{`Uncontrolled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Uncontrolled\" mdxType=\"Story\">{args => <ButtonGroupStory {...args} mdxType=\"ButtonGroupStory\" />}</Story>\n    </Canvas>\n    <h2 {...{\n      \"id\": \"controlled\"\n    }}>{`Controlled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Controlled\" args={{\n        selectedItem: BUTTONS[1].value\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleSelect = selectedItem => updateArgs({\n            selectedItem\n          });\n\n          return <ButtonGroupStory {...args} onSelect={handleSelect} mdxType=\"ButtonGroupStory\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const uncontrolled = (args => <ButtonGroupStory {...args} />);\nuncontrolled.storyName = 'Uncontrolled';\nuncontrolled.parameters = { storySource: { source: 'args => <ButtonGroupStory {...args} />' } };\n\nexport const controlled = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleSelect = selectedItem => updateArgs({\n    selectedItem\n  });\n\n  return <ButtonGroupStory {...args} onSelect={handleSelect} />;\n});\ncontrolled.storyName = 'Controlled';\ncontrolled.args = {\n  selectedItem: BUTTONS[1].value\n};\ncontrolled.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleSelect = selectedItem => updateArgs({\\n    selectedItem\\n  });\\n\\n  return <ButtonGroupStory {...args} onSelect={handleSelect} />;\\n}' } };\n\nconst componentMeta = { title: 'Packages/Buttons/ButtonGroup', component: ButtonGroup, subcomponents: {\n  Button\n}, args: {\n  buttons: BUTTONS\n}, argTypes: {\n  disabled: {\n    control: 'boolean',\n    table: {\n      category: 'Button'\n    }\n  },\n  isBasic: {\n    control: 'boolean',\n    table: {\n      category: 'Button'\n    }\n  },\n  isDanger: {\n    control: 'boolean',\n    table: {\n      category: 'Button'\n    }\n  },\n  isNeutral: {\n    control: 'boolean',\n    table: {\n      category: 'Button'\n    }\n  },\n  isPill: {\n    control: 'boolean',\n    table: {\n      category: 'Button'\n    }\n  },\n  isPrimary: {\n    control: 'boolean',\n    table: {\n      category: 'Button'\n    }\n  },\n  size: {\n    control: 'radio',\n    options: ['small', 'medium', 'large'],\n    table: {\n      category: 'Button'\n    }\n  },\n  buttons: {\n    name: 'Button[]',\n    table: {\n      category: 'Story'\n    }\n  }\n}, includeStories: [\"uncontrolled\",\"controlled\"],  };\n\nconst mdxStoryNameToKey = {\"Uncontrolled\":\"uncontrolled\",\"Controlled\":\"controlled\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport { ChevronButton } from '@zendeskgarden/react-buttons';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Buttons/ChevronButton\" component={ChevronButton} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"ChevronButton\" args={{\n        'aria-label': 'Label'\n      }} argTypes={{\n        disabled: {\n          control: 'boolean'\n        }\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleClick = () => updateArgs({\n            isRotated: args.isRotated ? false : true\n          });\n\n          return <ChevronButton {...args} onClick={handleClick} mdxType=\"ChevronButton\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const chevronButton = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleClick = () => updateArgs({\n    isRotated: args.isRotated ? false : true\n  });\n\n  return <ChevronButton {...args} onClick={handleClick} />;\n});\nchevronButton.storyName = 'ChevronButton';\nchevronButton.argTypes = {\n  disabled: {\n    control: 'boolean'\n  }\n};\nchevronButton.args = {\n  'aria-label': 'Label'\n};\nchevronButton.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleClick = () => updateArgs({\\n    isRotated: args.isRotated ? false : true\\n  });\\n\\n  return <ChevronButton {...args} onClick={handleClick} />;\\n}' } };\n\nconst componentMeta = { title: 'Packages/Buttons/ChevronButton', component: ChevronButton, includeStories: [\"chevronButton\"],  };\n\nconst mdxStoryNameToKey = {\"ChevronButton\":\"chevronButton\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { IconButton } from '@zendeskgarden/react-buttons';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Buttons/IconButton\" component={IconButton} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"IconButton\" args={{\n        'aria-label': 'Label',\n        isBasic: true,\n        isPill: true\n      }} argTypes={{\n        disabled: {\n          control: 'boolean'\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=1494%3A11'\n        }\n      }} mdxType=\"Story\">\n    {args => <IconButton {...args} mdxType=\"IconButton\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\n  <g fill=\"none\" stroke=\"currentColor\">\n    <circle cx=\"8\" cy=\"8\" r=\"7.5\" />\n    <path stroke-linecap=\"round\" d=\"M4 9c.4 1.7 2.1 3 4 3s3.6-1.3 4-3\" />\n  </g>\n  <g fill=\"currentColor\">\n    <circle cx=\"6\" cy=\"6\" r=\"1\" />\n    <circle cx=\"10\" cy=\"6\" r=\"1\" />\n  </g>\n      </svg>\n      </IconButton>}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const iconButton = (args => <IconButton {...args}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\n  <g fill=\"none\" stroke=\"currentColor\">\n    <circle cx=\"8\" cy=\"8\" r=\"7.5\" />\n    <path stroke-linecap=\"round\" d=\"M4 9c.4 1.7 2.1 3 4 3s3.6-1.3 4-3\" />\n  </g>\n  <g fill=\"currentColor\">\n    <circle cx=\"6\" cy=\"6\" r=\"1\" />\n    <circle cx=\"10\" cy=\"6\" r=\"1\" />\n  </g>\n      </svg>\n      </IconButton>);\niconButton.storyName = 'IconButton';\niconButton.argTypes = {\n  disabled: {\n    control: 'boolean'\n  }\n};\niconButton.args = {\n  'aria-label': 'Label',\n  isBasic: true,\n  isPill: true\n};\niconButton.parameters = { storySource: { source: 'args => <IconButton {...args}>\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" focusable=\\\"false\\\" viewBox=\\\"0 0 16 16\\\">\\n  <g fill=\\\"none\\\" stroke=\\\"currentColor\\\">\\n    <circle cx=\\\"8\\\" cy=\\\"8\\\" r=\\\"7.5\\\" />\\n    <path stroke-linecap=\\\"round\\\" d=\\\"M4 9c.4 1.7 2.1 3 4 3s3.6-1.3 4-3\\\" />\\n  </g>\\n  <g fill=\\\"currentColor\\\">\\n    <circle cx=\\\"6\\\" cy=\\\"6\\\" r=\\\"1\\\" />\\n    <circle cx=\\\"10\\\" cy=\\\"6\\\" r=\\\"1\\\" />\\n  </g>\\n      </svg>\\n      </IconButton>' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=1494%3A11'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Buttons/IconButton', component: IconButton, includeStories: [\"iconButton\"],  };\n\nconst mdxStoryNameToKey = {\"IconButton\":\"iconButton\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { SplitButton, Button, ChevronButton } from '@zendeskgarden/react-buttons';\nimport { SplitButtonStory } from './stories/SplitButtonStory';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Buttons/SplitButton\" component={SplitButton} subcomponents={{\n      Button,\n      ChevronButton\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"SplitButton\" args={{\n        'aria-label': 'Label',\n        children: 'Text'\n      }} argTypes={{\n        children: {\n          table: {\n            category: 'Button'\n          }\n        },\n        disabled: {\n          control: 'boolean',\n          table: {\n            category: 'Button'\n          }\n        },\n        isBasic: {\n          control: 'boolean',\n          table: {\n            category: 'Button'\n          }\n        },\n        isDanger: {\n          control: 'boolean',\n          table: {\n            category: 'Button'\n          }\n        },\n        isNeutral: {\n          control: 'boolean',\n          table: {\n            category: 'Button'\n          }\n        },\n        isPill: {\n          control: 'boolean',\n          table: {\n            category: 'Button'\n          }\n        },\n        isPrimary: {\n          control: 'boolean',\n          table: {\n            category: 'Button'\n          }\n        },\n        size: {\n          control: 'radio',\n          options: ['small', 'medium', 'large'],\n          table: {\n            category: 'Button'\n          }\n        },\n        'aria-label': {\n          table: {\n            category: 'ChevronButton'\n          }\n        },\n        isRotated: {\n          control: 'boolean',\n          table: {\n            category: 'ChevronButton'\n          }\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=1496%3A28676'\n        }\n      }} mdxType=\"Story\">\n    {args => <SplitButtonStory {...args} mdxType=\"SplitButtonStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const splitButton = (args => <SplitButtonStory {...args} />);\nsplitButton.storyName = 'SplitButton';\nsplitButton.argTypes = {\n  children: {\n    table: {\n      category: 'Button'\n    }\n  },\n  disabled: {\n    control: 'boolean',\n    table: {\n      category: 'Button'\n    }\n  },\n  isBasic: {\n    control: 'boolean',\n    table: {\n      category: 'Button'\n    }\n  },\n  isDanger: {\n    control: 'boolean',\n    table: {\n      category: 'Button'\n    }\n  },\n  isNeutral: {\n    control: 'boolean',\n    table: {\n      category: 'Button'\n    }\n  },\n  isPill: {\n    control: 'boolean',\n    table: {\n      category: 'Button'\n    }\n  },\n  isPrimary: {\n    control: 'boolean',\n    table: {\n      category: 'Button'\n    }\n  },\n  size: {\n    control: 'radio',\n    options: ['small', 'medium', 'large'],\n    table: {\n      category: 'Button'\n    }\n  },\n  'aria-label': {\n    table: {\n      category: 'ChevronButton'\n    }\n  },\n  isRotated: {\n    control: 'boolean',\n    table: {\n      category: 'ChevronButton'\n    }\n  }\n};\nsplitButton.args = {\n  'aria-label': 'Label',\n  children: 'Text'\n};\nsplitButton.parameters = { storySource: { source: 'args => <SplitButtonStory {...args} />' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=1496%3A28676'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Buttons/SplitButton', component: SplitButton, subcomponents: {\n  Button,\n  ChevronButton\n}, includeStories: [\"splitButton\"],  };\n\nconst mdxStoryNameToKey = {\"SplitButton\":\"splitButton\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport { ToggleButton } from '@zendeskgarden/react-buttons';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Buttons/ToggleButton\" component={ToggleButton} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"ToggleButton\" args={{\n        children: 'Text'\n      }} argTypes={{\n        disabled: {\n          control: 'boolean'\n        },\n        isPressed: {\n          control: 'radio',\n          options: [false, true, 'mixed']\n        }\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleClick = () => updateArgs({\n            isPressed: args.isPressed ? false : true\n          });\n\n          return <ToggleButton {...args} onClick={handleClick} mdxType=\"ToggleButton\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const toggleButton = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleClick = () => updateArgs({\n    isPressed: args.isPressed ? false : true\n  });\n\n  return <ToggleButton {...args} onClick={handleClick} />;\n});\ntoggleButton.storyName = 'ToggleButton';\ntoggleButton.argTypes = {\n  disabled: {\n    control: 'boolean'\n  },\n  isPressed: {\n    control: 'radio',\n    options: [false, true, 'mixed']\n  }\n};\ntoggleButton.args = {\n  children: 'Text'\n};\ntoggleButton.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleClick = () => updateArgs({\\n    isPressed: args.isPressed ? false : true\\n  });\\n\\n  return <ToggleButton {...args} onClick={handleClick} />;\\n}' } };\n\nconst componentMeta = { title: 'Packages/Buttons/ToggleButton', component: ToggleButton, includeStories: [\"toggleButton\"],  };\n\nconst mdxStoryNameToKey = {\"ToggleButton\":\"toggleButton\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport { ToggleIconButton } from '@zendeskgarden/react-buttons';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Buttons/ToggleIconButton\" component={ToggleIconButton} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"ToggleIconButton\" args={{\n        'aria-label': 'Label',\n        isBasic: true,\n        isPill: true\n      }} argTypes={{\n        disabled: {\n          control: 'boolean'\n        },\n        isPressed: {\n          control: 'radio',\n          options: [false, true, 'mixed']\n        }\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleClick = () => updateArgs({\n            isPressed: args.isPressed ? false : true\n          });\n\n          return <ToggleIconButton {...args} onClick={handleClick} mdxType=\"ToggleIconButton\">\n          {args.isPressed === true ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\n  <path fill=\"currentColor\" d=\"M12.29 15.56c-.19 0-.38-.05-.54-.16L8 12.97 4.25 15.4c-.35.23-.79.21-1.13-.03a.99.99 0 01-.38-1.07l1.15-4.32L.42 7.16A.99.99 0 01.1 6.08c.13-.4.48-.67.9-.69l4.46-.24L7.07.98c.15-.39.51-.64.93-.64s.78.25.93.64l1.61 4.17 4.46.24c.42.02.77.29.9.69.13.4 0 .82-.32 1.09l-3.47 2.82 1.15 4.32c.11.4-.04.82-.38 1.07-.17.11-.38.18-.59.18z\" />\n        </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\n  <path fill=\"none\" stroke=\"currentColor\" d=\"M8 12.4l4 2.6c.4.2.9-.1.8-.5l-1.2-4.6 3.7-3c.4-.3.2-.9-.3-.9l-4.8-.3-1.7-4.5c-.2-.4-.8-.4-.9 0L5.8 5.6 1 5.9c-.5 0-.6.6-.3.9l3.7 3-1.2 4.6c-.1.5.4.8.8.6l4-2.6z\" />\n        </svg>}\n        </ToggleIconButton>;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const toggleIconButton = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleClick = () => updateArgs({\n    isPressed: args.isPressed ? false : true\n  });\n\n  return <ToggleIconButton {...args} onClick={handleClick}>\n          {args.isPressed === true ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\n  <path fill=\"currentColor\" d=\"M12.29 15.56c-.19 0-.38-.05-.54-.16L8 12.97 4.25 15.4c-.35.23-.79.21-1.13-.03a.99.99 0 01-.38-1.07l1.15-4.32L.42 7.16A.99.99 0 01.1 6.08c.13-.4.48-.67.9-.69l4.46-.24L7.07.98c.15-.39.51-.64.93-.64s.78.25.93.64l1.61 4.17 4.46.24c.42.02.77.29.9.69.13.4 0 .82-.32 1.09l-3.47 2.82 1.15 4.32c.11.4-.04.82-.38 1.07-.17.11-.38.18-.59.18z\" />\n        </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\n  <path fill=\"none\" stroke=\"currentColor\" d=\"M8 12.4l4 2.6c.4.2.9-.1.8-.5l-1.2-4.6 3.7-3c.4-.3.2-.9-.3-.9l-4.8-.3-1.7-4.5c-.2-.4-.8-.4-.9 0L5.8 5.6 1 5.9c-.5 0-.6.6-.3.9l3.7 3-1.2 4.6c-.1.5.4.8.8.6l4-2.6z\" />\n        </svg>}\n        </ToggleIconButton>;\n});\ntoggleIconButton.storyName = 'ToggleIconButton';\ntoggleIconButton.argTypes = {\n  disabled: {\n    control: 'boolean'\n  },\n  isPressed: {\n    control: 'radio',\n    options: [false, true, 'mixed']\n  }\n};\ntoggleIconButton.args = {\n  'aria-label': 'Label',\n  isBasic: true,\n  isPill: true\n};\ntoggleIconButton.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleClick = () => updateArgs({\\n    isPressed: args.isPressed ? false : true\\n  });\\n\\n  return <ToggleIconButton {...args} onClick={handleClick}>\\n          {args.isPressed === true ? <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" focusable=\\\"false\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path fill=\\\"currentColor\\\" d=\\\"M12.29 15.56c-.19 0-.38-.05-.54-.16L8 12.97 4.25 15.4c-.35.23-.79.21-1.13-.03a.99.99 0 01-.38-1.07l1.15-4.32L.42 7.16A.99.99 0 01.1 6.08c.13-.4.48-.67.9-.69l4.46-.24L7.07.98c.15-.39.51-.64.93-.64s.78.25.93.64l1.61 4.17 4.46.24c.42.02.77.29.9.69.13.4 0 .82-.32 1.09l-3.47 2.82 1.15 4.32c.11.4-.04.82-.38 1.07-.17.11-.38.18-.59.18z\\\" />\\n        </svg> : <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" focusable=\\\"false\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path fill=\\\"none\\\" stroke=\\\"currentColor\\\" d=\\\"M8 12.4l4 2.6c.4.2.9-.1.8-.5l-1.2-4.6 3.7-3c.4-.3.2-.9-.3-.9l-4.8-.3-1.7-4.5c-.2-.4-.8-.4-.9 0L5.8 5.6 1 5.9c-.5 0-.6.6-.3.9l3.7 3-1.2 4.6c-.1.5.4.8.8.6l4-2.6z\\\" />\\n        </svg>}\\n        </ToggleIconButton>;\\n}' } };\n\nconst componentMeta = { title: 'Packages/Buttons/ToggleIconButton', component: ToggleIconButton, includeStories: [\"toggleIconButton\"],  };\n\nconst mdxStoryNameToKey = {\"ToggleIconButton\":\"toggleIconButton\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Description } from '@storybook/addon-docs';\nimport README from '../README.md';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Chrome/README\" mdxType=\"Meta\" />\n    <Description mdxType=\"Description\">{README}</Description>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Packages/Chrome/README', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport {\n  Chrome,\n  CollapsibleSubNavItem,\n  Body,\n  Content,\n  Footer,\n  FooterItem,\n  Header,\n  HeaderItem,\n  HeaderItemIcon,\n  HeaderItemText,\n  HeaderItemWrapper,\n  Main,\n  Nav,\n  NavItem,\n  NavItemIcon,\n  NavItemText,\n  Sheet,\n  Sidebar,\n  SkipNav,\n  SubNav,\n  SubNavItem,\n  SubNavItemText,\n  PRODUCTS\n} from '@zendeskgarden/react-chrome';\nimport { ChromeStory } from './stories/ChromeStory';\nimport {\n  CHROME_FOOTER_ITEMS as FOOTER_ITEMS,\n  CHROME_HEADER_ITEMS as HEADER_ITEMS,\n  CHROME_MAIN as MAIN,\n  CHROME_NAV_ITEMS as NAV_ITEMS,\n  CHROME_SIDEBAR as SIDEBAR,\n  CHROME_SKIP_NAV as SKIP_NAV,\n  CHROME_SUB_NAV_ITEMS as SUB_NAV_ITEMS,\n  SHEET_BODY,\n  SHEET_DESCRIPTION,\n  SHEET_TITLE\n} from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Chrome/Chrome\" component={Chrome} subcomponents={{\n      CollapsibleSubNavItem,\n      Body,\n      Content,\n      Footer,\n      FooterItem,\n      Header,\n      HeaderItem,\n      HeaderItemIcon,\n      HeaderItemText,\n      HeaderItemWrapper,\n      Main,\n      Nav,\n      NavItem,\n      NavItemIcon,\n      NavItemText,\n      Sheet,\n      Sidebar,\n      SkipNav,\n      SubNav,\n      SubNavItem,\n      SubNavItemText\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Chrome\" args={{\n        isFluid: true,\n        hasNav: true,\n        navItems: NAV_ITEMS,\n        isExpanded: false,\n        isWrapped: false,\n        hasLogo: true,\n        hasBrandmark: true,\n        hasSubNav: false,\n        subNavItems: SUB_NAV_ITEMS,\n        hasHeader: true,\n        headerItems: HEADER_ITEMS,\n        hasSidebar: false,\n        hasFooter: true,\n        footerItems: FOOTER_ITEMS,\n        skipNav: SKIP_NAV,\n        sidebar: SIDEBAR,\n        main: MAIN,\n        isSheetOpen: true,\n        isSheetCompact: false,\n        sheetBody: SHEET_BODY,\n        sheetTitle: SHEET_TITLE,\n        sheetDescription: SHEET_DESCRIPTION\n      }} argTypes={{\n        hue: {\n          control: 'color'\n        },\n        isFluid: {\n          control: 'boolean'\n        },\n        skipNav: {\n          name: 'children',\n          table: {\n            category: 'SkipNav'\n          }\n        },\n        isExpanded: {\n          name: 'Nav isExpanded',\n          table: {\n            category: 'Story'\n          }\n        },\n        isWrapped: {\n          name: 'Nav/SubNav isWrapped',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasNav: {\n          name: 'Nav',\n          table: {\n            category: 'Story'\n          }\n        },\n        navItems: {\n          name: 'NavItem[]',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasLogo: {\n          name: 'Nav hasLogo',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasBrandmark: {\n          name: 'Nav hasBrandmark',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasSubNav: {\n          name: 'SubNav',\n          table: {\n            category: 'Story'\n          }\n        },\n        subNavItems: {\n          name: 'SubNavItem[]',\n          table: {\n            category: 'Story'\n          }\n        },\n        subNavMaxWidth: {\n          name: 'SubNav max-width',\n          control: 'number',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasHeader: {\n          name: 'Header',\n          table: {\n            category: 'Story'\n          }\n        },\n        headerItems: {\n          name: 'HeaderItem[]',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasSidebar: {\n          name: 'Sidebar',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasFooter: {\n          name: 'Footer',\n          table: {\n            category: 'Story'\n          }\n        },\n        footerItems: {\n          name: 'FooterItem[]',\n          table: {\n            category: 'Story'\n          }\n        },\n        product: {\n          name: 'Nav product',\n          control: {\n            type: 'select',\n            options: PRODUCTS\n          },\n          table: {\n            category: 'Story'\n          }\n        },\n        isSheetOpen: {\n          name: 'isOpen',\n          table: {\n            category: 'Sheet'\n          }\n        },\n        isSheetCompact: {\n          name: 'Sheet.Footer isCompact',\n          control: 'boolean',\n          table: {\n            category: 'Sheet'\n          }\n        },\n        sheetBody: {\n          name: 'Sheet.Body',\n          table: {\n            category: 'Sheet'\n          }\n        },\n        sheetTitle: {\n          name: 'Sheet.Title',\n          table: {\n            category: 'Sheet'\n          }\n        },\n        sheetDescription: {\n          name: 'Sheet.Description',\n          table: {\n            category: 'Sheet'\n          }\n        },\n        main: {\n          name: 'children',\n          table: {\n            category: 'Main'\n          }\n        },\n        sidebar: {\n          name: 'children',\n          table: {\n            category: 'Sidebar'\n          }\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=102%3A126'\n        }\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleNavClick = ({\n            hasSubNav,\n            hasSidebar\n          }) => updateArgs({\n            hasSubNav: hasSubNav || false,\n            hasSidebar: hasSidebar || false\n          });\n\n          const handleSheetClick = () => updateArgs({\n            isSheetOpen: false\n          });\n\n          return <ChromeStory {...args} onSheetClick={handleSheetClick} onNavClick={handleNavClick} mdxType=\"ChromeStory\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const chrome = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleNavClick = ({\n    hasSubNav,\n    hasSidebar\n  }) => updateArgs({\n    hasSubNav: hasSubNav || false,\n    hasSidebar: hasSidebar || false\n  });\n\n  const handleSheetClick = () => updateArgs({\n    isSheetOpen: false\n  });\n\n  return <ChromeStory {...args} onSheetClick={handleSheetClick} onNavClick={handleNavClick} />;\n});\nchrome.storyName = 'Chrome';\nchrome.argTypes = {\n  hue: {\n    control: 'color'\n  },\n  isFluid: {\n    control: 'boolean'\n  },\n  skipNav: {\n    name: 'children',\n    table: {\n      category: 'SkipNav'\n    }\n  },\n  isExpanded: {\n    name: 'Nav isExpanded',\n    table: {\n      category: 'Story'\n    }\n  },\n  isWrapped: {\n    name: 'Nav/SubNav isWrapped',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasNav: {\n    name: 'Nav',\n    table: {\n      category: 'Story'\n    }\n  },\n  navItems: {\n    name: 'NavItem[]',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasLogo: {\n    name: 'Nav hasLogo',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasBrandmark: {\n    name: 'Nav hasBrandmark',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasSubNav: {\n    name: 'SubNav',\n    table: {\n      category: 'Story'\n    }\n  },\n  subNavItems: {\n    name: 'SubNavItem[]',\n    table: {\n      category: 'Story'\n    }\n  },\n  subNavMaxWidth: {\n    name: 'SubNav max-width',\n    control: 'number',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasHeader: {\n    name: 'Header',\n    table: {\n      category: 'Story'\n    }\n  },\n  headerItems: {\n    name: 'HeaderItem[]',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasSidebar: {\n    name: 'Sidebar',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasFooter: {\n    name: 'Footer',\n    table: {\n      category: 'Story'\n    }\n  },\n  footerItems: {\n    name: 'FooterItem[]',\n    table: {\n      category: 'Story'\n    }\n  },\n  product: {\n    name: 'Nav product',\n    control: {\n      type: 'select',\n      options: PRODUCTS\n    },\n    table: {\n      category: 'Story'\n    }\n  },\n  isSheetOpen: {\n    name: 'isOpen',\n    table: {\n      category: 'Sheet'\n    }\n  },\n  isSheetCompact: {\n    name: 'Sheet.Footer isCompact',\n    control: 'boolean',\n    table: {\n      category: 'Sheet'\n    }\n  },\n  sheetBody: {\n    name: 'Sheet.Body',\n    table: {\n      category: 'Sheet'\n    }\n  },\n  sheetTitle: {\n    name: 'Sheet.Title',\n    table: {\n      category: 'Sheet'\n    }\n  },\n  sheetDescription: {\n    name: 'Sheet.Description',\n    table: {\n      category: 'Sheet'\n    }\n  },\n  main: {\n    name: 'children',\n    table: {\n      category: 'Main'\n    }\n  },\n  sidebar: {\n    name: 'children',\n    table: {\n      category: 'Sidebar'\n    }\n  }\n};\nchrome.args = {\n  isFluid: true,\n  hasNav: true,\n  navItems: NAV_ITEMS,\n  isExpanded: false,\n  isWrapped: false,\n  hasLogo: true,\n  hasBrandmark: true,\n  hasSubNav: false,\n  subNavItems: SUB_NAV_ITEMS,\n  hasHeader: true,\n  headerItems: HEADER_ITEMS,\n  hasSidebar: false,\n  hasFooter: true,\n  footerItems: FOOTER_ITEMS,\n  skipNav: SKIP_NAV,\n  sidebar: SIDEBAR,\n  main: MAIN,\n  isSheetOpen: true,\n  isSheetCompact: false,\n  sheetBody: SHEET_BODY,\n  sheetTitle: SHEET_TITLE,\n  sheetDescription: SHEET_DESCRIPTION\n};\nchrome.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleNavClick = ({\\n    hasSubNav,\\n    hasSidebar\\n  }) => updateArgs({\\n    hasSubNav: hasSubNav || false,\\n    hasSidebar: hasSidebar || false\\n  });\\n\\n  const handleSheetClick = () => updateArgs({\\n    isSheetOpen: false\\n  });\\n\\n  return <ChromeStory {...args} onSheetClick={handleSheetClick} onNavClick={handleNavClick} />;\\n}' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=102%3A126'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Chrome/Chrome', component: Chrome, subcomponents: {\n  CollapsibleSubNavItem,\n  Body,\n  Content,\n  Footer,\n  FooterItem,\n  Header,\n  HeaderItem,\n  HeaderItemIcon,\n  HeaderItemText,\n  HeaderItemWrapper,\n  Main,\n  Nav,\n  NavItem,\n  NavItemIcon,\n  NavItemText,\n  Sheet,\n  Sidebar,\n  SkipNav,\n  SubNav,\n  SubNavItem,\n  SubNavItemText\n}, includeStories: [\"chrome\"],  };\n\nconst mdxStoryNameToKey = {\"Chrome\":\"chrome\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport { CollapsibleSubNavItem } from '@zendeskgarden/react-chrome';\nimport { CollapsibleSubNavItemStory } from './stories/CollapsibleSubNavItemStory';\nimport { COLLAPSIBLE_SUB_NAV_ITEMS as ITEMS } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Chrome/CollapsibleSubNavItem\" component={CollapsibleSubNavItem} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <h2 {...{\n      \"id\": \"uncontrolled\"\n    }}>{`Uncontrolled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Uncontrolled\" args={{\n        header: 'Header',\n        items: ITEMS\n      }} argTypes={{\n        items: {\n          name: 'children'\n        },\n        isExpanded: {\n          control: false\n        }\n      }} mdxType=\"Story\">\n    {({\n          onChange,\n          ...args\n        }) => <CollapsibleSubNavItemStory {...args} mdxType=\"CollapsibleSubNavItemStory\" />}\n  </Story>\n    </Canvas>\n    <h2 {...{\n      \"id\": \"controlled\"\n    }}>{`Controlled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Controlled\" args={{\n        header: 'Header',\n        items: ITEMS\n      }} argTypes={{\n        items: {\n          name: 'children'\n        }\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleChange = () => updateArgs({\n            isExpanded: !args.isExpanded\n          });\n\n          return <CollapsibleSubNavItemStory {...args} onChange={handleChange} mdxType=\"CollapsibleSubNavItemStory\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const uncontrolled = (({\n  onChange,\n  ...args\n}) => <CollapsibleSubNavItemStory {...args} />);\nuncontrolled.storyName = 'Uncontrolled';\nuncontrolled.argTypes = {\n  items: {\n    name: 'children'\n  },\n  isExpanded: {\n    control: false\n  }\n};\nuncontrolled.args = {\n  header: 'Header',\n  items: ITEMS\n};\nuncontrolled.parameters = { storySource: { source: '({\\n  onChange,\\n  ...args\\n}) => <CollapsibleSubNavItemStory {...args} />' } };\n\nexport const controlled = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleChange = () => updateArgs({\n    isExpanded: !args.isExpanded\n  });\n\n  return <CollapsibleSubNavItemStory {...args} onChange={handleChange} />;\n});\ncontrolled.storyName = 'Controlled';\ncontrolled.argTypes = {\n  items: {\n    name: 'children'\n  }\n};\ncontrolled.args = {\n  header: 'Header',\n  items: ITEMS\n};\ncontrolled.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleChange = () => updateArgs({\\n    isExpanded: !args.isExpanded\\n  });\\n\\n  return <CollapsibleSubNavItemStory {...args} onChange={handleChange} />;\\n}' } };\n\nconst componentMeta = { title: 'Packages/Chrome/CollapsibleSubNavItem', component: CollapsibleSubNavItem, includeStories: [\"uncontrolled\",\"controlled\"],  };\n\nconst mdxStoryNameToKey = {\"Uncontrolled\":\"uncontrolled\",\"Controlled\":\"controlled\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport { Sheet } from '@zendeskgarden/react-chrome';\nimport { SheetStory } from './stories/SheetStory';\nimport {\n  SHEET_BODY as BODY,\n  SHEET_DESCRIPTION as DESCRIPTION,\n  SHEET_FOOTER_ITEMS as FOOTER_ITEMS,\n  SHEET_TITLE as TITLE\n} from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Chrome/Sheet\" component={Sheet} subcomponents={{\n      'Sheet.Body': Sheet.Body,\n      'Sheet.Close': Sheet.Close,\n      'Sheet.Description': Sheet.Description,\n      'Sheet.Footer': Sheet.Footer,\n      'Sheet.FooterItem': Sheet.FooterItem,\n      'Sheet.Header': Sheet.Header,\n      'Sheet.Title': Sheet.Title\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Sheet\" args={{\n        isAnimated: true,\n        debug: true,\n        hasBody: true,\n        body: BODY,\n        hasClose: true,\n        hasFooter: true,\n        hasHeader: true,\n        title: TITLE,\n        description: DESCRIPTION,\n        footerItems: FOOTER_ITEMS\n      }} argTypes={{\n        debug: {\n          name: 'Grid debug',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasBody: {\n          name: 'Sheet.Body',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasClose: {\n          name: 'Sheet.Close',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasFooter: {\n          name: 'Sheet.Footer',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasHeader: {\n          name: 'Sheet.Header',\n          table: {\n            category: 'Story'\n          }\n        },\n        footerItems: {\n          name: 'Sheet.FooterItem[]',\n          table: {\n            category: 'Story'\n          }\n        },\n        body: {\n          name: 'children',\n          table: {\n            category: 'Sheet.Body'\n          }\n        },\n        title: {\n          name: 'children',\n          table: {\n            category: 'Sheet.Title'\n          }\n        },\n        description: {\n          name: 'children',\n          table: {\n            category: 'Sheet.Description'\n          }\n        },\n        isCompact: {\n          control: 'boolean',\n          table: {\n            category: 'Sheet.Footer'\n          }\n        }\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleChange = () => updateArgs({\n            isOpen: !args.isOpen\n          });\n\n          const handleClick = () => updateArgs({\n            isOpen: false\n          });\n\n          return <SheetStory {...args} onChange={handleChange} onClick={handleClick} mdxType=\"SheetStory\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const sheet = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleChange = () => updateArgs({\n    isOpen: !args.isOpen\n  });\n\n  const handleClick = () => updateArgs({\n    isOpen: false\n  });\n\n  return <SheetStory {...args} onChange={handleChange} onClick={handleClick} />;\n});\nsheet.storyName = 'Sheet';\nsheet.argTypes = {\n  debug: {\n    name: 'Grid debug',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasBody: {\n    name: 'Sheet.Body',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasClose: {\n    name: 'Sheet.Close',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasFooter: {\n    name: 'Sheet.Footer',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasHeader: {\n    name: 'Sheet.Header',\n    table: {\n      category: 'Story'\n    }\n  },\n  footerItems: {\n    name: 'Sheet.FooterItem[]',\n    table: {\n      category: 'Story'\n    }\n  },\n  body: {\n    name: 'children',\n    table: {\n      category: 'Sheet.Body'\n    }\n  },\n  title: {\n    name: 'children',\n    table: {\n      category: 'Sheet.Title'\n    }\n  },\n  description: {\n    name: 'children',\n    table: {\n      category: 'Sheet.Description'\n    }\n  },\n  isCompact: {\n    control: 'boolean',\n    table: {\n      category: 'Sheet.Footer'\n    }\n  }\n};\nsheet.args = {\n  isAnimated: true,\n  debug: true,\n  hasBody: true,\n  body: BODY,\n  hasClose: true,\n  hasFooter: true,\n  hasHeader: true,\n  title: TITLE,\n  description: DESCRIPTION,\n  footerItems: FOOTER_ITEMS\n};\nsheet.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleChange = () => updateArgs({\\n    isOpen: !args.isOpen\\n  });\\n\\n  const handleClick = () => updateArgs({\\n    isOpen: false\\n  });\\n\\n  return <SheetStory {...args} onChange={handleChange} onClick={handleClick} />;\\n}' } };\n\nconst componentMeta = { title: 'Packages/Chrome/Sheet', component: Sheet, subcomponents: {\n  'Sheet.Body': Sheet.Body,\n  'Sheet.Close': Sheet.Close,\n  'Sheet.Description': Sheet.Description,\n  'Sheet.Footer': Sheet.Footer,\n  'Sheet.FooterItem': Sheet.FooterItem,\n  'Sheet.Header': Sheet.Header,\n  'Sheet.Title': Sheet.Title\n}, includeStories: [\"sheet\"],  };\n\nconst mdxStoryNameToKey = {\"Sheet\":\"sheet\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Description } from '@storybook/addon-docs';\nimport README from '../README.md';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Colorpickers/README\" mdxType=\"Meta\" />\n    <Description mdxType=\"Description\">{README}</Description>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Packages/Colorpickers/README', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport { PALETTE } from '@zendeskgarden/react-theming';\nimport { Colorpicker } from '@zendeskgarden/react-colorpickers';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Colorpickers/Colorpicker\" component={Colorpicker} parameters={{\n      design: {\n        allowFullscreen: true,\n        type: 'figma',\n        url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=2178%3A344'\n      }\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <h2 {...{\n      \"id\": \"uncontrolled\"\n    }}>{`Uncontrolled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Uncontrolled\" argTypes={{\n        color: {\n          control: false\n        }\n      }} mdxType=\"Story\">\n    {args => <Colorpicker {...args} mdxType=\"Colorpicker\" />}\n  </Story>\n    </Canvas>\n    <h2 {...{\n      \"id\": \"controlled\"\n    }}>{`Controlled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Controlled\" args={{\n        color: PALETTE.blue[600]\n      }} argTypes={{\n        defaultColor: {\n          control: false\n        }\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleChange = color => updateArgs({\n            color\n          });\n\n          return <Colorpicker {...args} onChange={handleChange} mdxType=\"Colorpicker\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const uncontrolled = (args => <Colorpicker {...args} />);\nuncontrolled.storyName = 'Uncontrolled';\nuncontrolled.argTypes = {\n  color: {\n    control: false\n  }\n};\nuncontrolled.parameters = { storySource: { source: 'args => <Colorpicker {...args} />' } };\n\nexport const controlled = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleChange = color => updateArgs({\n    color\n  });\n\n  return <Colorpicker {...args} onChange={handleChange} />;\n});\ncontrolled.storyName = 'Controlled';\ncontrolled.argTypes = {\n  defaultColor: {\n    control: false\n  }\n};\ncontrolled.args = {\n  color: PALETTE.blue[600]\n};\ncontrolled.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleChange = color => updateArgs({\\n    color\\n  });\\n\\n  return <Colorpicker {...args} onChange={handleChange} />;\\n}' } };\n\nconst componentMeta = { title: 'Packages/Colorpickers/Colorpicker', parameters: {\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=2178%3A344'\n  }\n}, component: Colorpicker, includeStories: [\"uncontrolled\",\"controlled\"],  };\n\nconst mdxStoryNameToKey = {\"Uncontrolled\":\"uncontrolled\",\"Controlled\":\"controlled\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport { PALETTE } from '@zendeskgarden/react-theming';\nimport { ColorpickerDialog } from '@zendeskgarden/react-colorpickers';\nimport { ColorpickerDialogStory } from './stories/ColorpickerDialogStory';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Colorpickers/ColorpickerDialog\" component={ColorpickerDialog} args={{\n      buttonProps: {\n        'aria-label': 'Label'\n      },\n      isAnimated: true\n    }} argTypes={{\n      focusInset: {\n        control: 'boolean'\n      },\n      hasArrow: {\n        control: 'boolean'\n      },\n      isOpaque: {\n        control: 'boolean'\n      },\n      popperModifiers: {\n        control: 'array'\n      },\n      zIndex: {\n        control: 'number'\n      }\n    }} parameters={{\n      design: {\n        allowFullscreen: true,\n        type: 'figma',\n        url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=2178%3A1097'\n      }\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <h2 {...{\n      \"id\": \"uncontrolled\"\n    }}>{`Uncontrolled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Uncontrolled\" argTypes={{\n        color: {\n          control: false\n        }\n      }} mdxType=\"Story\">\n    {args => <ColorpickerDialogStory {...args} mdxType=\"ColorpickerDialogStory\" />}\n  </Story>\n    </Canvas>\n    <h2 {...{\n      \"id\": \"controlled\"\n    }}>{`Controlled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Controlled\" args={{\n        color: PALETTE.blue[600]\n      }} argTypes={{\n        defaultColor: {\n          control: false\n        }\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleChange = color => updateArgs({\n            color\n          });\n\n          return <ColorpickerDialogStory {...args} onChange={handleChange} mdxType=\"ColorpickerDialogStory\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const uncontrolled = (args => <ColorpickerDialogStory {...args} />);\nuncontrolled.storyName = 'Uncontrolled';\nuncontrolled.argTypes = {\n  color: {\n    control: false\n  }\n};\nuncontrolled.parameters = { storySource: { source: 'args => <ColorpickerDialogStory {...args} />' } };\n\nexport const controlled = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleChange = color => updateArgs({\n    color\n  });\n\n  return <ColorpickerDialogStory {...args} onChange={handleChange} />;\n});\ncontrolled.storyName = 'Controlled';\ncontrolled.argTypes = {\n  defaultColor: {\n    control: false\n  }\n};\ncontrolled.args = {\n  color: PALETTE.blue[600]\n};\ncontrolled.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleChange = color => updateArgs({\\n    color\\n  });\\n\\n  return <ColorpickerDialogStory {...args} onChange={handleChange} />;\\n}' } };\n\nconst componentMeta = { title: 'Packages/Colorpickers/ColorpickerDialog', parameters: {\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=2178%3A1097'\n  }\n}, component: ColorpickerDialog, args: {\n  buttonProps: {\n    'aria-label': 'Label'\n  },\n  isAnimated: true\n}, argTypes: {\n  focusInset: {\n    control: 'boolean'\n  },\n  hasArrow: {\n    control: 'boolean'\n  },\n  isOpaque: {\n    control: 'boolean'\n  },\n  popperModifiers: {\n    control: 'array'\n  },\n  zIndex: {\n    control: 'number'\n  }\n}, includeStories: [\"uncontrolled\",\"controlled\"],  };\n\nconst mdxStoryNameToKey = {\"Uncontrolled\":\"uncontrolled\",\"Controlled\":\"controlled\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport { ColorSwatch } from '@zendeskgarden/react-colorpickers';\nimport { COLOR_SWATCH_COLORS as COLORS } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Colorpickers/ColorSwatch\" component={ColorSwatch} args={{\n      colors: COLORS\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <h2 {...{\n      \"id\": \"uncontrolled\"\n    }}>{`Uncontrolled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Uncontrolled\" argTypes={{\n        colIndex: {\n          control: false\n        },\n        rowIndex: {\n          control: false\n        },\n        selectedColIndex: {\n          control: false\n        },\n        selectedRowIndex: {\n          control: false\n        }\n      }} mdxType=\"Story\">\n    {args => <ColorSwatch {...args} mdxType=\"ColorSwatch\" />}\n  </Story>\n    </Canvas>\n    <h2 {...{\n      \"id\": \"controlled\"\n    }}>{`Controlled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Controlled\" args={{\n        rowIndex: 0,\n        colIndex: 5,\n        selectedRowIndex: 0,\n        selectedColIndex: 5\n      }} argTypes={{\n        defaultColIndex: {\n          control: false\n        },\n        defaultRowIndex: {\n          control: false\n        },\n        defaultSelectedColIndex: {\n          control: false\n        },\n        defaultSelectedRowIndex: {\n          control: false\n        }\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleChange = (rowIndex, colIndex) => updateArgs({\n            rowIndex,\n            colIndex\n          });\n\n          const handleSelect = (selectedRowIndex, selectedColIndex) => updateArgs({\n            selectedRowIndex,\n            selectedColIndex\n          });\n\n          return <ColorSwatch {...args} onChange={handleChange} onSelect={handleSelect} mdxType=\"ColorSwatch\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const uncontrolled = (args => <ColorSwatch {...args} />);\nuncontrolled.storyName = 'Uncontrolled';\nuncontrolled.argTypes = {\n  colIndex: {\n    control: false\n  },\n  rowIndex: {\n    control: false\n  },\n  selectedColIndex: {\n    control: false\n  },\n  selectedRowIndex: {\n    control: false\n  }\n};\nuncontrolled.parameters = { storySource: { source: 'args => <ColorSwatch {...args} />' } };\n\nexport const controlled = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleChange = (rowIndex, colIndex) => updateArgs({\n    rowIndex,\n    colIndex\n  });\n\n  const handleSelect = (selectedRowIndex, selectedColIndex) => updateArgs({\n    selectedRowIndex,\n    selectedColIndex\n  });\n\n  return <ColorSwatch {...args} onChange={handleChange} onSelect={handleSelect} />;\n});\ncontrolled.storyName = 'Controlled';\ncontrolled.argTypes = {\n  defaultColIndex: {\n    control: false\n  },\n  defaultRowIndex: {\n    control: false\n  },\n  defaultSelectedColIndex: {\n    control: false\n  },\n  defaultSelectedRowIndex: {\n    control: false\n  }\n};\ncontrolled.args = {\n  rowIndex: 0,\n  colIndex: 5,\n  selectedRowIndex: 0,\n  selectedColIndex: 5\n};\ncontrolled.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleChange = (rowIndex, colIndex) => updateArgs({\\n    rowIndex,\\n    colIndex\\n  });\\n\\n  const handleSelect = (selectedRowIndex, selectedColIndex) => updateArgs({\\n    selectedRowIndex,\\n    selectedColIndex\\n  });\\n\\n  return <ColorSwatch {...args} onChange={handleChange} onSelect={handleSelect} />;\\n}' } };\n\nconst componentMeta = { title: 'Packages/Colorpickers/ColorSwatch', component: ColorSwatch, args: {\n  colors: COLORS\n}, includeStories: [\"uncontrolled\",\"controlled\"],  };\n\nconst mdxStoryNameToKey = {\"Uncontrolled\":\"uncontrolled\",\"Controlled\":\"controlled\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport { ColorSwatchDialog } from '@zendeskgarden/react-colorpickers';\nimport { ColorSwatchDialogStory } from './stories/ColorSwatchDialogStory';\nimport { COLOR_SWATCH_COLORS as COLORS } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Colorpickers/ColorSwatchDialog\" component={ColorSwatchDialog} args={{\n      buttonProps: {\n        'aria-label': 'Label'\n      },\n      colors: COLORS,\n      isAnimated: true\n    }} argTypes={{\n      focusInset: {\n        control: 'boolean'\n      },\n      hasArrow: {\n        control: 'boolean'\n      },\n      popperModifiers: {\n        control: 'array'\n      },\n      zIndex: {\n        control: 'number'\n      }\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <h2 {...{\n      \"id\": \"uncontrolled\"\n    }}>{`Uncontrolled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Uncontrolled\" argTypes={{\n        defaultColIndex: {\n          control: 'number'\n        },\n        defaultRowIndex: {\n          control: 'number'\n        },\n        defaultSelectedColIndex: {\n          control: 'number'\n        },\n        defaultSelectedRowIndex: {\n          control: 'number'\n        },\n        colIndex: {\n          control: false\n        },\n        rowIndex: {\n          control: false\n        },\n        selectedColIndex: {\n          control: false\n        },\n        selectedRowIndex: {\n          control: false\n        }\n      }} mdxType=\"Story\">\n    {args => <ColorSwatchDialogStory {...args} mdxType=\"ColorSwatchDialogStory\" />}\n  </Story>\n    </Canvas>\n    <h2 {...{\n      \"id\": \"controlled\"\n    }}>{`Controlled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Controlled\" args={{\n        rowIndex: 0,\n        colIndex: 5,\n        selectedRowIndex: 0,\n        selectedColIndex: 5\n      }} argTypes={{\n        defaultColIndex: {\n          control: false\n        },\n        defaultRowIndex: {\n          control: false\n        },\n        defaultSelectedColIndex: {\n          control: false\n        },\n        defaultSelectedRowIndex: {\n          control: false\n        }\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleChange = (rowIndex, colIndex) => updateArgs({\n            rowIndex,\n            colIndex\n          });\n\n          const handleSelect = (selectedRowIndex, selectedColIndex) => updateArgs({\n            selectedRowIndex,\n            selectedColIndex\n          });\n\n          return <ColorSwatchDialogStory {...args} onChange={handleChange} onSelect={handleSelect} mdxType=\"ColorSwatchDialogStory\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const uncontrolled = (args => <ColorSwatchDialogStory {...args} />);\nuncontrolled.storyName = 'Uncontrolled';\nuncontrolled.argTypes = {\n  defaultColIndex: {\n    control: 'number'\n  },\n  defaultRowIndex: {\n    control: 'number'\n  },\n  defaultSelectedColIndex: {\n    control: 'number'\n  },\n  defaultSelectedRowIndex: {\n    control: 'number'\n  },\n  colIndex: {\n    control: false\n  },\n  rowIndex: {\n    control: false\n  },\n  selectedColIndex: {\n    control: false\n  },\n  selectedRowIndex: {\n    control: false\n  }\n};\nuncontrolled.parameters = { storySource: { source: 'args => <ColorSwatchDialogStory {...args} />' } };\n\nexport const controlled = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleChange = (rowIndex, colIndex) => updateArgs({\n    rowIndex,\n    colIndex\n  });\n\n  const handleSelect = (selectedRowIndex, selectedColIndex) => updateArgs({\n    selectedRowIndex,\n    selectedColIndex\n  });\n\n  return <ColorSwatchDialogStory {...args} onChange={handleChange} onSelect={handleSelect} />;\n});\ncontrolled.storyName = 'Controlled';\ncontrolled.argTypes = {\n  defaultColIndex: {\n    control: false\n  },\n  defaultRowIndex: {\n    control: false\n  },\n  defaultSelectedColIndex: {\n    control: false\n  },\n  defaultSelectedRowIndex: {\n    control: false\n  }\n};\ncontrolled.args = {\n  rowIndex: 0,\n  colIndex: 5,\n  selectedRowIndex: 0,\n  selectedColIndex: 5\n};\ncontrolled.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleChange = (rowIndex, colIndex) => updateArgs({\\n    rowIndex,\\n    colIndex\\n  });\\n\\n  const handleSelect = (selectedRowIndex, selectedColIndex) => updateArgs({\\n    selectedRowIndex,\\n    selectedColIndex\\n  });\\n\\n  return <ColorSwatchDialogStory {...args} onChange={handleChange} onSelect={handleSelect} />;\\n}' } };\n\nconst componentMeta = { title: 'Packages/Colorpickers/ColorSwatchDialog', component: ColorSwatchDialog, args: {\n  buttonProps: {\n    'aria-label': 'Label'\n  },\n  colors: COLORS,\n  isAnimated: true\n}, argTypes: {\n  focusInset: {\n    control: 'boolean'\n  },\n  hasArrow: {\n    control: 'boolean'\n  },\n  popperModifiers: {\n    control: 'array'\n  },\n  zIndex: {\n    control: 'number'\n  }\n}, includeStories: [\"uncontrolled\",\"controlled\"],  };\n\nconst mdxStoryNameToKey = {\"Uncontrolled\":\"uncontrolled\",\"Controlled\":\"controlled\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Description } from '@storybook/addon-docs';\nimport README from '../README.md';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Datepickers/README\" mdxType=\"Meta\" />\n    <Description mdxType=\"Description\">{README}</Description>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Packages/Datepickers/README', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport { Datepicker } from '@zendeskgarden/react-datepickers';\nimport { DatepickerStory } from './stories/DatepickerStory';\nimport { DATE_STYLE_OPTIONS } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Datepickers/Datepicker\" component={Datepicker} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Datepicker\" args={{\n        dateStyle: DATE_STYLE_OPTIONS[1],\n        eventsEnabled: true,\n        isAnimated: true\n      }} argTypes={{\n        value: {\n          control: 'date'\n        },\n        minValue: {\n          control: 'date'\n        },\n        maxValue: {\n          control: 'date'\n        },\n        dateStyle: {\n          control: 'radio',\n          options: DATE_STYLE_OPTIONS,\n          table: {\n            category: 'Story'\n          }\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=134%3A32'\n        }\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleChange = value => updateArgs({\n            value\n          });\n\n          return <DatepickerStory {...args} onChange={handleChange} mdxType=\"DatepickerStory\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const datepicker = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleChange = value => updateArgs({\n    value\n  });\n\n  return <DatepickerStory {...args} onChange={handleChange} />;\n});\ndatepicker.storyName = 'Datepicker';\ndatepicker.argTypes = {\n  value: {\n    control: 'date'\n  },\n  minValue: {\n    control: 'date'\n  },\n  maxValue: {\n    control: 'date'\n  },\n  dateStyle: {\n    control: 'radio',\n    options: DATE_STYLE_OPTIONS,\n    table: {\n      category: 'Story'\n    }\n  }\n};\ndatepicker.args = {\n  dateStyle: DATE_STYLE_OPTIONS[1],\n  eventsEnabled: true,\n  isAnimated: true\n};\ndatepicker.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleChange = value => updateArgs({\\n    value\\n  });\\n\\n  return <DatepickerStory {...args} onChange={handleChange} />;\\n}' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=134%3A32'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Datepickers/Datepicker', component: Datepicker, includeStories: [\"datepicker\"],  };\n\nconst mdxStoryNameToKey = {\"Datepicker\":\"datepicker\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport { DatepickerRange } from '@zendeskgarden/react-datepickers';\nimport { DatepickerRangeStory } from './stories/DatepickerRangeStory';\nimport { DATE_STYLE_OPTIONS } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Datepickers/DatepickerRange\" component={DatepickerRange} subcomponents={{\n      'DatepickerRange.Calendar': DatepickerRange.Calendar,\n      'DatepickerRange.End': DatepickerRange.End,\n      'DatepickerRange.Start': DatepickerRange.Start\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"DatepickerRange\" args={{\n        dateStyle: DATE_STYLE_OPTIONS[1]\n      }} argTypes={{\n        startValue: {\n          control: 'date'\n        },\n        endValue: {\n          control: 'date'\n        },\n        minValue: {\n          control: 'date'\n        },\n        maxValue: {\n          control: 'date'\n        },\n        dateStyle: {\n          control: 'radio',\n          options: DATE_STYLE_OPTIONS,\n          table: {\n            category: 'Story'\n          }\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=134%3A32'\n        }\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleChange = ({\n            endValue,\n            startValue\n          }) => updateArgs({\n            endValue,\n            startValue\n          });\n\n          return <DatepickerRangeStory {...args} onChange={handleChange} mdxType=\"DatepickerRangeStory\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const datepickerRange = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleChange = ({\n    endValue,\n    startValue\n  }) => updateArgs({\n    endValue,\n    startValue\n  });\n\n  return <DatepickerRangeStory {...args} onChange={handleChange} />;\n});\ndatepickerRange.storyName = 'DatepickerRange';\ndatepickerRange.argTypes = {\n  startValue: {\n    control: 'date'\n  },\n  endValue: {\n    control: 'date'\n  },\n  minValue: {\n    control: 'date'\n  },\n  maxValue: {\n    control: 'date'\n  },\n  dateStyle: {\n    control: 'radio',\n    options: DATE_STYLE_OPTIONS,\n    table: {\n      category: 'Story'\n    }\n  }\n};\ndatepickerRange.args = {\n  dateStyle: DATE_STYLE_OPTIONS[1]\n};\ndatepickerRange.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleChange = ({\\n    endValue,\\n    startValue\\n  }) => updateArgs({\\n    endValue,\\n    startValue\\n  });\\n\\n  return <DatepickerRangeStory {...args} onChange={handleChange} />;\\n}' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=134%3A32'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Datepickers/DatepickerRange', component: DatepickerRange, subcomponents: {\n  'DatepickerRange.Calendar': DatepickerRange.Calendar,\n  'DatepickerRange.End': DatepickerRange.End,\n  'DatepickerRange.Start': DatepickerRange.Start\n}, includeStories: [\"datepickerRange\"],  };\n\nconst mdxStoryNameToKey = {\"DatepickerRange\":\"datepickerRange\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Description } from '@storybook/addon-docs';\nimport README from '../README.md';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Dropdowns/README\" mdxType=\"Meta\" />\n    <Description mdxType=\"Description\">{README}</Description>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Packages/Dropdowns/README', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport Downshift from 'downshift';\nimport {\n  Autocomplete,\n  Dropdown,\n  Field,\n  Hint,\n  Label,\n  Menu,\n  Message\n} from '@zendeskgarden/react-dropdowns';\nimport { AutocompleteStory } from './stories/AutocompleteStory';\nimport { AUTOCOMPLETE_ITEMS as ITEMS, DROPDOWN_PLACEMENT as PLACEMENT } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Dropdowns/Autocomplete\" component={Autocomplete} subcomponents={{\n      Dropdown,\n      Field,\n      Hint,\n      Label,\n      Menu,\n      Message\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Autocomplete\" args={{\n        label: 'Label',\n        isLabelRegular: false,\n        isLabelHidden: false,\n        hasHint: true,\n        hint: 'Hint',\n        hasMessage: true,\n        message: 'Message',\n        hasIcon: false,\n        items: ITEMS,\n        selectedItem: ITEMS[1],\n        inputValue: ITEMS[1].text,\n        isOpen: false,\n        downshiftProps: {\n          defaultHighlightedIndex: 0\n        }\n      }} argTypes={{\n        hasIcon: {\n          name: 'start'\n        },\n        label: {\n          name: 'children',\n          table: {\n            category: 'Label'\n          }\n        },\n        isLabelRegular: {\n          name: 'isRegular',\n          table: {\n            category: 'Label'\n          }\n        },\n        isLabelHidden: {\n          name: 'hidden',\n          table: {\n            category: 'Label'\n          }\n        },\n        hint: {\n          name: 'children',\n          table: {\n            category: 'Hint'\n          }\n        },\n        message: {\n          name: 'children',\n          table: {\n            category: 'Message'\n          }\n        },\n        hasHint: {\n          name: 'Hint',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasMessage: {\n          name: 'Message',\n          table: {\n            category: 'Story'\n          }\n        },\n        items: {\n          name: 'Item[]',\n          table: {\n            category: 'Story'\n          }\n        },\n        downshiftProps: {\n          table: {\n            category: 'Dropdown'\n          }\n        },\n        selectedItem: {\n          table: {\n            category: 'Dropdown'\n          }\n        },\n        inputValue: {\n          table: {\n            category: 'Dropdown'\n          }\n        },\n        isOpen: {\n          table: {\n            category: 'Dropdown'\n          }\n        },\n        placement: {\n          control: {\n            type: 'radio',\n            options: PLACEMENT\n          },\n          table: {\n            category: 'Menu'\n          }\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A24482'\n        }\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleSelect = selectedItem => updateArgs({\n            selectedItem,\n            inputValue: selectedItem.text\n          });\n\n          const handleInputValueChange = inputValue => updateArgs({\n            inputValue\n          });\n\n          const handleStateChange = changes => changes.hasOwnProperty('isOpen') && ![Downshift.stateChangeTypes.blurButton, Downshift.stateChangeTypes.blurInput].includes(changes.type)\n          /*account for Storybook control*/\n          && updateArgs({\n            isOpen: changes.isOpen\n          });\n\n          return <AutocompleteStory {...args} onSelect={handleSelect} onInputValueChange={handleInputValueChange} onStateChange={handleStateChange} mdxType=\"AutocompleteStory\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const autocomplete = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleSelect = selectedItem => updateArgs({\n    selectedItem,\n    inputValue: selectedItem.text\n  });\n\n  const handleInputValueChange = inputValue => updateArgs({\n    inputValue\n  });\n\n  const handleStateChange = changes => changes.hasOwnProperty('isOpen') && ![Downshift.stateChangeTypes.blurButton, Downshift.stateChangeTypes.blurInput].includes(changes.type)\n  /*account for Storybook control*/\n  && updateArgs({\n    isOpen: changes.isOpen\n  });\n\n  return <AutocompleteStory {...args} onSelect={handleSelect} onInputValueChange={handleInputValueChange} onStateChange={handleStateChange} />;\n});\nautocomplete.storyName = 'Autocomplete';\nautocomplete.argTypes = {\n  hasIcon: {\n    name: 'start'\n  },\n  label: {\n    name: 'children',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelRegular: {\n    name: 'isRegular',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelHidden: {\n    name: 'hidden',\n    table: {\n      category: 'Label'\n    }\n  },\n  hint: {\n    name: 'children',\n    table: {\n      category: 'Hint'\n    }\n  },\n  message: {\n    name: 'children',\n    table: {\n      category: 'Message'\n    }\n  },\n  hasHint: {\n    name: 'Hint',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasMessage: {\n    name: 'Message',\n    table: {\n      category: 'Story'\n    }\n  },\n  items: {\n    name: 'Item[]',\n    table: {\n      category: 'Story'\n    }\n  },\n  downshiftProps: {\n    table: {\n      category: 'Dropdown'\n    }\n  },\n  selectedItem: {\n    table: {\n      category: 'Dropdown'\n    }\n  },\n  inputValue: {\n    table: {\n      category: 'Dropdown'\n    }\n  },\n  isOpen: {\n    table: {\n      category: 'Dropdown'\n    }\n  },\n  placement: {\n    control: {\n      type: 'radio',\n      options: PLACEMENT\n    },\n    table: {\n      category: 'Menu'\n    }\n  }\n};\nautocomplete.args = {\n  label: 'Label',\n  isLabelRegular: false,\n  isLabelHidden: false,\n  hasHint: true,\n  hint: 'Hint',\n  hasMessage: true,\n  message: 'Message',\n  hasIcon: false,\n  items: ITEMS,\n  selectedItem: ITEMS[1],\n  inputValue: ITEMS[1].text,\n  isOpen: false,\n  downshiftProps: {\n    defaultHighlightedIndex: 0\n  }\n};\nautocomplete.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleSelect = selectedItem => updateArgs({\\n    selectedItem,\\n    inputValue: selectedItem.text\\n  });\\n\\n  const handleInputValueChange = inputValue => updateArgs({\\n    inputValue\\n  });\\n\\n  const handleStateChange = changes => changes.hasOwnProperty(\\'isOpen\\') && ![Downshift.stateChangeTypes.blurButton, Downshift.stateChangeTypes.blurInput].includes(changes.type)\\n  /*account for Storybook control*/\\n  && updateArgs({\\n    isOpen: changes.isOpen\\n  });\\n\\n  return <AutocompleteStory {...args} onSelect={handleSelect} onInputValueChange={handleInputValueChange} onStateChange={handleStateChange} />;\\n}' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A24482'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Dropdowns/Autocomplete', component: Autocomplete, subcomponents: {\n  Dropdown,\n  Field,\n  Hint,\n  Label,\n  Menu,\n  Message\n}, includeStories: [\"autocomplete\"],  };\n\nconst mdxStoryNameToKey = {\"Autocomplete\":\"autocomplete\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport Downshift from 'downshift';\nimport {\n  Combobox,\n  Dropdown,\n  Field,\n  Hint,\n  Label,\n  Menu,\n  Message\n} from '@zendeskgarden/react-dropdowns';\nimport { ComboboxStory } from './stories/ComboboxStory';\nimport { COMBOBOX_ITEMS as ITEMS, DROPDOWN_PLACEMENT as PLACEMENT } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Dropdowns/Combobox\" component={Combobox} subcomponents={{\n      Dropdown,\n      Field,\n      Hint,\n      Label,\n      Menu,\n      Message\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Combobox\" args={{\n        label: 'Label',\n        isLabelRegular: false,\n        isLabelHidden: false,\n        hasHint: true,\n        hint: 'Hint',\n        hasMessage: true,\n        message: 'Message',\n        hasStartIcon: false,\n        hasEndIcon: false,\n        items: ITEMS,\n        inputValue: '',\n        isOpen: false\n      }} argTypes={{\n        hasStartIcon: {\n          name: 'start'\n        },\n        hasEndIcon: {\n          name: 'end'\n        },\n        label: {\n          name: 'children',\n          table: {\n            category: 'Label'\n          }\n        },\n        isLabelRegular: {\n          name: 'isRegular',\n          table: {\n            category: 'Label'\n          }\n        },\n        isLabelHidden: {\n          name: 'hidden',\n          table: {\n            category: 'Label'\n          }\n        },\n        hint: {\n          name: 'children',\n          table: {\n            category: 'Hint'\n          }\n        },\n        message: {\n          name: 'children',\n          table: {\n            category: 'Message'\n          }\n        },\n        hasHint: {\n          name: 'Hint',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasMessage: {\n          name: 'Message',\n          table: {\n            category: 'Story'\n          }\n        },\n        items: {\n          name: 'Item[]',\n          table: {\n            category: 'Story'\n          }\n        },\n        downshiftProps: {\n          control: 'object',\n          table: {\n            category: 'Dropdown'\n          }\n        },\n        inputValue: {\n          table: {\n            category: 'Dropdown'\n          }\n        },\n        isOpen: {\n          table: {\n            category: 'Dropdown'\n          }\n        },\n        placement: {\n          control: {\n            type: 'radio',\n            options: PLACEMENT\n          },\n          table: {\n            category: 'Menu'\n          }\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A24482'\n        }\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleInputValueChange = inputValue => updateArgs({\n            inputValue\n          });\n\n          const handleStateChange = ({\n            highlightedIndex,\n            ...changes\n          }) => {\n            Number.isInteger(highlightedIndex) && updateArgs({\n              inputValue: args.items[highlightedIndex].text\n            });\n            changes.hasOwnProperty('isOpen') && ![Downshift.stateChangeTypes.blurButton, Downshift.stateChangeTypes.blurInput].includes(changes.type)\n            /*account for Storybook control*/\n            && updateArgs({\n              isOpen: changes.isOpen\n            });\n          };\n\n          return <ComboboxStory {...args} onInputValueChange={handleInputValueChange} onStateChange={handleStateChange} mdxType=\"ComboboxStory\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const combobox = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleInputValueChange = inputValue => updateArgs({\n    inputValue\n  });\n\n  const handleStateChange = ({\n    highlightedIndex,\n    ...changes\n  }) => {\n    Number.isInteger(highlightedIndex) && updateArgs({\n      inputValue: args.items[highlightedIndex].text\n    });\n    changes.hasOwnProperty('isOpen') && ![Downshift.stateChangeTypes.blurButton, Downshift.stateChangeTypes.blurInput].includes(changes.type)\n    /*account for Storybook control*/\n    && updateArgs({\n      isOpen: changes.isOpen\n    });\n  };\n\n  return <ComboboxStory {...args} onInputValueChange={handleInputValueChange} onStateChange={handleStateChange} />;\n});\ncombobox.storyName = 'Combobox';\ncombobox.argTypes = {\n  hasStartIcon: {\n    name: 'start'\n  },\n  hasEndIcon: {\n    name: 'end'\n  },\n  label: {\n    name: 'children',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelRegular: {\n    name: 'isRegular',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelHidden: {\n    name: 'hidden',\n    table: {\n      category: 'Label'\n    }\n  },\n  hint: {\n    name: 'children',\n    table: {\n      category: 'Hint'\n    }\n  },\n  message: {\n    name: 'children',\n    table: {\n      category: 'Message'\n    }\n  },\n  hasHint: {\n    name: 'Hint',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasMessage: {\n    name: 'Message',\n    table: {\n      category: 'Story'\n    }\n  },\n  items: {\n    name: 'Item[]',\n    table: {\n      category: 'Story'\n    }\n  },\n  downshiftProps: {\n    control: 'object',\n    table: {\n      category: 'Dropdown'\n    }\n  },\n  inputValue: {\n    table: {\n      category: 'Dropdown'\n    }\n  },\n  isOpen: {\n    table: {\n      category: 'Dropdown'\n    }\n  },\n  placement: {\n    control: {\n      type: 'radio',\n      options: PLACEMENT\n    },\n    table: {\n      category: 'Menu'\n    }\n  }\n};\ncombobox.args = {\n  label: 'Label',\n  isLabelRegular: false,\n  isLabelHidden: false,\n  hasHint: true,\n  hint: 'Hint',\n  hasMessage: true,\n  message: 'Message',\n  hasStartIcon: false,\n  hasEndIcon: false,\n  items: ITEMS,\n  inputValue: '',\n  isOpen: false\n};\ncombobox.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleInputValueChange = inputValue => updateArgs({\\n    inputValue\\n  });\\n\\n  const handleStateChange = ({\\n    highlightedIndex,\\n    ...changes\\n  }) => {\\n    Number.isInteger(highlightedIndex) && updateArgs({\\n      inputValue: args.items[highlightedIndex].text\\n    });\\n    changes.hasOwnProperty(\\'isOpen\\') && ![Downshift.stateChangeTypes.blurButton, Downshift.stateChangeTypes.blurInput].includes(changes.type)\\n    /*account for Storybook control*/\\n    && updateArgs({\\n      isOpen: changes.isOpen\\n    });\\n  };\\n\\n  return <ComboboxStory {...args} onInputValueChange={handleInputValueChange} onStateChange={handleStateChange} />;\\n}' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A24482'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Dropdowns/Combobox', component: Combobox, subcomponents: {\n  Dropdown,\n  Field,\n  Hint,\n  Label,\n  Menu,\n  Message\n}, includeStories: [\"combobox\"],  };\n\nconst mdxStoryNameToKey = {\"Combobox\":\"combobox\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport Downshift from 'downshift';\nimport {\n  AddItem,\n  Dropdown,\n  HeaderIcon,\n  HeaderItem,\n  Item,\n  ItemMeta,\n  MediaBody,\n  MediaFigure,\n  MediaItem,\n  Menu,\n  NextItem,\n  PreviousItem,\n  Separator,\n  Trigger\n} from '@zendeskgarden/react-dropdowns';\nimport { TriggerStory } from './stories/TriggerStory';\nimport { MENU_ITEMS as ITEMS } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Dropdowns/Menu\" component={Menu} subcomponents={{\n      AddItem,\n      Dropdown,\n      HeaderIcon,\n      HeaderItem,\n      Item,\n      ItemMeta,\n      MediaBody,\n      MediaFigure,\n      MediaItem,\n      Menu,\n      NextItem,\n      PreviousItem,\n      Separator,\n      Trigger\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Menu\" args={{\n        eventsEnabled: true,\n        isAnimated: true,\n        items: ITEMS,\n        selectedItems: [ITEMS[5]],\n        hasMedia: false,\n        isOpen: false\n      }} argTypes={{\n        downshiftProps: {\n          control: 'object',\n          table: {\n            category: 'Dropdown'\n          }\n        },\n        highlightedIndex: {\n          control: 'number',\n          table: {\n            category: 'Dropdown'\n          }\n        },\n        isOpen: {\n          table: {\n            category: 'Dropdown'\n          }\n        },\n        selectedItems: {\n          table: {\n            category: 'Dropdown'\n          }\n        },\n        disabled: {\n          control: 'boolean',\n          table: {\n            category: 'Item'\n          }\n        },\n        isDanger: {\n          control: 'boolean',\n          table: {\n            category: 'Item'\n          }\n        },\n        hasMedia: {\n          table: {\n            category: 'Story'\n          }\n        },\n        items: {\n          name: 'Item[]',\n          table: {\n            category: 'Story'\n          }\n        }\n      }} parameters={{\n        design: [{\n          name: 'Menu',\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=254%3A1241'\n        }, {\n          name: 'Item',\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=1488%3A28208'\n        }]\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleSelect = selectedItems => updateArgs({\n            selectedItems\n          });\n\n          const handleStateChange = changes => changes.hasOwnProperty('isOpen') && changes.type !== Downshift.stateChangeTypes.blurInput\n          /*account for Storybook control*/\n          && updateArgs({\n            isOpen: changes.isOpen\n          });\n\n          return <TriggerStory {...args} onSelect={handleSelect} onStateChange={handleStateChange} mdxType=\"TriggerStory\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const menu = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleSelect = selectedItems => updateArgs({\n    selectedItems\n  });\n\n  const handleStateChange = changes => changes.hasOwnProperty('isOpen') && changes.type !== Downshift.stateChangeTypes.blurInput\n  /*account for Storybook control*/\n  && updateArgs({\n    isOpen: changes.isOpen\n  });\n\n  return <TriggerStory {...args} onSelect={handleSelect} onStateChange={handleStateChange} />;\n});\nmenu.storyName = 'Menu';\nmenu.argTypes = {\n  downshiftProps: {\n    control: 'object',\n    table: {\n      category: 'Dropdown'\n    }\n  },\n  highlightedIndex: {\n    control: 'number',\n    table: {\n      category: 'Dropdown'\n    }\n  },\n  isOpen: {\n    table: {\n      category: 'Dropdown'\n    }\n  },\n  selectedItems: {\n    table: {\n      category: 'Dropdown'\n    }\n  },\n  disabled: {\n    control: 'boolean',\n    table: {\n      category: 'Item'\n    }\n  },\n  isDanger: {\n    control: 'boolean',\n    table: {\n      category: 'Item'\n    }\n  },\n  hasMedia: {\n    table: {\n      category: 'Story'\n    }\n  },\n  items: {\n    name: 'Item[]',\n    table: {\n      category: 'Story'\n    }\n  }\n};\nmenu.args = {\n  eventsEnabled: true,\n  isAnimated: true,\n  items: ITEMS,\n  selectedItems: [ITEMS[5]],\n  hasMedia: false,\n  isOpen: false\n};\nmenu.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleSelect = selectedItems => updateArgs({\\n    selectedItems\\n  });\\n\\n  const handleStateChange = changes => changes.hasOwnProperty(\\'isOpen\\') && changes.type !== Downshift.stateChangeTypes.blurInput\\n  /*account for Storybook control*/\\n  && updateArgs({\\n    isOpen: changes.isOpen\\n  });\\n\\n  return <TriggerStory {...args} onSelect={handleSelect} onStateChange={handleStateChange} />;\\n}' }, ...{\n  design: [{\n    name: 'Menu',\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=254%3A1241'\n  }, {\n    name: 'Item',\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=1488%3A28208'\n  }]\n} };\n\nconst componentMeta = { title: 'Packages/Dropdowns/Menu', component: Menu, subcomponents: {\n  AddItem,\n  Dropdown,\n  HeaderIcon,\n  HeaderItem,\n  Item,\n  ItemMeta,\n  MediaBody,\n  MediaFigure,\n  MediaItem,\n  Menu,\n  NextItem,\n  PreviousItem,\n  Separator,\n  Trigger\n}, includeStories: [\"menu\"],  };\n\nconst mdxStoryNameToKey = {\"Menu\":\"menu\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport Downshift from 'downshift';\nimport {\n  Multiselect,\n  Dropdown,\n  Field,\n  Hint,\n  Label,\n  Menu,\n  Message\n} from '@zendeskgarden/react-dropdowns';\nimport { MultiselectStory } from './stories/MultiselectStory';\nimport { MULTISELECT_ITEMS as ITEMS, DROPDOWN_PLACEMENT as PLACEMENT } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Dropdowns/Multiselect\" component={Multiselect} subcomponents={{\n      Dropdown,\n      Field,\n      Hint,\n      Label,\n      Menu,\n      Message\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Multiselect\" args={{\n        label: 'Label',\n        isLabelRegular: false,\n        isLabelHidden: false,\n        hasHint: true,\n        hint: 'Hint',\n        hasMessage: true,\n        message: 'Message',\n        hasIcon: false,\n        maxItems: 4,\n        items: ITEMS,\n        selectedItems: [ITEMS[0], ITEMS[1], ITEMS[2], ITEMS[3], ITEMS[4], ITEMS[5]],\n        inputValue: '',\n        isOpen: false,\n        downshiftProps: {\n          defaultHighlightedIndex: 0\n        }\n      }} argTypes={{\n        hasIcon: {\n          name: 'start'\n        },\n        placeholder: {\n          control: 'text'\n        },\n        showMore: {\n          name: 'renderShowMore',\n          control: 'text'\n        },\n        label: {\n          name: 'children',\n          table: {\n            category: 'Label'\n          }\n        },\n        isLabelRegular: {\n          name: 'isRegular',\n          table: {\n            category: 'Label'\n          }\n        },\n        isLabelHidden: {\n          name: 'hidden',\n          table: {\n            category: 'Label'\n          }\n        },\n        hint: {\n          name: 'children',\n          table: {\n            category: 'Hint'\n          }\n        },\n        message: {\n          name: 'children',\n          table: {\n            category: 'Message'\n          }\n        },\n        hasHint: {\n          name: 'Hint',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasMessage: {\n          name: 'Message',\n          table: {\n            category: 'Story'\n          }\n        },\n        items: {\n          name: 'Item[]',\n          table: {\n            category: 'Story'\n          }\n        },\n        downshiftProps: {\n          table: {\n            category: 'Dropdown'\n          }\n        },\n        selectedItems: {\n          table: {\n            category: 'Dropdown'\n          }\n        },\n        inputValue: {\n          table: {\n            category: 'Dropdown'\n          }\n        },\n        isOpen: {\n          table: {\n            category: 'Dropdown'\n          }\n        },\n        placement: {\n          control: {\n            type: 'radio',\n            options: PLACEMENT\n          },\n          table: {\n            category: 'Menu'\n          }\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=1512%3A29763'\n        }\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleSelect = selectedItems => updateArgs({\n            selectedItems\n          });\n\n          const handleInputValueChange = inputValue => updateArgs({\n            inputValue\n          });\n\n          const handleStateChange = changes => changes.hasOwnProperty('isOpen') && ![Downshift.stateChangeTypes.blurButton, Downshift.stateChangeTypes.blurInput].includes(changes.type)\n          /*account for Storybook control*/\n          && updateArgs({\n            isOpen: changes.isOpen\n          });\n\n          return <MultiselectStory {...args} onSelect={handleSelect} onInputValueChange={handleInputValueChange} onStateChange={handleStateChange} mdxType=\"MultiselectStory\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const multiselect = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleSelect = selectedItems => updateArgs({\n    selectedItems\n  });\n\n  const handleInputValueChange = inputValue => updateArgs({\n    inputValue\n  });\n\n  const handleStateChange = changes => changes.hasOwnProperty('isOpen') && ![Downshift.stateChangeTypes.blurButton, Downshift.stateChangeTypes.blurInput].includes(changes.type)\n  /*account for Storybook control*/\n  && updateArgs({\n    isOpen: changes.isOpen\n  });\n\n  return <MultiselectStory {...args} onSelect={handleSelect} onInputValueChange={handleInputValueChange} onStateChange={handleStateChange} />;\n});\nmultiselect.storyName = 'Multiselect';\nmultiselect.argTypes = {\n  hasIcon: {\n    name: 'start'\n  },\n  placeholder: {\n    control: 'text'\n  },\n  showMore: {\n    name: 'renderShowMore',\n    control: 'text'\n  },\n  label: {\n    name: 'children',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelRegular: {\n    name: 'isRegular',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelHidden: {\n    name: 'hidden',\n    table: {\n      category: 'Label'\n    }\n  },\n  hint: {\n    name: 'children',\n    table: {\n      category: 'Hint'\n    }\n  },\n  message: {\n    name: 'children',\n    table: {\n      category: 'Message'\n    }\n  },\n  hasHint: {\n    name: 'Hint',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasMessage: {\n    name: 'Message',\n    table: {\n      category: 'Story'\n    }\n  },\n  items: {\n    name: 'Item[]',\n    table: {\n      category: 'Story'\n    }\n  },\n  downshiftProps: {\n    table: {\n      category: 'Dropdown'\n    }\n  },\n  selectedItems: {\n    table: {\n      category: 'Dropdown'\n    }\n  },\n  inputValue: {\n    table: {\n      category: 'Dropdown'\n    }\n  },\n  isOpen: {\n    table: {\n      category: 'Dropdown'\n    }\n  },\n  placement: {\n    control: {\n      type: 'radio',\n      options: PLACEMENT\n    },\n    table: {\n      category: 'Menu'\n    }\n  }\n};\nmultiselect.args = {\n  label: 'Label',\n  isLabelRegular: false,\n  isLabelHidden: false,\n  hasHint: true,\n  hint: 'Hint',\n  hasMessage: true,\n  message: 'Message',\n  hasIcon: false,\n  maxItems: 4,\n  items: ITEMS,\n  selectedItems: [ITEMS[0], ITEMS[1], ITEMS[2], ITEMS[3], ITEMS[4], ITEMS[5]],\n  inputValue: '',\n  isOpen: false,\n  downshiftProps: {\n    defaultHighlightedIndex: 0\n  }\n};\nmultiselect.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleSelect = selectedItems => updateArgs({\\n    selectedItems\\n  });\\n\\n  const handleInputValueChange = inputValue => updateArgs({\\n    inputValue\\n  });\\n\\n  const handleStateChange = changes => changes.hasOwnProperty(\\'isOpen\\') && ![Downshift.stateChangeTypes.blurButton, Downshift.stateChangeTypes.blurInput].includes(changes.type)\\n  /*account for Storybook control*/\\n  && updateArgs({\\n    isOpen: changes.isOpen\\n  });\\n\\n  return <MultiselectStory {...args} onSelect={handleSelect} onInputValueChange={handleInputValueChange} onStateChange={handleStateChange} />;\\n}' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=1512%3A29763'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Dropdowns/Multiselect', component: Multiselect, subcomponents: {\n  Dropdown,\n  Field,\n  Hint,\n  Label,\n  Menu,\n  Message\n}, includeStories: [\"multiselect\"],  };\n\nconst mdxStoryNameToKey = {\"Multiselect\":\"multiselect\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport Downshift from 'downshift';\nimport {\n  Dropdown,\n  Field,\n  Hint,\n  Label,\n  Menu,\n  Message,\n  Select\n} from '@zendeskgarden/react-dropdowns';\nimport { SelectStory } from './stories/SelectStory';\nimport { SELECT_ITEMS as ITEMS, DROPDOWN_PLACEMENT as PLACEMENT } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Dropdowns/Select\" component={Select} subcomponents={{\n      Dropdown,\n      Field,\n      Hint,\n      Label,\n      Menu,\n      Message\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Select\" args={{\n        label: 'Label',\n        isLabelRegular: false,\n        isLabelHidden: false,\n        hasHint: true,\n        hint: 'Hint',\n        hasMessage: true,\n        message: 'Message',\n        hasIcon: false,\n        items: ITEMS,\n        selectedItem: ITEMS[1],\n        isOpen: false\n      }} argTypes={{\n        hasIcon: {\n          name: 'start'\n        },\n        label: {\n          name: 'children',\n          table: {\n            category: 'Label'\n          }\n        },\n        isLabelRegular: {\n          name: 'isRegular',\n          table: {\n            category: 'Label'\n          }\n        },\n        isLabelHidden: {\n          name: 'hidden',\n          table: {\n            category: 'Label'\n          }\n        },\n        hint: {\n          name: 'children',\n          table: {\n            category: 'Hint'\n          }\n        },\n        message: {\n          name: 'children',\n          table: {\n            category: 'Message'\n          }\n        },\n        hasHint: {\n          name: 'Hint',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasMessage: {\n          name: 'Message',\n          table: {\n            category: 'Story'\n          }\n        },\n        items: {\n          name: 'Item[]',\n          table: {\n            category: 'Story'\n          }\n        },\n        downshiftProps: {\n          control: 'object',\n          table: {\n            category: 'Dropdown'\n          }\n        },\n        selectedItem: {\n          table: {\n            category: 'Dropdown'\n          }\n        },\n        isOpen: {\n          table: {\n            category: 'Dropdown'\n          }\n        },\n        placement: {\n          control: {\n            type: 'radio',\n            options: PLACEMENT\n          },\n          table: {\n            category: 'Menu'\n          }\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A24482'\n        }\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleSelect = selectedItem => updateArgs({\n            selectedItem\n          });\n\n          const handleStateChange = changes => changes.hasOwnProperty('isOpen') && ![Downshift.stateChangeTypes.blurButton, Downshift.stateChangeTypes.blurInput].includes(changes.type)\n          /*account for Storybook control*/\n          && updateArgs({\n            isOpen: changes.isOpen\n          });\n\n          return <SelectStory {...args} onSelect={handleSelect} onStateChange={handleStateChange} mdxType=\"SelectStory\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const select = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleSelect = selectedItem => updateArgs({\n    selectedItem\n  });\n\n  const handleStateChange = changes => changes.hasOwnProperty('isOpen') && ![Downshift.stateChangeTypes.blurButton, Downshift.stateChangeTypes.blurInput].includes(changes.type)\n  /*account for Storybook control*/\n  && updateArgs({\n    isOpen: changes.isOpen\n  });\n\n  return <SelectStory {...args} onSelect={handleSelect} onStateChange={handleStateChange} />;\n});\nselect.storyName = 'Select';\nselect.argTypes = {\n  hasIcon: {\n    name: 'start'\n  },\n  label: {\n    name: 'children',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelRegular: {\n    name: 'isRegular',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelHidden: {\n    name: 'hidden',\n    table: {\n      category: 'Label'\n    }\n  },\n  hint: {\n    name: 'children',\n    table: {\n      category: 'Hint'\n    }\n  },\n  message: {\n    name: 'children',\n    table: {\n      category: 'Message'\n    }\n  },\n  hasHint: {\n    name: 'Hint',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasMessage: {\n    name: 'Message',\n    table: {\n      category: 'Story'\n    }\n  },\n  items: {\n    name: 'Item[]',\n    table: {\n      category: 'Story'\n    }\n  },\n  downshiftProps: {\n    control: 'object',\n    table: {\n      category: 'Dropdown'\n    }\n  },\n  selectedItem: {\n    table: {\n      category: 'Dropdown'\n    }\n  },\n  isOpen: {\n    table: {\n      category: 'Dropdown'\n    }\n  },\n  placement: {\n    control: {\n      type: 'radio',\n      options: PLACEMENT\n    },\n    table: {\n      category: 'Menu'\n    }\n  }\n};\nselect.args = {\n  label: 'Label',\n  isLabelRegular: false,\n  isLabelHidden: false,\n  hasHint: true,\n  hint: 'Hint',\n  hasMessage: true,\n  message: 'Message',\n  hasIcon: false,\n  items: ITEMS,\n  selectedItem: ITEMS[1],\n  isOpen: false\n};\nselect.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleSelect = selectedItem => updateArgs({\\n    selectedItem\\n  });\\n\\n  const handleStateChange = changes => changes.hasOwnProperty(\\'isOpen\\') && ![Downshift.stateChangeTypes.blurButton, Downshift.stateChangeTypes.blurInput].includes(changes.type)\\n  /*account for Storybook control*/\\n  && updateArgs({\\n    isOpen: changes.isOpen\\n  });\\n\\n  return <SelectStory {...args} onSelect={handleSelect} onStateChange={handleStateChange} />;\\n}' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A24482'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Dropdowns/Select', component: Select, subcomponents: {\n  Dropdown,\n  Field,\n  Hint,\n  Label,\n  Menu,\n  Message\n}, includeStories: [\"select\"],  };\n\nconst mdxStoryNameToKey = {\"Select\":\"select\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Description } from '@storybook/addon-docs';\nimport README from '../README.md';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Forms/README\" mdxType=\"Meta\" />\n    <Description mdxType=\"Description\">{README}</Description>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Packages/Forms/README', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport { Checkbox, Field, Label, Hint, Message } from '@zendeskgarden/react-forms';\nimport { CheckboxStory } from './stories/CheckboxStory';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Forms/Checkbox\" component={Checkbox} subcomponents={{\n      Field,\n      Label,\n      Hint,\n      Message\n    }} args={{\n      label: 'Label',\n      isLabelRegular: false,\n      isLabelHidden: false,\n      hasHint: false,\n      hint: 'Hint',\n      hasMessage: true,\n      message: 'Message'\n    }} argTypes={{\n      disabled: {\n        control: 'boolean'\n      },\n      label: {\n        name: 'children',\n        table: {\n          category: 'Label'\n        }\n      },\n      isLabelRegular: {\n        name: 'isRegular',\n        table: {\n          category: 'Label'\n        }\n      },\n      isLabelHidden: {\n        name: 'hidden',\n        table: {\n          category: 'Label'\n        }\n      },\n      hint: {\n        name: 'children',\n        table: {\n          category: 'Hint'\n        }\n      },\n      message: {\n        name: 'children',\n        table: {\n          category: 'Message'\n        }\n      },\n      validation: {\n        control: {\n          type: 'radio',\n          options: ['success', 'warning', 'error']\n        },\n        table: {\n          category: 'Message'\n        }\n      },\n      hasHint: {\n        name: 'Hint',\n        table: {\n          category: 'Story'\n        }\n      },\n      hasMessage: {\n        name: 'Message',\n        table: {\n          category: 'Story'\n        }\n      }\n    }} parameters={{\n      design: {\n        allowFullscreen: true,\n        type: 'figma',\n        url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A20261'\n      }\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <h2 {...{\n      \"id\": \"uncontrolled\"\n    }}>{`Uncontrolled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Uncontrolled\" mdxType=\"Story\">{args => <CheckboxStory {...args} mdxType=\"CheckboxStory\" />}</Story>\n    </Canvas>\n    <h2 {...{\n      \"id\": \"controlled\"\n    }}>{`Controlled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Controlled\" args={{\n        checked: false\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleChange = event => updateArgs({\n            checked: !args.checked\n          });\n\n          return <CheckboxStory {...args} onChange={handleChange} mdxType=\"CheckboxStory\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const uncontrolled = (args => <CheckboxStory {...args} />);\nuncontrolled.storyName = 'Uncontrolled';\nuncontrolled.parameters = { storySource: { source: 'args => <CheckboxStory {...args} />' } };\n\nexport const controlled = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleChange = event => updateArgs({\n    checked: !args.checked\n  });\n\n  return <CheckboxStory {...args} onChange={handleChange} />;\n});\ncontrolled.storyName = 'Controlled';\ncontrolled.args = {\n  checked: false\n};\ncontrolled.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleChange = event => updateArgs({\\n    checked: !args.checked\\n  });\\n\\n  return <CheckboxStory {...args} onChange={handleChange} />;\\n}' } };\n\nconst componentMeta = { title: 'Packages/Forms/Checkbox', parameters: {\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A20261'\n  }\n}, component: Checkbox, subcomponents: {\n  Field,\n  Label,\n  Hint,\n  Message\n}, args: {\n  label: 'Label',\n  isLabelRegular: false,\n  isLabelHidden: false,\n  hasHint: false,\n  hint: 'Hint',\n  hasMessage: true,\n  message: 'Message'\n}, argTypes: {\n  disabled: {\n    control: 'boolean'\n  },\n  label: {\n    name: 'children',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelRegular: {\n    name: 'isRegular',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelHidden: {\n    name: 'hidden',\n    table: {\n      category: 'Label'\n    }\n  },\n  hint: {\n    name: 'children',\n    table: {\n      category: 'Hint'\n    }\n  },\n  message: {\n    name: 'children',\n    table: {\n      category: 'Message'\n    }\n  },\n  validation: {\n    control: {\n      type: 'radio',\n      options: ['success', 'warning', 'error']\n    },\n    table: {\n      category: 'Message'\n    }\n  },\n  hasHint: {\n    name: 'Hint',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasMessage: {\n    name: 'Message',\n    table: {\n      category: 'Story'\n    }\n  }\n}, includeStories: [\"uncontrolled\",\"controlled\"],  };\n\nconst mdxStoryNameToKey = {\"Uncontrolled\":\"uncontrolled\",\"Controlled\":\"controlled\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { FauxInput, Field, Label, Hint, Message } from '@zendeskgarden/react-forms';\nimport { FauxInputStory } from './stories/FauxInputStory';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Forms/FauxInput\" component={FauxInput} subcomponents={{\n      Field,\n      Label,\n      Hint,\n      Message\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"FauxInput\" args={{\n        children: '',\n        label: 'Label',\n        isLabelRegular: false,\n        isLabelHidden: false,\n        hasHint: true,\n        hint: 'Hint',\n        hasMessage: true,\n        message: 'Message'\n      }} argTypes={{\n        disabled: {\n          control: 'boolean'\n        },\n        readOnly: {\n          control: 'boolean'\n        },\n        isFocused: {\n          control: 'boolean'\n        },\n        isHovered: {\n          control: 'boolean'\n        },\n        label: {\n          name: 'children',\n          table: {\n            category: 'Label'\n          }\n        },\n        isLabelRegular: {\n          name: 'isRegular',\n          table: {\n            category: 'Label'\n          }\n        },\n        isLabelHidden: {\n          name: 'hidden',\n          table: {\n            category: 'Label'\n          }\n        },\n        hint: {\n          name: 'children',\n          table: {\n            category: 'Hint'\n          }\n        },\n        message: {\n          name: 'children',\n          table: {\n            category: 'Message'\n          }\n        },\n        hasHint: {\n          name: 'Hint',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasMessage: {\n          name: 'Message',\n          table: {\n            category: 'Story'\n          }\n        },\n        placeholder: {\n          control: 'text'\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A20266'\n        }\n      }} mdxType=\"Story\">\n    {args => <FauxInputStory {...args} mdxType=\"FauxInputStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const fauxInput = (args => <FauxInputStory {...args} />);\nfauxInput.storyName = 'FauxInput';\nfauxInput.argTypes = {\n  disabled: {\n    control: 'boolean'\n  },\n  readOnly: {\n    control: 'boolean'\n  },\n  isFocused: {\n    control: 'boolean'\n  },\n  isHovered: {\n    control: 'boolean'\n  },\n  label: {\n    name: 'children',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelRegular: {\n    name: 'isRegular',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelHidden: {\n    name: 'hidden',\n    table: {\n      category: 'Label'\n    }\n  },\n  hint: {\n    name: 'children',\n    table: {\n      category: 'Hint'\n    }\n  },\n  message: {\n    name: 'children',\n    table: {\n      category: 'Message'\n    }\n  },\n  hasHint: {\n    name: 'Hint',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasMessage: {\n    name: 'Message',\n    table: {\n      category: 'Story'\n    }\n  },\n  placeholder: {\n    control: 'text'\n  }\n};\nfauxInput.args = {\n  children: '',\n  label: 'Label',\n  isLabelRegular: false,\n  isLabelHidden: false,\n  hasHint: true,\n  hint: 'Hint',\n  hasMessage: true,\n  message: 'Message'\n};\nfauxInput.parameters = { storySource: { source: 'args => <FauxInputStory {...args} />' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A20266'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Forms/FauxInput', component: FauxInput, subcomponents: {\n  Field,\n  Label,\n  Hint,\n  Message\n}, includeStories: [\"fauxInput\"],  };\n\nconst mdxStoryNameToKey = {\"FauxInput\":\"fauxInput\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { Fieldset, Field } from '@zendeskgarden/react-forms';\nimport { FieldsetStory } from './stories/FieldsetStory';\nimport { FIELDSET_FIELDS as FIELDS } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Forms/Fieldset\" component={Fieldset} subcomponents={{\n      'Fieldset.Legend': Fieldset.Legend,\n      Field\n    }} args={{\n      legend: 'Legend',\n      fields: FIELDS,\n      hasHint: true,\n      hint: 'Hint',\n      hasMessage: true,\n      message: 'Message'\n    }} argTypes={{\n      fields: {\n        name: 'children'\n      },\n      legend: {\n        name: 'children',\n        table: {\n          category: 'Legend'\n        }\n      },\n      hint: {\n        name: 'children',\n        table: {\n          category: 'Hint'\n        }\n      },\n      message: {\n        name: 'children',\n        table: {\n          category: 'Message'\n        }\n      },\n      validation: {\n        control: {\n          type: 'radio',\n          options: ['success', 'warning', 'error']\n        },\n        table: {\n          category: 'Message'\n        }\n      },\n      hasHint: {\n        name: 'Hint',\n        table: {\n          category: 'Story'\n        }\n      },\n      hasMessage: {\n        name: 'Message',\n        table: {\n          category: 'Story'\n        }\n      }\n    }} parameters={{\n      design: {\n        allowFullscreen: true,\n        type: 'figma',\n        url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=1083%3A29244'\n      }\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <h2 {...{\n      \"id\": \"checkbox\"\n    }}>{`Checkbox`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Checkbox\" mdxType=\"Story\">{args => <FieldsetStory type=\"checkbox\" {...args} mdxType=\"FieldsetStory\" />}</Story>\n    </Canvas>\n    <h2 {...{\n      \"id\": \"radio\"\n    }}>{`Radio`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Radio\" mdxType=\"Story\">{args => <FieldsetStory type=\"radio\" {...args} mdxType=\"FieldsetStory\" />}</Story>\n    </Canvas>\n    <h2 {...{\n      \"id\": \"toggle\"\n    }}>{`Toggle`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Toggle\" mdxType=\"Story\">{args => <FieldsetStory type=\"toggle\" {...args} mdxType=\"FieldsetStory\" />}</Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const checkbox = (args => <FieldsetStory type=\"checkbox\" {...args} />);\ncheckbox.storyName = 'Checkbox';\ncheckbox.parameters = { storySource: { source: 'args => <FieldsetStory type=\\\"checkbox\\\" {...args} />' } };\n\nexport const radio = (args => <FieldsetStory type=\"radio\" {...args} />);\nradio.storyName = 'Radio';\nradio.parameters = { storySource: { source: 'args => <FieldsetStory type=\\\"radio\\\" {...args} />' } };\n\nexport const toggle = (args => <FieldsetStory type=\"toggle\" {...args} />);\ntoggle.storyName = 'Toggle';\ntoggle.parameters = { storySource: { source: 'args => <FieldsetStory type=\\\"toggle\\\" {...args} />' } };\n\nconst componentMeta = { title: 'Packages/Forms/Fieldset', parameters: {\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=1083%3A29244'\n  }\n}, component: Fieldset, subcomponents: {\n  'Fieldset.Legend': Fieldset.Legend,\n  Field\n}, args: {\n  legend: 'Legend',\n  fields: FIELDS,\n  hasHint: true,\n  hint: 'Hint',\n  hasMessage: true,\n  message: 'Message'\n}, argTypes: {\n  fields: {\n    name: 'children'\n  },\n  legend: {\n    name: 'children',\n    table: {\n      category: 'Legend'\n    }\n  },\n  hint: {\n    name: 'children',\n    table: {\n      category: 'Hint'\n    }\n  },\n  message: {\n    name: 'children',\n    table: {\n      category: 'Message'\n    }\n  },\n  validation: {\n    control: {\n      type: 'radio',\n      options: ['success', 'warning', 'error']\n    },\n    table: {\n      category: 'Message'\n    }\n  },\n  hasHint: {\n    name: 'Hint',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasMessage: {\n    name: 'Message',\n    table: {\n      category: 'Story'\n    }\n  }\n}, includeStories: [\"checkbox\",\"radio\",\"toggle\"],  };\n\nconst mdxStoryNameToKey = {\"Checkbox\":\"checkbox\",\"Radio\":\"radio\",\"Toggle\":\"toggle\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { File } from '@zendeskgarden/react-forms';\nimport { Progress } from '@zendeskgarden/react-loaders';\nimport { FileStory } from './stories/FileStory';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Forms/File\" component={File} subcomponents={{\n      'File.Close': File.Close,\n      'File.Delete': File.Delete,\n      Progress\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"File\" args={{\n        children: 'file.txt'\n      }} argTypes={{\n        tabIndex: {\n          control: 'number'\n        },\n        hasClose: {\n          name: 'File.Close',\n          control: 'boolean',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasDelete: {\n          name: 'File.Delete',\n          control: 'boolean',\n          table: {\n            category: 'Story'\n          }\n        },\n        value: {\n          control: {\n            type: 'range',\n            min: 0,\n            max: 100\n          },\n          table: {\n            category: 'Progress'\n          }\n        }\n      }} mdxType=\"Story\">\n    {args => <FileStory {...args} mdxType=\"FileStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const file = (args => <FileStory {...args} />);\nfile.storyName = 'File';\nfile.argTypes = {\n  tabIndex: {\n    control: 'number'\n  },\n  hasClose: {\n    name: 'File.Close',\n    control: 'boolean',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasDelete: {\n    name: 'File.Delete',\n    control: 'boolean',\n    table: {\n      category: 'Story'\n    }\n  },\n  value: {\n    control: {\n      type: 'range',\n      min: 0,\n      max: 100\n    },\n    table: {\n      category: 'Progress'\n    }\n  }\n};\nfile.args = {\n  children: 'file.txt'\n};\nfile.parameters = { storySource: { source: 'args => <FileStory {...args} />' } };\n\nconst componentMeta = { title: 'Packages/Forms/File', component: File, subcomponents: {\n  'File.Close': File.Close,\n  'File.Delete': File.Delete,\n  Progress\n}, includeStories: [\"file\"],  };\n\nconst mdxStoryNameToKey = {\"File\":\"file\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { FileList, File } from '@zendeskgarden/react-forms';\nimport { FileListStory } from './stories/FileListStory';\nimport { FILELIST_ITEMS as ITEMS } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Forms/FileList\" component={FileList} subcomponents={{\n      'FileList.Item': FileList.Item,\n      File\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"FileList\" args={{\n        items: ITEMS\n      }} argTypes={{\n        items: {\n          name: 'children'\n        },\n        isCompact: {\n          control: 'boolean',\n          table: {\n            category: 'File'\n          }\n        }\n      }} mdxType=\"Story\">\n    {args => <FileListStory {...args} mdxType=\"FileListStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const fileList = (args => <FileListStory {...args} />);\nfileList.storyName = 'FileList';\nfileList.argTypes = {\n  items: {\n    name: 'children'\n  },\n  isCompact: {\n    control: 'boolean',\n    table: {\n      category: 'File'\n    }\n  }\n};\nfileList.args = {\n  items: ITEMS\n};\nfileList.parameters = { storySource: { source: 'args => <FileListStory {...args} />' } };\n\nconst componentMeta = { title: 'Packages/Forms/FileList', component: FileList, subcomponents: {\n  'FileList.Item': FileList.Item,\n  File\n}, includeStories: [\"fileList\"],  };\n\nconst mdxStoryNameToKey = {\"FileList\":\"fileList\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { FileUpload, Field, Label, Hint, Message } from '@zendeskgarden/react-forms';\nimport { FileUploadStory } from './stories/FileUploadStory';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Forms/FileUpload\" component={FileUpload} subcomponents={{\n      Field,\n      Label,\n      Hint,\n      Message\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"FileUpload\" args={{\n        children: 'Drag files here or click to upload',\n        label: 'Label',\n        isLabelRegular: false,\n        isLabelHidden: false,\n        hasHint: true,\n        hint: 'Hint',\n        hasMessage: true,\n        message: 'Message'\n      }} argTypes={{\n        label: {\n          name: 'children',\n          table: {\n            category: 'Label'\n          }\n        },\n        isLabelRegular: {\n          name: 'isRegular',\n          table: {\n            category: 'Label'\n          }\n        },\n        isLabelHidden: {\n          name: 'hidden',\n          table: {\n            category: 'Label'\n          }\n        },\n        hint: {\n          name: 'children',\n          table: {\n            category: 'Hint'\n          }\n        },\n        message: {\n          name: 'children',\n          table: {\n            category: 'Message'\n          }\n        },\n        validation: {\n          control: {\n            type: 'radio',\n            options: ['success', 'warning', 'error']\n          },\n          table: {\n            category: 'Message'\n          }\n        },\n        hasHint: {\n          name: 'Hint',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasMessage: {\n          name: 'Message',\n          table: {\n            category: 'Story'\n          }\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A20268'\n        }\n      }} mdxType=\"Story\">\n    {args => <FileUploadStory {...args} mdxType=\"FileUploadStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const fileUpload = (args => <FileUploadStory {...args} />);\nfileUpload.storyName = 'FileUpload';\nfileUpload.argTypes = {\n  label: {\n    name: 'children',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelRegular: {\n    name: 'isRegular',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelHidden: {\n    name: 'hidden',\n    table: {\n      category: 'Label'\n    }\n  },\n  hint: {\n    name: 'children',\n    table: {\n      category: 'Hint'\n    }\n  },\n  message: {\n    name: 'children',\n    table: {\n      category: 'Message'\n    }\n  },\n  validation: {\n    control: {\n      type: 'radio',\n      options: ['success', 'warning', 'error']\n    },\n    table: {\n      category: 'Message'\n    }\n  },\n  hasHint: {\n    name: 'Hint',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasMessage: {\n    name: 'Message',\n    table: {\n      category: 'Story'\n    }\n  }\n};\nfileUpload.args = {\n  children: 'Drag files here or click to upload',\n  label: 'Label',\n  isLabelRegular: false,\n  isLabelHidden: false,\n  hasHint: true,\n  hint: 'Hint',\n  hasMessage: true,\n  message: 'Message'\n};\nfileUpload.parameters = { storySource: { source: 'args => <FileUploadStory {...args} />' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A20268'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Forms/FileUpload', component: FileUpload, subcomponents: {\n  Field,\n  Label,\n  Hint,\n  Message\n}, includeStories: [\"fileUpload\"],  };\n\nconst mdxStoryNameToKey = {\"FileUpload\":\"fileUpload\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport { Input, Field, Label, Hint, Message } from '@zendeskgarden/react-forms';\nimport { InputStory } from './stories/InputStory';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Forms/Input\" component={Input} subcomponents={{\n      Field,\n      Label,\n      Hint,\n      Message\n    }} args={{\n      label: 'Label',\n      isLabelRegular: false,\n      isLabelHidden: false,\n      hasHint: true,\n      hint: 'Hint',\n      hasMessage: true,\n      message: 'Message'\n    }} argTypes={{\n      disabled: {\n        control: 'boolean'\n      },\n      readOnly: {\n        control: 'boolean'\n      },\n      label: {\n        name: 'children',\n        table: {\n          category: 'Label'\n        }\n      },\n      isLabelRegular: {\n        name: 'isRegular',\n        table: {\n          category: 'Label'\n        }\n      },\n      isLabelHidden: {\n        name: 'hidden',\n        table: {\n          category: 'Label'\n        }\n      },\n      hint: {\n        name: 'children',\n        table: {\n          category: 'Hint'\n        }\n      },\n      message: {\n        name: 'children',\n        table: {\n          category: 'Message'\n        }\n      },\n      hasHint: {\n        name: 'Hint',\n        table: {\n          category: 'Story'\n        }\n      },\n      hasMessage: {\n        name: 'Message',\n        table: {\n          category: 'Story'\n        }\n      },\n      placeholder: {\n        control: 'text'\n      },\n      type: {\n        control: {\n          type: 'select',\n          options: ['date', 'datetime-local', 'email', 'month', 'number', 'password', 'search', 'tel', 'text', 'time', 'url', 'week']\n        }\n      }\n    }} parameters={{\n      design: {\n        allowFullscreen: true,\n        type: 'figma',\n        url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A20266'\n      }\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <h2 {...{\n      \"id\": \"uncontrolled\"\n    }}>{`Uncontrolled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Uncontrolled\" args={{\n        placeholder: 'Placeholder'\n      }} mdxType=\"Story\">\n    {args => <InputStory {...args} mdxType=\"InputStory\" />}\n  </Story>\n    </Canvas>\n    <h2 {...{\n      \"id\": \"controlled\"\n    }}>{`Controlled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Controlled\" args={{\n        value: 'Value'\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleChange = event => updateArgs({\n            value: event.target.value\n          });\n\n          return <InputStory {...args} onChange={handleChange} mdxType=\"InputStory\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const uncontrolled = (args => <InputStory {...args} />);\nuncontrolled.storyName = 'Uncontrolled';\nuncontrolled.args = {\n  placeholder: 'Placeholder'\n};\nuncontrolled.parameters = { storySource: { source: 'args => <InputStory {...args} />' } };\n\nexport const controlled = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleChange = event => updateArgs({\n    value: event.target.value\n  });\n\n  return <InputStory {...args} onChange={handleChange} />;\n});\ncontrolled.storyName = 'Controlled';\ncontrolled.args = {\n  value: 'Value'\n};\ncontrolled.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleChange = event => updateArgs({\\n    value: event.target.value\\n  });\\n\\n  return <InputStory {...args} onChange={handleChange} />;\\n}' } };\n\nconst componentMeta = { title: 'Packages/Forms/Input', parameters: {\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A20266'\n  }\n}, component: Input, subcomponents: {\n  Field,\n  Label,\n  Hint,\n  Message\n}, args: {\n  label: 'Label',\n  isLabelRegular: false,\n  isLabelHidden: false,\n  hasHint: true,\n  hint: 'Hint',\n  hasMessage: true,\n  message: 'Message'\n}, argTypes: {\n  disabled: {\n    control: 'boolean'\n  },\n  readOnly: {\n    control: 'boolean'\n  },\n  label: {\n    name: 'children',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelRegular: {\n    name: 'isRegular',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelHidden: {\n    name: 'hidden',\n    table: {\n      category: 'Label'\n    }\n  },\n  hint: {\n    name: 'children',\n    table: {\n      category: 'Hint'\n    }\n  },\n  message: {\n    name: 'children',\n    table: {\n      category: 'Message'\n    }\n  },\n  hasHint: {\n    name: 'Hint',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasMessage: {\n    name: 'Message',\n    table: {\n      category: 'Story'\n    }\n  },\n  placeholder: {\n    control: 'text'\n  },\n  type: {\n    control: {\n      type: 'select',\n      options: ['date', 'datetime-local', 'email', 'month', 'number', 'password', 'search', 'tel', 'text', 'time', 'url', 'week']\n    }\n  }\n}, includeStories: [\"uncontrolled\",\"controlled\"],  };\n\nconst mdxStoryNameToKey = {\"Uncontrolled\":\"uncontrolled\",\"Controlled\":\"controlled\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { InputGroup, Input, Field, Label, Hint, Message } from '@zendeskgarden/react-forms';\nimport { InputGroupStory } from './stories/InputGroupStory';\nimport { INPUT_GROUP_ITEMS as ITEMS } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Forms/InputGroup\" component={InputGroup} subcomponents={{\n      Field,\n      Input,\n      Label,\n      Hint,\n      Message\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"InputGroup\" args={{\n        label: 'Label',\n        isLabelRegular: false,\n        isLabelHidden: false,\n        hasHint: true,\n        hint: 'Hint',\n        hasMessage: true,\n        message: 'Message',\n        items: ITEMS,\n        isNeutral: true\n      }} argTypes={{\n        items: {\n          name: 'children'\n        },\n        label: {\n          name: 'children',\n          table: {\n            category: 'Label'\n          }\n        },\n        isLabelRegular: {\n          name: 'isRegular',\n          table: {\n            category: 'Label'\n          }\n        },\n        isLabelHidden: {\n          name: 'hidden',\n          table: {\n            category: 'Label'\n          }\n        },\n        hint: {\n          name: 'children',\n          table: {\n            category: 'Hint'\n          }\n        },\n        message: {\n          name: 'children',\n          table: {\n            category: 'Message'\n          }\n        },\n        validation: {\n          control: {\n            type: 'radio',\n            options: ['success', 'warning', 'error']\n          },\n          table: {\n            category: 'Message'\n          }\n        },\n        hasHint: {\n          name: 'Hint',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasMessage: {\n          name: 'Message',\n          table: {\n            category: 'Story'\n          }\n        },\n        disabled: {\n          control: 'boolean',\n          table: {\n            category: 'Story'\n          }\n        },\n        isNeutral: {\n          table: {\n            category: 'Button'\n          }\n        },\n        isPrimary: {\n          control: 'boolean',\n          table: {\n            category: 'Button'\n          }\n        },\n        isDanger: {\n          control: 'boolean',\n          table: {\n            category: 'Button'\n          }\n        },\n        readOnly: {\n          control: 'boolean',\n          table: {\n            category: 'Input'\n          }\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A20265'\n        }\n      }} mdxType=\"Story\">\n    {args => <InputGroupStory {...args} mdxType=\"InputGroupStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const inputGroup = (args => <InputGroupStory {...args} />);\ninputGroup.storyName = 'InputGroup';\ninputGroup.argTypes = {\n  items: {\n    name: 'children'\n  },\n  label: {\n    name: 'children',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelRegular: {\n    name: 'isRegular',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelHidden: {\n    name: 'hidden',\n    table: {\n      category: 'Label'\n    }\n  },\n  hint: {\n    name: 'children',\n    table: {\n      category: 'Hint'\n    }\n  },\n  message: {\n    name: 'children',\n    table: {\n      category: 'Message'\n    }\n  },\n  validation: {\n    control: {\n      type: 'radio',\n      options: ['success', 'warning', 'error']\n    },\n    table: {\n      category: 'Message'\n    }\n  },\n  hasHint: {\n    name: 'Hint',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasMessage: {\n    name: 'Message',\n    table: {\n      category: 'Story'\n    }\n  },\n  disabled: {\n    control: 'boolean',\n    table: {\n      category: 'Story'\n    }\n  },\n  isNeutral: {\n    table: {\n      category: 'Button'\n    }\n  },\n  isPrimary: {\n    control: 'boolean',\n    table: {\n      category: 'Button'\n    }\n  },\n  isDanger: {\n    control: 'boolean',\n    table: {\n      category: 'Button'\n    }\n  },\n  readOnly: {\n    control: 'boolean',\n    table: {\n      category: 'Input'\n    }\n  }\n};\ninputGroup.args = {\n  label: 'Label',\n  isLabelRegular: false,\n  isLabelHidden: false,\n  hasHint: true,\n  hint: 'Hint',\n  hasMessage: true,\n  message: 'Message',\n  items: ITEMS,\n  isNeutral: true\n};\ninputGroup.parameters = { storySource: { source: 'args => <InputGroupStory {...args} />' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A20265'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Forms/InputGroup', component: InputGroup, subcomponents: {\n  Field,\n  Input,\n  Label,\n  Hint,\n  Message\n}, includeStories: [\"inputGroup\"],  };\n\nconst mdxStoryNameToKey = {\"InputGroup\":\"inputGroup\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport { MediaInput, Field, Label, Hint, Message } from '@zendeskgarden/react-forms';\nimport { MediaInputStory } from './stories/MediaInputStory';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Forms/MediaInput\" component={MediaInput} subcomponents={{\n      Field,\n      Label,\n      Hint,\n      Message\n    }} args={{\n      start: true,\n      end: true,\n      label: 'Label',\n      isLabelRegular: false,\n      isLabelHidden: false,\n      hasHint: true,\n      hint: 'Hint',\n      hasMessage: true,\n      message: 'Message'\n    }} argTypes={{\n      disabled: {\n        control: 'boolean'\n      },\n      readOnly: {\n        control: 'boolean'\n      },\n      start: {\n        control: 'boolean'\n      },\n      end: {\n        control: 'boolean'\n      },\n      label: {\n        name: 'children',\n        table: {\n          category: 'Label'\n        }\n      },\n      isLabelRegular: {\n        name: 'isRegular',\n        table: {\n          category: 'Label'\n        }\n      },\n      isLabelHidden: {\n        name: 'hidden',\n        table: {\n          category: 'Label'\n        }\n      },\n      hint: {\n        name: 'children',\n        table: {\n          category: 'Hint'\n        }\n      },\n      message: {\n        name: 'children',\n        table: {\n          category: 'Message'\n        }\n      },\n      hasHint: {\n        name: 'Hint',\n        table: {\n          category: 'Story'\n        }\n      },\n      hasMessage: {\n        name: 'Message',\n        table: {\n          category: 'Story'\n        }\n      },\n      placeholder: {\n        control: 'text'\n      },\n      type: {\n        control: {\n          type: 'select',\n          options: ['date', 'datetime-local', 'email', 'month', 'number', 'password', 'search', 'tel', 'text', 'time', 'url', 'week']\n        }\n      }\n    }} parameters={{\n      design: {\n        allowFullscreen: true,\n        type: 'figma',\n        url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A20266'\n      }\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <h2 {...{\n      \"id\": \"uncontrolled\"\n    }}>{`Uncontrolled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Uncontrolled\" args={{\n        placeholder: 'Placeholder'\n      }} mdxType=\"Story\">\n    {args => <MediaInputStory {...args} mdxType=\"MediaInputStory\" />}\n  </Story>\n    </Canvas>\n    <h2 {...{\n      \"id\": \"controlled\"\n    }}>{`Controlled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Controlled\" args={{\n        value: 'Value'\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleChange = event => updateArgs({\n            value: event.target.value\n          });\n\n          return <MediaInputStory {...args} onChange={handleChange} mdxType=\"MediaInputStory\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const uncontrolled = (args => <MediaInputStory {...args} />);\nuncontrolled.storyName = 'Uncontrolled';\nuncontrolled.args = {\n  placeholder: 'Placeholder'\n};\nuncontrolled.parameters = { storySource: { source: 'args => <MediaInputStory {...args} />' } };\n\nexport const controlled = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleChange = event => updateArgs({\n    value: event.target.value\n  });\n\n  return <MediaInputStory {...args} onChange={handleChange} />;\n});\ncontrolled.storyName = 'Controlled';\ncontrolled.args = {\n  value: 'Value'\n};\ncontrolled.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleChange = event => updateArgs({\\n    value: event.target.value\\n  });\\n\\n  return <MediaInputStory {...args} onChange={handleChange} />;\\n}' } };\n\nconst componentMeta = { title: 'Packages/Forms/MediaInput', parameters: {\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A20266'\n  }\n}, component: MediaInput, subcomponents: {\n  Field,\n  Label,\n  Hint,\n  Message\n}, args: {\n  start: true,\n  end: true,\n  label: 'Label',\n  isLabelRegular: false,\n  isLabelHidden: false,\n  hasHint: true,\n  hint: 'Hint',\n  hasMessage: true,\n  message: 'Message'\n}, argTypes: {\n  disabled: {\n    control: 'boolean'\n  },\n  readOnly: {\n    control: 'boolean'\n  },\n  start: {\n    control: 'boolean'\n  },\n  end: {\n    control: 'boolean'\n  },\n  label: {\n    name: 'children',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelRegular: {\n    name: 'isRegular',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelHidden: {\n    name: 'hidden',\n    table: {\n      category: 'Label'\n    }\n  },\n  hint: {\n    name: 'children',\n    table: {\n      category: 'Hint'\n    }\n  },\n  message: {\n    name: 'children',\n    table: {\n      category: 'Message'\n    }\n  },\n  hasHint: {\n    name: 'Hint',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasMessage: {\n    name: 'Message',\n    table: {\n      category: 'Story'\n    }\n  },\n  placeholder: {\n    control: 'text'\n  },\n  type: {\n    control: {\n      type: 'select',\n      options: ['date', 'datetime-local', 'email', 'month', 'number', 'password', 'search', 'tel', 'text', 'time', 'url', 'week']\n    }\n  }\n}, includeStories: [\"uncontrolled\",\"controlled\"],  };\n\nconst mdxStoryNameToKey = {\"Uncontrolled\":\"uncontrolled\",\"Controlled\":\"controlled\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport { MultiThumbRange, Field, Label, Hint, Message } from '@zendeskgarden/react-forms';\nimport { MultiThumbRangeStory } from './stories/MultiThumbRangeStory';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Forms/MultiThumbRange\" component={MultiThumbRange} subcomponents={{\n      Field,\n      Label,\n      Hint,\n      Message\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"MultiThumbRange\" args={{\n        label: 'Label',\n        isLabelRegular: false,\n        isLabelHidden: false,\n        hasHint: true,\n        hint: 'Hint',\n        hasMessage: true,\n        message: 'Message'\n      }} argTypes={{\n        disabled: {\n          control: 'boolean'\n        },\n        min: {\n          control: 'number'\n        },\n        max: {\n          control: 'number'\n        },\n        step: {\n          control: 'number'\n        },\n        label: {\n          name: 'children',\n          table: {\n            category: 'Label'\n          }\n        },\n        isLabelRegular: {\n          name: 'isRegular',\n          table: {\n            category: 'Label'\n          }\n        },\n        isLabelHidden: {\n          name: 'hidden',\n          table: {\n            category: 'Label'\n          }\n        },\n        hint: {\n          name: 'children',\n          table: {\n            category: 'Hint'\n          }\n        },\n        message: {\n          name: 'children',\n          table: {\n            category: 'Message'\n          }\n        },\n        validation: {\n          control: {\n            type: 'radio',\n            options: ['success', 'warning', 'error']\n          },\n          table: {\n            category: 'Message'\n          }\n        },\n        hasHint: {\n          name: 'Hint',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasMessage: {\n          name: 'Message',\n          table: {\n            category: 'Story'\n          }\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A20263'\n        }\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleChange = ({\n            minValue,\n            maxValue\n          }) => updateArgs({\n            minValue,\n            maxValue\n          });\n\n          return <MultiThumbRangeStory {...args} onChange={handleChange} mdxType=\"MultiThumbRangeStory\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const multiThumbRange = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleChange = ({\n    minValue,\n    maxValue\n  }) => updateArgs({\n    minValue,\n    maxValue\n  });\n\n  return <MultiThumbRangeStory {...args} onChange={handleChange} />;\n});\nmultiThumbRange.storyName = 'MultiThumbRange';\nmultiThumbRange.argTypes = {\n  disabled: {\n    control: 'boolean'\n  },\n  min: {\n    control: 'number'\n  },\n  max: {\n    control: 'number'\n  },\n  step: {\n    control: 'number'\n  },\n  label: {\n    name: 'children',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelRegular: {\n    name: 'isRegular',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelHidden: {\n    name: 'hidden',\n    table: {\n      category: 'Label'\n    }\n  },\n  hint: {\n    name: 'children',\n    table: {\n      category: 'Hint'\n    }\n  },\n  message: {\n    name: 'children',\n    table: {\n      category: 'Message'\n    }\n  },\n  validation: {\n    control: {\n      type: 'radio',\n      options: ['success', 'warning', 'error']\n    },\n    table: {\n      category: 'Message'\n    }\n  },\n  hasHint: {\n    name: 'Hint',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasMessage: {\n    name: 'Message',\n    table: {\n      category: 'Story'\n    }\n  }\n};\nmultiThumbRange.args = {\n  label: 'Label',\n  isLabelRegular: false,\n  isLabelHidden: false,\n  hasHint: true,\n  hint: 'Hint',\n  hasMessage: true,\n  message: 'Message'\n};\nmultiThumbRange.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleChange = ({\\n    minValue,\\n    maxValue\\n  }) => updateArgs({\\n    minValue,\\n    maxValue\\n  });\\n\\n  return <MultiThumbRangeStory {...args} onChange={handleChange} />;\\n}' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A20263'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Forms/MultiThumbRange', component: MultiThumbRange, subcomponents: {\n  Field,\n  Label,\n  Hint,\n  Message\n}, includeStories: [\"multiThumbRange\"],  };\n\nconst mdxStoryNameToKey = {\"MultiThumbRange\":\"multiThumbRange\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport { Radio, Field, Label, Hint, Message } from '@zendeskgarden/react-forms';\nimport { RadioStory } from './stories/RadioStory';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Forms/Radio\" component={Radio} subcomponents={{\n      Field,\n      Label,\n      Hint,\n      Message\n    }} args={{\n      label: 'Label',\n      isLabelRegular: false,\n      isLabelHidden: false,\n      hasHint: false,\n      hint: 'Hint',\n      hasMessage: true,\n      message: 'Message'\n    }} argTypes={{\n      disabled: {\n        control: 'boolean'\n      },\n      label: {\n        name: 'children',\n        table: {\n          category: 'Label'\n        }\n      },\n      isLabelRegular: {\n        name: 'isRegular',\n        table: {\n          category: 'Label'\n        }\n      },\n      isLabelHidden: {\n        name: 'hidden',\n        table: {\n          category: 'Label'\n        }\n      },\n      hint: {\n        name: 'children',\n        table: {\n          category: 'Hint'\n        }\n      },\n      message: {\n        name: 'children',\n        table: {\n          category: 'Message'\n        }\n      },\n      validation: {\n        control: {\n          type: 'radio',\n          options: ['success', 'warning', 'error']\n        },\n        table: {\n          category: 'Message'\n        }\n      },\n      hasHint: {\n        name: 'Hint',\n        table: {\n          category: 'Story'\n        }\n      },\n      hasMessage: {\n        name: 'Message',\n        table: {\n          category: 'Story'\n        }\n      }\n    }} parameters={{\n      design: {\n        allowFullscreen: true,\n        type: 'figma',\n        url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A20262'\n      }\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <h2 {...{\n      \"id\": \"uncontrolled\"\n    }}>{`Uncontrolled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Uncontrolled\" mdxType=\"Story\">{args => <RadioStory {...args} mdxType=\"RadioStory\" />}</Story>\n    </Canvas>\n    <h2 {...{\n      \"id\": \"controlled\"\n    }}>{`Controlled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Controlled\" args={{\n        checked: false\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleChange = event => updateArgs({\n            checked: true\n          });\n\n          return <RadioStory {...args} onChange={handleChange} mdxType=\"RadioStory\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const uncontrolled = (args => <RadioStory {...args} />);\nuncontrolled.storyName = 'Uncontrolled';\nuncontrolled.parameters = { storySource: { source: 'args => <RadioStory {...args} />' } };\n\nexport const controlled = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleChange = event => updateArgs({\n    checked: true\n  });\n\n  return <RadioStory {...args} onChange={handleChange} />;\n});\ncontrolled.storyName = 'Controlled';\ncontrolled.args = {\n  checked: false\n};\ncontrolled.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleChange = event => updateArgs({\\n    checked: true\\n  });\\n\\n  return <RadioStory {...args} onChange={handleChange} />;\\n}' } };\n\nconst componentMeta = { title: 'Packages/Forms/Radio', parameters: {\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A20262'\n  }\n}, component: Radio, subcomponents: {\n  Field,\n  Label,\n  Hint,\n  Message\n}, args: {\n  label: 'Label',\n  isLabelRegular: false,\n  isLabelHidden: false,\n  hasHint: false,\n  hint: 'Hint',\n  hasMessage: true,\n  message: 'Message'\n}, argTypes: {\n  disabled: {\n    control: 'boolean'\n  },\n  label: {\n    name: 'children',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelRegular: {\n    name: 'isRegular',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelHidden: {\n    name: 'hidden',\n    table: {\n      category: 'Label'\n    }\n  },\n  hint: {\n    name: 'children',\n    table: {\n      category: 'Hint'\n    }\n  },\n  message: {\n    name: 'children',\n    table: {\n      category: 'Message'\n    }\n  },\n  validation: {\n    control: {\n      type: 'radio',\n      options: ['success', 'warning', 'error']\n    },\n    table: {\n      category: 'Message'\n    }\n  },\n  hasHint: {\n    name: 'Hint',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasMessage: {\n    name: 'Message',\n    table: {\n      category: 'Story'\n    }\n  }\n}, includeStories: [\"uncontrolled\",\"controlled\"],  };\n\nconst mdxStoryNameToKey = {\"Uncontrolled\":\"uncontrolled\",\"Controlled\":\"controlled\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport { Range, Field, Label, Hint, Message } from '@zendeskgarden/react-forms';\nimport { RangeStory } from './stories/RangeStory';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Forms/Range\" component={Range} subcomponents={{\n      Field,\n      Label,\n      Hint,\n      Message\n    }} args={{\n      label: 'Label',\n      isLabelRegular: false,\n      isLabelHidden: false,\n      hasHint: true,\n      hint: 'Hint',\n      hasMessage: true,\n      message: 'Message'\n    }} argTypes={{\n      disabled: {\n        control: 'boolean'\n      },\n      min: {\n        control: 'number'\n      },\n      max: {\n        control: 'number'\n      },\n      step: {\n        control: 'number'\n      },\n      label: {\n        name: 'children',\n        table: {\n          category: 'Label'\n        }\n      },\n      isLabelRegular: {\n        name: 'isRegular',\n        table: {\n          category: 'Label'\n        }\n      },\n      isLabelHidden: {\n        name: 'hidden',\n        table: {\n          category: 'Label'\n        }\n      },\n      hint: {\n        name: 'children',\n        table: {\n          category: 'Hint'\n        }\n      },\n      message: {\n        name: 'children',\n        table: {\n          category: 'Message'\n        }\n      },\n      validation: {\n        control: {\n          type: 'radio',\n          options: ['success', 'warning', 'error']\n        },\n        table: {\n          category: 'Message'\n        }\n      },\n      hasHint: {\n        name: 'Hint',\n        table: {\n          category: 'Story'\n        }\n      },\n      hasMessage: {\n        name: 'Message',\n        table: {\n          category: 'Story'\n        }\n      }\n    }} parameters={{\n      design: {\n        allowFullscreen: true,\n        type: 'figma',\n        url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A20263'\n      }\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <h2 {...{\n      \"id\": \"uncontrolled\"\n    }}>{`Uncontrolled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Uncontrolled\" mdxType=\"Story\">{args => <RangeStory {...args} mdxType=\"RangeStory\" />}</Story>\n    </Canvas>\n    <h2 {...{\n      \"id\": \"controlled\"\n    }}>{`Controlled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Controlled\" args={{\n        value: '0'\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleChange = event => updateArgs({\n            value: event.target.value\n          });\n\n          return <RangeStory {...args} onChange={handleChange} mdxType=\"RangeStory\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const uncontrolled = (args => <RangeStory {...args} />);\nuncontrolled.storyName = 'Uncontrolled';\nuncontrolled.parameters = { storySource: { source: 'args => <RangeStory {...args} />' } };\n\nexport const controlled = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleChange = event => updateArgs({\n    value: event.target.value\n  });\n\n  return <RangeStory {...args} onChange={handleChange} />;\n});\ncontrolled.storyName = 'Controlled';\ncontrolled.args = {\n  value: '0'\n};\ncontrolled.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleChange = event => updateArgs({\\n    value: event.target.value\\n  });\\n\\n  return <RangeStory {...args} onChange={handleChange} />;\\n}' } };\n\nconst componentMeta = { title: 'Packages/Forms/Range', parameters: {\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A20263'\n  }\n}, component: Range, subcomponents: {\n  Field,\n  Label,\n  Hint,\n  Message\n}, args: {\n  label: 'Label',\n  isLabelRegular: false,\n  isLabelHidden: false,\n  hasHint: true,\n  hint: 'Hint',\n  hasMessage: true,\n  message: 'Message'\n}, argTypes: {\n  disabled: {\n    control: 'boolean'\n  },\n  min: {\n    control: 'number'\n  },\n  max: {\n    control: 'number'\n  },\n  step: {\n    control: 'number'\n  },\n  label: {\n    name: 'children',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelRegular: {\n    name: 'isRegular',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelHidden: {\n    name: 'hidden',\n    table: {\n      category: 'Label'\n    }\n  },\n  hint: {\n    name: 'children',\n    table: {\n      category: 'Hint'\n    }\n  },\n  message: {\n    name: 'children',\n    table: {\n      category: 'Message'\n    }\n  },\n  validation: {\n    control: {\n      type: 'radio',\n      options: ['success', 'warning', 'error']\n    },\n    table: {\n      category: 'Message'\n    }\n  },\n  hasHint: {\n    name: 'Hint',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasMessage: {\n    name: 'Message',\n    table: {\n      category: 'Story'\n    }\n  }\n}, includeStories: [\"uncontrolled\",\"controlled\"],  };\n\nconst mdxStoryNameToKey = {\"Uncontrolled\":\"uncontrolled\",\"Controlled\":\"controlled\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport { Select, Field, Label, Hint, Message } from '@zendeskgarden/react-forms';\nimport { SelectStory } from './stories/SelectStory';\nimport { SELECT_OPTIONS as OPTIONS } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Forms/Select\" component={Select} subcomponents={{\n      Field,\n      Label,\n      Hint,\n      Message\n    }} args={{\n      options: OPTIONS,\n      label: 'Label',\n      isLabelRegular: false,\n      isLabelHidden: false,\n      hasHint: true,\n      hint: 'Hint',\n      hasMessage: true,\n      message: 'Message'\n    }} argTypes={{\n      options: {\n        name: 'children'\n      },\n      disabled: {\n        control: 'boolean'\n      },\n      label: {\n        name: 'children',\n        table: {\n          category: 'Label'\n        }\n      },\n      isLabelRegular: {\n        name: 'isRegular',\n        table: {\n          category: 'Label'\n        }\n      },\n      isLabelHidden: {\n        name: 'hidden',\n        table: {\n          category: 'Label'\n        }\n      },\n      hint: {\n        name: 'children',\n        table: {\n          category: 'Hint'\n        }\n      },\n      message: {\n        name: 'children',\n        table: {\n          category: 'Message'\n        }\n      },\n      hasHint: {\n        name: 'Hint',\n        table: {\n          category: 'Story'\n        }\n      },\n      hasMessage: {\n        name: 'Message',\n        table: {\n          category: 'Story'\n        }\n      }\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <h2 {...{\n      \"id\": \"uncontrolled\"\n    }}>{`Uncontrolled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Uncontrolled\" mdxType=\"Story\">{args => <SelectStory {...args} mdxType=\"SelectStory\" />}</Story>\n    </Canvas>\n    <h2 {...{\n      \"id\": \"controlled\"\n    }}>{`Controlled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Controlled\" args={{\n        value: OPTIONS.length - 1\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleChange = event => updateArgs({\n            value: event.target.value\n          });\n\n          return <SelectStory {...args} onChange={handleChange} mdxType=\"SelectStory\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const uncontrolled = (args => <SelectStory {...args} />);\nuncontrolled.storyName = 'Uncontrolled';\nuncontrolled.parameters = { storySource: { source: 'args => <SelectStory {...args} />' } };\n\nexport const controlled = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleChange = event => updateArgs({\n    value: event.target.value\n  });\n\n  return <SelectStory {...args} onChange={handleChange} />;\n});\ncontrolled.storyName = 'Controlled';\ncontrolled.args = {\n  value: OPTIONS.length - 1\n};\ncontrolled.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleChange = event => updateArgs({\\n    value: event.target.value\\n  });\\n\\n  return <SelectStory {...args} onChange={handleChange} />;\\n}' } };\n\nconst componentMeta = { title: 'Packages/Forms/Select', component: Select, subcomponents: {\n  Field,\n  Label,\n  Hint,\n  Message\n}, args: {\n  options: OPTIONS,\n  label: 'Label',\n  isLabelRegular: false,\n  isLabelHidden: false,\n  hasHint: true,\n  hint: 'Hint',\n  hasMessage: true,\n  message: 'Message'\n}, argTypes: {\n  options: {\n    name: 'children'\n  },\n  disabled: {\n    control: 'boolean'\n  },\n  label: {\n    name: 'children',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelRegular: {\n    name: 'isRegular',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelHidden: {\n    name: 'hidden',\n    table: {\n      category: 'Label'\n    }\n  },\n  hint: {\n    name: 'children',\n    table: {\n      category: 'Hint'\n    }\n  },\n  message: {\n    name: 'children',\n    table: {\n      category: 'Message'\n    }\n  },\n  hasHint: {\n    name: 'Hint',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasMessage: {\n    name: 'Message',\n    table: {\n      category: 'Story'\n    }\n  }\n}, includeStories: [\"uncontrolled\",\"controlled\"],  };\n\nconst mdxStoryNameToKey = {\"Uncontrolled\":\"uncontrolled\",\"Controlled\":\"controlled\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport { Textarea, Field, Label, Hint, Message } from '@zendeskgarden/react-forms';\nimport { TextareaStory } from './stories/TextareaStory';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Forms/Textarea\" component={Textarea} subcomponents={{\n      Field,\n      Label,\n      Hint,\n      Message\n    }} args={{\n      label: 'Label',\n      isLabelRegular: false,\n      isLabelHidden: false,\n      hasHint: true,\n      hint: 'Hint',\n      hasMessage: true,\n      message: 'Message'\n    }} argTypes={{\n      disabled: {\n        control: 'boolean'\n      },\n      readOnly: {\n        control: 'boolean'\n      },\n      label: {\n        name: 'children',\n        table: {\n          category: 'Label'\n        }\n      },\n      isLabelRegular: {\n        name: 'isRegular',\n        table: {\n          category: 'Label'\n        }\n      },\n      isLabelHidden: {\n        name: 'hidden',\n        table: {\n          category: 'Label'\n        }\n      },\n      hint: {\n        name: 'children',\n        table: {\n          category: 'Hint'\n        }\n      },\n      message: {\n        name: 'children',\n        table: {\n          category: 'Message'\n        }\n      },\n      hasHint: {\n        name: 'Hint',\n        table: {\n          category: 'Story'\n        }\n      },\n      hasMessage: {\n        name: 'Message',\n        table: {\n          category: 'Story'\n        }\n      },\n      placeholder: {\n        control: 'text'\n      }\n    }} parameters={{\n      design: {\n        allowFullscreen: true,\n        type: 'figma',\n        url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A20266'\n      }\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <h2 {...{\n      \"id\": \"uncontrolled\"\n    }}>{`Uncontrolled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Uncontrolled\" args={{\n        placeholder: 'Placeholder'\n      }} mdxType=\"Story\">\n    {args => <TextareaStory {...args} mdxType=\"TextareaStory\" />}\n  </Story>\n    </Canvas>\n    <h2 {...{\n      \"id\": \"controlled\"\n    }}>{`Controlled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Controlled\" args={{\n        value: 'Value'\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleChange = event => updateArgs({\n            value: event.target.value\n          });\n\n          return <TextareaStory {...args} onChange={handleChange} mdxType=\"TextareaStory\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const uncontrolled = (args => <TextareaStory {...args} />);\nuncontrolled.storyName = 'Uncontrolled';\nuncontrolled.args = {\n  placeholder: 'Placeholder'\n};\nuncontrolled.parameters = { storySource: { source: 'args => <TextareaStory {...args} />' } };\n\nexport const controlled = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleChange = event => updateArgs({\n    value: event.target.value\n  });\n\n  return <TextareaStory {...args} onChange={handleChange} />;\n});\ncontrolled.storyName = 'Controlled';\ncontrolled.args = {\n  value: 'Value'\n};\ncontrolled.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleChange = event => updateArgs({\\n    value: event.target.value\\n  });\\n\\n  return <TextareaStory {...args} onChange={handleChange} />;\\n}' } };\n\nconst componentMeta = { title: 'Packages/Forms/Textarea', parameters: {\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A20266'\n  }\n}, component: Textarea, subcomponents: {\n  Field,\n  Label,\n  Hint,\n  Message\n}, args: {\n  label: 'Label',\n  isLabelRegular: false,\n  isLabelHidden: false,\n  hasHint: true,\n  hint: 'Hint',\n  hasMessage: true,\n  message: 'Message'\n}, argTypes: {\n  disabled: {\n    control: 'boolean'\n  },\n  readOnly: {\n    control: 'boolean'\n  },\n  label: {\n    name: 'children',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelRegular: {\n    name: 'isRegular',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelHidden: {\n    name: 'hidden',\n    table: {\n      category: 'Label'\n    }\n  },\n  hint: {\n    name: 'children',\n    table: {\n      category: 'Hint'\n    }\n  },\n  message: {\n    name: 'children',\n    table: {\n      category: 'Message'\n    }\n  },\n  hasHint: {\n    name: 'Hint',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasMessage: {\n    name: 'Message',\n    table: {\n      category: 'Story'\n    }\n  },\n  placeholder: {\n    control: 'text'\n  }\n}, includeStories: [\"uncontrolled\",\"controlled\"],  };\n\nconst mdxStoryNameToKey = {\"Uncontrolled\":\"uncontrolled\",\"Controlled\":\"controlled\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport { Tiles } from '@zendeskgarden/react-forms';\nimport { TilesStory } from './stories/TilesStory';\nimport { TILES } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Forms/Tiles\" component={Tiles} subcomponents={{\n      'Tiles.Description': Tiles.Description,\n      'Tiles.Icon': Tiles.Icon,\n      'Tiles.Label': Tiles.Label,\n      'Tiles.Tile': Tiles.Tile\n    }} args={{\n      tiles: TILES,\n      isCentered: true,\n      name: 'name',\n      hasDescription: true\n    }} argTypes={{\n      tiles: {\n        name: 'children'\n      },\n      hasDescription: {\n        name: 'Tiles.Description',\n        table: {\n          category: 'Story'\n        }\n      }\n    }} parameters={{\n      design: {\n        allowFullscreen: true,\n        type: 'figma',\n        url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=102%3A37165'\n      }\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <h2 {...{\n      \"id\": \"uncontrolled\"\n    }}>{`Uncontrolled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Uncontrolled\" argTypes={{\n        value: {\n          control: false\n        }\n      }} mdxType=\"Story\">\n    {args => <TilesStory {...args} mdxType=\"TilesStory\" />}\n  </Story>\n    </Canvas>\n    <h2 {...{\n      \"id\": \"controlled\"\n    }}>{`Controlled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Controlled\" args={{\n        value: TILES[0].value\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleChange = event => updateArgs({\n            value: event.target.value\n          });\n\n          return <TilesStory {...args} onChange={handleChange} mdxType=\"TilesStory\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const uncontrolled = (args => <TilesStory {...args} />);\nuncontrolled.storyName = 'Uncontrolled';\nuncontrolled.argTypes = {\n  value: {\n    control: false\n  }\n};\nuncontrolled.parameters = { storySource: { source: 'args => <TilesStory {...args} />' } };\n\nexport const controlled = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleChange = event => updateArgs({\n    value: event.target.value\n  });\n\n  return <TilesStory {...args} onChange={handleChange} />;\n});\ncontrolled.storyName = 'Controlled';\ncontrolled.args = {\n  value: TILES[0].value\n};\ncontrolled.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleChange = event => updateArgs({\\n    value: event.target.value\\n  });\\n\\n  return <TilesStory {...args} onChange={handleChange} />;\\n}' } };\n\nconst componentMeta = { title: 'Packages/Forms/Tiles', parameters: {\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=102%3A37165'\n  }\n}, component: Tiles, subcomponents: {\n  'Tiles.Description': Tiles.Description,\n  'Tiles.Icon': Tiles.Icon,\n  'Tiles.Label': Tiles.Label,\n  'Tiles.Tile': Tiles.Tile\n}, args: {\n  tiles: TILES,\n  isCentered: true,\n  name: 'name',\n  hasDescription: true\n}, argTypes: {\n  tiles: {\n    name: 'children'\n  },\n  hasDescription: {\n    name: 'Tiles.Description',\n    table: {\n      category: 'Story'\n    }\n  }\n}, includeStories: [\"uncontrolled\",\"controlled\"],  };\n\nconst mdxStoryNameToKey = {\"Uncontrolled\":\"uncontrolled\",\"Controlled\":\"controlled\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport { Toggle, Field, Label, Hint, Message } from '@zendeskgarden/react-forms';\nimport { ToggleStory } from './stories/ToggleStory';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Forms/Toggle\" component={Toggle} subcomponents={{\n      Field,\n      Label,\n      Hint,\n      Message\n    }} args={{\n      label: 'Label',\n      isLabelRegular: false,\n      isLabelHidden: false,\n      hasHint: false,\n      hint: 'Hint',\n      hasMessage: true,\n      message: 'Message'\n    }} argTypes={{\n      disabled: {\n        control: 'boolean'\n      },\n      label: {\n        name: 'children',\n        table: {\n          category: 'Label'\n        }\n      },\n      isLabelRegular: {\n        name: 'isRegular',\n        table: {\n          category: 'Label'\n        }\n      },\n      isLabelHidden: {\n        name: 'hidden',\n        table: {\n          category: 'Label'\n        }\n      },\n      hint: {\n        name: 'children',\n        table: {\n          category: 'Hint'\n        }\n      },\n      message: {\n        name: 'children',\n        table: {\n          category: 'Message'\n        }\n      },\n      validation: {\n        control: {\n          type: 'radio',\n          options: ['success', 'warning', 'error']\n        },\n        table: {\n          category: 'Message'\n        }\n      },\n      hasHint: {\n        name: 'Hint',\n        table: {\n          category: 'Story'\n        }\n      },\n      hasMessage: {\n        name: 'Message',\n        table: {\n          category: 'Story'\n        }\n      }\n    }} parameters={{\n      design: {\n        allowFullscreen: true,\n        type: 'figma',\n        url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A20264'\n      }\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <h2 {...{\n      \"id\": \"uncontrolled\"\n    }}>{`Uncontrolled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Uncontrolled\" mdxType=\"Story\">{args => <ToggleStory {...args} mdxType=\"ToggleStory\" />}</Story>\n    </Canvas>\n    <h2 {...{\n      \"id\": \"controlled\"\n    }}>{`Controlled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Controlled\" args={{\n        checked: false\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleChange = event => updateArgs({\n            checked: !args.checked\n          });\n\n          return <ToggleStory {...args} onChange={handleChange} mdxType=\"ToggleStory\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const uncontrolled = (args => <ToggleStory {...args} />);\nuncontrolled.storyName = 'Uncontrolled';\nuncontrolled.parameters = { storySource: { source: 'args => <ToggleStory {...args} />' } };\n\nexport const controlled = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleChange = event => updateArgs({\n    checked: !args.checked\n  });\n\n  return <ToggleStory {...args} onChange={handleChange} />;\n});\ncontrolled.storyName = 'Controlled';\ncontrolled.args = {\n  checked: false\n};\ncontrolled.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleChange = event => updateArgs({\\n    checked: !args.checked\\n  });\\n\\n  return <ToggleStory {...args} onChange={handleChange} />;\\n}' } };\n\nconst componentMeta = { title: 'Packages/Forms/Toggle', parameters: {\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A20264'\n  }\n}, component: Toggle, subcomponents: {\n  Field,\n  Label,\n  Hint,\n  Message\n}, args: {\n  label: 'Label',\n  isLabelRegular: false,\n  isLabelHidden: false,\n  hasHint: false,\n  hint: 'Hint',\n  hasMessage: true,\n  message: 'Message'\n}, argTypes: {\n  disabled: {\n    control: 'boolean'\n  },\n  label: {\n    name: 'children',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelRegular: {\n    name: 'isRegular',\n    table: {\n      category: 'Label'\n    }\n  },\n  isLabelHidden: {\n    name: 'hidden',\n    table: {\n      category: 'Label'\n    }\n  },\n  hint: {\n    name: 'children',\n    table: {\n      category: 'Hint'\n    }\n  },\n  message: {\n    name: 'children',\n    table: {\n      category: 'Message'\n    }\n  },\n  validation: {\n    control: {\n      type: 'radio',\n      options: ['success', 'warning', 'error']\n    },\n    table: {\n      category: 'Message'\n    }\n  },\n  hasHint: {\n    name: 'Hint',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasMessage: {\n    name: 'Message',\n    table: {\n      category: 'Story'\n    }\n  }\n}, includeStories: [\"uncontrolled\",\"controlled\"],  };\n\nconst mdxStoryNameToKey = {\"Uncontrolled\":\"uncontrolled\",\"Controlled\":\"controlled\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Canvas, Story } from '@storybook/addon-docs';\nimport { FileUpload } from '@zendeskgarden/react-forms';\nimport { FileUploadStory } from './stories/FileUploadStory';\nimport { FILE_TYPES } from '../stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Forms/[patterns]\" component={FileUpload} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"patterns\"\n    }}>{`Patterns`}</h1>\n    <h2 {...{\n      \"id\": \"file-upload\"\n    }}>{`File upload`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`FileUpload`}</inlineCode>{` component is shown here working together with the\n`}<inlineCode parentName=\"p\">{`react-dropzone`}</inlineCode>{` library.`}</p>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"File upload\" args={{\n        accept: ['image/jpeg', 'image/png', 'image/gif'],\n        multiple: true,\n        type: 'image'\n      }} argTypes={{\n        isDragging: {\n          table: {\n            disable: true\n          }\n        },\n        accept: {\n          table: {\n            category: 'Dropzone'\n          }\n        },\n        maxFiles: {\n          control: 'number',\n          table: {\n            category: 'Dropzone'\n          }\n        },\n        maxSize: {\n          control: 'number',\n          table: {\n            category: 'Dropzone'\n          }\n        },\n        minSize: {\n          control: 'number',\n          table: {\n            category: 'Dropzone'\n          }\n        },\n        multiple: {\n          table: {\n            category: 'Dropzone'\n          }\n        },\n        type: {\n          control: {\n            type: 'select',\n            options: FILE_TYPES\n          },\n          table: {\n            category: 'File'\n          }\n        }\n      }} mdxType=\"Story\">\n    {args => <FileUploadStory {...args} mdxType=\"FileUploadStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const fileUpload = (args => <FileUploadStory {...args} />);\nfileUpload.storyName = 'File upload';\nfileUpload.argTypes = {\n  isDragging: {\n    table: {\n      disable: true\n    }\n  },\n  accept: {\n    table: {\n      category: 'Dropzone'\n    }\n  },\n  maxFiles: {\n    control: 'number',\n    table: {\n      category: 'Dropzone'\n    }\n  },\n  maxSize: {\n    control: 'number',\n    table: {\n      category: 'Dropzone'\n    }\n  },\n  minSize: {\n    control: 'number',\n    table: {\n      category: 'Dropzone'\n    }\n  },\n  multiple: {\n    table: {\n      category: 'Dropzone'\n    }\n  },\n  type: {\n    control: {\n      type: 'select',\n      options: FILE_TYPES\n    },\n    table: {\n      category: 'File'\n    }\n  }\n};\nfileUpload.args = {\n  accept: ['image/jpeg', 'image/png', 'image/gif'],\n  multiple: true,\n  type: 'image'\n};\nfileUpload.parameters = { storySource: { source: 'args => <FileUploadStory {...args} />' } };\n\nconst componentMeta = { title: 'Packages/Forms/[patterns]', component: FileUpload, includeStories: [\"fileUpload\"],  };\n\nconst mdxStoryNameToKey = {\"File upload\":\"fileUpload\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Description } from '@storybook/addon-docs';\nimport README from '../README.md';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Grid/README\" mdxType=\"Meta\" />\n    <Description mdxType=\"Description\">{README}</Description>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Packages/Grid/README', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport {\n  Grid,\n  Row,\n  Col,\n  ARRAY_ALIGN_ITEMS,\n  ARRAY_JUSTIFY_CONTENT,\n  ARRAY_WRAP\n} from '@zendeskgarden/react-grid';\nimport { GridStory } from './stories/GridStory';\nimport { GRID_ROWS as ROWS } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Grid/Grid\" component={Grid} subcomponents={{\n      Col,\n      Row\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`children`}</inlineCode>{` control receives an array of objects that permit all related\n`}<inlineCode parentName=\"p\">{`Row`}</inlineCode>{` prop values along with a `}<inlineCode parentName=\"p\">{`cols`}</inlineCode>{` array. Each object in the `}<inlineCode parentName=\"p\">{`cols`}</inlineCode>{` array can\nset any related `}<inlineCode parentName=\"p\">{`Col`}</inlineCode>{` prop along with `}<inlineCode parentName=\"p\">{`children`}</inlineCode>{` text for display.`}</p>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Grid\" args={{\n        columns: 12,\n        gutters: 'md',\n        rows: ROWS\n      }} argTypes={{\n        rows: {\n          name: 'children'\n        },\n        alignItems: {\n          control: {\n            type: 'select',\n            options: ARRAY_ALIGN_ITEMS\n          },\n          table: {\n            category: 'Row'\n          }\n        },\n        alignItemsXs: {\n          control: {\n            type: 'select',\n            options: ARRAY_ALIGN_ITEMS\n          },\n          table: {\n            category: 'Row'\n          }\n        },\n        alignItemsSm: {\n          control: {\n            type: 'select',\n            options: ARRAY_ALIGN_ITEMS\n          },\n          table: {\n            category: 'Row'\n          }\n        },\n        alignItemsMd: {\n          control: {\n            type: 'select',\n            options: ARRAY_ALIGN_ITEMS\n          },\n          table: {\n            category: 'Row'\n          }\n        },\n        alignItemsLg: {\n          control: {\n            type: 'select',\n            options: ARRAY_ALIGN_ITEMS\n          },\n          table: {\n            category: 'Row'\n          }\n        },\n        alignItemsXl: {\n          control: {\n            type: 'select',\n            options: ARRAY_ALIGN_ITEMS\n          },\n          table: {\n            category: 'Row'\n          }\n        },\n        justifyContent: {\n          control: {\n            type: 'select',\n            options: ARRAY_JUSTIFY_CONTENT\n          },\n          table: {\n            category: 'Row'\n          }\n        },\n        justifyContentXs: {\n          control: {\n            type: 'select',\n            options: ARRAY_JUSTIFY_CONTENT\n          },\n          table: {\n            category: 'Row'\n          }\n        },\n        justifyContentSm: {\n          control: {\n            type: 'select',\n            options: ARRAY_JUSTIFY_CONTENT\n          },\n          table: {\n            category: 'Row'\n          }\n        },\n        justifyContentMd: {\n          control: {\n            type: 'select',\n            options: ARRAY_JUSTIFY_CONTENT\n          },\n          table: {\n            category: 'Row'\n          }\n        },\n        justifyContentLg: {\n          control: {\n            type: 'select',\n            options: ARRAY_JUSTIFY_CONTENT\n          },\n          table: {\n            category: 'Row'\n          }\n        },\n        justifyContentXl: {\n          control: {\n            type: 'select',\n            options: ARRAY_JUSTIFY_CONTENT\n          },\n          table: {\n            category: 'Row'\n          }\n        },\n        wrap: {\n          control: {\n            type: 'select',\n            options: ARRAY_WRAP\n          },\n          table: {\n            category: 'Row'\n          }\n        },\n        wrapXs: {\n          control: {\n            type: 'select',\n            options: ARRAY_WRAP\n          },\n          table: {\n            category: 'Row'\n          }\n        },\n        wrapSm: {\n          control: {\n            type: 'select',\n            options: ARRAY_WRAP\n          },\n          table: {\n            category: 'Row'\n          }\n        },\n        wrapMd: {\n          control: {\n            type: 'select',\n            options: ARRAY_WRAP\n          },\n          table: {\n            category: 'Row'\n          }\n        },\n        wrapLg: {\n          control: {\n            type: 'select',\n            options: ARRAY_WRAP\n          },\n          table: {\n            category: 'Row'\n          }\n        },\n        wrapXl: {\n          control: {\n            type: 'select',\n            options: ARRAY_WRAP\n          },\n          table: {\n            category: 'Row'\n          }\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=102%3A108'\n        }\n      }} mdxType=\"Story\">\n    {args => <GridStory {...args} mdxType=\"GridStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const grid = (args => <GridStory {...args} />);\ngrid.storyName = 'Grid';\ngrid.argTypes = {\n  rows: {\n    name: 'children'\n  },\n  alignItems: {\n    control: {\n      type: 'select',\n      options: ARRAY_ALIGN_ITEMS\n    },\n    table: {\n      category: 'Row'\n    }\n  },\n  alignItemsXs: {\n    control: {\n      type: 'select',\n      options: ARRAY_ALIGN_ITEMS\n    },\n    table: {\n      category: 'Row'\n    }\n  },\n  alignItemsSm: {\n    control: {\n      type: 'select',\n      options: ARRAY_ALIGN_ITEMS\n    },\n    table: {\n      category: 'Row'\n    }\n  },\n  alignItemsMd: {\n    control: {\n      type: 'select',\n      options: ARRAY_ALIGN_ITEMS\n    },\n    table: {\n      category: 'Row'\n    }\n  },\n  alignItemsLg: {\n    control: {\n      type: 'select',\n      options: ARRAY_ALIGN_ITEMS\n    },\n    table: {\n      category: 'Row'\n    }\n  },\n  alignItemsXl: {\n    control: {\n      type: 'select',\n      options: ARRAY_ALIGN_ITEMS\n    },\n    table: {\n      category: 'Row'\n    }\n  },\n  justifyContent: {\n    control: {\n      type: 'select',\n      options: ARRAY_JUSTIFY_CONTENT\n    },\n    table: {\n      category: 'Row'\n    }\n  },\n  justifyContentXs: {\n    control: {\n      type: 'select',\n      options: ARRAY_JUSTIFY_CONTENT\n    },\n    table: {\n      category: 'Row'\n    }\n  },\n  justifyContentSm: {\n    control: {\n      type: 'select',\n      options: ARRAY_JUSTIFY_CONTENT\n    },\n    table: {\n      category: 'Row'\n    }\n  },\n  justifyContentMd: {\n    control: {\n      type: 'select',\n      options: ARRAY_JUSTIFY_CONTENT\n    },\n    table: {\n      category: 'Row'\n    }\n  },\n  justifyContentLg: {\n    control: {\n      type: 'select',\n      options: ARRAY_JUSTIFY_CONTENT\n    },\n    table: {\n      category: 'Row'\n    }\n  },\n  justifyContentXl: {\n    control: {\n      type: 'select',\n      options: ARRAY_JUSTIFY_CONTENT\n    },\n    table: {\n      category: 'Row'\n    }\n  },\n  wrap: {\n    control: {\n      type: 'select',\n      options: ARRAY_WRAP\n    },\n    table: {\n      category: 'Row'\n    }\n  },\n  wrapXs: {\n    control: {\n      type: 'select',\n      options: ARRAY_WRAP\n    },\n    table: {\n      category: 'Row'\n    }\n  },\n  wrapSm: {\n    control: {\n      type: 'select',\n      options: ARRAY_WRAP\n    },\n    table: {\n      category: 'Row'\n    }\n  },\n  wrapMd: {\n    control: {\n      type: 'select',\n      options: ARRAY_WRAP\n    },\n    table: {\n      category: 'Row'\n    }\n  },\n  wrapLg: {\n    control: {\n      type: 'select',\n      options: ARRAY_WRAP\n    },\n    table: {\n      category: 'Row'\n    }\n  },\n  wrapXl: {\n    control: {\n      type: 'select',\n      options: ARRAY_WRAP\n    },\n    table: {\n      category: 'Row'\n    }\n  }\n};\ngrid.args = {\n  columns: 12,\n  gutters: 'md',\n  rows: ROWS\n};\ngrid.parameters = { storySource: { source: 'args => <GridStory {...args} />' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=102%3A108'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Grid/Grid', component: Grid, subcomponents: {\n  Col,\n  Row\n}, includeStories: [\"grid\"],  };\n\nconst mdxStoryNameToKey = {\"Grid\":\"grid\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Description } from '@storybook/addon-docs';\nimport README from '../README.md';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Loaders/README\" mdxType=\"Meta\" />\n    <Description mdxType=\"Description\">{README}</Description>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Packages/Loaders/README', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { Dots } from '@zendeskgarden/react-loaders';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Loaders/Dots\" component={Dots} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Dots\" argTypes={{\n        color: {\n          control: 'color'\n        },\n        size: {\n          control: 'number'\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=175%3A188'\n        }\n      }} mdxType=\"Story\">\n    {args => <Dots {...args} mdxType=\"Dots\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const dots = (args => <Dots {...args} />);\ndots.storyName = 'Dots';\ndots.argTypes = {\n  color: {\n    control: 'color'\n  },\n  size: {\n    control: 'number'\n  }\n};\ndots.parameters = { storySource: { source: 'args => <Dots {...args} />' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=175%3A188'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Loaders/Dots', component: Dots, includeStories: [\"dots\"],  };\n\nconst mdxStoryNameToKey = {\"Dots\":\"dots\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { Inline } from '@zendeskgarden/react-loaders';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Loaders/Inline\" component={Inline} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Inline\" argTypes={{\n        color: {\n          control: 'color'\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=175%3A188'\n        }\n      }} mdxType=\"Story\">\n    {args => <Inline {...args} mdxType=\"Inline\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const inline = (args => <Inline {...args} />);\ninline.storyName = 'Inline';\ninline.argTypes = {\n  color: {\n    control: 'color'\n  }\n};\ninline.parameters = { storySource: { source: 'args => <Inline {...args} />' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=175%3A188'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Loaders/Inline', component: Inline, includeStories: [\"inline\"],  };\n\nconst mdxStoryNameToKey = {\"Inline\":\"inline\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { Progress } from '@zendeskgarden/react-loaders';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Loaders/Progress\" component={Progress} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Progress\" args={{\n        value: 0\n      }} argTypes={{\n        color: {\n          control: 'color'\n        },\n        value: {\n          control: {\n            type: 'range',\n            min: 0,\n            max: 100\n          }\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=175%3A144'\n        }\n      }} mdxType=\"Story\">\n    {args => <Progress {...args} mdxType=\"Progress\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const progress = (args => <Progress {...args} />);\nprogress.storyName = 'Progress';\nprogress.argTypes = {\n  color: {\n    control: 'color'\n  },\n  value: {\n    control: {\n      type: 'range',\n      min: 0,\n      max: 100\n    }\n  }\n};\nprogress.args = {\n  value: 0\n};\nprogress.parameters = { storySource: { source: 'args => <Progress {...args} />' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=175%3A144'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Loaders/Progress', component: Progress, includeStories: [\"progress\"],  };\n\nconst mdxStoryNameToKey = {\"Progress\":\"progress\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { Skeleton } from '@zendeskgarden/react-loaders';\nimport { SkeletonStory } from './stories/SkeletonStory';\nimport { TYPE_SCALE_OPTIONS } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Loaders/Skeleton\" component={Skeleton} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Skeleton\" args={{\n        count: 1\n      }} argTypes={{\n        backgroundColor: {\n          control: 'color',\n          table: {\n            category: 'Story'\n          }\n        },\n        count: {\n          control: {\n            type: 'range',\n            min: 1,\n            max: 20\n          },\n          table: {\n            category: 'Story'\n          }\n        },\n        typescale: {\n          control: 'radio',\n          options: TYPE_SCALE_OPTIONS,\n          table: {\n            category: 'Story'\n          }\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=1502%3A141'\n        }\n      }} mdxType=\"Story\">\n    {args => <SkeletonStory {...args} mdxType=\"SkeletonStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const skeleton = (args => <SkeletonStory {...args} />);\nskeleton.storyName = 'Skeleton';\nskeleton.argTypes = {\n  backgroundColor: {\n    control: 'color',\n    table: {\n      category: 'Story'\n    }\n  },\n  count: {\n    control: {\n      type: 'range',\n      min: 1,\n      max: 20\n    },\n    table: {\n      category: 'Story'\n    }\n  },\n  typescale: {\n    control: 'radio',\n    options: TYPE_SCALE_OPTIONS,\n    table: {\n      category: 'Story'\n    }\n  }\n};\nskeleton.args = {\n  count: 1\n};\nskeleton.parameters = { storySource: { source: 'args => <SkeletonStory {...args} />' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=1502%3A141'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Loaders/Skeleton', component: Skeleton, includeStories: [\"skeleton\"],  };\n\nconst mdxStoryNameToKey = {\"Skeleton\":\"skeleton\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { Spinner } from '@zendeskgarden/react-loaders';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Loaders/Spinner\" component={Spinner} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Spinner\" argTypes={{\n        color: {\n          control: 'color'\n        },\n        size: {\n          control: 'number'\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=175%3A188'\n        }\n      }} mdxType=\"Story\">\n    {args => <Spinner {...args} mdxType=\"Spinner\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const spinner = (args => <Spinner {...args} />);\nspinner.storyName = 'Spinner';\nspinner.argTypes = {\n  color: {\n    control: 'color'\n  },\n  size: {\n    control: 'number'\n  }\n};\nspinner.parameters = { storySource: { source: 'args => <Spinner {...args} />' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=175%3A188'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Loaders/Spinner', component: Spinner, includeStories: [\"spinner\"],  };\n\nconst mdxStoryNameToKey = {\"Spinner\":\"spinner\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Description } from '@storybook/addon-docs';\nimport README from '../README.md';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Modals/README\" mdxType=\"Meta\" />\n    <Description mdxType=\"Description\">{README}</Description>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Packages/Modals/README', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport { DrawerModal } from '@zendeskgarden/react-modals';\nimport { DrawerModalStory } from './stories/DrawerModalStory';\nimport { MODAL_BODY as BODY, MODAL_FOOTER_ITEMS as FOOTER_ITEMS } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Modals/DrawerModal\" component={DrawerModal} subcomponents={{\n      'DrawerModal.Body': DrawerModal.Body,\n      'DrawerModal.Close': DrawerModal.Close,\n      'DrawerModal.Footer': DrawerModal.Footer,\n      'DrawerModal.FooterItem': DrawerModal.FooterItem,\n      'DrawerModal.Header': DrawerModal.Header\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"DrawerModal\" args={{\n        hasBody: true,\n        body: BODY,\n        hasClose: true,\n        hasFooter: true,\n        hasHeader: true,\n        header: 'Header',\n        footerItems: FOOTER_ITEMS\n      }} argTypes={{\n        appendToNode: {\n          control: false\n        },\n        hasBody: {\n          name: 'DrawerModal.Body',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasClose: {\n          name: 'DrawerModal.Close',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasFooter: {\n          name: 'DrawerModal.Footer',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasHeader: {\n          name: 'DrawerModal.Header',\n          table: {\n            category: 'Story'\n          }\n        },\n        footerItems: {\n          name: 'DrawerModal.FooterItem[]',\n          table: {\n            category: 'Story'\n          }\n        },\n        body: {\n          name: 'children',\n          table: {\n            category: 'DrawerModal.Body'\n          }\n        },\n        header: {\n          name: 'children',\n          table: {\n            category: 'DrawerModal.Header'\n          }\n        }\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleClick = () => updateArgs({\n            isOpen: true\n          });\n\n          const handleClose = () => updateArgs({\n            isOpen: false\n          });\n\n          return <DrawerModalStory {...args} onClick={handleClick} onClose={handleClose} mdxType=\"DrawerModalStory\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const drawerModal = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleClick = () => updateArgs({\n    isOpen: true\n  });\n\n  const handleClose = () => updateArgs({\n    isOpen: false\n  });\n\n  return <DrawerModalStory {...args} onClick={handleClick} onClose={handleClose} />;\n});\ndrawerModal.storyName = 'DrawerModal';\ndrawerModal.argTypes = {\n  appendToNode: {\n    control: false\n  },\n  hasBody: {\n    name: 'DrawerModal.Body',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasClose: {\n    name: 'DrawerModal.Close',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasFooter: {\n    name: 'DrawerModal.Footer',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasHeader: {\n    name: 'DrawerModal.Header',\n    table: {\n      category: 'Story'\n    }\n  },\n  footerItems: {\n    name: 'DrawerModal.FooterItem[]',\n    table: {\n      category: 'Story'\n    }\n  },\n  body: {\n    name: 'children',\n    table: {\n      category: 'DrawerModal.Body'\n    }\n  },\n  header: {\n    name: 'children',\n    table: {\n      category: 'DrawerModal.Header'\n    }\n  }\n};\ndrawerModal.args = {\n  hasBody: true,\n  body: BODY,\n  hasClose: true,\n  hasFooter: true,\n  hasHeader: true,\n  header: 'Header',\n  footerItems: FOOTER_ITEMS\n};\ndrawerModal.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleClick = () => updateArgs({\\n    isOpen: true\\n  });\\n\\n  const handleClose = () => updateArgs({\\n    isOpen: false\\n  });\\n\\n  return <DrawerModalStory {...args} onClick={handleClick} onClose={handleClose} />;\\n}' } };\n\nconst componentMeta = { title: 'Packages/Modals/DrawerModal', component: DrawerModal, subcomponents: {\n  'DrawerModal.Body': DrawerModal.Body,\n  'DrawerModal.Close': DrawerModal.Close,\n  'DrawerModal.Footer': DrawerModal.Footer,\n  'DrawerModal.FooterItem': DrawerModal.FooterItem,\n  'DrawerModal.Header': DrawerModal.Header\n}, includeStories: [\"drawerModal\"],  };\n\nconst mdxStoryNameToKey = {\"DrawerModal\":\"drawerModal\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport { Modal, Body, Close, Footer, FooterItem, Header } from '@zendeskgarden/react-modals';\nimport { ModalStory } from './stories/ModalStory';\nimport { MODAL_BODY as BODY, MODAL_FOOTER_ITEMS as FOOTER_ITEMS } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Modals/Modal\" component={Modal} subcomponents={{\n      Body,\n      Close,\n      Footer,\n      FooterItem,\n      Header\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Modal\" args={{\n        isAnimated: true,\n        isCentered: true,\n        isVisible: false,\n        hasBody: true,\n        body: BODY,\n        hasClose: true,\n        hasFooter: true,\n        hasHeader: true,\n        header: 'Header',\n        footerItems: FOOTER_ITEMS\n      }} argTypes={{\n        appendToNode: {\n          control: false\n        },\n        isVisible: {\n          table: {\n            category: 'Story'\n          }\n        },\n        hasBody: {\n          name: 'Body',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasClose: {\n          name: 'Close',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasFooter: {\n          name: 'Footer',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasHeader: {\n          name: 'Header',\n          table: {\n            category: 'Story'\n          }\n        },\n        footerItems: {\n          name: 'FooterItem[]',\n          table: {\n            category: 'Story'\n          }\n        },\n        body: {\n          name: 'children',\n          table: {\n            category: 'Body'\n          }\n        },\n        isDanger: {\n          control: 'boolean',\n          table: {\n            category: 'Header'\n          }\n        },\n        header: {\n          name: 'children',\n          table: {\n            category: 'Header'\n          }\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=102%3A124'\n        }\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleClick = () => updateArgs({\n            isVisible: true\n          });\n\n          const handleClose = () => updateArgs({\n            isVisible: false\n          });\n\n          return <ModalStory {...args} onClick={handleClick} onClose={handleClose} mdxType=\"ModalStory\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const modal = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleClick = () => updateArgs({\n    isVisible: true\n  });\n\n  const handleClose = () => updateArgs({\n    isVisible: false\n  });\n\n  return <ModalStory {...args} onClick={handleClick} onClose={handleClose} />;\n});\nmodal.storyName = 'Modal';\nmodal.argTypes = {\n  appendToNode: {\n    control: false\n  },\n  isVisible: {\n    table: {\n      category: 'Story'\n    }\n  },\n  hasBody: {\n    name: 'Body',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasClose: {\n    name: 'Close',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasFooter: {\n    name: 'Footer',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasHeader: {\n    name: 'Header',\n    table: {\n      category: 'Story'\n    }\n  },\n  footerItems: {\n    name: 'FooterItem[]',\n    table: {\n      category: 'Story'\n    }\n  },\n  body: {\n    name: 'children',\n    table: {\n      category: 'Body'\n    }\n  },\n  isDanger: {\n    control: 'boolean',\n    table: {\n      category: 'Header'\n    }\n  },\n  header: {\n    name: 'children',\n    table: {\n      category: 'Header'\n    }\n  }\n};\nmodal.args = {\n  isAnimated: true,\n  isCentered: true,\n  isVisible: false,\n  hasBody: true,\n  body: BODY,\n  hasClose: true,\n  hasFooter: true,\n  hasHeader: true,\n  header: 'Header',\n  footerItems: FOOTER_ITEMS\n};\nmodal.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleClick = () => updateArgs({\\n    isVisible: true\\n  });\\n\\n  const handleClose = () => updateArgs({\\n    isVisible: false\\n  });\\n\\n  return <ModalStory {...args} onClick={handleClick} onClose={handleClose} />;\\n}' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=102%3A124'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Modals/Modal', component: Modal, subcomponents: {\n  Body,\n  Close,\n  Footer,\n  FooterItem,\n  Header\n}, includeStories: [\"modal\"],  };\n\nconst mdxStoryNameToKey = {\"Modal\":\"modal\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport { TooltipModal } from '@zendeskgarden/react-modals';\nimport { TooltipModalStory } from './stories/TooltipModalStory';\nimport { TOOLTIP_MODAL_BODY as BODY } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Modals/TooltipModal\" component={TooltipModal} subcomponents={{\n      'TooltipModal.Body': TooltipModal.Body,\n      'TooltipModal.Close': TooltipModal.Close,\n      'TooltipModal.Footer': TooltipModal.Footer,\n      'TooltipModal.FooterItem': TooltipModal.FooterItem,\n      'TooltipModal.Title': TooltipModal.Title\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"TooltipModal\" args={{\n        focusOnMount: true,\n        hasArrow: true,\n        isAnimated: true,\n        restoreFocus: true,\n        hasBody: true,\n        body: BODY,\n        hasClose: true,\n        hasFooter: true,\n        hasTitle: true,\n        title: 'Title'\n      }} argTypes={{\n        referenceElement: {\n          control: false\n        },\n        hasBody: {\n          name: 'TooltipModal.Body',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasClose: {\n          name: 'TooltipModal.Close',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasFooter: {\n          name: 'TooltipModal.Footer',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasTitle: {\n          name: 'TooltipModal.Title',\n          table: {\n            category: 'Story'\n          }\n        },\n        body: {\n          name: 'children',\n          table: {\n            category: 'TooltipModal.Body'\n          }\n        },\n        title: {\n          name: 'children',\n          table: {\n            category: 'TooltipModal.Title'\n          }\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A25593'\n        }\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleClick = referenceElement => updateArgs({\n            referenceElement\n          });\n\n          const handleClose = () => updateArgs({\n            referenceElement: null\n          });\n\n          return <TooltipModalStory {...args} count={3} handleClick={handleClick} onClose={handleClose} mdxType=\"TooltipModalStory\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const tooltipModal = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleClick = referenceElement => updateArgs({\n    referenceElement\n  });\n\n  const handleClose = () => updateArgs({\n    referenceElement: null\n  });\n\n  return <TooltipModalStory {...args} count={3} handleClick={handleClick} onClose={handleClose} />;\n});\ntooltipModal.storyName = 'TooltipModal';\ntooltipModal.argTypes = {\n  referenceElement: {\n    control: false\n  },\n  hasBody: {\n    name: 'TooltipModal.Body',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasClose: {\n    name: 'TooltipModal.Close',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasFooter: {\n    name: 'TooltipModal.Footer',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasTitle: {\n    name: 'TooltipModal.Title',\n    table: {\n      category: 'Story'\n    }\n  },\n  body: {\n    name: 'children',\n    table: {\n      category: 'TooltipModal.Body'\n    }\n  },\n  title: {\n    name: 'children',\n    table: {\n      category: 'TooltipModal.Title'\n    }\n  }\n};\ntooltipModal.args = {\n  focusOnMount: true,\n  hasArrow: true,\n  isAnimated: true,\n  restoreFocus: true,\n  hasBody: true,\n  body: BODY,\n  hasClose: true,\n  hasFooter: true,\n  hasTitle: true,\n  title: 'Title'\n};\ntooltipModal.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleClick = referenceElement => updateArgs({\\n    referenceElement\\n  });\\n\\n  const handleClose = () => updateArgs({\\n    referenceElement: null\\n  });\\n\\n  return <TooltipModalStory {...args} count={3} handleClick={handleClick} onClose={handleClose} />;\\n}' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A25593'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Modals/TooltipModal', component: TooltipModal, subcomponents: {\n  'TooltipModal.Body': TooltipModal.Body,\n  'TooltipModal.Close': TooltipModal.Close,\n  'TooltipModal.Footer': TooltipModal.Footer,\n  'TooltipModal.FooterItem': TooltipModal.FooterItem,\n  'TooltipModal.Title': TooltipModal.Title\n}, includeStories: [\"tooltipModal\"],  };\n\nconst mdxStoryNameToKey = {\"TooltipModal\":\"tooltipModal\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Description } from '@storybook/addon-docs';\nimport README from '../README.md';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Notifications/README\" mdxType=\"Meta\" />\n    <Description mdxType=\"Description\">{README}</Description>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Packages/Notifications/README', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { Alert, Close, Paragraph, Title } from '@zendeskgarden/react-notifications';\nimport { AlertStory } from './stories/AlertStory';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Notifications/Alert\" component={Alert} subcomponents={{\n      Close,\n      Paragraph,\n      Title\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Alert\" args={{\n        children: 'Text',\n        type: 'info',\n        title: 'Title',\n        hasClose: true,\n        hasParagraph: false\n      }} argTypes={{\n        title: {\n          name: 'children',\n          table: {\n            category: 'Title'\n          }\n        },\n        isRegular: {\n          control: {\n            type: 'boolean'\n          },\n          table: {\n            category: 'Title'\n          }\n        },\n        hasClose: {\n          name: 'Close',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasParagraph: {\n          name: 'Paragraph',\n          table: {\n            category: 'Story'\n          }\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A25292'\n        }\n      }} mdxType=\"Story\">\n    {args => <AlertStory {...args} mdxType=\"AlertStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const alert = (args => <AlertStory {...args} />);\nalert.storyName = 'Alert';\nalert.argTypes = {\n  title: {\n    name: 'children',\n    table: {\n      category: 'Title'\n    }\n  },\n  isRegular: {\n    control: {\n      type: 'boolean'\n    },\n    table: {\n      category: 'Title'\n    }\n  },\n  hasClose: {\n    name: 'Close',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasParagraph: {\n    name: 'Paragraph',\n    table: {\n      category: 'Story'\n    }\n  }\n};\nalert.args = {\n  children: 'Text',\n  type: 'info',\n  title: 'Title',\n  hasClose: true,\n  hasParagraph: false\n};\nalert.parameters = { storySource: { source: 'args => <AlertStory {...args} />' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A25292'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Notifications/Alert', component: Alert, subcomponents: {\n  Close,\n  Paragraph,\n  Title\n}, includeStories: [\"alert\"],  };\n\nconst mdxStoryNameToKey = {\"Alert\":\"alert\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { Notification, Close, Paragraph, Title } from '@zendeskgarden/react-notifications';\nimport { NotificationStory } from './stories/NotificationStory';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Notifications/Notification\" component={Notification} subcomponents={{\n      Close,\n      Paragraph,\n      Title\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Notification\" args={{\n        children: 'Text',\n        title: 'Title',\n        hasClose: true,\n        hasParagraph: false\n      }} argTypes={{\n        title: {\n          name: 'children',\n          table: {\n            category: 'Title'\n          }\n        },\n        isRegular: {\n          control: {\n            type: 'boolean'\n          },\n          table: {\n            category: 'Title'\n          }\n        },\n        hasClose: {\n          name: 'Close',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasParagraph: {\n          name: 'Paragraph',\n          table: {\n            category: 'Story'\n          }\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=1480%3A28056'\n        }\n      }} mdxType=\"Story\">\n    {args => <NotificationStory {...args} mdxType=\"NotificationStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const notification = (args => <NotificationStory {...args} />);\nnotification.storyName = 'Notification';\nnotification.argTypes = {\n  title: {\n    name: 'children',\n    table: {\n      category: 'Title'\n    }\n  },\n  isRegular: {\n    control: {\n      type: 'boolean'\n    },\n    table: {\n      category: 'Title'\n    }\n  },\n  hasClose: {\n    name: 'Close',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasParagraph: {\n    name: 'Paragraph',\n    table: {\n      category: 'Story'\n    }\n  }\n};\nnotification.args = {\n  children: 'Text',\n  title: 'Title',\n  hasClose: true,\n  hasParagraph: false\n};\nnotification.parameters = { storySource: { source: 'args => <NotificationStory {...args} />' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=1480%3A28056'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Notifications/Notification', component: Notification, subcomponents: {\n  Close,\n  Paragraph,\n  Title\n}, includeStories: [\"notification\"],  };\n\nconst mdxStoryNameToKey = {\"Notification\":\"notification\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { ToastProvider } from '@zendeskgarden/react-notifications';\nimport { ToastProviderStory } from './stories/ToastProviderStory';\nimport { TOAST_PLACEMENT_OPTIONS } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Notifications/ToastProvider\" component={ToastProvider} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"ToastProvider\" args={{\n        children: 'Notification',\n        autoDismiss: true,\n        milliseconds: 5000\n      }} argTypes={{\n        placementProps: {\n          control: 'object'\n        },\n        children: {\n          table: {\n            category: 'Toast'\n          }\n        },\n        autoDismiss: {\n          table: {\n            category: 'Toast'\n          }\n        },\n        milliseconds: {\n          table: {\n            category: 'Toast'\n          }\n        },\n        placement: {\n          control: 'radio',\n          options: TOAST_PLACEMENT_OPTIONS,\n          table: {\n            category: 'Toast'\n          }\n        }\n      }} mdxType=\"Story\">\n    {args => <ToastProviderStory {...args} mdxType=\"ToastProviderStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const toastProvider = (args => <ToastProviderStory {...args} />);\ntoastProvider.storyName = 'ToastProvider';\ntoastProvider.argTypes = {\n  placementProps: {\n    control: 'object'\n  },\n  children: {\n    table: {\n      category: 'Toast'\n    }\n  },\n  autoDismiss: {\n    table: {\n      category: 'Toast'\n    }\n  },\n  milliseconds: {\n    table: {\n      category: 'Toast'\n    }\n  },\n  placement: {\n    control: 'radio',\n    options: TOAST_PLACEMENT_OPTIONS,\n    table: {\n      category: 'Toast'\n    }\n  }\n};\ntoastProvider.args = {\n  children: 'Notification',\n  autoDismiss: true,\n  milliseconds: 5000\n};\ntoastProvider.parameters = { storySource: { source: 'args => <ToastProviderStory {...args} />' } };\n\nconst componentMeta = { title: 'Packages/Notifications/ToastProvider', component: ToastProvider, includeStories: [\"toastProvider\"],  };\n\nconst mdxStoryNameToKey = {\"ToastProvider\":\"toastProvider\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { Well, Close, Paragraph, Title } from '@zendeskgarden/react-notifications';\nimport { WellStory } from './stories/WellStory';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Notifications/Well\" component={Well} subcomponents={{\n      Paragraph,\n      Title\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Well\" args={{\n        children: 'Text',\n        title: 'Title',\n        hasParagraph: false\n      }} argTypes={{\n        title: {\n          name: 'children',\n          table: {\n            category: 'Title'\n          }\n        },\n        isRegular: {\n          control: {\n            type: 'boolean'\n          },\n          table: {\n            category: 'Title'\n          }\n        },\n        hasParagraph: {\n          name: 'Paragraph',\n          table: {\n            category: 'Story'\n          }\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A24694'\n        }\n      }} mdxType=\"Story\">\n    {args => <WellStory {...args} mdxType=\"WellStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const well = (args => <WellStory {...args} />);\nwell.storyName = 'Well';\nwell.argTypes = {\n  title: {\n    name: 'children',\n    table: {\n      category: 'Title'\n    }\n  },\n  isRegular: {\n    control: {\n      type: 'boolean'\n    },\n    table: {\n      category: 'Title'\n    }\n  },\n  hasParagraph: {\n    name: 'Paragraph',\n    table: {\n      category: 'Story'\n    }\n  }\n};\nwell.args = {\n  children: 'Text',\n  title: 'Title',\n  hasParagraph: false\n};\nwell.parameters = { storySource: { source: 'args => <WellStory {...args} />' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A24694'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Notifications/Well', component: Well, subcomponents: {\n  Paragraph,\n  Title\n}, includeStories: [\"well\"],  };\n\nconst mdxStoryNameToKey = {\"Well\":\"well\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Description } from '@storybook/addon-docs';\nimport README from '../README.md';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Pagination/README\" mdxType=\"Meta\" />\n    <Description mdxType=\"Description\">{README}</Description>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Packages/Pagination/README', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport { CursorPagination } from '@zendeskgarden/react-pagination';\nimport { CursorPaginationStory } from './stories/CursorPaginationStory';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Pagination/CursorPagination\" component={CursorPagination} subcomponents={{\n      'CursorPagination.First': CursorPagination.First,\n      'CursorPagination.Last': CursorPagination.Last,\n      'CursorPagination.Next': CursorPagination.Next,\n      'CursorPagination.Previous': CursorPagination.Previous\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"CursorPagination\" args={{\n        currentPage: 0,\n        totalPages: 4,\n        first: 'First',\n        previous: 'Previous',\n        next: 'Next',\n        last: 'Last'\n      }} argTypes={{\n        currentPage: {\n          table: {\n            category: 'Story'\n          }\n        },\n        totalPages: {\n          table: {\n            category: 'Story'\n          }\n        },\n        first: {\n          name: 'children',\n          table: {\n            category: 'CursorPagination.First'\n          }\n        },\n        previous: {\n          name: 'children',\n          table: {\n            category: 'CursorPagination.Previous'\n          }\n        },\n        next: {\n          name: 'children',\n          table: {\n            category: 'CursorPagination.Next'\n          }\n        },\n        last: {\n          name: 'children',\n          table: {\n            category: 'CursorPagination.Last'\n          }\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=172%3A13038'\n        }\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleChange = currentPage => updateArgs({\n            currentPage\n          });\n\n          return <CursorPaginationStory {...args} onChange={handleChange} mdxType=\"CursorPaginationStory\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const cursorPagination = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleChange = currentPage => updateArgs({\n    currentPage\n  });\n\n  return <CursorPaginationStory {...args} onChange={handleChange} />;\n});\ncursorPagination.storyName = 'CursorPagination';\ncursorPagination.argTypes = {\n  currentPage: {\n    table: {\n      category: 'Story'\n    }\n  },\n  totalPages: {\n    table: {\n      category: 'Story'\n    }\n  },\n  first: {\n    name: 'children',\n    table: {\n      category: 'CursorPagination.First'\n    }\n  },\n  previous: {\n    name: 'children',\n    table: {\n      category: 'CursorPagination.Previous'\n    }\n  },\n  next: {\n    name: 'children',\n    table: {\n      category: 'CursorPagination.Next'\n    }\n  },\n  last: {\n    name: 'children',\n    table: {\n      category: 'CursorPagination.Last'\n    }\n  }\n};\ncursorPagination.args = {\n  currentPage: 0,\n  totalPages: 4,\n  first: 'First',\n  previous: 'Previous',\n  next: 'Next',\n  last: 'Last'\n};\ncursorPagination.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleChange = currentPage => updateArgs({\\n    currentPage\\n  });\\n\\n  return <CursorPaginationStory {...args} onChange={handleChange} />;\\n}' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=172%3A13038'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Pagination/CursorPagination', component: CursorPagination, subcomponents: {\n  'CursorPagination.First': CursorPagination.First,\n  'CursorPagination.Last': CursorPagination.Last,\n  'CursorPagination.Next': CursorPagination.Next,\n  'CursorPagination.Previous': CursorPagination.Previous\n}, includeStories: [\"cursorPagination\"],  };\n\nconst mdxStoryNameToKey = {\"CursorPagination\":\"cursorPagination\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport { Pagination } from '@zendeskgarden/react-pagination';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Pagination/Pagination\" component={Pagination} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Pagination\" args={{\n        currentPage: 1,\n        totalPages: 11\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=172%3A13037'\n        }\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleChange = currentPage => updateArgs({\n            currentPage\n          });\n\n          return <Pagination {...args} onChange={handleChange} mdxType=\"Pagination\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const pagination = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleChange = currentPage => updateArgs({\n    currentPage\n  });\n\n  return <Pagination {...args} onChange={handleChange} />;\n});\npagination.storyName = 'Pagination';\npagination.args = {\n  currentPage: 1,\n  totalPages: 11\n};\npagination.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleChange = currentPage => updateArgs({\\n    currentPage\\n  });\\n\\n  return <Pagination {...args} onChange={handleChange} />;\\n}' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=172%3A13037'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Pagination/Pagination', component: Pagination, includeStories: [\"pagination\"],  };\n\nconst mdxStoryNameToKey = {\"Pagination\":\"pagination\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Description } from '@storybook/addon-docs';\nimport README from '../README.md';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Tables/README\" mdxType=\"Meta\" />\n    <Description mdxType=\"Description\">{README}</Description>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Packages/Tables/README', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport {\n  Table,\n  Body,\n  Caption,\n  Cell,\n  GroupRow,\n  Head,\n  HeaderCell,\n  HeaderRow,\n  OverflowButton,\n  Row,\n  SortableCell\n} from '@zendeskgarden/react-tables';\nimport { TableStory } from './stories/TableStory';\nimport { TABLE_DATA as DATA } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Tables/Table\" component={Table} subcomponents={{\n      Body,\n      Caption,\n      Cell,\n      GroupRow,\n      Head,\n      HeaderCell,\n      HeaderRow,\n      OverflowButton,\n      Row,\n      SortableCell\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Table\" args={{\n        caption: 'Caption',\n        data: DATA,\n        widths: [],\n        isBold: true\n      }} argTypes={{\n        isReadOnly: {\n          control: 'boolean'\n        },\n        hasOverflow: {\n          control: 'boolean',\n          table: {\n            category: 'Cell'\n          }\n        },\n        isTruncated: {\n          control: 'boolean',\n          table: {\n            category: 'Cell'\n          }\n        },\n        caption: {\n          name: 'children',\n          table: {\n            category: 'Caption'\n          }\n        },\n        isBold: {\n          control: 'boolean',\n          table: {\n            category: 'GroupRow'\n          }\n        },\n        isStriped: {\n          control: 'boolean',\n          table: {\n            category: 'Row'\n          }\n        },\n        data: {\n          name: 'Row[]',\n          table: {\n            category: 'Story'\n          }\n        },\n        widths: {\n          name: 'Cell[] widths',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasSelection: {\n          control: 'boolean',\n          table: {\n            category: 'Story'\n          }\n        },\n        isSortable: {\n          name: 'SortableCell',\n          control: 'boolean',\n          table: {\n            category: 'Story'\n          }\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=102%3A125'\n        }\n      }} mdxType=\"Story\">\n    {args => <TableStory {...args} mdxType=\"TableStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const table = (args => <TableStory {...args} />);\ntable.storyName = 'Table';\ntable.argTypes = {\n  isReadOnly: {\n    control: 'boolean'\n  },\n  hasOverflow: {\n    control: 'boolean',\n    table: {\n      category: 'Cell'\n    }\n  },\n  isTruncated: {\n    control: 'boolean',\n    table: {\n      category: 'Cell'\n    }\n  },\n  caption: {\n    name: 'children',\n    table: {\n      category: 'Caption'\n    }\n  },\n  isBold: {\n    control: 'boolean',\n    table: {\n      category: 'GroupRow'\n    }\n  },\n  isStriped: {\n    control: 'boolean',\n    table: {\n      category: 'Row'\n    }\n  },\n  data: {\n    name: 'Row[]',\n    table: {\n      category: 'Story'\n    }\n  },\n  widths: {\n    name: 'Cell[] widths',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasSelection: {\n    control: 'boolean',\n    table: {\n      category: 'Story'\n    }\n  },\n  isSortable: {\n    name: 'SortableCell',\n    control: 'boolean',\n    table: {\n      category: 'Story'\n    }\n  }\n};\ntable.args = {\n  caption: 'Caption',\n  data: DATA,\n  widths: [],\n  isBold: true\n};\ntable.parameters = { storySource: { source: 'args => <TableStory {...args} />' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=102%3A125'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Tables/Table', component: Table, subcomponents: {\n  Body,\n  Caption,\n  Cell,\n  GroupRow,\n  Head,\n  HeaderCell,\n  HeaderRow,\n  OverflowButton,\n  Row,\n  SortableCell\n}, includeStories: [\"table\"],  };\n\nconst mdxStoryNameToKey = {\"Table\":\"table\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Description } from '@storybook/addon-docs';\nimport README from '../README.md';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Tabs/README\" mdxType=\"Meta\" />\n    <Description mdxType=\"Description\">{README}</Description>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Packages/Tabs/README', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { useArgs } from '@storybook/client-api';\nimport { Tabs, Tab, TabList, TabPanel } from '@zendeskgarden/react-tabs';\nimport { TabsStory } from './stories/TabsStory';\nimport { TABS } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Tabs/Tabs\" component={Tabs} subcomponents={{\n      Tab,\n      TabList,\n      TabPanel\n    }} args={{\n      tabs: TABS\n    }} argTypes={{\n      tabs: {\n        table: {\n          category: 'Story'\n        }\n      }\n    }} parameters={{\n      design: {\n        allowFullscreen: true,\n        type: 'figma',\n        url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=102%3A123'\n      }\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <h2 {...{\n      \"id\": \"uncontrolled\"\n    }}>{`Uncontrolled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Uncontrolled\" argTypes={{\n        selectedItem: {\n          control: false\n        }\n      }} mdxType=\"Story\">\n    {args => <TabsStory {...args} mdxType=\"TabsStory\" />}\n  </Story>\n    </Canvas>\n    <h2 {...{\n      \"id\": \"controlled\"\n    }}>{`Controlled`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Controlled\" argTypes={{\n        selectedItem: {\n          control: 'number'\n        }\n      }} mdxType=\"Story\">\n    {args => {\n          const updateArgs = useArgs()[1];\n\n          const handleChange = selectedItem => updateArgs({\n            selectedItem\n          });\n\n          return <TabsStory {...args} onChange={handleChange} mdxType=\"TabsStory\" />;\n        }}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const uncontrolled = (args => <TabsStory {...args} />);\nuncontrolled.storyName = 'Uncontrolled';\nuncontrolled.argTypes = {\n  selectedItem: {\n    control: false\n  }\n};\nuncontrolled.parameters = { storySource: { source: 'args => <TabsStory {...args} />' } };\n\nexport const controlled = (args => {\n  const updateArgs = useArgs()[1];\n\n  const handleChange = selectedItem => updateArgs({\n    selectedItem\n  });\n\n  return <TabsStory {...args} onChange={handleChange} />;\n});\ncontrolled.storyName = 'Controlled';\ncontrolled.argTypes = {\n  selectedItem: {\n    control: 'number'\n  }\n};\ncontrolled.parameters = { storySource: { source: 'args => {\\n  const updateArgs = useArgs()[1];\\n\\n  const handleChange = selectedItem => updateArgs({\\n    selectedItem\\n  });\\n\\n  return <TabsStory {...args} onChange={handleChange} />;\\n}' } };\n\nconst componentMeta = { title: 'Packages/Tabs/Tabs', parameters: {\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=102%3A123'\n  }\n}, component: Tabs, subcomponents: {\n  Tab,\n  TabList,\n  TabPanel\n}, args: {\n  tabs: TABS\n}, argTypes: {\n  tabs: {\n    table: {\n      category: 'Story'\n    }\n  }\n}, includeStories: [\"uncontrolled\",\"controlled\"],  };\n\nconst mdxStoryNameToKey = {\"Uncontrolled\":\"uncontrolled\",\"Controlled\":\"controlled\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Description } from '@storybook/addon-docs';\nimport README from '../README.md';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Tags/README\" mdxType=\"Meta\" />\n    <Description mdxType=\"Description\">{README}</Description>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Packages/Tags/README', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { Tag } from '@zendeskgarden/react-tags';\nimport { TagStory } from './stories/TagStory';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Tags/Tag\" component={Tag} subcomponents={{\n      'Tag.Avatar': Tag.Avatar,\n      'Tag.Close': Tag.Close\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Tag\" args={{\n        children: 'Tag',\n        hasAvatar: false,\n        hasClose: false\n      }} argTypes={{\n        hue: {\n          control: 'color'\n        },\n        hasAvatar: {\n          name: 'Tag.Avatar',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasClose: {\n          name: 'Tag.Close',\n          table: {\n            category: 'Story'\n          }\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=102%3A118'\n        }\n      }} mdxType=\"Story\">\n    {args => <TagStory {...args} mdxType=\"TagStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const tag = (args => <TagStory {...args} />);\ntag.storyName = 'Tag';\ntag.argTypes = {\n  hue: {\n    control: 'color'\n  },\n  hasAvatar: {\n    name: 'Tag.Avatar',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasClose: {\n    name: 'Tag.Close',\n    table: {\n      category: 'Story'\n    }\n  }\n};\ntag.args = {\n  children: 'Tag',\n  hasAvatar: false,\n  hasClose: false\n};\ntag.parameters = { storySource: { source: 'args => <TagStory {...args} />' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=102%3A118'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Tags/Tag', component: Tag, subcomponents: {\n  'Tag.Avatar': Tag.Avatar,\n  'Tag.Close': Tag.Close\n}, includeStories: [\"tag\"],  };\n\nconst mdxStoryNameToKey = {\"Tag\":\"tag\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Canvas, Story } from '@storybook/addon-docs';\nimport { Tag } from '@zendeskgarden/react-tags';\nimport { FauxInputStory } from './stories/FauxInputStory';\nimport { FAUX_INPUT_TAGS as TAGS } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Tags/[patterns]\" component={Tag} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"patterns\"\n    }}>{`Patterns`}</h1>\n    <h2 {...{\n      \"id\": \"fauxinput\"\n    }}>{`FauxInput`}</h2>\n    <p>{`A `}<inlineCode parentName=\"p\">{`Tag`}</inlineCode>{` can be used together with a child `}<inlineCode parentName=\"p\">{`span`}</inlineCode>{` in order to handle truncation.\nUse the slider control to change the width of the `}<inlineCode parentName=\"p\">{`FauxInput`}</inlineCode>{` container. Text\nwithin the tags will truncate with an ellipsis based on the available container\nwidth.`}</p>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"FauxInput\" args={{\n        tags: TAGS,\n        hasAvatar: false,\n        hasClose: false,\n        width: 25\n      }} argTypes={{\n        hue: {\n          table: {\n            disable: true\n          }\n        },\n        isRound: {\n          table: {\n            disable: true\n          }\n        },\n        hasAvatar: {\n          name: 'Tag.Avatar',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasClose: {\n          name: 'Tag.Close',\n          table: {\n            category: 'Story'\n          }\n        },\n        tags: {\n          table: {\n            category: 'Story'\n          }\n        },\n        width: {\n          control: {\n            type: 'range',\n            min: 10,\n            step: 5\n          },\n          table: {\n            category: 'Story'\n          }\n        }\n      }} mdxType=\"Story\">\n    {args => <FauxInputStory {...args} mdxType=\"FauxInputStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const fauxInput = (args => <FauxInputStory {...args} />);\nfauxInput.storyName = 'FauxInput';\nfauxInput.argTypes = {\n  hue: {\n    table: {\n      disable: true\n    }\n  },\n  isRound: {\n    table: {\n      disable: true\n    }\n  },\n  hasAvatar: {\n    name: 'Tag.Avatar',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasClose: {\n    name: 'Tag.Close',\n    table: {\n      category: 'Story'\n    }\n  },\n  tags: {\n    table: {\n      category: 'Story'\n    }\n  },\n  width: {\n    control: {\n      type: 'range',\n      min: 10,\n      step: 5\n    },\n    table: {\n      category: 'Story'\n    }\n  }\n};\nfauxInput.args = {\n  tags: TAGS,\n  hasAvatar: false,\n  hasClose: false,\n  width: 25\n};\nfauxInput.parameters = { storySource: { source: 'args => <FauxInputStory {...args} />' } };\n\nconst componentMeta = { title: 'Packages/Tags/[patterns]', component: Tag, includeStories: [\"fauxInput\"],  };\n\nconst mdxStoryNameToKey = {\"FauxInput\":\"fauxInput\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Description } from '@storybook/addon-docs';\nimport README from '../README.md';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Theming/README\" mdxType=\"Meta\" />\n    <Description mdxType=\"Description\">{README}</Description>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Packages/Theming/README', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { ArrowStylesStory } from './stories/ArrowStylesStory';\nimport { MenuStylesStory } from './stories/MenuStylesStory';\nimport { GetColorStory } from './stories/GetColorStory';\nimport { ARROW_POSITIONS, MENU_POSITIONS } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Theming\" mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <h2 {...{\n      \"id\": \"arrowstyles\"\n    }}>{`arrowStyles()`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"arrowStyles()\" args={{\n        position: 'bottom',\n        hasBoxShadow: true,\n        hasBorder: true,\n        isAnimated: false,\n        size: 6,\n        inset: 0\n      }} argTypes={{\n        position: {\n          control: {\n            type: 'select',\n            options: ARROW_POSITIONS\n          }\n        },\n        size: {\n          control: {\n            type: 'range',\n            min: 2,\n            max: 10,\n            step: 1\n          }\n        },\n        inset: {\n          control: {\n            type: 'range',\n            min: -4,\n            max: 4,\n            step: 1\n          }\n        }\n      }} mdxType=\"Story\">\n    {args => <ArrowStylesStory {...args} mdxType=\"ArrowStylesStory\" />}\n  </Story>\n    </Canvas>\n    <h2 {...{\n      \"id\": \"getcolor\"\n    }}>{`getColor()`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"getColor()\" args={{\n        hue: 'primaryHue',\n        shade: 600\n      }} argTypes={{\n        transparency: {\n          control: {\n            type: 'range',\n            min: 1\n          }\n        }\n      }} mdxType=\"Story\">\n    {args => <GetColorStory {...args} mdxType=\"GetColorStory\" />}\n  </Story>\n    </Canvas>\n    <h2 {...{\n      \"id\": \"menustyles\"\n    }}>{`menuStyles()`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"menuStyles()\" args={{\n        position: 'bottom',\n        isAnimated: true\n      }} argTypes={{\n        position: {\n          control: {\n            type: 'radio',\n            options: MENU_POSITIONS\n          }\n        }\n      }} mdxType=\"Story\">\n    {args => <MenuStylesStory {...args} mdxType=\"MenuStylesStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const arrowStyles = (args => <ArrowStylesStory {...args} />);\narrowStyles.storyName = 'arrowStyles()';\narrowStyles.argTypes = {\n  position: {\n    control: {\n      type: 'select',\n      options: ARROW_POSITIONS\n    }\n  },\n  size: {\n    control: {\n      type: 'range',\n      min: 2,\n      max: 10,\n      step: 1\n    }\n  },\n  inset: {\n    control: {\n      type: 'range',\n      min: -4,\n      max: 4,\n      step: 1\n    }\n  }\n};\narrowStyles.args = {\n  position: 'bottom',\n  hasBoxShadow: true,\n  hasBorder: true,\n  isAnimated: false,\n  size: 6,\n  inset: 0\n};\narrowStyles.parameters = { storySource: { source: 'args => <ArrowStylesStory {...args} />' } };\n\nexport const getColor = (args => <GetColorStory {...args} />);\ngetColor.storyName = 'getColor()';\ngetColor.argTypes = {\n  transparency: {\n    control: {\n      type: 'range',\n      min: 1\n    }\n  }\n};\ngetColor.args = {\n  hue: 'primaryHue',\n  shade: 600\n};\ngetColor.parameters = { storySource: { source: 'args => <GetColorStory {...args} />' } };\n\nexport const menuStyles = (args => <MenuStylesStory {...args} />);\nmenuStyles.storyName = 'menuStyles()';\nmenuStyles.argTypes = {\n  position: {\n    control: {\n      type: 'radio',\n      options: MENU_POSITIONS\n    }\n  }\n};\nmenuStyles.args = {\n  position: 'bottom',\n  isAnimated: true\n};\nmenuStyles.parameters = { storySource: { source: 'args => <MenuStylesStory {...args} />' } };\n\nconst componentMeta = { title: 'Packages/Theming', includeStories: [\"arrowStyles\",\"getColor\",\"menuStyles\"],  };\n\nconst mdxStoryNameToKey = {\"arrowStyles()\":\"arrowStyles\",\"getColor()\":\"getColor\",\"menuStyles()\":\"menuStyles\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Description } from '@storybook/addon-docs';\nimport README from '../README.md';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Tooltips/README\" mdxType=\"Meta\" />\n    <Description mdxType=\"Description\">{README}</Description>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Packages/Tooltips/README', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { Tooltip, Title, Paragraph } from '@zendeskgarden/react-tooltips';\nimport { TooltipStory } from './stories/TooltipStory';\nimport { TOOLTIP_CONTENT as CONTENT } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Tooltips/Tooltip\" component={Tooltip} subcomponents={{\n      Paragraph,\n      Title\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Tooltip\" args={{\n        content: CONTENT,\n        eventsEnabled: true,\n        hasArrow: true\n      }} argTypes={{\n        isVisible: {\n          control: 'boolean'\n        },\n        appendToNode: {\n          control: false\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A25293'\n        }\n      }} mdxType=\"Story\">\n    {args => <TooltipStory {...args} mdxType=\"TooltipStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const tooltip = (args => <TooltipStory {...args} />);\ntooltip.storyName = 'Tooltip';\ntooltip.argTypes = {\n  isVisible: {\n    control: 'boolean'\n  },\n  appendToNode: {\n    control: false\n  }\n};\ntooltip.args = {\n  content: CONTENT,\n  eventsEnabled: true,\n  hasArrow: true\n};\ntooltip.parameters = { storySource: { source: 'args => <TooltipStory {...args} />' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=103%3A25293'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Tooltips/Tooltip', component: Tooltip, subcomponents: {\n  Paragraph,\n  Title\n}, includeStories: [\"tooltip\"],  };\n\nconst mdxStoryNameToKey = {\"Tooltip\":\"tooltip\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Description } from '@storybook/addon-docs';\nimport README from '../README.md';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Typography/README\" mdxType=\"Meta\" />\n    <Description mdxType=\"Description\">{README}</Description>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Packages/Typography/README', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { SM } from '@zendeskgarden/react-typography';\nimport { TypescaleStory } from './stories/TypescaleStory';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Typography/Typescale/SM\" component={SM} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"SM\" args={{\n        children: 'Text'\n      }} argTypes={{\n        tag: {\n          control: 'text'\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=102%3A107'\n        }\n      }} mdxType=\"Story\">\n    {args => <TypescaleStory {...args} size=\"small\" mdxType=\"TypescaleStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const sm = (args => <TypescaleStory {...args} size=\"small\" />);\nsm.storyName = 'SM';\nsm.argTypes = {\n  tag: {\n    control: 'text'\n  }\n};\nsm.args = {\n  children: 'Text'\n};\nsm.parameters = { storySource: { source: 'args => <TypescaleStory {...args} size=\\\"small\\\" />' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=102%3A107'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Typography/Typescale/SM', component: SM, includeStories: [\"sm\"],  };\n\nconst mdxStoryNameToKey = {\"SM\":\"sm\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { MD } from '@zendeskgarden/react-typography';\nimport { TypescaleStory } from './stories/TypescaleStory';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Typography/Typescale/MD\" component={MD} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"MD\" args={{\n        children: 'Text'\n      }} argTypes={{\n        tag: {\n          control: 'text'\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=102%3A107'\n        }\n      }} mdxType=\"Story\">\n    {args => <TypescaleStory {...args} size=\"medium\" mdxType=\"TypescaleStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const md = (args => <TypescaleStory {...args} size=\"medium\" />);\nmd.storyName = 'MD';\nmd.argTypes = {\n  tag: {\n    control: 'text'\n  }\n};\nmd.args = {\n  children: 'Text'\n};\nmd.parameters = { storySource: { source: 'args => <TypescaleStory {...args} size=\\\"medium\\\" />' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=102%3A107'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Typography/Typescale/MD', component: MD, includeStories: [\"md\"],  };\n\nconst mdxStoryNameToKey = {\"MD\":\"md\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { LG } from '@zendeskgarden/react-typography';\nimport { TypescaleStory } from './stories/TypescaleStory';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Typography/Typescale/LG\" component={LG} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"LG\" args={{\n        children: 'Text'\n      }} argTypes={{\n        tag: {\n          control: 'text'\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=102%3A107'\n        }\n      }} mdxType=\"Story\">\n    {args => <TypescaleStory {...args} size=\"large\" mdxType=\"TypescaleStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const lg = (args => <TypescaleStory {...args} size=\"large\" />);\nlg.storyName = 'LG';\nlg.argTypes = {\n  tag: {\n    control: 'text'\n  }\n};\nlg.args = {\n  children: 'Text'\n};\nlg.parameters = { storySource: { source: 'args => <TypescaleStory {...args} size=\\\"large\\\" />' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=102%3A107'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Typography/Typescale/LG', component: LG, includeStories: [\"lg\"],  };\n\nconst mdxStoryNameToKey = {\"LG\":\"lg\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { XL } from '@zendeskgarden/react-typography';\nimport { TypescaleStory } from './stories/TypescaleStory';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Typography/Typescale/XL\" component={XL} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"XL\" args={{\n        children: 'Text'\n      }} argTypes={{\n        tag: {\n          control: 'text'\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=102%3A107'\n        }\n      }} mdxType=\"Story\">\n    {args => <TypescaleStory {...args} size=\"extra-large\" mdxType=\"TypescaleStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const xl = (args => <TypescaleStory {...args} size=\"extra-large\" />);\nxl.storyName = 'XL';\nxl.argTypes = {\n  tag: {\n    control: 'text'\n  }\n};\nxl.args = {\n  children: 'Text'\n};\nxl.parameters = { storySource: { source: 'args => <TypescaleStory {...args} size=\\\"extra-large\\\" />' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=102%3A107'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Typography/Typescale/XL', component: XL, includeStories: [\"xl\"],  };\n\nconst mdxStoryNameToKey = {\"XL\":\"xl\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { XXL } from '@zendeskgarden/react-typography';\nimport { TypescaleStory } from './stories/TypescaleStory';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Typography/Typescale/XXL\" component={XXL} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"XXL\" args={{\n        children: 'Text'\n      }} argTypes={{\n        tag: {\n          control: 'text'\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=102%3A107'\n        }\n      }} mdxType=\"Story\">\n    {args => <TypescaleStory {...args} size=\"2x-large\" mdxType=\"TypescaleStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const xxl = (args => <TypescaleStory {...args} size=\"2x-large\" />);\nxxl.storyName = 'XXL';\nxxl.argTypes = {\n  tag: {\n    control: 'text'\n  }\n};\nxxl.args = {\n  children: 'Text'\n};\nxxl.parameters = { storySource: { source: 'args => <TypescaleStory {...args} size=\\\"2x-large\\\" />' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=102%3A107'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Typography/Typescale/XXL', component: XXL, includeStories: [\"xxl\"],  };\n\nconst mdxStoryNameToKey = {\"XXL\":\"xxl\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { XXXL } from '@zendeskgarden/react-typography';\nimport { TypescaleStory } from './stories/TypescaleStory';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Typography/Typescale/XXXL\" component={XXXL} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"XXXL\" args={{\n        children: 'Text'\n      }} argTypes={{\n        tag: {\n          control: 'text'\n        }\n      }} parameters={{\n        design: {\n          allowFullscreen: true,\n          type: 'figma',\n          url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=102%3A107'\n        }\n      }} mdxType=\"Story\">\n    {args => <TypescaleStory {...args} size=\"3x-large\" mdxType=\"TypescaleStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const xxxl = (args => <TypescaleStory {...args} size=\"3x-large\" />);\nxxxl.storyName = 'XXXL';\nxxxl.argTypes = {\n  tag: {\n    control: 'text'\n  }\n};\nxxxl.args = {\n  children: 'Text'\n};\nxxxl.parameters = { storySource: { source: 'args => <TypescaleStory {...args} size=\\\"3x-large\\\" />' }, ...{\n  design: {\n    allowFullscreen: true,\n    type: 'figma',\n    url: 'https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=102%3A107'\n  }\n} };\n\nconst componentMeta = { title: 'Packages/Typography/Typescale/XXXL', component: XXXL, includeStories: [\"xxxl\"],  };\n\nconst mdxStoryNameToKey = {\"XXXL\":\"xxxl\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { Blockquote } from '@zendeskgarden/react-typography';\nimport { BlockquoteStory } from './stories/BlockquoteStory';\nimport { BLOCKQUOTE_CHILDREN as CHILDREN } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Typography/Blockquote\" component={Blockquote} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Blockquote\" args={{\n        children: CHILDREN\n      }} mdxType=\"Story\">\n    {args => <BlockquoteStory {...args} mdxType=\"BlockquoteStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const blockquote = (args => <BlockquoteStory {...args} />);\nblockquote.storyName = 'Blockquote';\nblockquote.args = {\n  children: CHILDREN\n};\nblockquote.parameters = { storySource: { source: 'args => <BlockquoteStory {...args} />' } };\n\nconst componentMeta = { title: 'Packages/Typography/Blockquote', component: Blockquote, includeStories: [\"blockquote\"],  };\n\nconst mdxStoryNameToKey = {\"Blockquote\":\"blockquote\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { Anchor } from '@zendeskgarden/react-buttons';\nimport { Code } from '@zendeskgarden/react-typography';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Typography/Code\" component={Code} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Code\" args={{\n        children: 'Text'\n      }} argTypes={{\n        isAnchor: {\n          control: 'boolean',\n          table: {\n            category: 'Story'\n          }\n        }\n      }} mdxType=\"Story\">\n    {args => args.isAnchor ? <Anchor mdxType=\"Anchor\">\n          <Code {...args} mdxType=\"Code\" />\n        </Anchor> : <Code {...args} mdxType=\"Code\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const code = (args => args.isAnchor ? <Anchor>\n          <Code {...args} />\n        </Anchor> : <Code {...args} />);\ncode.storyName = 'Code';\ncode.argTypes = {\n  isAnchor: {\n    control: 'boolean',\n    table: {\n      category: 'Story'\n    }\n  }\n};\ncode.args = {\n  children: 'Text'\n};\ncode.parameters = { storySource: { source: 'args => args.isAnchor ? <Anchor>\\n          <Code {...args} />\\n        </Anchor> : <Code {...args} />' } };\n\nconst componentMeta = { title: 'Packages/Typography/Code', component: Code, includeStories: [\"code\"],  };\n\nconst mdxStoryNameToKey = {\"Code\":\"code\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { CodeBlock } from '@zendeskgarden/react-typography';\nimport { CODE_BLOCK_CHILDREN as CODE } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Typography/CodeBlock\" component={CodeBlock} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"CodeBlock\" args={{\n        code: CODE,\n        containerProps: {\n          style: {\n            maxHeight: 'calc(100vh - 80px)'\n          }\n        }\n      }} argTypes={{\n        code: {\n          table: {\n            category: 'Story'\n          }\n        }\n      }} mdxType=\"Story\">\n    {({\n          code,\n          ...args\n        }) => <CodeBlock {...args} children={code[args.language || 'tsx']} mdxType=\"CodeBlock\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const codeBlock = (({\n  code,\n  ...args\n}) => <CodeBlock {...args} children={code[args.language || 'tsx']} />);\ncodeBlock.storyName = 'CodeBlock';\ncodeBlock.argTypes = {\n  code: {\n    table: {\n      category: 'Story'\n    }\n  }\n};\ncodeBlock.args = {\n  code: CODE,\n  containerProps: {\n    style: {\n      maxHeight: 'calc(100vh - 80px)'\n    }\n  }\n};\ncodeBlock.parameters = { storySource: { source: '({\\n  code,\\n  ...args\\n}) => <CodeBlock {...args} children={code[args.language || \\'tsx\\']} />' } };\n\nconst componentMeta = { title: 'Packages/Typography/CodeBlock', component: CodeBlock, includeStories: [\"codeBlock\"],  };\n\nconst mdxStoryNameToKey = {\"CodeBlock\":\"codeBlock\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { Ellipsis } from '@zendeskgarden/react-typography';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Typography/Ellipsis\" component={Ellipsis} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Ellipsis\" args={{\n        children: 'Veggies es bonus vobis, proinde vos postulo essum magis.',\n        style: {\n          width: 150\n        }\n      }} argTypes={{\n        tag: {\n          control: 'text'\n        }\n      }} mdxType=\"Story\">\n    {args => <Ellipsis {...args} mdxType=\"Ellipsis\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const ellipsis = (args => <Ellipsis {...args} />);\nellipsis.storyName = 'Ellipsis';\nellipsis.argTypes = {\n  tag: {\n    control: 'text'\n  }\n};\nellipsis.args = {\n  children: 'Veggies es bonus vobis, proinde vos postulo essum magis.',\n  style: {\n    width: 150\n  }\n};\nellipsis.parameters = { storySource: { source: 'args => <Ellipsis {...args} />' } };\n\nconst componentMeta = { title: 'Packages/Typography/Ellipsis', component: Ellipsis, includeStories: [\"ellipsis\"],  };\n\nconst mdxStoryNameToKey = {\"Ellipsis\":\"ellipsis\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { OrderedList } from '@zendeskgarden/react-typography';\nimport { OrderedListStory } from './stories/OrderedListStory';\nimport { LIST_ITEMS as ITEMS } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Typography/Lists/OrderedList\" component={OrderedList} subcomponents={{\n      'OrderedList.Item': OrderedList.Item\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"OrderedList\" args={{\n        items: ITEMS\n      }} argTypes={{\n        items: {\n          name: 'OrderedList.Item[]',\n          table: {\n            category: 'Story'\n          }\n        }\n      }} mdxType=\"Story\">\n    {args => <OrderedListStory {...args} mdxType=\"OrderedListStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const orderedList = (args => <OrderedListStory {...args} />);\norderedList.storyName = 'OrderedList';\norderedList.argTypes = {\n  items: {\n    name: 'OrderedList.Item[]',\n    table: {\n      category: 'Story'\n    }\n  }\n};\norderedList.args = {\n  items: ITEMS\n};\norderedList.parameters = { storySource: { source: 'args => <OrderedListStory {...args} />' } };\n\nconst componentMeta = { title: 'Packages/Typography/Lists/OrderedList', component: OrderedList, subcomponents: {\n  'OrderedList.Item': OrderedList.Item\n}, includeStories: [\"orderedList\"],  };\n\nconst mdxStoryNameToKey = {\"OrderedList\":\"orderedList\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { Paragraph } from '@zendeskgarden/react-typography';\nimport { ParagraphStory } from './stories/ParagraphStory';\nimport { PARAGRAPH_CHILDREN as CHILDREN } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Typography/Paragraph\" component={Paragraph} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Paragraph\" args={{\n        children: CHILDREN\n      }} mdxType=\"Story\">\n    {args => <ParagraphStory {...args} mdxType=\"ParagraphStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const paragraph = (args => <ParagraphStory {...args} />);\nparagraph.storyName = 'Paragraph';\nparagraph.args = {\n  children: CHILDREN\n};\nparagraph.parameters = { storySource: { source: 'args => <ParagraphStory {...args} />' } };\n\nconst componentMeta = { title: 'Packages/Typography/Paragraph', component: Paragraph, includeStories: [\"paragraph\"],  };\n\nconst mdxStoryNameToKey = {\"Paragraph\":\"paragraph\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { Span } from '@zendeskgarden/react-typography';\nimport { SpanStory } from './stories/SpanStory';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Typography/Span\" component={Span} subcomponents={{\n      'Span.Icon': Span.Icon,\n      'Span.StartIcon': Span.StartIcon\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Span\" args={{\n        children: 'Text',\n        hasIcon: false,\n        hasStartIcon: false\n      }} argTypes={{\n        hue: {\n          control: 'color'\n        },\n        tag: {\n          control: 'text'\n        },\n        hasIcon: {\n          name: 'Span.Icon',\n          table: {\n            category: 'Story'\n          }\n        },\n        hasStartIcon: {\n          name: 'Span.StartIcon',\n          table: {\n            category: 'Story'\n          }\n        }\n      }} mdxType=\"Story\">\n    {args => <SpanStory {...args} mdxType=\"SpanStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const span = (args => <SpanStory {...args} />);\nspan.storyName = 'Span';\nspan.argTypes = {\n  hue: {\n    control: 'color'\n  },\n  tag: {\n    control: 'text'\n  },\n  hasIcon: {\n    name: 'Span.Icon',\n    table: {\n      category: 'Story'\n    }\n  },\n  hasStartIcon: {\n    name: 'Span.StartIcon',\n    table: {\n      category: 'Story'\n    }\n  }\n};\nspan.args = {\n  children: 'Text',\n  hasIcon: false,\n  hasStartIcon: false\n};\nspan.parameters = { storySource: { source: 'args => <SpanStory {...args} />' } };\n\nconst componentMeta = { title: 'Packages/Typography/Span', component: Span, subcomponents: {\n  'Span.Icon': Span.Icon,\n  'Span.StartIcon': Span.StartIcon\n}, includeStories: [\"span\"],  };\n\nconst mdxStoryNameToKey = {\"Span\":\"span\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, ArgsTable, Canvas, Story } from '@storybook/addon-docs';\nimport { UnorderedList } from '@zendeskgarden/react-typography';\nimport { UnorderedListStory } from './stories/UnorderedListStory';\nimport { LIST_ITEMS as ITEMS } from './stories/data';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Packages/Typography/Lists/UnorderedList\" component={UnorderedList} subcomponents={{\n      'UnorderedList.Item': UnorderedList.Item\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <ArgsTable mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h1>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"UnorderedList\" args={{\n        items: ITEMS\n      }} argTypes={{\n        items: {\n          name: 'UnorderedList.Item[]',\n          table: {\n            category: 'Story'\n          }\n        }\n      }} mdxType=\"Story\">\n    {args => <UnorderedListStory {...args} mdxType=\"UnorderedListStory\" />}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const unorderedList = (args => <UnorderedListStory {...args} />);\nunorderedList.storyName = 'UnorderedList';\nunorderedList.argTypes = {\n  items: {\n    name: 'UnorderedList.Item[]',\n    table: {\n      category: 'Story'\n    }\n  }\n};\nunorderedList.args = {\n  items: ITEMS\n};\nunorderedList.parameters = { storySource: { source: 'args => <UnorderedListStory {...args} />' } };\n\nconst componentMeta = { title: 'Packages/Typography/Lists/UnorderedList', component: UnorderedList, subcomponents: {\n  'UnorderedList.Item': UnorderedList.Item\n}, includeStories: [\"unorderedList\"],  };\n\nconst mdxStoryNameToKey = {\"UnorderedList\":\"unorderedList\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","var map = {\n\t\"./accordions/demo/#readme.stories.mdx\": \"./packages/accordions/demo/\\u0000#readme.stories.mdx\",\n\t\"./accordions/demo/accordion.stories.mdx\": \"./packages/accordions/demo/accordion.stories.mdx\",\n\t\"./accordions/demo/stepper.stories.mdx\": \"./packages/accordions/demo/stepper.stories.mdx\",\n\t\"./accordions/demo/timeline.stories.mdx\": \"./packages/accordions/demo/timeline.stories.mdx\",\n\t\"./avatars/demo/#readme.stories.mdx\": \"./packages/avatars/demo/\\u0000#readme.stories.mdx\",\n\t\"./avatars/demo/avatar.stories.mdx\": \"./packages/avatars/demo/avatar.stories.mdx\",\n\t\"./avatars/demo/~patterns/patterns.stories.mdx\": \"./packages/avatars/demo/~patterns/patterns.stories.mdx\",\n\t\"./breadcrumbs/demo/#readme.stories.mdx\": \"./packages/breadcrumbs/demo/\\u0000#readme.stories.mdx\",\n\t\"./breadcrumbs/demo/breadcrumb.stories.mdx\": \"./packages/breadcrumbs/demo/breadcrumb.stories.mdx\",\n\t\"./buttons/demo/#readme.stories.mdx\": \"./packages/buttons/demo/\\u0000#readme.stories.mdx\",\n\t\"./buttons/demo/anchor.stories.mdx\": \"./packages/buttons/demo/anchor.stories.mdx\",\n\t\"./buttons/demo/button.stories.mdx\": \"./packages/buttons/demo/button.stories.mdx\",\n\t\"./buttons/demo/buttonGroup.stories.mdx\": \"./packages/buttons/demo/buttonGroup.stories.mdx\",\n\t\"./buttons/demo/chevronButton.stories.mdx\": \"./packages/buttons/demo/chevronButton.stories.mdx\",\n\t\"./buttons/demo/iconButton.stories.mdx\": \"./packages/buttons/demo/iconButton.stories.mdx\",\n\t\"./buttons/demo/splitButton.stories.mdx\": \"./packages/buttons/demo/splitButton.stories.mdx\",\n\t\"./buttons/demo/toggleButton.stories.mdx\": \"./packages/buttons/demo/toggleButton.stories.mdx\",\n\t\"./buttons/demo/toggleIconButton.stories.mdx\": \"./packages/buttons/demo/toggleIconButton.stories.mdx\",\n\t\"./chrome/demo/#readme.stories.mdx\": \"./packages/chrome/demo/\\u0000#readme.stories.mdx\",\n\t\"./chrome/demo/chrome.stories.mdx\": \"./packages/chrome/demo/chrome.stories.mdx\",\n\t\"./chrome/demo/collapsibleSubNavItem.stories.mdx\": \"./packages/chrome/demo/collapsibleSubNavItem.stories.mdx\",\n\t\"./chrome/demo/sheet.stories.mdx\": \"./packages/chrome/demo/sheet.stories.mdx\",\n\t\"./colorpickers/demo/#readme.stories.mdx\": \"./packages/colorpickers/demo/\\u0000#readme.stories.mdx\",\n\t\"./colorpickers/demo/colorPicker.stories.mdx\": \"./packages/colorpickers/demo/colorPicker.stories.mdx\",\n\t\"./colorpickers/demo/colorPickerDialog.stories.mdx\": \"./packages/colorpickers/demo/colorPickerDialog.stories.mdx\",\n\t\"./colorpickers/demo/colorSwatch.stories.mdx\": \"./packages/colorpickers/demo/colorSwatch.stories.mdx\",\n\t\"./colorpickers/demo/colorSwatchDialog.stories.mdx\": \"./packages/colorpickers/demo/colorSwatchDialog.stories.mdx\",\n\t\"./datepickers/demo/#readme.stories.mdx\": \"./packages/datepickers/demo/\\u0000#readme.stories.mdx\",\n\t\"./datepickers/demo/datepicker.stories.mdx\": \"./packages/datepickers/demo/datepicker.stories.mdx\",\n\t\"./datepickers/demo/datepickerRange.stories.mdx\": \"./packages/datepickers/demo/datepickerRange.stories.mdx\",\n\t\"./dropdowns/demo/#readme.stories.mdx\": \"./packages/dropdowns/demo/\\u0000#readme.stories.mdx\",\n\t\"./dropdowns/demo/autocomplete.stories.mdx\": \"./packages/dropdowns/demo/autocomplete.stories.mdx\",\n\t\"./dropdowns/demo/combobox.stories.mdx\": \"./packages/dropdowns/demo/combobox.stories.mdx\",\n\t\"./dropdowns/demo/menu.stories.mdx\": \"./packages/dropdowns/demo/menu.stories.mdx\",\n\t\"./dropdowns/demo/multiselect.stories.mdx\": \"./packages/dropdowns/demo/multiselect.stories.mdx\",\n\t\"./dropdowns/demo/select.stories.mdx\": \"./packages/dropdowns/demo/select.stories.mdx\",\n\t\"./forms/demo/#readme.stories.mdx\": \"./packages/forms/demo/\\u0000#readme.stories.mdx\",\n\t\"./forms/demo/checkbox.stories.mdx\": \"./packages/forms/demo/checkbox.stories.mdx\",\n\t\"./forms/demo/fauxInput.stories.mdx\": \"./packages/forms/demo/fauxInput.stories.mdx\",\n\t\"./forms/demo/fieldset.stories.mdx\": \"./packages/forms/demo/fieldset.stories.mdx\",\n\t\"./forms/demo/file.stories.mdx\": \"./packages/forms/demo/file.stories.mdx\",\n\t\"./forms/demo/fileList.stories.mdx\": \"./packages/forms/demo/fileList.stories.mdx\",\n\t\"./forms/demo/fileUpload.stories.mdx\": \"./packages/forms/demo/fileUpload.stories.mdx\",\n\t\"./forms/demo/input.stories.mdx\": \"./packages/forms/demo/input.stories.mdx\",\n\t\"./forms/demo/inputGroup.stories.mdx\": \"./packages/forms/demo/inputGroup.stories.mdx\",\n\t\"./forms/demo/mediaInput.stories.mdx\": \"./packages/forms/demo/mediaInput.stories.mdx\",\n\t\"./forms/demo/multiThumbRange.stories.mdx\": \"./packages/forms/demo/multiThumbRange.stories.mdx\",\n\t\"./forms/demo/radio.stories.mdx\": \"./packages/forms/demo/radio.stories.mdx\",\n\t\"./forms/demo/range.stories.mdx\": \"./packages/forms/demo/range.stories.mdx\",\n\t\"./forms/demo/select.stories.mdx\": \"./packages/forms/demo/select.stories.mdx\",\n\t\"./forms/demo/textarea.stories.mdx\": \"./packages/forms/demo/textarea.stories.mdx\",\n\t\"./forms/demo/tiles.stories.mdx\": \"./packages/forms/demo/tiles.stories.mdx\",\n\t\"./forms/demo/toggle.stories.mdx\": \"./packages/forms/demo/toggle.stories.mdx\",\n\t\"./forms/demo/~patterns/patterns.stories.mdx\": \"./packages/forms/demo/~patterns/patterns.stories.mdx\",\n\t\"./grid/demo/#readme.stories.mdx\": \"./packages/grid/demo/\\u0000#readme.stories.mdx\",\n\t\"./grid/demo/grid.stories.mdx\": \"./packages/grid/demo/grid.stories.mdx\",\n\t\"./loaders/demo/#readme.stories.mdx\": \"./packages/loaders/demo/\\u0000#readme.stories.mdx\",\n\t\"./loaders/demo/dots.stories.mdx\": \"./packages/loaders/demo/dots.stories.mdx\",\n\t\"./loaders/demo/inline.stories.mdx\": \"./packages/loaders/demo/inline.stories.mdx\",\n\t\"./loaders/demo/progress.stories.mdx\": \"./packages/loaders/demo/progress.stories.mdx\",\n\t\"./loaders/demo/skeleton.stories.mdx\": \"./packages/loaders/demo/skeleton.stories.mdx\",\n\t\"./loaders/demo/spinner.stories.mdx\": \"./packages/loaders/demo/spinner.stories.mdx\",\n\t\"./modals/demo/#readme.stories.mdx\": \"./packages/modals/demo/\\u0000#readme.stories.mdx\",\n\t\"./modals/demo/drawerModal.stories.mdx\": \"./packages/modals/demo/drawerModal.stories.mdx\",\n\t\"./modals/demo/modal.stories.mdx\": \"./packages/modals/demo/modal.stories.mdx\",\n\t\"./modals/demo/tooltipModal.stories.mdx\": \"./packages/modals/demo/tooltipModal.stories.mdx\",\n\t\"./notifications/demo/#readme.stories.mdx\": \"./packages/notifications/demo/\\u0000#readme.stories.mdx\",\n\t\"./notifications/demo/alert.stories.mdx\": \"./packages/notifications/demo/alert.stories.mdx\",\n\t\"./notifications/demo/notification.stories.mdx\": \"./packages/notifications/demo/notification.stories.mdx\",\n\t\"./notifications/demo/toastProvider.stories.mdx\": \"./packages/notifications/demo/toastProvider.stories.mdx\",\n\t\"./notifications/demo/well.stories.mdx\": \"./packages/notifications/demo/well.stories.mdx\",\n\t\"./pagination/demo/#readme.stories.mdx\": \"./packages/pagination/demo/\\u0000#readme.stories.mdx\",\n\t\"./pagination/demo/cursorPagination.stories.mdx\": \"./packages/pagination/demo/cursorPagination.stories.mdx\",\n\t\"./pagination/demo/pagination.stories.mdx\": \"./packages/pagination/demo/pagination.stories.mdx\",\n\t\"./tables/demo/#readme.stories.mdx\": \"./packages/tables/demo/\\u0000#readme.stories.mdx\",\n\t\"./tables/demo/table.stories.mdx\": \"./packages/tables/demo/table.stories.mdx\",\n\t\"./tabs/demo/#readme.stories.mdx\": \"./packages/tabs/demo/\\u0000#readme.stories.mdx\",\n\t\"./tabs/demo/tabs.stories.mdx\": \"./packages/tabs/demo/tabs.stories.mdx\",\n\t\"./tags/demo/#readme.stories.mdx\": \"./packages/tags/demo/\\u0000#readme.stories.mdx\",\n\t\"./tags/demo/tag.stories.mdx\": \"./packages/tags/demo/tag.stories.mdx\",\n\t\"./tags/demo/~patterns/patterns.stories.mdx\": \"./packages/tags/demo/~patterns/patterns.stories.mdx\",\n\t\"./theming/demo/#readme.stories.mdx\": \"./packages/theming/demo/\\u0000#readme.stories.mdx\",\n\t\"./theming/demo/utilities.stories.mdx\": \"./packages/theming/demo/utilities.stories.mdx\",\n\t\"./tooltips/demo/#readme.stories.mdx\": \"./packages/tooltips/demo/\\u0000#readme.stories.mdx\",\n\t\"./tooltips/demo/tooltip.stories.mdx\": \"./packages/tooltips/demo/tooltip.stories.mdx\",\n\t\"./typography/demo/#readme.stories.mdx\": \"./packages/typography/demo/\\u0000#readme.stories.mdx\",\n\t\"./typography/demo/00_sm.stories.mdx\": \"./packages/typography/demo/00_sm.stories.mdx\",\n\t\"./typography/demo/01_md.stories.mdx\": \"./packages/typography/demo/01_md.stories.mdx\",\n\t\"./typography/demo/02_lg.stories.mdx\": \"./packages/typography/demo/02_lg.stories.mdx\",\n\t\"./typography/demo/03_xl.stories.mdx\": \"./packages/typography/demo/03_xl.stories.mdx\",\n\t\"./typography/demo/04_xxl.stories.mdx\": \"./packages/typography/demo/04_xxl.stories.mdx\",\n\t\"./typography/demo/05_xxxl.stories.mdx\": \"./packages/typography/demo/05_xxxl.stories.mdx\",\n\t\"./typography/demo/blockquote.stories.mdx\": \"./packages/typography/demo/blockquote.stories.mdx\",\n\t\"./typography/demo/code.stories.mdx\": \"./packages/typography/demo/code.stories.mdx\",\n\t\"./typography/demo/codeBlock.stories.mdx\": \"./packages/typography/demo/codeBlock.stories.mdx\",\n\t\"./typography/demo/ellipsis.stories.mdx\": \"./packages/typography/demo/ellipsis.stories.mdx\",\n\t\"./typography/demo/orderedList.stories.mdx\": \"./packages/typography/demo/orderedList.stories.mdx\",\n\t\"./typography/demo/paragraph.stories.mdx\": \"./packages/typography/demo/paragraph.stories.mdx\",\n\t\"./typography/demo/span.stories.mdx\": \"./packages/typography/demo/span.stories.mdx\",\n\t\"./typography/demo/unorderedList.stories.mdx\": \"./packages/typography/demo/unorderedList.stories.mdx\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./packages sync recursive ^\\\\.[\\\\\\\\/](?:(?%21\\\\.)(?=.)[^\\\\\\\\/]*?[\\\\\\\\/]demo(?:[\\\\\\\\/](?%21\\\\.)(?:(?:(?%21(?:^|[\\\\\\\\/])\\\\.).)*?)[\\\\\\\\/]|[\\\\\\\\/]|$)(?%21\\\\.)(?=.)[^\\\\\\\\/]*?\\\\.stories\\\\.(js|jsx|ts|tsx|mdx))$\";","/* (ignored) */"],"names":[],"sourceRoot":""}