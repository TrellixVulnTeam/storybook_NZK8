{"version":3,"file":"main.61d0eb4ec230315c1162.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAVA;AAaA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAnCA","sources":["webpack://@zendeskgarden/react-components/./packages/dropdowns/demo/stories/TriggerStory.tsx"],"sourcesContent":["/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport Icon from '@zendeskgarden/svg-icons/src/16/leaf-stroke.svg';\r\nimport { Button } from '@zendeskgarden/react-buttons';\r\nimport { IDropdownProps, IItemProps, IMenuProps, Trigger } from '@zendeskgarden/react-dropdowns';\r\nimport { ITEM } from './types';\r\nimport { DropdownStory } from './DropdownStory';\r\n\r\ninterface IArgs extends IMenuProps {\r\n  hasMedia?: boolean;\r\n  isDanger?: IItemProps['isDanger'];\r\n  disabled?: IItemProps['disabled'];\r\n  downshiftProps?: IDropdownProps['downshiftProps'];\r\n  highlightedIndex?: IDropdownProps['highlightedIndex'];\r\n  onStateChange: IDropdownProps['onStateChange'];\r\n  isOpen?: IDropdownProps['isOpen'];\r\n  selectedItems?: IDropdownProps['selectedItems'];\r\n  items: ITEM[];\r\n}\r\n\r\nexport const TriggerStory: Story<IArgs> = ({\r\n  onSelect,\r\n  downshiftProps,\r\n  highlightedIndex,\r\n  onStateChange,\r\n  isOpen,\r\n  selectedItems,\r\n  items,\r\n  disabled,\r\n  isDanger,\r\n  hasMedia,\r\n  ...args\r\n}) => (\r\n  <DropdownStory\r\n    isOpen={isOpen}\r\n    onSelect={onSelect}\r\n    onStateChange={onStateChange}\r\n    downshiftProps={downshiftProps}\r\n    highlightedIndex={highlightedIndex}\r\n    selectedItems={selectedItems}\r\n    colProps={{ textAlign: 'center' }}\r\n    menuProps={args}\r\n    items={items}\r\n    itemProps={{ disabled, isDanger, hasIcon: hasMedia }}\r\n  >\r\n    <Trigger>\r\n      <Button isDanger={isDanger} size={args.isCompact ? 'small' : undefined}>\r\n        {hasMedia && (\r\n          <Button.StartIcon>\r\n            <Icon />\r\n          </Button.StartIcon>\r\n        )}\r\n        Trigger\r\n        <Button.EndIcon isRotated={isOpen}>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"currentColor\" d=\"M12.688 5.61a.5.5 0 01.69.718l-.066.062-5 4a.5.5 0 01-.542.054l-.082-.054-5-4a.5.5 0 01.55-.83l.074.05L8 9.359l4.688-3.75z\"/>\r\n</svg>\r\n        </Button.EndIcon>\r\n      </Button>\r\n    </Trigger>\r\n  </DropdownStory>\r\n);\r\n"],"names":[],"sourceRoot":""}