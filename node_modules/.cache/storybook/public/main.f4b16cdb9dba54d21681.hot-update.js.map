{"version":3,"file":"main.f4b16cdb9dba54d21681.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAWA;;AAGA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AAIA;AAEA;AACA;AADA;AAIA;AACA;AAIA;AAEA;AACA;AADA;AAIA;AACA;AAIA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAIA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAWA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AAIA;AACA;AAGA;;AAEA;AAEA;AAKA;;AAGA;AACA;AACA;AAEA;;AAEA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AA2BA;AAEA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AAPA;AASA;AAAA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AARA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AARA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AALA;AAYA;;AAEA","sources":["webpack://@zendeskgarden/react-components/./packages/datepickers/src/elements/DatepickerRange/components/Month.tsx"],"sourcesContent":["/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useCallback } from 'react';\r\nimport startOfMonth from 'date-fns/startOfMonth';\r\nimport endOfMonth from 'date-fns/endOfMonth';\r\nimport startOfWeek from 'date-fns/startOfWeek';\r\nimport endOfWeek from 'date-fns/endOfWeek';\r\nimport eachDayOfInterval from 'date-fns/eachDayOfInterval';\r\nimport addDays from 'date-fns/addDays';\r\nimport isToday from 'date-fns/isToday';\r\nimport isSameDay from 'date-fns/isSameDay';\r\nimport isSameMonth from 'date-fns/isSameMonth';\r\nimport isBefore from 'date-fns/isBefore';\r\nimport isAfter from 'date-fns/isAfter';\r\nimport subDays from 'date-fns/subDays';\r\nimport compareAsc from 'date-fns/compareAsc';\r\nimport ChevronLeftStrokeIcon from '@zendeskgarden/svg-icons/src/16/chevron-left-stroke.svg';\r\nimport ChevronRightStrokeIcon from '@zendeskgarden/svg-icons/src/16/chevron-right-stroke.svg';\r\n\r\nimport {\r\n  StyledDatepicker,\r\n  StyledCalendar,\r\n  StyledCalendarItem,\r\n  StyledDayLabel,\r\n  StyledDay,\r\n  StyledHeaderPaddle,\r\n  StyledHeader,\r\n  StyledHeaderLabel,\r\n  StyledHighlight\r\n} from '../../../styled';\r\nimport { getStartOfWeek } from '../../../utils/calendar-utils';\r\nimport { DatepickerRangeAction } from '../utils/datepicker-range-reducer';\r\n\r\nconst Month: React.FunctionComponent<{\r\n  locale?: string;\r\n  displayDate: Date;\r\n  isCompact?: boolean;\r\n  isPreviousHidden?: boolean;\r\n  isNextHidden?: boolean;\r\n  dispatch: React.Dispatch<DatepickerRangeAction>;\r\n  minValue?: Date;\r\n  maxValue?: Date;\r\n  startValue?: Date;\r\n  endValue?: Date;\r\n  /* eslint-disable-next-line react/no-unused-prop-types */\r\n  onChange?: (values: { startValue?: Date; endValue?: Date }) => void;\r\n  hoverDate?: Date;\r\n}> = ({\r\n  locale,\r\n  displayDate,\r\n  isCompact,\r\n  isPreviousHidden,\r\n  isNextHidden,\r\n  dispatch,\r\n  minValue,\r\n  maxValue,\r\n  startValue,\r\n  endValue,\r\n  hoverDate\r\n}) => {\r\n  const headerLabelFormatter = useCallback(\r\n    date => {\r\n      const formatter = new Intl.DateTimeFormat(locale, {\r\n        month: 'long',\r\n        year: 'numeric'\r\n      });\r\n\r\n      return formatter.format(date);\r\n    },\r\n    [locale]\r\n  );\r\n\r\n  const dayLabelFormatter = useCallback(\r\n    date => {\r\n      const formatter = new Intl.DateTimeFormat(locale, {\r\n        weekday: 'short'\r\n      });\r\n\r\n      return formatter.format(date);\r\n    },\r\n    [locale]\r\n  );\r\n\r\n  const dayFormatter = useCallback(\r\n    date => {\r\n      const formatter = new Intl.DateTimeFormat(locale, {\r\n        day: 'numeric'\r\n      });\r\n\r\n      return formatter.format(date);\r\n    },\r\n    [locale]\r\n  );\r\n\r\n  const weekStartsOn = getStartOfWeek(locale);\r\n  const monthStartDate = startOfMonth(displayDate);\r\n  const monthEndDate = endOfMonth(monthStartDate);\r\n  const startDate = startOfWeek(monthStartDate, {\r\n    weekStartsOn\r\n  });\r\n  const endDate = endOfWeek(monthEndDate, {\r\n    weekStartsOn\r\n  });\r\n\r\n  const dayLabels = eachDayOfInterval({ start: startDate, end: addDays(startDate, 6) }).map(\r\n    date => {\r\n      const formattedDayLabel = dayLabelFormatter(date);\r\n\r\n      return (\r\n        <StyledCalendarItem key={`day-label-${formattedDayLabel}`} isCompact={isCompact}>\r\n          <StyledDayLabel isCompact={isCompact!}>{formattedDayLabel}</StyledDayLabel>\r\n        </StyledCalendarItem>\r\n      );\r\n    }\r\n  );\r\n\r\n  const items = eachDayOfInterval({ start: startDate, end: endDate }).map((date, itemsIndex) => {\r\n    const formattedDayLabel = dayFormatter(date);\r\n    const isCurrentDate = isToday(date);\r\n    const isPreviousMonth = !isSameMonth(date, displayDate);\r\n\r\n    if (isPreviousMonth) {\r\n      return (\r\n        <StyledCalendarItem key={`day-${itemsIndex}`} isCompact={isCompact}>\r\n          <StyledDay\r\n            isCompact={isCompact!}\r\n            isPreviousMonth\r\n            isDisabled\r\n            data-test-id=\"day\"\r\n            data-test-hidden=\"true\"\r\n          >\r\n            &nbsp;\r\n          </StyledDay>\r\n        </StyledCalendarItem>\r\n      );\r\n    }\r\n\r\n    let isSelected = false;\r\n\r\n    if (startValue !== undefined) {\r\n      isSelected = isSameDay(date, startValue);\r\n    }\r\n\r\n    if (endValue !== undefined) {\r\n      isSelected = isSelected || isSameDay(date, endValue);\r\n    }\r\n\r\n    let isDisabled = false;\r\n\r\n    if (minValue !== undefined) {\r\n      isDisabled = isBefore(date, minValue) && !isSameDay(date, minValue);\r\n    }\r\n\r\n    if (maxValue !== undefined) {\r\n      isDisabled = isDisabled || (isAfter(date, maxValue) && !isSameDay(date, maxValue));\r\n    }\r\n\r\n    let isHighlighted = false;\r\n\r\n    if (startValue !== undefined && endValue !== undefined) {\r\n      isHighlighted =\r\n        (isAfter(date, startValue) || isSameDay(date, startValue)) &&\r\n        (isBefore(date, endValue) || isSameDay(date, endValue)) &&\r\n        !isSameDay(startValue, endValue);\r\n    } else if (startValue !== undefined && hoverDate !== undefined) {\r\n      isHighlighted =\r\n        (isAfter(date, startValue) || isSameDay(date, startValue)) &&\r\n        (isBefore(date, hoverDate) || isSameDay(date, hoverDate));\r\n    }\r\n\r\n    const isHighlightStart = (isHighlighted && startValue && isSameDay(date, startValue)) || false;\r\n\r\n    const isHighlightEnd =\r\n      (isHighlighted && endValue && isSameDay(date, endValue)) ||\r\n      (hoverDate && isSameDay(date, hoverDate) && !isBefore(date, endValue!)) ||\r\n      false;\r\n\r\n    let isInvalidDateRange =\r\n      (endValue && startValue && compareAsc(endValue, startValue) === -1) || false;\r\n\r\n    if (minValue) {\r\n      if (startValue) {\r\n        isInvalidDateRange =\r\n          isInvalidDateRange || compareAsc(startValue, subDays(minValue, 1)) === -1;\r\n      }\r\n\r\n      if (endValue) {\r\n        isInvalidDateRange =\r\n          isInvalidDateRange || compareAsc(endValue, subDays(minValue, 1)) === -1;\r\n      }\r\n    }\r\n\r\n    if (maxValue) {\r\n      if (startValue) {\r\n        isInvalidDateRange = isInvalidDateRange || compareAsc(startValue, maxValue) === 1;\r\n      }\r\n\r\n      if (endValue) {\r\n        isInvalidDateRange = isInvalidDateRange || compareAsc(endValue, maxValue) === 1;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <StyledCalendarItem key={`day-${itemsIndex}`} isCompact={isCompact}>\r\n        <StyledHighlight\r\n          isHighlighted={!isInvalidDateRange && isHighlighted && !isDisabled}\r\n          isStart={!isInvalidDateRange && isHighlightStart}\r\n          isEnd={!isInvalidDateRange && isHighlightEnd}\r\n          data-test-id=\"highlight\"\r\n          data-test-highlighted={!isInvalidDateRange && isHighlighted && !isDisabled}\r\n          data-test-start={!isInvalidDateRange && isHighlightStart}\r\n          data-test-end={!isInvalidDateRange && isHighlightEnd}\r\n        />\r\n        <StyledDay\r\n          isToday={isCurrentDate}\r\n          isPreviousMonth={isPreviousMonth}\r\n          isSelected={!isInvalidDateRange && isSelected}\r\n          isDisabled={isDisabled}\r\n          isCompact={isCompact!}\r\n          onClick={() => {\r\n            if (!isDisabled) {\r\n              dispatch({ type: 'CLICK_DATE', value: date });\r\n            }\r\n          }}\r\n          onMouseEnter={() => {\r\n            if (!isSelected) {\r\n              dispatch({ type: 'HOVER_DATE', value: date });\r\n            }\r\n          }}\r\n          data-test-id=\"day\"\r\n          data-test-previous={isPreviousMonth}\r\n          data-test-selected={!isInvalidDateRange && isSelected}\r\n          data-test-disabled={isDisabled}\r\n          data-test-today={isCurrentDate}\r\n          data-test-hidden=\"false\"\r\n        >\r\n          {formattedDayLabel}\r\n        </StyledDay>\r\n      </StyledCalendarItem>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <StyledDatepicker\r\n      isCompact={isCompact!}\r\n      data-test-id=\"calendar-wrapper\"\r\n      onMouseDown={e => {\r\n        /** Stop focus from escaping input */\r\n        /* istanbul ignore next */\r\n        e.preventDefault();\r\n      }}\r\n    >\r\n      <StyledHeader isCompact={isCompact!}>\r\n        <StyledHeaderPaddle\r\n          isCompact={isCompact!}\r\n          onClick={() => {\r\n            dispatch({\r\n              type: 'PREVIEW_PREVIOUS_MONTH'\r\n            });\r\n          }}\r\n          isHidden={isPreviousHidden}\r\n          data-test-id=\"previous-month\"\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"currentColor\" d=\"M10.39 12.688a.5.5 0 01-.718.69l-.062-.066-4-5a.5.5 0 01-.054-.542l.054-.082 4-5a.5.5 0 01.83.55l-.05.074L6.641 8l3.75 4.688z\"/>\r\n</svg>\r\n        </StyledHeaderPaddle>\r\n        <StyledHeaderLabel isCompact={isCompact!} data-test-id=\"month-display\">\r\n          {headerLabelFormatter(displayDate)}\r\n        </StyledHeaderLabel>\r\n        <StyledHeaderPaddle\r\n          isCompact={isCompact!}\r\n          isHidden={isNextHidden}\r\n          onClick={() => {\r\n            dispatch({\r\n              type: 'PREVIEW_NEXT_MONTH'\r\n            });\r\n          }}\r\n          data-test-id=\"next-month\"\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"currentColor\" d=\"M5.61 3.312a.5.5 0 01.718-.69l.062.066 4 5a.5.5 0 01.054.542l-.054.082-4 5a.5.5 0 01-.83-.55l.05-.074L9.359 8l-3.75-4.688z\"/>\r\n</svg>\r\n        </StyledHeaderPaddle>\r\n      </StyledHeader>\r\n      <StyledCalendar\r\n        isCompact={isCompact!}\r\n        data-test-id=\"calendar-internal-wrapper\"\r\n        onMouseLeave={() => {\r\n          dispatch({ type: 'HOVER_DATE', value: undefined });\r\n        }}\r\n      >\r\n        {dayLabels}\r\n        {items}\r\n      </StyledCalendar>\r\n    </StyledDatepicker>\r\n  );\r\n};\r\n\r\nexport default Month;\r\n"],"names":[],"sourceRoot":""}