{"version":3,"file":"main.70b18231be9686034ba9.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;;AAEA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAkBA;AACA;;AAEA;AACA;AAEA;AAFA;AAIA;;AAEA;AACA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AAEA;AAFA;AAKA;AACA;AAAA;AAMA;AACA;AACA;AAAA;AAKA;;AAEA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;ACnIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA","sources":["webpack://@zendeskgarden/react-components/./packages/forms/src/elements/common/Label.tsx","webpack://@zendeskgarden/react-components/./packages/forms/src/styled/index.ts"],"sourcesContent":["/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { HTMLAttributes } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { composeEventHandlers } from '@zendeskgarden/container-utilities';\r\nimport useFieldContext from '../../utils/useFieldContext';\r\nimport useFieldsetContext from '../../utils/useFieldsetContext';\r\nimport useInputContext from '../../utils/useInputContext';\r\nimport {\r\n  StyledLabel,\r\n  StyledCheckLabel,\r\n  StyledCheckSvg,\r\n  StyledDashSvg,\r\n  StyledRadioLabel,\r\n  StyledRadioSvg,\r\n  StyledToggleLabel,\r\n  StyledToggleSvg\r\n} from '../../styled';\r\n\r\nexport interface ILabelProps extends HTMLAttributes<HTMLLabelElement> {\r\n  /** Applies regular (non-bold) font weight */\r\n  isRegular?: boolean;\r\n}\r\n\r\n/**\r\n * @extends LabelHTMLAttributes<HTMLLabelElement>\r\n */\r\nexport const Label = React.forwardRef<HTMLLabelElement, ILabelProps>((props, ref) => {\r\n  const fieldContext = useFieldContext();\r\n  const fieldsetContext = useFieldsetContext();\r\n  const type = useInputContext();\r\n\r\n  let combinedProps = props;\r\n\r\n  if (fieldContext) {\r\n    combinedProps = fieldContext.getLabelProps(combinedProps);\r\n\r\n    if (type === undefined) {\r\n      const { setIsLabelActive, setIsLabelHovered, multiThumbRangeRef } = fieldContext;\r\n\r\n      combinedProps = {\r\n        ...combinedProps,\r\n        onMouseUp: composeEventHandlers(props.onMouseUp, () => {\r\n          setIsLabelActive(false);\r\n        }),\r\n        onMouseDown: composeEventHandlers(props.onMouseDown, () => {\r\n          setIsLabelActive(true);\r\n        }),\r\n        onMouseEnter: composeEventHandlers(props.onMouseEnter, () => {\r\n          setIsLabelHovered(true);\r\n        }),\r\n        onMouseLeave: composeEventHandlers(props.onMouseLeave, () => {\r\n          setIsLabelHovered(false);\r\n        }),\r\n        onClick: composeEventHandlers(props.onClick, () => {\r\n          multiThumbRangeRef.current && multiThumbRangeRef.current.focus();\r\n        })\r\n      };\r\n    }\r\n  }\r\n\r\n  if (fieldsetContext) {\r\n    combinedProps = {\r\n      ...combinedProps,\r\n      isRegular: combinedProps.isRegular === undefined ? true : combinedProps.isRegular\r\n    };\r\n  }\r\n\r\n  if (type === 'radio') {\r\n    return (\r\n      <StyledRadioLabel ref={ref} {...(combinedProps as any)}>\r\n        <StyledRadioSvg />\r\n        {props.children}\r\n      </StyledRadioLabel>\r\n    );\r\n  } else if (type === 'checkbox') {\r\n    /**\r\n     * `onLabelSelect` is a workaround for checkbox label `shift + click` bug in Firefox\r\n     * See: https://bugzilla.mozilla.org/show_bug.cgi?id=559506\r\n     */\r\n    const onLabelSelect = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n      const isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\r\n\r\n      if (fieldContext && isFirefox && e.target instanceof Element) {\r\n        const inputId = e.target.getAttribute('for');\r\n\r\n        if (!inputId) return;\r\n\r\n        const input = document.getElementById(inputId) as HTMLInputElement | null;\r\n\r\n        if (input && input.type === 'checkbox') {\r\n          if (e.shiftKey) {\r\n            input.click();\r\n            input.checked = true;\r\n          }\r\n          input.focus();\r\n        }\r\n      }\r\n    };\r\n\r\n    combinedProps = {\r\n      ...combinedProps,\r\n      onClick: composeEventHandlers(combinedProps.onClick, onLabelSelect)\r\n    };\r\n\r\n    return (\r\n      <StyledCheckLabel ref={ref} {...(combinedProps as any)}>\r\n        <StyledCheckSvg />\r\n        <StyledDashSvg />\r\n        {props.children}\r\n      </StyledCheckLabel>\r\n    );\r\n  } else if (type === 'toggle') {\r\n    return (\r\n      <StyledToggleLabel ref={ref} {...(combinedProps as any)}>\r\n        <StyledToggleSvg />\r\n        {props.children}\r\n      </StyledToggleLabel>\r\n    );\r\n  }\r\n\r\n  return <StyledLabel ref={ref} {...(combinedProps as any)} />;\r\n});\r\n\r\nLabel.displayName = 'Label';\r\n\r\nLabel.propTypes = {\r\n  isRegular: PropTypes.bool\r\n};\r\n","/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\n/**\r\n * Common styles\r\n */\r\nexport * from './common/StyledField';\r\nexport * from './common/StyledFieldset';\r\nexport * from './common/StyledLegend';\r\nexport * from './common/StyledHint';\r\nexport * from './common/StyledLabel';\r\nexport * from './common/StyledMessage';\r\nexport * from './common/StyledMessageIcon';\r\n\r\n/**\r\n * Text styles\r\n */\r\nexport * from './text/StyledTextInput';\r\nexport * from './text/StyledTextarea';\r\nexport * from './text/StyledTextFauxInput';\r\nexport * from './text/StyledTextMediaInput';\r\nexport * from './text/StyledTextMediaFigure';\r\n\r\n/**\r\n * InputGroup styles\r\n */\r\nexport * from './input-group/StyledInputGroup';\r\n\r\n/**\r\n * Checkbox styles\r\n */\r\nexport * from './checkbox/StyledCheckLabel';\r\nexport * from './checkbox/StyledCheckHint';\r\nexport * from './checkbox/StyledCheckInput';\r\nexport * from './checkbox/StyledCheckMessage';\r\nexport * from './checkbox/StyledCheckSvg';\r\nexport * from './checkbox/StyledDashSvg';\r\n\r\n/**\r\n * FileUpload styles\r\n */\r\nexport * from './file-upload/StyledFileUpload';\r\n\r\n/**\r\n * FileList styles\r\n */\r\nexport * from './file-list/StyledFile';\r\nexport * from './file-list/StyledFileClose';\r\nexport * from './file-list/StyledFileDelete';\r\nexport * from './file-list/StyledFileIcon';\r\nexport * from './file-list/StyledFileList';\r\nexport * from './file-list/StyledFileListItem';\r\n\r\n/**\r\n * Radio styles\r\n */\r\nexport * from './radio/StyledRadioLabel';\r\nexport * from './radio/StyledRadioHint';\r\nexport * from './radio/StyledRadioInput';\r\nexport * from './radio/StyledRadioMessage';\r\nexport * from './radio/StyledRadioSvg';\r\n\r\n/**\r\n * Toggle styles\r\n */\r\nexport * from './toggle/StyledToggleLabel';\r\nexport * from './toggle/StyledToggleHint';\r\nexport * from './toggle/StyledToggleInput';\r\nexport * from './toggle/StyledToggleMessage';\r\nexport * from './toggle/StyledToggleSvg';\r\n\r\n/**\r\n * Select styles\r\n */\r\nexport * from './select/StyledSelect';\r\nexport * from './select/StyledSelectWrapper';\r\n\r\n/**\r\n * Range styles\r\n */\r\nexport * from './range/StyledRangeInput';\r\nexport * from './range/StyledSlider';\r\nexport * from './range/StyledSliderThumb';\r\nexport * from './range/StyledSliderTrack';\r\nexport * from './range/StyledSliderTrackRail';\r\n\r\n/**\r\n * Tile styles\r\n */\r\nexport * from './tiles/StyledTile';\r\nexport * from './tiles/StyledTileDescription';\r\nexport * from './tiles/StyledTileIcon';\r\nexport * from './tiles/StyledTileInput';\r\nexport * from './tiles/StyledTileLabel';\r\n"],"names":[],"sourceRoot":""}