{"version":3,"file":"main.f473ef63bc5bdd3d0c91.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAQA;AAAA;AAAA;AAAA;;AAAA;AAGA;AAFA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAVA;AANA","sources":["webpack://@zendeskgarden/react-components/./packages/avatars/demo/stories/AvatarStory.tsx"],"sourcesContent":["/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport IconSystem from '@zendeskgarden/svg-icons/src/26/zendesk.svg';\r\nimport { PALETTE } from '@zendeskgarden/react-theming';\r\nimport { Avatar, IAvatarProps } from '@zendeskgarden/react-avatars';\r\nimport { TYPE } from './types';\r\nimport { IconUser } from './user-solo';\r\n\r\ninterface IArgs extends IAvatarProps {\r\n  type: TYPE;\r\n}\r\n\r\nexport const AvatarStory: Story<IArgs> = ({ children, type, ...args }) => (\r\n  <Avatar\r\n    {...args}\r\n    backgroundColor={args.backgroundColor || (type === 'image' ? undefined : PALETTE.kale[800])}\r\n  >\r\n    {\r\n      {\r\n        icon: args.isSystem ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" focusable=\"false\" viewBox=\"0 0 26 26\">\r\n        <path fill=\"currentColor\" d=\"M12 8.2v14.5H0zM12 3c0 3.3-2.7 6-6 6S0 6.3 0 3h12zm2 19.7c0-3.3 2.7-6 6-6s6 2.7 6 6H14zm0-5.2V3h12z\"/>\r\n      </svg> :  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n        <g fill=\"none\" stroke=\"currentColor\">\r\n          <circle cx=\"8\" cy=\"5\" r=\"3.5\"/>\r\n          <path stroke-linecap=\"round\" d=\"M2.5 15.5c.3-2.8 2.6-5 5.5-5s5.2 2.2 5.5 5\"/>\r\n        </g>\r\n      </svg>,\r\n        image: <img alt=\"\" src={`images/avatars/${args.isSystem ? 'system' : 'user'}.png`} />,\r\n        text: <Avatar.Text>{children || (args.isSystem ? 'ZD' : 'G')}</Avatar.Text>\r\n      }[type]\r\n    }\r\n  </Avatar>\r\n);\r\n"],"names":[],"sourceRoot":""}