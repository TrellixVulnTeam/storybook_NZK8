{"version":3,"file":"main.dbbeda2e1c37979abff1.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAQA;AAaA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AAAA;AAAA;AAIA;AAAA;AAAA;AAJA;;AAQA;AACA;;AAEA;AAEA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAQA;AAAA;AAAA;AAEA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAJA;AAaA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAUA","sources":["webpack://@zendeskgarden/react-components/./packages/notifications/demo/stories/ToastStory.tsx"],"sourcesContent":["/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { useCallback, useState } from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport IconChevron from '@zendeskgarden/svg-icons/src/16/chevron-down-stroke.svg';\r\nimport { Col, Grid, Row } from '@zendeskgarden/react-grid';\r\nimport { Button } from '@zendeskgarden/react-buttons';\r\nimport {\r\n  Dropdown,\r\n  MediaBody,\r\n  MediaFigure,\r\n  MediaItem,\r\n  Menu,\r\n  Trigger\r\n} from '@zendeskgarden/react-dropdowns';\r\nimport {\r\n  Close,\r\n  IToastOptions,\r\n  Notification,\r\n  Title,\r\n  ToastContent,\r\n  useToast\r\n} from '@zendeskgarden/react-notifications';\r\n\r\ninterface IArgs extends IToastOptions {\r\n  children: string;\r\n}\r\n\r\nexport const ToastStory: Story<IArgs> = ({ children, ...args }) => {\r\n  const {\r\n    addToast,\r\n    removeToast,\r\n    removeAllToasts: handleRemoveAll,\r\n    updateToast,\r\n    toasts\r\n  } = useToast();\r\n  const [removeRotated, setRemoveRotated] = useState<boolean | undefined>();\r\n\r\n  const handleAdd = useCallback(() => {\r\n    const getToast = (id?: string) => {\r\n      const retVal: ToastContent = ({ close }) => (\r\n        <Notification>\r\n          {id && <Title>{id}</Title>}\r\n          {children}\r\n          <Close aria-label=\"Close\" onClick={close} />\r\n        </Notification>\r\n      );\r\n\r\n      return retVal;\r\n    };\r\n\r\n    const id = addToast(getToast(), args);\r\n\r\n    updateToast(id, { content: getToast(id) });\r\n  }, [addToast, updateToast, children, args]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Row style={{ height: 'calc(100vh - 80px)' }}>\r\n        <Col sm={4} textAlign=\"center\" textAlignSm=\"end\" alignSelf=\"center\">\r\n          <Button onClick={handleAdd}>\r\n            <Button.StartIcon>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path fill=\"none\" stroke=\"currentColor\" stroke-linejoin=\"round\" d=\"M13.5 9.5s0-9-5.5-9-5.5 9-5.5 9C.65 9.5.44 11.15.46 12c.01.28.22.5.5.5h14.08c.28 0 .49-.22.5-.5.02-.85-.19-2.5-2.04-2.5zm-7 3.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5\"/>\r\n</svg>\r\n            </Button.StartIcon>\r\n            Add\r\n          </Button>\r\n        </Col>\r\n        <Col sm={4} textAlign=\"center\" alignSelf=\"center\">\r\n          <Dropdown\r\n            onSelect={id => removeToast(id)}\r\n            onStateChange={options =>\r\n              Object.prototype.hasOwnProperty.call(options, 'isOpen') &&\r\n              setRemoveRotated(options.isOpen)\r\n            }\r\n          >\r\n            <Trigger>\r\n              <Button disabled={toasts.length === 0} isDanger>\r\n                Remove\r\n                <Button.EndIcon isRotated={removeRotated && toasts.length > 0}>\r\n                  <IconChevron />\r\n                </Button.EndIcon>\r\n              </Button>\r\n            </Trigger>\r\n            <Menu>\r\n              {toasts.map(toast => (\r\n                <MediaItem key={toast.id} value={toast.id} isDanger>\r\n                  <MediaFigure>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <path stroke=\"currentColor\" stroke-linecap=\"round\" d=\"M3 13L13 3m0 10L3 3\"/>\r\n</svg>\r\n                  </MediaFigure>\r\n                  <MediaBody>{toast.id}</MediaBody>\r\n                </MediaItem>\r\n              ))}\r\n            </Menu>\r\n          </Dropdown>\r\n        </Col>\r\n        <Col sm={4} textAlign=\"center\" textAlignSm=\"start\" alignSelf=\"center\">\r\n          <Button isDanger disabled={toasts.length === 0} onClick={handleRemoveAll}>\r\n            <Button.StartIcon>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" focusable=\"false\" viewBox=\"0 0 16 16\">\r\n  <g fill=\"none\" stroke=\"currentColor\">\r\n    <circle cx=\"7.5\" cy=\"8.5\" r=\"7\"/>\r\n    <path stroke-linecap=\"round\" d=\"M4.5 11.5l6-6m0 6l-6-6\"/>\r\n  </g>\r\n</svg>\r\n            </Button.StartIcon>\r\n            Remove all\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Grid>\r\n  );\r\n};\r\n"],"names":[],"sourceRoot":""}