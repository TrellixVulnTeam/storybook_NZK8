{"version":3,"file":"main.4802913ec70ccb6d3dba.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAUA;AAAA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AALA;AAQA;AAAA;AAIA;AAAA;AAAA;AAGA;AAAA;AAhBA;AAHA","sources":["webpack://@zendeskgarden/react-components/./packages/accordions/demo/stories/TimelineStory.tsx"],"sourcesContent":["/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { Span } from '@zendeskgarden/react-typography';\r\nimport { Timeline, ITimelineProps } from '@zendeskgarden/react-accordions';\r\nimport { ITimelineItem } from './types';\r\n\r\ninterface IArgs extends ITimelineProps {\r\n  hasIcon: boolean;\r\n  hasOppositeContent: boolean;\r\n  items: ITimelineItem[];\r\n  surfaceColor: string;\r\n}\r\n\r\nexport const TimelineStory: Story<IArgs> = ({ items, ...args }) => (\r\n  <div style={{ backgroundColor: args.surfaceColor }}>\r\n    <Timeline {...args}>\r\n      {items.map((item, index) => (\r\n        <Timeline.Item key={index} icon={args.hasIcon && <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" focusable=\"false\" viewBox=\"0 0 12 12\">\r\n        <g fill=\"none\" stroke=\"currentColor\">\r\n          <circle cx=\"6\" cy=\"6\" r=\"5.5\"/>\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M5.5 3v3.5H8\"/>\r\n        </g>\r\n      </svg>} surfaceColor={args.surfaceColor}>\r\n          {args.hasOppositeContent && (\r\n            <Timeline.OppositeContent>\r\n              <Span hue=\"grey\">{item.description}</Span>\r\n            </Timeline.OppositeContent>\r\n          )}\r\n          <Timeline.Content>\r\n            <Span isBold tag=\"div\">\r\n              {item.title}\r\n            </Span>\r\n            {!args.hasOppositeContent && <Span hue=\"grey\">{item.description}</Span>}\r\n          </Timeline.Content>\r\n        </Timeline.Item>\r\n      ))}\r\n    </Timeline>\r\n  </div>\r\n);\r\n"],"names":[],"sourceRoot":""}