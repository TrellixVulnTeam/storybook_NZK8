{"version":3,"file":"main.34f09e1b00c112901861.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;;AAOA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAHA;AAQA;AAAA;AAEA;AACA;AACA;AAHA;AAZA;;AA4BA;AAAA;AAAA;;AAAA;AAEA;AACA;AAAA;AAGA;AAAA;AAJA;AAFA","sources":["webpack://@zendeskgarden/react-components/./packages/accordions/demo/stories/AccordionStory.tsx"],"sourcesContent":["/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { MouseEventHandler } from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport Icon1 from '@zendeskgarden/svg-icons/src/16/gear-stroke.svg';\r\nimport Icon2 from '@zendeskgarden/svg-icons/src/16/folder-open-stroke.svg';\r\nimport Icon from '@zendeskgarden'\r\nimport { Accordion, IAccordionProps } from '@zendeskgarden/react-accordions';\r\nimport { IconButton } from '@zendeskgarden/react-buttons';\r\nimport { Tooltip } from '@zendeskgarden/react-tooltips';\r\nimport { IAccordionSection } from './types';\r\n\r\ninterface IProps {\r\n  isCompact: boolean;\r\n}\r\n\r\nconst handleClick: MouseEventHandler<HTMLButtonElement> = event => event.preventDefault();\r\n\r\nconst IconButtons = ({ isCompact }: IProps) => (\r\n  <>\r\n    <Tooltip content=\"Settings\">\r\n      <IconButton\r\n        focusInset={isCompact}\r\n        size={isCompact ? 'small' : 'medium'}\r\n        onClick={handleClick}\r\n      >\r\n        <Icon1 />\r\n      </IconButton>\r\n    </Tooltip>\r\n    <Tooltip content=\"Folders\">\r\n      <IconButton\r\n        focusInset={isCompact}\r\n        size={isCompact ? 'small' : 'medium'}\r\n        onClick={handleClick}\r\n      >\r\n        <Icon2 />\r\n      </IconButton>\r\n    </Tooltip>\r\n  </>\r\n);\r\n\r\ninterface IArgs extends IAccordionProps {\r\n  hasIconButtons: boolean;\r\n  sections: IAccordionSection[];\r\n}\r\n\r\nexport const AccordionStory: Story<IArgs> = ({ sections, ...args }: IArgs) => (\r\n  <Accordion {...args}>\r\n    {sections.map((section, index) => (\r\n      <Accordion.Section key={index}>\r\n        <Accordion.Header>\r\n          <Accordion.Label>{section.headerLabel}</Accordion.Label>\r\n          {args.hasIconButtons && <IconButtons isCompact={args.isCompact || false} />}\r\n        </Accordion.Header>\r\n        <Accordion.Panel>{section.panel}</Accordion.Panel>\r\n      </Accordion.Section>\r\n    ))}\r\n  </Accordion>\r\n);\r\n"],"names":[],"sourceRoot":""}