{"version":3,"file":"main.b9e49db17a0ef77d606f.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAsBA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAFA;AAcA;AAAA;AAtCA;AA+CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAgBA;AACA;AACA;AAEA;AAFA;AAAA;AAHA;AAUA;AAAA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAjCA","sources":["webpack://@zendeskgarden/react-components/./packages/chrome/demo/stories/SheetStory.tsx"],"sourcesContent":["/**\r\n * Copyright Zendesk, Inc.\r\n *\r\n * Use of this source code is governed under the Apache License, Version 2.0\r\n * found at http://www.apache.org/licenses/LICENSE-2.0.\r\n */\r\n\r\nimport React, { ChangeEventHandler } from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport { DefaultTheme } from 'styled-components';\r\nimport { ThemeProvider, IGardenTheme } from '@zendeskgarden/react-theming';\r\nimport { Field, Label, Toggle } from '@zendeskgarden/react-forms';\r\nimport { Col, Grid, Row } from '@zendeskgarden/react-grid';\r\nimport { Button } from '@zendeskgarden/react-buttons';\r\nimport { ISheetProps, Sheet } from '@zendeskgarden/react-chrome';\r\nimport { IFooterItem } from './types';\r\n\r\ninterface ISheetComponentProps extends ISheetProps {\r\n  hasBody: boolean;\r\n  body: string;\r\n  hasClose: boolean;\r\n  hasFooter: boolean;\r\n  footerItems: IFooterItem[];\r\n  hasHeader: boolean;\r\n  isCompact: boolean;\r\n  title: string;\r\n  description: string;\r\n}\r\n\r\nexport const SheetComponent = ({\r\n  hasHeader,\r\n  title,\r\n  description,\r\n  hasBody,\r\n  body,\r\n  hasFooter,\r\n  footerItems,\r\n  isCompact,\r\n  onClick,\r\n  hasClose,\r\n  ...props\r\n}: ISheetComponentProps) => (\r\n  <Sheet {...props}>\r\n    {hasHeader && (\r\n      <Sheet.Header>\r\n        <Sheet.Title>{title}</Sheet.Title>\r\n        <Sheet.Description>{description}</Sheet.Description>\r\n      </Sheet.Header>\r\n    )}\r\n    {hasBody ? <Sheet.Body>{body}</Sheet.Body> : body}\r\n    {hasFooter && (\r\n      <Sheet.Footer isCompact={isCompact}>\r\n        {footerItems &&\r\n          footerItems.map(({ text, type }, index) => (\r\n            <Sheet.FooterItem key={index}>\r\n              <Button\r\n                isLink={isCompact}\r\n                isBasic={type === 'basic'}\r\n                isPrimary={type === 'primary'}\r\n                onClick={onClick}\r\n              >\r\n                {text}\r\n              </Button>\r\n            </Sheet.FooterItem>\r\n          ))}\r\n      </Sheet.Footer>\r\n    )}\r\n    {hasClose && <Sheet.Close onClick={onClick} />}\r\n  </Sheet>\r\n);\r\n\r\ninterface IArgs extends ISheetComponentProps {\r\n  debug: boolean;\r\n  onChange: ChangeEventHandler<HTMLInputElement>;\r\n}\r\n\r\nexport const SheetStory: Story<IArgs> = ({\r\n  debug,\r\n  onClick,\r\n  onChange,\r\n  hasBody,\r\n  body,\r\n  hasClose,\r\n  hasFooter,\r\n  footerItems,\r\n  hasHeader,\r\n  title,\r\n  description,\r\n  ...args\r\n}) => (\r\n  <>\r\n    <ThemeProvider\r\n      focusVisibleRef={null}\r\n      theme={\r\n        ((parentTheme: DefaultTheme) => ({\r\n          ...parentTheme,\r\n          rtl: parentTheme.rtl ? args.placement === 'start' : args.placement !== 'start'\r\n        })) as unknown as IGardenTheme\r\n      }\r\n    >\r\n      <Field>\r\n        <Toggle checked={args.isOpen} onChange={onChange}>\r\n          <Label hidden>Sheet</Label>\r\n        </Toggle>\r\n      </Field>\r\n    </ThemeProvider>\r\n    <Grid debug={debug} gutters={false} style={{ marginTop: 20 }}>\r\n      <Row style={{ height: 'calc(100vh - 120px)' }} justifyContent={args.placement || 'end'}>\r\n        <Col size=\"auto\" style={{ maxHeight: '100%' }}>\r\n          <SheetComponent\r\n            hasHeader={hasHeader}\r\n            title={title}\r\n            description={description}\r\n            hasBody={hasBody}\r\n            body={body}\r\n            hasFooter={hasFooter}\r\n            footerItems={footerItems}\r\n            onClick={onClick}\r\n            hasClose={hasClose}\r\n            {...args}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Grid>\r\n  </>\r\n);\r\n"],"names":[],"sourceRoot":""}