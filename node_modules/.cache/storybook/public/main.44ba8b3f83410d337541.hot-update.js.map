{"version":3,"file":"main.44ba8b3f83410d337541.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AAEA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAsBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AACA;AAGA;AACA;AACA;AACA;;;AAgBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAsBA","sources":["webpack://storybook-app/./src/stories/button.stories.js","webpack://storybook-app/./src/stories/components/Button/index.js"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\nimport { storiesOf } from '@storybook/react';\\r\\n\\r\\nimport Button from './components/Button/index';\\r\\n\\r\\nstoriesOf('Button', module)\\r\\n  //\\r\\nexport default (props: Props) => {\\r\\n  return (\\r\\n    <Wrapper\\r\\n      theme={props.theme}\\r\\n      size={props.size}\\r\\n      thin={props.thin}\\r\\n      pill={props.pill}\\r\\n      onClick={(...args) => {\\r\\n        if (props.disabled || props.loading || typeof props.onClick !== 'function') {\\r\\n          return;\\r\\n        }\\r\\n\\r\\n        props.onClick(...args);\\r\\n      }}\\r\\n      disabled={props.loading || props.disabled}\\r\\n      disabledBackground={props.disabledBackground}\\r\\n      loading={props.loading}\\r\\n      className={props.className}\\r\\n      type={props.type || 'button'}\\r\\n      form={props.form || undefined}\\r\\n    >\\r\\n      {props.loading ? <Loader size=\\\"sm\\\" /> : props.children}\\r\\n    </Wrapper>\\r\\n  );\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {};\n    \nimport React from 'react';\r\nimport { storiesOf } from '@storybook/react';\r\n\r\nimport Button from './components/Button/index';\r\n\r\nstoriesOf('Button', module).addParameters({ storySource: { source: __STORY__, locationsMap: __LOCATIONS_MAP__ } })\r\n  //\r\nexport default (props: Props) => {\r\n  return (\r\n    <Wrapper\r\n      theme={props.theme}\r\n      size={props.size}\r\n      thin={props.thin}\r\n      pill={props.pill}\r\n      onClick={(...args) => {\r\n        if (props.disabled || props.loading || typeof props.onClick !== 'function') {\r\n          return;\r\n        }\r\n\r\n        props.onClick(...args);\r\n      }}\r\n      disabled={props.loading || props.disabled}\r\n      disabledBackground={props.disabledBackground}\r\n      loading={props.loading}\r\n      className={props.className}\r\n      type={props.type || 'button'}\r\n      form={props.form || undefined}\r\n    >\r\n      {props.loading ? <Loader size=\"sm\" /> : props.children}\r\n    </Wrapper>\r\n  );\r\n};\r\n","// @flow\n\nimport React from 'react';\nimport Loader from 'components/Loader';\nimport { Wrapper } from './styled';\n\n// Themes\n// 'white-outline'\n// 'blue-gradient' | 'red-gradient'\n// 'filter' | 'filter-active' | 'cancel'\n// 'blue' | 'red' | 'green' | 'white' | 'transparent' | 'dark-green\ntype Props = {\n  children: React$Node,\n  onClick?: Function,\n  theme?: string,\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xlg' | 'xl' | 'xxl' | 'xxxl',\n  thin?: boolean,\n  pill?: boolean,\n  loading?: boolean,\n  disabled?: boolean,\n  disabledBackground?: string,\n  type?: 'button' | 'submit' | 'reset',\n  form?: string,\n  className?: string,\n};\n\nexport default (props: Props) => {\n  return (\n    <Wrapper\n      theme={props.theme}\n      size={props.size}\n      thin={props.thin}\n      pill={props.pill}\n      onClick={(...args) => {\n        if (props.disabled || props.loading || typeof props.onClick !== 'function') {\n          return;\n        }\n\n        props.onClick(...args);\n      }}\n      disabled={props.loading || props.disabled}\n      disabledBackground={props.disabledBackground}\n      loading={props.loading}\n      className={props.className}\n      type={props.type || 'button'}\n      form={props.form || undefined}\n    >\n      {props.loading ? <Loader size=\"sm\" /> : props.children}\n    </Wrapper>\n  );\n};\n"],"names":[],"sourceRoot":""}